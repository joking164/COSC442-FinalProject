<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_UXsiMFIiEeibjuLm5_lcNQ" name="Control_classes_Combined">
    <eAnnotations xmi:id="_UsZm4FIiEeibjuLm5_lcNQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_UsZm4VIiEeibjuLm5_lcNQ" source="codegen">
        <details xmi:id="_UsZm4lIiEeibjuLm5_lcNQ" key="codegenDirectory" value="/COSC442-FinalProject/src"/>
        <details xmi:id="_W7oekFIiEeibjuLm5_lcNQ" key="AssociatedSourceCode" value="/COSC442-FinalProject/src/net/sf/freecol/client/control/ConnectController.java;2824763911/1;/COSC442-FinalProject/src/net/sf/freecol/client/control/PreGameController.java;3990060709/1;/COSC442-FinalProject/src/net/sf/freecol/client/control/InGameInputHandler.java;147819022/1;/COSC442-FinalProject/src/net/sf/freecol/client/control/InputHandler.java;933623408/1;/COSC442-FinalProject/src/net/sf/freecol/client/control/MapEditorController.java;3780935049/1;/COSC442-FinalProject/src/net/sf/freecol/client/control/InGameController.java;394273647/1;/COSC442-FinalProject/src/net/sf/freecol/client/control/PreGameInputHandler.java;4014821336/1;/COSC442-FinalProject/src/net/sf/freecol/client/control/SoundController.java;3359641821/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_VxiC8FIiEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_VxiqAFIiEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_VxiqAVIiEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_VxiqAlIiEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_VxiqA1IiEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_VxiqBFIiEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_VxiqBVIiEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_VxiqBlIiEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_VxiqB1IiEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_VuadgFIiEeibjuLm5_lcNQ" name="net">
      <packagedElement xmi:type="uml:Package" xmi:id="_VubEkFIiEeibjuLm5_lcNQ" name="sf">
        <packagedElement xmi:type="uml:Package" xmi:id="_VubEkVIiEeibjuLm5_lcNQ" name="freecol">
          <packagedElement xmi:type="uml:Package" xmi:id="_VubEklIiEeibjuLm5_lcNQ" name="client">
            <packagedElement xmi:type="uml:Package" xmi:id="_Vuc5xVIiEeibjuLm5_lcNQ" name="gui">
              <packagedElement xmi:type="uml:Package" xmi:id="_VvPj8VIiEeibjuLm5_lcNQ" name="option">
                <packagedElement xmi:type="uml:Class" xmi:id="_WXsrEFIiEeibjuLm5_lcNQ" name="FreeColActionUI"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWJy8VIiEeibjuLm5_lcNQ" name="ChoiceItem"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWKaAVIiEeibjuLm5_lcNQ" name="GUI"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWLBEVIiEeibjuLm5_lcNQ" name="LoadingSavegameInfo"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_VukOgFIiEeibjuLm5_lcNQ" name="control">
              <packagedElement xmi:type="uml:Class" xmi:id="_VxeYkFIiEeibjuLm5_lcNQ" name="ConnectController" isLeaf="true">
                <ownedComment xmi:id="_Wd6AwFIiEeibjuLm5_lcNQ">
                  <body>The controller responsible for starting a server and connecting to it.&#xD;
{@link PreGameInputHandler} will be set as the input handler when a&#xD;
successful login has been completed,</body>
                </ownedComment>
                <ownedAttribute xmi:id="_WcvjIFIiEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_WWE6cVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeWFoFIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_WcvjIVIiEeibjuLm5_lcNQ" value="Logger.getLogger(ConnectController.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_WcvjIlIiEeibjuLm5_lcNQ" name="freeColClient" visibility="private" isLeaf="true" type="_WWJL4VIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeXTwVIiEeibjuLm5_lcNQ"/>
                <ownedAttribute xmi:id="_WcwKMVIiEeibjuLm5_lcNQ" name="gui" visibility="private" isLeaf="true" type="_WWKaAVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeX60VIiEeibjuLm5_lcNQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdHWkFIiEeibjuLm5_lcNQ" name="ConnectController" specification="_WZokwFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdHWkVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdHWklIiEeibjuLm5_lcNQ" type="_VxeYkFIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>this.freeColClient = freeColClient;&#xD;
     this.gui = freeColClient.getGUI();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdHWk1IiEeibjuLm5_lcNQ" name="finish" specification="_VxjREFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>ResourceManager.setScenarioMapping(null);&#xD;
&#xD;
     if (!freeColClient.isHeadless()) {&#xD;
         freeColClient.setInGame(false);&#xD;
     }&#xD;
     freeColClient.setGame(null);&#xD;
     freeColClient.setMyPlayer(null);&#xD;
     freeColClient.askServer().reset();&#xD;
     freeColClient.setLoggedIn(false);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdHWlFIiEeibjuLm5_lcNQ" name="unblockServer" specification="_Vxj4IFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdHWlVIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdHWllIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>FreeColServer freeColServer = freeColClient.getFreeColServer();&#xD;
     if (freeColServer != null&#xD;
         &amp;&amp; freeColServer.getServer().getPort() == port) {&#xD;
         if (gui.confirm(&quot;stopServer.text&quot;, &quot;stopServer.yes&quot;,&#xD;
                         &quot;stopServer.no&quot;)) {&#xD;
             freeColServer.getController().shutdown();&#xD;
         } else {&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdH9oFIiEeibjuLm5_lcNQ" name="startServer" specification="_WZpL0lIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdH9oVIiEeibjuLm5_lcNQ" name="publicServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdH9olIiEeibjuLm5_lcNQ" name="singlePlayer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdH9o1IiEeibjuLm5_lcNQ" name="spec" type="_WWP5kVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdH9pFIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdH9pVIiEeibjuLm5_lcNQ" type="_WWVZIFIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>FreeColServer freeColServer;&#xD;
     try {&#xD;
         freeColServer = new FreeColServer(publicServer, singlePlayer,&#xD;
                                           spec, port, null);&#xD;
     } catch (IOException e) {&#xD;
         freeColServer = null;&#xD;
         gui.showErrorMessage(&quot;server.initialize&quot;);&#xD;
         logger.log(Level.WARNING, &quot;Could not start server.&quot;, e);&#xD;
     }&#xD;
     if (publicServer &amp;&amp; freeColServer != null&#xD;
         &amp;&amp; !freeColServer.getPublicServer()) {&#xD;
         gui.showErrorMessage(&quot;server.noRouteToServer&quot;);&#xD;
     }&#xD;
     return freeColServer;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdH9plIiEeibjuLm5_lcNQ" name="getConnection" specification="_VxlGQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdH9p1IiEeibjuLm5_lcNQ" name="host">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdH9qFIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdH9qVIiEeibjuLm5_lcNQ" type="_WWSV0FIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>try {&#xD;
         return new Connection(host, port, null, FreeCol.CLIENT_THREAD);&#xD;
     } catch (IOException e) {&#xD;
         gui.showErrorMessage(&quot;server.couldNotConnect&quot;, e.getMessage());&#xD;
         logger.log(Level.WARNING, &quot;Could not connect to &quot; + host&#xD;
             + &quot;:&quot; + port, e);&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdH9qlIiEeibjuLm5_lcNQ" name="getGameState" specification="_VxltUFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdH9q1IiEeibjuLm5_lcNQ" name="host">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdH9rFIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdH9rVIiEeibjuLm5_lcNQ" type="_WWVZIlIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>String state = null;&#xD;
     Element element = DOMMessage.createMessage(&quot;gameState&quot;);&#xD;
     try (&#xD;
         Connection mc = getConnection(host, port);&#xD;
     ) {&#xD;
         if (mc == null) return null;&#xD;
         Element reply = mc.ask(element);&#xD;
         if (reply == null) {&#xD;
             gui.showErrorMessage(&quot;server.couldNotConnect&quot;, &quot;no reply&quot;);&#xD;
             return null;&#xD;
         } else if (!&quot;gameState&quot;.equals(reply.getTagName())) {&#xD;
             logger.warning(&quot;The reply has an unknown type: &quot;&#xD;
                 + reply.getTagName());&#xD;
             gui.showErrorMessage(&quot;server.couldNotConnect&quot;,&#xD;
                 &quot;bad reply: &quot; + reply.getTagName());&#xD;
             return null;&#xD;
         }&#xD;
         state = reply.getAttribute(&quot;state&quot;);&#xD;
&#xD;
     } catch (IOException e) {&#xD;
         logger.log(Level.WARNING, &quot;Could not send message to server.&quot;, e);&#xD;
         gui.showErrorMessage(&quot;server.couldNotConnect&quot;, e.getMessage());&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     try {&#xD;
         return Enum.valueOf(GameState.class, state);&#xD;
     } catch (Exception e) {&#xD;
         logger.log(Level.WARNING, &quot;Bad state: &quot; + state, e);&#xD;
         gui.showErrorMessage(&quot;server.couldNotConnect&quot;, e.getMessage());&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdQggFIiEeibjuLm5_lcNQ" name="getVacantPlayers" specification="_VxmUYFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdQggVIiEeibjuLm5_lcNQ" name="host">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdQgglIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdQgg1IiEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WdQghFIiEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;String> items = new ArrayList&lt;>();&#xD;
     Element element = DOMMessage.createMessage(&quot;getVacantPlayers&quot;);&#xD;
     try (&#xD;
         Connection mc = getConnection(host, port);&#xD;
     ) {&#xD;
         if (mc == null) return null;&#xD;
         Element reply = mc.ask(element);&#xD;
         if (reply == null) {&#xD;
             logger.warning(&quot;The server did not return a list.&quot;);&#xD;
             return null;&#xD;
         } else if (!&quot;vacantPlayers&quot;.equals(reply.getTagName())) {&#xD;
             logger.warning(&quot;The reply has an unknown type: &quot;&#xD;
                 + reply.getTagName());&#xD;
             return null;&#xD;
         }&#xD;
&#xD;
         NodeList nl = reply.getChildNodes();&#xD;
         for (int i = 0; i &lt; nl.getLength(); i++) {&#xD;
             items.add(((Element)nl.item(i)).getAttribute(&quot;username&quot;));&#xD;
         }&#xD;
     } catch (IOException e) {&#xD;
         logger.log(Level.WARNING, &quot;Could not send message to server.&quot;, e);&#xD;
     }&#xD;
&#xD;
     return items;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdQghVIiEeibjuLm5_lcNQ" name="login" specification="_VxnigFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdQghlIiEeibjuLm5_lcNQ" name="user">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdQgh1IiEeibjuLm5_lcNQ" name="host">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdQgiFIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdQgiVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>freeColClient.setMapEditor(false);&#xD;
 &#xD;
     freeColClient.askServer().disconnect();&#xD;
&#xD;
     String message = null;&#xD;
     try {&#xD;
         if (!freeColClient.askServer().connect(FreeCol.CLIENT_THREAD + user,&#xD;
                 host, port, freeColClient.getPreGameInputHandler())) {&#xD;
             message = &quot;repeated failure&quot;;&#xD;
         }&#xD;
     } catch (Exception e) {&#xD;
         message = e.getMessage();&#xD;
     }&#xD;
     if (message != null) {&#xD;
         gui.showErrorMessage(&quot;server.couldNotConnect&quot;, message);&#xD;
         return false;&#xD;
     }&#xD;
     logger.info(&quot;Connected to &quot; + host + &quot;:&quot; + port);&#xD;
&#xD;
     LoginMessage msg = freeColClient.askServer().login(user,&#xD;
         FreeCol.getVersion());&#xD;
     Game game;&#xD;
     if (msg == null || (game = msg.getGame()) == null) {&#xD;
         gui.showErrorMessage(&quot;server.couldNotLogin&quot;);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // This completes the client's view of the spec with options&#xD;
     // obtained from the server difficulty.  It should not be&#xD;
     // required in the client, to be removed later, when newTurn()&#xD;
     // only runs in the server&#xD;
     freeColClient.setGame(game);&#xD;
     Player player = game.getPlayerByName(user);&#xD;
     if (player == null) {&#xD;
         logger.warning(&quot;New game does not contain player: &quot; + user);&#xD;
         gui.showErrorMessage(StringTemplate.template(&quot;server.noSuchPlayer&quot;)&#xD;
             .addName(&quot;%player%&quot;, user));&#xD;
         return false;&#xD;
     }&#xD;
     freeColClient.setMyPlayer(player);&#xD;
     freeColClient.addSpecificationActions(game.getSpecification());&#xD;
     logger.info(&quot;FreeColClient logged in as &quot; + user&#xD;
         + &quot;/&quot; + player.getId());&#xD;
&#xD;
     // Reconnect&#xD;
     if (msg.getStartGame()) {&#xD;
         Tile entryTile = (player.getEntryLocation() == null) ? null&#xD;
             : player.getEntryLocation().getTile();&#xD;
         freeColClient.setSinglePlayer(msg.isSinglePlayer());&#xD;
         boolean play = freeColClient.getPreGameController().startGame();&#xD;
         if (play) {&#xD;
             gui.setActiveUnit(null);&#xD;
             if (msg.isCurrentPlayer()) {&#xD;
                 freeColClient.getInGameController()&#xD;
                     .setCurrentPlayer(player);&#xD;
                 Unit activeUnit = msg.getActiveUnit();&#xD;
                 if (activeUnit != null) {&#xD;
                     activeUnit.getOwner().resetIterators();&#xD;
                     activeUnit.getOwner().setNextActiveUnit(activeUnit);&#xD;
                     gui.setActiveUnit(activeUnit);&#xD;
                 } else {&#xD;
                     gui.setSelectedTile(entryTile);&#xD;
                 }&#xD;
             } else {&#xD;
                 gui.setSelectedTile(entryTile);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // All done.&#xD;
     freeColClient.setLoggedIn(true);&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdQgilIiEeibjuLm5_lcNQ" name="startMultiplayerGame" specification="_WZqZ8VIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdRHkFIiEeibjuLm5_lcNQ" name="specification" type="_WWP5kVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdRHkVIiEeibjuLm5_lcNQ" name="publicServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdRHklIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdRHk1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>freeColClient.setMapEditor(false);&#xD;
&#xD;
     if (freeColClient.isLoggedIn()) logout(true);&#xD;
&#xD;
     if (!unblockServer(port)) return false;&#xD;
&#xD;
     FreeColServer freeColServer = startServer(publicServer, false,&#xD;
                                               specification, port);&#xD;
     if (freeColServer == null) return false;&#xD;
&#xD;
     freeColClient.setFreeColServer(freeColServer);&#xD;
     return joinMultiplayerGame(freeColServer.getHost(),&#xD;
                                freeColServer.getPort());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdRHlFIiEeibjuLm5_lcNQ" name="joinMultiplayerGame" specification="_VxowoFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdRHlVIiEeibjuLm5_lcNQ" name="host">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdRHllIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdRHl1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>freeColClient.setMapEditor(false);&#xD;
&#xD;
     if (freeColClient.isLoggedIn()) logout(true);&#xD;
&#xD;
     GameState state = getGameState(host, port);&#xD;
     if (state == null) return false;&#xD;
     switch (state) {&#xD;
     case STARTING_GAME:&#xD;
         if (!login(FreeCol.getName(), host, port)) return false;&#xD;
         gui.showStartGamePanel(freeColClient.getGame(),&#xD;
                                freeColClient.getMyPlayer(), false);&#xD;
         freeColClient.setSinglePlayer(false);&#xD;
         break;&#xD;
&#xD;
     case IN_GAME:&#xD;
         // Disable this check if you need to debug a multiplayer client.&#xD;
         if (FreeColDebugger.isInDebugMode(FreeColDebugger.DebugMode.MENUS)) {&#xD;
             gui.showErrorMessage(&quot;client.debugConnect&quot;);&#xD;
             return false;&#xD;
         }&#xD;
         List&lt;String> names = getVacantPlayers(host, port);&#xD;
         if (names == null || names.isEmpty()) {&#xD;
             gui.showErrorMessage(&quot;client.noPlayers&quot;);&#xD;
             return false;&#xD;
         }&#xD;
&#xD;
         List&lt;ChoiceItem&lt;String>> choices = new ArrayList&lt;>();&#xD;
         for (String n : names) {&#xD;
             String nam = Messages.message(StringTemplate&#xD;
                 .template(&quot;countryName&quot;)&#xD;
                 .add(&quot;%nation%&quot;, Messages.nameKey(n)));&#xD;
             choices.add(new ChoiceItem&lt;>(nam, n));&#xD;
         }&#xD;
         String choice = gui.getChoice(null,&#xD;
             Messages.message(&quot;client.choicePlayer&quot;),&#xD;
             &quot;cancel&quot;, choices);&#xD;
         if (choice == null) return false; // User cancelled&#xD;
&#xD;
         if (!login(Messages.getRulerName(choice), host, port)) {&#xD;
             // login() shows error messages&#xD;
             return false;&#xD;
         }&#xD;
         freeColClient.setSinglePlayer(false);&#xD;
         break;&#xD;
&#xD;
     case ENDING_GAME: default:&#xD;
         gui.showErrorMessage(&quot;client.ending&quot;);&#xD;
         return false;&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdRHmFIiEeibjuLm5_lcNQ" name="startSinglePlayerGame" specification="_WZrBAFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdRHmVIiEeibjuLm5_lcNQ" name="spec" type="_WWP5kVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdRHmlIiEeibjuLm5_lcNQ" name="skip">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdRHm1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>freeColClient.setMapEditor(false);&#xD;
&#xD;
     if (freeColClient.isLoggedIn()) logout(true);&#xD;
&#xD;
     if (!unblockServer(FreeCol.getServerPort())) return false;&#xD;
&#xD;
     // Load the player mods into the specification that is about to be&#xD;
     // used to initialize the server.&#xD;
     //&#xD;
     // ATM we only allow mods in single player games.&#xD;
     // FIXME: allow in stand alone server starts?&#xD;
     List&lt;FreeColModFile> mods = freeColClient.getClientOptions()&#xD;
         .getActiveMods();&#xD;
     spec.loadMods(mods);    &#xD;
     Messages.loadActiveModMessageBundle(mods, FreeCol.getLocale());&#xD;
     FreeColServer freeColServer = startServer(false, true, spec, -1);&#xD;
     if (freeColServer == null) return false;&#xD;
&#xD;
     freeColClient.setFreeColServer(freeColServer);&#xD;
     freeColClient.setSinglePlayer(true);&#xD;
     if (!login(FreeCol.getName(), freeColServer.getHost(),&#xD;
                freeColServer.getPort())) return false;&#xD;
&#xD;
     final ClientOptions co = freeColClient.getClientOptions();&#xD;
     if (co.getBoolean(ClientOptions.AUTOSAVE_DELETE)) {&#xD;
         FreeColServer.removeAutosaves(co.getText(ClientOptions.AUTO_SAVE_PREFIX));&#xD;
     }&#xD;
     freeColClient.getPreGameController().setReady(true);&#xD;
     if (skip) {&#xD;
         freeColClient.getPreGameController().requestLaunch();&#xD;
     } else {&#xD;
         gui.showStartGamePanel(freeColClient.getGame(),&#xD;
                                freeColClient.getMyPlayer(), true);&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdRuoFIiEeibjuLm5_lcNQ" name="startSavedGame" specification="_WZroEFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdRuoVIiEeibjuLm5_lcNQ" name="file" type="_WWAB8FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdRuolIiEeibjuLm5_lcNQ" name="userMsg">
                    <eAnnotations xmi:id="_WdRuo1IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WdRupFIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdRupVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>freeColClient.setMapEditor(false);&#xD;
&#xD;
     class ErrorJob implements Runnable {&#xD;
         private final String message;&#xD;
         private final StringTemplate template;&#xD;
         &#xD;
         ErrorJob(String message) {&#xD;
             this.message = message;&#xD;
             this.template = null;&#xD;
         }&#xD;
&#xD;
         ErrorJob(StringTemplate template) {&#xD;
             this.message = null;&#xD;
             this.template = template;&#xD;
         }&#xD;
         &#xD;
         @Override&#xD;
         public void run() {&#xD;
             gui.closeMenus();&#xD;
             if (this.template != null) {&#xD;
                 gui.showErrorMessage(template);&#xD;
             } else {&#xD;
                 gui.showErrorMessage(message);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     final ClientOptions options = freeColClient.getClientOptions();&#xD;
     final boolean defaultSinglePlayer;&#xD;
     final boolean defaultPublicServer;&#xD;
     FreeColSavegameFile fis = null;&#xD;
     try {&#xD;
         fis = new FreeColSavegameFile(file);&#xD;
     } catch (IOException ioe) {&#xD;
         SwingUtilities.invokeLater(new ErrorJob(FreeCol.badLoad(file)));&#xD;
         logger.log(Level.WARNING, &quot;Could not open save file: &quot;&#xD;
             + file.getName());&#xD;
         return false;&#xD;
     }&#xD;
     options.merge(fis);&#xD;
     options.fixClientOptions();&#xD;
&#xD;
     // Get suggestions for &quot;singlePlayer&quot; and &quot;publicServer&quot;&#xD;
     // settings from the file, and update the client options if&#xD;
     // possible.&#xD;
     try (&#xD;
         FreeColXMLReader xr = fis.getFreeColXMLReader();&#xD;
     ) {&#xD;
         xr.nextTag();&#xD;
&#xD;
         String str = xr.getAttribute(FreeColServer.OWNER_TAG,&#xD;
                                      (String)null);&#xD;
         if (str != null) FreeCol.setName(str);&#xD;
&#xD;
         defaultSinglePlayer&#xD;
             = xr.getAttribute(FreeColServer.SINGLE_PLAYER_TAG, false);&#xD;
         defaultPublicServer&#xD;
             = xr.getAttribute(FreeColServer.PUBLIC_SERVER_TAG, false);&#xD;
&#xD;
     } catch (FileNotFoundException e) {&#xD;
         SwingUtilities.invokeLater(new ErrorJob(&quot;server.fileNotFound&quot;));&#xD;
         logger.log(Level.WARNING, &quot;Can not find file: &quot; + file.getName(),&#xD;
             e);&#xD;
         return false;&#xD;
     } catch (XMLStreamException e) {&#xD;
         logger.log(Level.WARNING, &quot;Error reading game from: &quot;&#xD;
             + file.getName(), e);&#xD;
         SwingUtilities.invokeLater(new ErrorJob(FreeCol.badLoad(file)));&#xD;
         return false;&#xD;
     } catch (Exception e) {&#xD;
         SwingUtilities.invokeLater(new ErrorJob(FreeCol.badLoad(file)));&#xD;
         logger.log(Level.WARNING, &quot;Could not load game from: &quot;&#xD;
             + file.getName(), e);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Reload the client options saved with this game.&#xD;
     final boolean singlePlayer;&#xD;
     final String name;&#xD;
     final int port;&#xD;
     final int sgo = options.getInteger(ClientOptions.SHOW_SAVEGAME_SETTINGS);&#xD;
     boolean show = sgo == ClientOptions.SHOW_SAVEGAME_SETTINGS_ALWAYS&#xD;
         || (!defaultSinglePlayer&#xD;
             &amp;&amp; sgo == ClientOptions.SHOW_SAVEGAME_SETTINGS_MULTIPLAYER);&#xD;
     if (show) {&#xD;
         if (!gui.showLoadingSavegameDialog(defaultPublicServer,&#xD;
                                            defaultSinglePlayer))&#xD;
             return false;&#xD;
         LoadingSavegameInfo lsd = gui.getLoadingSavegameInfo();&#xD;
         singlePlayer = lsd.isSinglePlayer();&#xD;
         name = lsd.getServerName();&#xD;
         port = lsd.getPort();&#xD;
     } else {&#xD;
         singlePlayer = defaultSinglePlayer;&#xD;
         name = null;&#xD;
         port = -1;&#xD;
     }&#xD;
     Messages.loadActiveModMessageBundle(options.getActiveMods(),&#xD;
                                         FreeCol.getLocale());&#xD;
     if (!unblockServer(port)) return false;&#xD;
     gui.showStatusPanel(Messages.message(&quot;status.loadingGame&quot;));&#xD;
&#xD;
     final File theFile = file;&#xD;
     Runnable loadGameJob = () -> {&#xD;
         FreeColServer freeColServer = null;&#xD;
         StringTemplate err = null;&#xD;
         try {&#xD;
             final FreeColSavegameFile saveGame&#xD;
                 = new FreeColSavegameFile(theFile);&#xD;
             freeColServer = new FreeColServer(saveGame,&#xD;
                 (Specification)null, port, name);&#xD;
             freeColClient.setFreeColServer(freeColServer);&#xD;
             // Server might have bounced to another port.&#xD;
             freeColClient.setSinglePlayer(singlePlayer);&#xD;
             freeColClient.getInGameController().setGameConnected();&#xD;
             if (login(FreeCol.getName(), freeColServer.getHost(), &#xD;
                     freeColServer.getPort())) {&#xD;
                 SwingUtilities.invokeLater(() -> {&#xD;
                         ResourceManager.setScenarioMapping(saveGame.getResourceMapping());&#xD;
                         if (userMsg != null) {&#xD;
                             gui.showInformationMessage(userMsg);&#xD;
                         }&#xD;
                         gui.closeStatusPanel();&#xD;
                     });&#xD;
                 return; // Success!&#xD;
             }&#xD;
             err = StringTemplate.key(&quot;server.couldNotLogin&quot;);&#xD;
             logger.warning(&quot;Could not log in.&quot;);&#xD;
         } catch (FileNotFoundException e) {&#xD;
             err = StringTemplate.key(&quot;server.fileNotFound&quot;);&#xD;
             logger.log(Level.WARNING, &quot;Can not find file.&quot;, e);&#xD;
         } catch (IOException e) {&#xD;
             err = StringTemplate.key(&quot;server.initialize&quot;);&#xD;
             logger.log(Level.WARNING, &quot;Error starting game.&quot;, e);&#xD;
         } catch (XMLStreamException e) {&#xD;
             err = FreeCol.badLoad(theFile);&#xD;
             logger.log(Level.WARNING, &quot;Stream error.&quot;, e);&#xD;
         } catch (Exception e) {&#xD;
             err = StringTemplate.name(e.getMessage());&#xD;
             logger.log(Level.WARNING, &quot;FreeCol error.&quot;, e);&#xD;
         }                &#xD;
         if (err != null) {&#xD;
             // If this is a debug run, fail hard.&#xD;
             if (freeColClient.isHeadless()&#xD;
                 || FreeColDebugger.getDebugRunTurns() >= 0) {&#xD;
                 FreeCol.fatal(Messages.message(err));&#xD;
             }&#xD;
             SwingUtilities.invokeLater(() -> {&#xD;
                     gui.closeMainPanel();&#xD;
                     gui.showMainPanel(null);&#xD;
                 });&#xD;
             SwingUtilities.invokeLater(new ErrorJob(err));&#xD;
         }&#xD;
     };&#xD;
     freeColClient.setWork(loadGameJob);&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdRuplIiEeibjuLm5_lcNQ" name="reconnect" specification="_Vxql0FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdRup1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final String host = freeColClient.askServer().getHost();&#xD;
     final int port = freeColClient.askServer().getPort();&#xD;
&#xD;
     gui.removeInGameComponents();&#xD;
     logout(true);&#xD;
     if (!login(FreeCol.getName(), host, port)) return false;&#xD;
     freeColClient.getInGameController().nextModelMessage();&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdRuqFIiEeibjuLm5_lcNQ" name="logout" specification="_VxrM4FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdRuqVIiEeibjuLm5_lcNQ" name="notifyServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (notifyServer) {&#xD;
         freeColClient.askServer().logout();&#xD;
     }&#xD;
     freeColClient.askServer().disconnect();&#xD;
     finish();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdRuqlIiEeibjuLm5_lcNQ" name="quitGame" specification="_VxrM4lIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdRuq1IiEeibjuLm5_lcNQ" name="stopServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdRurFIiEeibjuLm5_lcNQ" name="notifyServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final FreeColServer server = freeColClient.getFreeColServer();&#xD;
     if (stopServer &amp;&amp; server != null) {&#xD;
         server.getController().shutdown();&#xD;
         freeColClient.setFreeColServer(null);&#xD;
         finish();&#xD;
     } else {&#xD;
         if (freeColClient.isLoggedIn()) logout(notifyServer);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdRurVIiEeibjuLm5_lcNQ" name="quitGame" specification="_Vxrz8lIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdRurlIiEeibjuLm5_lcNQ" name="stopServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>quitGame(stopServer, true);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdSVsFIiEeibjuLm5_lcNQ" name="getServerList" specification="_VxsbAVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdSVsVIiEeibjuLm5_lcNQ" type="_WWLoIlIiEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WdSVslIiEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>try (&#xD;
         Connection mc = new Connection(FreeCol.META_SERVER_ADDRESS,&#xD;
             FreeCol.META_SERVER_PORT, null,&#xD;
             FreeCol.CLIENT_THREAD);&#xD;
     ) {&#xD;
         Element reply = null;&#xD;
         try {&#xD;
             reply = mc.ask(DOMMessage.createMessage(&quot;getServerList&quot;));&#xD;
         } catch (IOException e) {&#xD;
             reply = null;&#xD;
         }&#xD;
         if (reply == null) {&#xD;
             gui.showErrorMessage(&quot;metaServer.communicationError&quot;);&#xD;
             logger.warning(&quot;The meta-server did not return a list.&quot;);&#xD;
             return null;&#xD;
         }&#xD;
         List&lt;ServerInfo> items = new ArrayList&lt;>();&#xD;
         NodeList nl = reply.getChildNodes();&#xD;
         for (int i = 0; i &lt; nl.getLength(); i++) {&#xD;
             items.add(new ServerInfo((Element)nl.item(i)));&#xD;
         }&#xD;
         return items;&#xD;
     } catch (IOException e) {&#xD;
         gui.showErrorMessage(&quot;metaServer.couldNotConnect&quot;);&#xD;
         logger.log(Level.WARNING, &quot;Could not connect to the meta-server.&quot;, e);&#xD;
         return null;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_VxjREFIiEeibjuLm5_lcNQ" name="finish" visibility="private" method="_WdHWk1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6AwlIiEeibjuLm5_lcNQ">
                    <body>The game is finishing.  Release/unhook everything.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_Vxj4IFIiEeibjuLm5_lcNQ" name="unblockServer" visibility="private" method="_WdHWlFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6Aw1IiEeibjuLm5_lcNQ">
                    <body>Shut down an existing server on a given port.&#xD;
     *&#xD;
     * @param port The port to unblock.&#xD;
     * @return True if there should be no blocking server remaining.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vxj4IVIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VxkfMFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VxlGQFIiEeibjuLm5_lcNQ" name="getConnection" visibility="private" method="_WdH9plIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6AxVIiEeibjuLm5_lcNQ">
                    <body>Get a connection to a server.&#xD;
     *&#xD;
     * @param host The name of the machine running the&#xD;
     *     &lt;code>FreeColServer&lt;/code>.&#xD;
     * @param port The port to use when connecting to the host.&#xD;
     * @return A &lt;code>Connection&lt;/code> to the server.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VxlGQVIiEeibjuLm5_lcNQ" name="host">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VxlGQlIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZpy5FIiEeibjuLm5_lcNQ" type="_WWSV0FIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_VxltUFIiEeibjuLm5_lcNQ" name="getGameState" visibility="private" method="_WdH9qlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6AxlIiEeibjuLm5_lcNQ">
                    <body>Gets a the game state on the remote server.&#xD;
     *&#xD;
     * @param host The name of the machine running the&#xD;
     *     &lt;code>FreeColServer&lt;/code>.&#xD;
     * @param port The port to use when connecting to the host.&#xD;
     * @return The &lt;code>GameState&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VxltUVIiEeibjuLm5_lcNQ" name="host">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VxltUlIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZqZ8FIiEeibjuLm5_lcNQ" type="_WWVZIlIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_VxmUYFIiEeibjuLm5_lcNQ" name="getVacantPlayers" visibility="private" method="_WdQggFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n0FIiEeibjuLm5_lcNQ">
                    <body>Gets a list of available players on a given server.&#xD;
     *&#xD;
     * @param host The name of the machine running the&#xD;
     *     &lt;code>FreeColServer&lt;/code>.&#xD;
     * @param port The port to use when connecting to the host.&#xD;
     * @return A list of available {@link Player#getName() user names}.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VxmUYVIiEeibjuLm5_lcNQ" name="host">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VxmUYlIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Vxm7cFIiEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vxm7cVIiEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VxnigFIiEeibjuLm5_lcNQ" name="login" method="_WdQghVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n0VIiEeibjuLm5_lcNQ">
                    <body>Starts the client and connects to &lt;i>host:port&lt;/i>.&#xD;
     *&#xD;
     * Public for the test suite.&#xD;
     *&#xD;
     * @param user The name of the player to use.&#xD;
     * @param host The name of the machine running the&#xD;
     *            &lt;code>FreeColServer&lt;/code>.&#xD;
     * @param port The port to use when connecting to the host.&#xD;
     * @return True if the login succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VxnigVIiEeibjuLm5_lcNQ" name="user">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VxniglIiEeibjuLm5_lcNQ" name="host">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Vxnig1IiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VxnihFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VxowoFIiEeibjuLm5_lcNQ" name="joinMultiplayerGame" method="_WdRHlFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n01IiEeibjuLm5_lcNQ">
                    <body>Join an existing multiplayer game.&#xD;
     *&#xD;
     * @param host The name of the machine running the server.&#xD;
     * @param port The port to use when connecting to the host.&#xD;
     * @return True if the game starts successfully.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VxowoVIiEeibjuLm5_lcNQ" name="host">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VxowolIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Vxowo1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vxql0FIiEeibjuLm5_lcNQ" name="reconnect" method="_WdRuplIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n1lIiEeibjuLm5_lcNQ">
                    <body>Reconnects to the server.&#xD;
     *&#xD;
     * @return True if the reconnection succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vxql0VIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VxrM4FIiEeibjuLm5_lcNQ" name="logout" method="_WdRuqFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n11IiEeibjuLm5_lcNQ">
                    <body>Sends a logout message to the server.&#xD;
     *&#xD;
     * @param notifyServer Whether or not the server should be&#xD;
     *     notified of the logout.  For example: if the server kicked us&#xD;
     *     out then we don't need to confirm with a logout message.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VxrM4VIiEeibjuLm5_lcNQ" name="notifyServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VxrM4lIiEeibjuLm5_lcNQ" name="quitGame" method="_WdRuqlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n2FIiEeibjuLm5_lcNQ">
                    <body>Quits the current game, optionally notifying and stopping the server.&#xD;
     *&#xD;
     * @param stopServer Whether to stop the server.&#xD;
     * @param notifyServer Whether or not the server should be&#xD;
     *     notified of the logout.  For example: if the server kicked us&#xD;
     *     out then we don't need to confirm with a logout message.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vxrz8FIiEeibjuLm5_lcNQ" name="stopServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Vxrz8VIiEeibjuLm5_lcNQ" name="notifyServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vxrz8lIiEeibjuLm5_lcNQ" name="quitGame" method="_WdRurVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n2VIiEeibjuLm5_lcNQ">
                    <body>Quits the current game. If a server is running it will be&#xD;
     * stopped if stopServer is &lt;i>true&lt;/i>.  The server and perhaps&#xD;
     * the clients (if a server is running through this client and&#xD;
     * stopServer is true) will be notified.&#xD;
     *&#xD;
     * @param stopServer Indicates whether or not a server that was&#xD;
     *     started through this client should be stopped.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VxsbAFIiEeibjuLm5_lcNQ" name="stopServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VxsbAVIiEeibjuLm5_lcNQ" name="getServerList" method="_WdSVsFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n2lIiEeibjuLm5_lcNQ">
                    <body>Gets a list of servers from the meta server.&#xD;
     *&#xD;
     * @return A list of {@link ServerInfo} objects.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VxsbAlIiEeibjuLm5_lcNQ" type="_WWLoIlIiEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VxsbA1IiEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WZokwFIiEeibjuLm5_lcNQ" name="ConnectController" method="_WdHWkFIiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_WZokwlIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_WZpL0FIiEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd6AwVIiEeibjuLm5_lcNQ">
                    <body>Creates a new &lt;code>ConnectController&lt;/code>.&#xD;
     *&#xD;
     * @param freeColClient The &lt;code>FreeColClient&lt;/code> for the game.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZokwVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZpL0VIiEeibjuLm5_lcNQ" type="_VxeYkFIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZpL0lIiEeibjuLm5_lcNQ" name="startServer" visibility="private" method="_WdH9oFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6AxFIiEeibjuLm5_lcNQ">
                    <body>Start a server.&#xD;
     *&#xD;
     * @param publicServer If true, add to the meta-server.&#xD;
     * @param singlePlayer True if this is a single player game.&#xD;
     * @param spec The &lt;code>Specification&lt;/code> to use in this game.&#xD;
     * @param port The TCP port to use for the public socket.&#xD;
     * @return A new &lt;code>FreeColServer&lt;/code> or null on error.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZpL01IiEeibjuLm5_lcNQ" name="publicServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZpy4FIiEeibjuLm5_lcNQ" name="singlePlayer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZpy4VIiEeibjuLm5_lcNQ" name="spec" type="_WWP5kVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZpy4lIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZpy41IiEeibjuLm5_lcNQ" type="_WWVZIFIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZqZ8VIiEeibjuLm5_lcNQ" name="startMultiplayerGame" method="_WdQgilIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n0lIiEeibjuLm5_lcNQ">
                    <body>Starts a multiplayer server and connects to it.&#xD;
     *&#xD;
     * @param specification The &lt;code>Specification&lt;/code> for the game.&#xD;
     * @param publicServer Whether to make the server public.&#xD;
     * @param port The port in which the server should listen for new clients.&#xD;
     * @return True if the game is started successfully.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZqZ8lIiEeibjuLm5_lcNQ" name="specification" type="_WWP5kVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZqZ81IiEeibjuLm5_lcNQ" name="publicServer">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZqZ9FIiEeibjuLm5_lcNQ" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZqZ9VIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WZrBAFIiEeibjuLm5_lcNQ" name="startSinglePlayerGame" method="_WdRHmFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n1FIiEeibjuLm5_lcNQ">
                    <body>Starts a new single player game by connecting to the server.&#xD;
     *&#xD;
     * FIXME: connect client/server directly (not using network-classes)&#xD;
     *&#xD;
     * @param spec The &lt;code>Specification&lt;/code> for the game.&#xD;
     * @param skip Skip the start game panel.&#xD;
     * @return True if the game starts successfully.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZrBAVIiEeibjuLm5_lcNQ" name="spec" type="_WWP5kVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZrBAlIiEeibjuLm5_lcNQ" name="skip">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZrBA1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WZroEFIiEeibjuLm5_lcNQ" name="startSavedGame" method="_WdRuoFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n1VIiEeibjuLm5_lcNQ">
                    <body>Loads and starts a game from the given file.&#xD;
     *&#xD;
     * @param file The saved game.&#xD;
     * @param userMsg An optional message key to be displayed early.&#xD;
     * @return True if the game starts successully.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZroEVIiEeibjuLm5_lcNQ" name="file" type="_WWAB8FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZroElIiEeibjuLm5_lcNQ" name="userMsg">
                    <eAnnotations xmi:id="_WZroFFIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WZsPIFIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZroE1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_VxxTgFIiEeibjuLm5_lcNQ" name="PreGameController" isLeaf="true">
                <ownedComment xmi:id="_Wd6n21IiEeibjuLm5_lcNQ">
                  <body>The controller that will be used before the game starts.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_WcxYUFIiEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_WWE6cVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeYh4VIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_WcxYUVIiEeibjuLm5_lcNQ" value="Logger.getLogger(PreGameController.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Wcx_YFIiEeibjuLm5_lcNQ" name="freeColClient" visibility="private" isLeaf="true" type="_WWJL4VIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeYh5FIiEeibjuLm5_lcNQ"/>
                <ownedAttribute xmi:id="_Wcx_YlIiEeibjuLm5_lcNQ" name="gui" visibility="private" isLeaf="true" type="_WWKaAVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeZI8lIiEeibjuLm5_lcNQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdSVs1IiEeibjuLm5_lcNQ" name="PreGameController" specification="_WZuEUFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdSVtFIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdSVtVIiEeibjuLm5_lcNQ" type="_VxxTgFIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>this.freeColClient = freeColClient;&#xD;
     this.gui = freeColClient.getGUI();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdSVtlIiEeibjuLm5_lcNQ" name="chat" specification="_VxyhoFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdSVt1IiEeibjuLm5_lcNQ" name="message">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>freeColClient.askServer().chat(freeColClient.getMyPlayer(), message);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdSVuFIiEeibjuLm5_lcNQ" name="setReady" specification="_VxzIsFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdSVuVIiEeibjuLm5_lcNQ" name="ready">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>freeColClient.getMyPlayer().setReady(ready);&#xD;
     &#xD;
     freeColClient.askServer().setReady(ready);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdS8wFIiEeibjuLm5_lcNQ" name="requestLaunch" specification="_VxzvwFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>if (freeColClient.getGame().allPlayersReadyToLaunch()) {&#xD;
         gui.showStatusPanel(Messages.message(&quot;status.startingGame&quot;));&#xD;
         freeColClient.askServer().requestLaunch();&#xD;
&#xD;
     } else {&#xD;
         gui.showErrorMessage(&quot;server.notAllReady&quot;);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdS8wVIiEeibjuLm5_lcNQ" name="setAvailable" specification="_WZurYFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdS8wlIiEeibjuLm5_lcNQ" name="nation" type="_WWd8AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdS8w1IiEeibjuLm5_lcNQ" name="state" type="_WWejEVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>freeColClient.getGame().getNationOptions()&#xD;
         .getNations().put(nation, state);&#xD;
&#xD;
     freeColClient.askServer().setAvailable(nation, state);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdS8xFIiEeibjuLm5_lcNQ" name="setColor" specification="_WZvScFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdS8xVIiEeibjuLm5_lcNQ" name="nation" type="_WWd8AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdS8xlIiEeibjuLm5_lcNQ" name="color" type="_WWaRoFIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>nation.setColor(color);&#xD;
&#xD;
     freeColClient.askServer().setColor(nation, color);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdS8x1IiEeibjuLm5_lcNQ" name="setNation" specification="_WZv5gFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdS8yFIiEeibjuLm5_lcNQ" name="nation" type="_WWd8AFIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>freeColClient.getMyPlayer().setNation(nation);&#xD;
     &#xD;
     freeColClient.askServer().setNation(nation);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdS8yVIiEeibjuLm5_lcNQ" name="setNationType" specification="_WZv5glIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdS8ylIiEeibjuLm5_lcNQ" name="nationType" type="_WWfKIVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>freeColClient.getMyPlayer().changeNationType(nationType);&#xD;
&#xD;
     freeColClient.askServer().setNationType(nationType);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdTj0FIiEeibjuLm5_lcNQ" name="startGame" specification="_Vx0W0FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdTj0VIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player player = freeColClient.getMyPlayer();&#xD;
     if (!freeColClient.isHeadless()) {&#xD;
         gui.closeMainPanel();&#xD;
         gui.closeMenus();&#xD;
         gui.closeStatusPanel();&#xD;
         // Stop the long introduction sound&#xD;
         freeColClient.getSoundController().playSound(null);&#xD;
         freeColClient.getSoundController().playSound(&#xD;
             &quot;sound.intro.&quot; + player.getNationId());&#xD;
     }&#xD;
     freeColClient.askServer()&#xD;
         .registerMessageHandler(freeColClient.getInGameInputHandler());&#xD;
&#xD;
     freeColClient.setInGame(true);&#xD;
     gui.initializeInGame((Tile)player.getEntryLocation());&#xD;
&#xD;
     InGameController igc = freeColClient.getInGameController();&#xD;
     if (freeColClient.currentPlayerIsMyPlayer()) igc.nextActiveUnit();&#xD;
&#xD;
     gui.setupMouseListeners();&#xD;
&#xD;
     if (FreeColDebugger.isInDebugMode(FreeColDebugger.DebugMode.MENUS)&#xD;
         &amp;&amp; FreeColDebugger.getDebugRunTurns() > 0) {&#xD;
         freeColClient.skipTurns(FreeColDebugger.getDebugRunTurns());&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     if (freeColClient.getGame().getTurn().getNumber() == 1) {&#xD;
         // force view of tutorial message&#xD;
         player.addStartGameMessage();&#xD;
         igc.nextModelMessage();&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdTj0lIiEeibjuLm5_lcNQ" name="updateGameOptions" specification="_Vx094VIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>OptionGroup gameOptions = freeColClient.getGame().getGameOptions();&#xD;
     freeColClient.getGame().getSpecification()&#xD;
         .clean(&quot;update game options (client initiated)&quot;);&#xD;
&#xD;
     freeColClient.askServer().updateGameOptions(gameOptions);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdTj01IiEeibjuLm5_lcNQ" name="updateMapGeneratorOptions" specification="_Vx1k8FIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>OptionGroup mgo = freeColClient.getGame().getMapGeneratorOptions();&#xD;
&#xD;
     freeColClient.askServer().updateMapGeneratorOptions(mgo);&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_VxyhoFIiEeibjuLm5_lcNQ" name="chat" method="_WdSVtlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n3VIiEeibjuLm5_lcNQ">
                    <body>Sends a chat message.&#xD;
     *&#xD;
     * @param message The text of the message.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VxyhoVIiEeibjuLm5_lcNQ" name="message">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VxzIsFIiEeibjuLm5_lcNQ" name="setReady" method="_WdSVuFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd6n3lIiEeibjuLm5_lcNQ">
                    <body>Sets this client to be (or not be) ready to start the game.&#xD;
     *&#xD;
     * @param ready Indicates whether or not this client is ready to&#xD;
     *     start the game.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VxzIsVIiEeibjuLm5_lcNQ" name="ready">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VxzvwFIiEeibjuLm5_lcNQ" name="requestLaunch" method="_WdS8wFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O4FIiEeibjuLm5_lcNQ">
                    <body>Requests the game to be started.  This will only be successful&#xD;
     * if all players are ready to start the game.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_Vx0W0FIiEeibjuLm5_lcNQ" name="startGame" method="_WdTj0FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O5VIiEeibjuLm5_lcNQ">
                    <body>Starts the game.&#xD;
     *&#xD;
     * @return True if the player should continue, false if we are in&#xD;
     *     a debug run and should be skipping turns.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vx094FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vx094VIiEeibjuLm5_lcNQ" name="updateGameOptions" method="_WdTj0lIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O5lIiEeibjuLm5_lcNQ">
                    <body>Update the {@link GameOptions} at the server.&#xD;
     * This method should be called after updating that object.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_Vx1k8FIiEeibjuLm5_lcNQ" name="updateMapGeneratorOptions" method="_WdTj01IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O51IiEeibjuLm5_lcNQ">
                    <body>Update the {@link MapGeneratorOptions} at the server.&#xD;
     * This method should be called after updating that object.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_WZuEUFIiEeibjuLm5_lcNQ" name="PreGameController" method="_WdSVs1IiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_WZuEUlIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_WZuEU1IiEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd6n3FIiEeibjuLm5_lcNQ">
                    <body>The constructor to use.&#xD;
     *&#xD;
     * @param freeColClient The &lt;code>FreeColClient&lt;/code> for the game.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZuEUVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZuEVFIiEeibjuLm5_lcNQ" type="_VxxTgFIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZurYFIiEeibjuLm5_lcNQ" name="setAvailable" method="_WdS8wVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O4VIiEeibjuLm5_lcNQ">
                    <body>Sets a nation's state.&#xD;
     *&#xD;
     * @param nation The &lt;code>Nation&lt;/code> to set.&#xD;
     * @param state The &lt;code>NationState&lt;/code> value to set.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZurYVIiEeibjuLm5_lcNQ" name="nation" type="_WWd8AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZurYlIiEeibjuLm5_lcNQ" name="state" type="_WWejEVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZvScFIiEeibjuLm5_lcNQ" name="setColor" method="_WdS8xFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O4lIiEeibjuLm5_lcNQ">
                    <body>Sets a nation's colour.&#xD;
     *&#xD;
     * @param nation The &lt;code>Nation&lt;/code> to set the color for.&#xD;
     * @param color The &lt;code>Color&lt;/code> to set.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZvScVIiEeibjuLm5_lcNQ" name="nation" type="_WWd8AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZvSclIiEeibjuLm5_lcNQ" name="color" type="_WWaRoFIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZv5gFIiEeibjuLm5_lcNQ" name="setNation" method="_WdS8x1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O41IiEeibjuLm5_lcNQ">
                    <body>Sets this client's player's nation.&#xD;
     *&#xD;
     * @param nation Which &lt;code>Nation&lt;/code> this player wishes to set.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZv5gVIiEeibjuLm5_lcNQ" name="nation" type="_WWd8AFIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZv5glIiEeibjuLm5_lcNQ" name="setNationType" method="_WdS8yVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O5FIiEeibjuLm5_lcNQ">
                    <body>Sets this client's player's nation type.&#xD;
     *&#xD;
     * @param nationType Which nation type this player wishes to set.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZv5g1IiEeibjuLm5_lcNQ" name="nationType" type="_WWfKIVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Vx4oQFIiEeibjuLm5_lcNQ" name="InGameInputHandler" isLeaf="true">
                <ownedComment xmi:id="_Wd7O6FIiEeibjuLm5_lcNQ">
                  <body>Handle the network messages that arrives while in the game.&#xD;
 *&#xD;
Delegate to the real handlers in InGameController which are allowed&#xD;
to touch the GUI.  Call IGC through invokeLater except for the messages&#xD;
that demand a response, which requires invokeAndWait.&#xD;
 *&#xD;
Note that the EDT often calls the controller, which queries the&#xD;
server, which results in handling the reply here, still within the&#xD;
EDT.  invokeAndWait is illegal within the EDT, but none of messages&#xD;
that require a response are client-initiated so the problem does&#xD;
not arise...&#xD;
 *&#xD;
...except for the special case of the animations.  These have to be&#xD;
done in series but are sometimes in the EDT (our unit moves) and&#xD;
sometimes not (other nation unit moves).  Hence the hack&#xD;
GUI.invokeNowOrWait.</body>
                </ownedComment>
                <generalization xmi:id="_WXR0UFIiEeibjuLm5_lcNQ" general="_VyNYYFIiEeibjuLm5_lcNQ"/>
                <ownedAttribute xmi:id="_WczNgFIiEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_WWE6cVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeZwAVIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_WczNgVIiEeibjuLm5_lcNQ" value="Logger.getLogger(InGameInputHandler.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_WczNglIiEeibjuLm5_lcNQ" name="closeMenusRunnable" visibility="private" isLeaf="true" type="_WZxHoVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeaXEVIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_WczNg1IiEeibjuLm5_lcNQ" value="() -> {&#xD;&#xA;        igc().closeMenus();&#xD;&#xA;    }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Wcz0kVIiEeibjuLm5_lcNQ" name="displayModelMessagesRunnable" visibility="private" isLeaf="true" type="_WZxHoVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_Wea-IVIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wcz0klIiEeibjuLm5_lcNQ" value="() -> {&#xD;&#xA;        igc().displayModelMessages(false);&#xD;&#xA;    }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Wc0boFIiEeibjuLm5_lcNQ" name="reconnectRunnable" visibility="private" isLeaf="true" type="_WZxHoVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeblMFIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wc0boVIiEeibjuLm5_lcNQ" value="() -> {&#xD;&#xA;        igc().reconnect();&#xD;&#xA;    }"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdTj1FIiEeibjuLm5_lcNQ" name="InGameInputHandler" specification="_WZyVwFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdTj1VIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdTj1lIiEeibjuLm5_lcNQ" type="_Vx4oQFIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>super(freeColClient);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdUK4FIiEeibjuLm5_lcNQ" name="igc" specification="_Vx7EgFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdUK4VIiEeibjuLm5_lcNQ" type="_VyaMsFIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return getFreeColClient().getInGameController();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdUK4lIiEeibjuLm5_lcNQ" name="invokeAndWait" specification="_WZy80FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdUK41IiEeibjuLm5_lcNQ" name="runnable" type="_WZxHoVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>getFreeColClient().getGUI().invokeNowOrWait(runnable);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdUK5FIiEeibjuLm5_lcNQ" name="invokeLater" specification="_WZy80lIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdUK5VIiEeibjuLm5_lcNQ" name="runnable" type="_WZxHoVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>getFreeColClient().getGUI().invokeNowOrLater(runnable);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdUx8FIiEeibjuLm5_lcNQ" name="getIntegerAttribute" specification="_WZzj4FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdUx8VIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdUx8lIiEeibjuLm5_lcNQ" name="attrib">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdUx81IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int n;&#xD;
     try {&#xD;
         n = Integer.parseInt(element.getAttribute(attrib));&#xD;
     } catch (NumberFormatException e) {&#xD;
         n = Integer.MIN_VALUE;&#xD;
     }&#xD;
     return n;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdUx9FIiEeibjuLm5_lcNQ" name="selectElement" specification="_WZ0K8FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdUx9VIiEeibjuLm5_lcNQ" name="parent" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdUx9lIiEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdUx91IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>NodeList nodes = parent.getChildNodes();&#xD;
     for (int i = 0; i &lt; nodes.getLength(); i++) {&#xD;
         Element e = (Element)nodes.item(i);&#xD;
         if (key.equals(FreeColObject.readId(e))) return e;&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdUx-FIiEeibjuLm5_lcNQ" name="selectUnitFromElement" specification="_WZ0yAFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdUx-VIiEeibjuLm5_lcNQ" name="game" type="_WWPSgVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdUx-lIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdUx-1IiEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdUx_FIiEeibjuLm5_lcNQ" type="_WWRuwVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Element e = selectElement(element, id);&#xD;
     Unit u = null;&#xD;
     if (e != null) {&#xD;
         u = new Unit(game, e);&#xD;
         if (u.getLocation() == null) {&#xD;
             throw new RuntimeException(&quot;Null location: &quot; + u);&#xD;
         }&#xD;
     }&#xD;
     return u;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdUx_VIiEeibjuLm5_lcNQ" name="handle" specification="_WZ1ZEFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdUx_lIiEeibjuLm5_lcNQ" name="connection" type="_WWSV0FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdUx_1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdUyAFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>if (element == null) {&#xD;
         throw new RuntimeException(&quot;Received empty (null) message!&quot;);&#xD;
     }&#xD;
&#xD;
     Element reply;&#xD;
     String type = element.getTagName();&#xD;
     logger.log(Level.FINEST, &quot;Received: &quot; + type);&#xD;
     switch (type) {&#xD;
     case &quot;disconnect&quot;:&#xD;
         reply = disconnect(element); break; // Inherited&#xD;
     case &quot;addObject&quot;:&#xD;
         reply = addObject(element); break;&#xD;
     case &quot;addPlayer&quot;:&#xD;
         reply = addPlayer(element); break;&#xD;
     case &quot;animateAttack&quot;:&#xD;
         reply = animateAttack(element); break;&#xD;
     case &quot;animateMove&quot;:&#xD;
         reply = animateMove(element); break;&#xD;
     case &quot;chat&quot;:&#xD;
         reply = chat(element); break;&#xD;
     case &quot;chooseFoundingFather&quot;:&#xD;
         reply = chooseFoundingFather(element); break;&#xD;
     case &quot;closeMenus&quot;:&#xD;
         reply = closeMenus(); break;&#xD;
     case &quot;diplomacy&quot;:&#xD;
         reply = diplomacy(element); break;&#xD;
     case &quot;error&quot;:&#xD;
         reply = error(element); break;&#xD;
     case &quot;featureChange&quot;:&#xD;
         reply = featureChange(element); break;&#xD;
     case &quot;firstContact&quot;:&#xD;
         reply = firstContact(element); break;&#xD;
     case &quot;fountainOfYouth&quot;:&#xD;
         reply = fountainOfYouth(element); break;&#xD;
     case &quot;gameEnded&quot;:&#xD;
         reply = gameEnded(element); break;&#xD;
     case &quot;indianDemand&quot;:&#xD;
         reply = indianDemand(element); break;&#xD;
     case &quot;lootCargo&quot;:&#xD;
         reply = lootCargo(element); break;&#xD;
     case &quot;monarchAction&quot;:&#xD;
         reply = monarchAction(element); break;&#xD;
     case &quot;multiple&quot;:&#xD;
         reply = multiple(connection, element); break;&#xD;
     case &quot;newLandName&quot;:&#xD;
         reply = newLandName(element); break;&#xD;
     case &quot;newRegionName&quot;:&#xD;
         reply = newRegionName(element); break;&#xD;
     case &quot;newTurn&quot;:&#xD;
         reply = newTurn(element); break;&#xD;
     case &quot;reconnect&quot;:&#xD;
         reply = reconnect(element); break;&#xD;
     case &quot;remove&quot;:&#xD;
         reply = remove(element); break;&#xD;
     case &quot;setAI&quot;:&#xD;
         reply = setAI(element); break;&#xD;
     case &quot;setCurrentPlayer&quot;:&#xD;
         reply = setCurrentPlayer(element); break;&#xD;
     case &quot;setDead&quot;:&#xD;
         reply = setDead(element); break;&#xD;
     case &quot;setStance&quot;:&#xD;
         reply = setStance(element); break;&#xD;
     case &quot;spyResult&quot;:&#xD;
         reply = spyResult(element); break;&#xD;
     case &quot;update&quot;:&#xD;
         reply = update(element); break;&#xD;
     default:&#xD;
         logger.warning(&quot;Unsupported message type: &quot; + type);&#xD;
         return null;&#xD;
     }&#xD;
     logger.log(Level.FINEST, &quot;Handled message: &quot; + type&#xD;
         + &quot; replying with: &quot;&#xD;
         + ((reply == null) ? &quot;null&quot; : reply.getTagName()));&#xD;
&#xD;
     // If there is a &quot;flush&quot; attribute present, encourage the client&#xD;
     // to display any new messages.&#xD;
     final FreeColClient fcc = getFreeColClient();&#xD;
     if (Boolean.TRUE.toString().equals(element.getAttribute(&quot;flush&quot;))&#xD;
         &amp;&amp; fcc.currentPlayerIsMyPlayer()) {&#xD;
         invokeLater(displayModelMessagesRunnable);&#xD;
     }&#xD;
     return reply;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdVZAFIiEeibjuLm5_lcNQ" name="addObject" specification="_WZ2nMlIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdVZAVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdVZAlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     final Specification spec = game.getSpecification();&#xD;
     NodeList nodes = element.getChildNodes();&#xD;
     for (int i = 0; i &lt; nodes.getLength(); i++) {&#xD;
         Element e = (Element)nodes.item(i);&#xD;
         String owner = e.getAttribute(&quot;owner&quot;);&#xD;
         Player player = game.getFreeColGameObject(owner, Player.class);&#xD;
         if (player == null) {&#xD;
             logger.warning(&quot;addObject with broken owner: &quot; + owner);&#xD;
             continue;&#xD;
         }&#xD;
&#xD;
         final String tag = e.getTagName();&#xD;
         if (FoundingFather.getXMLElementTagName().equals(tag)) {&#xD;
             FoundingFather father&#xD;
                 = spec.getFoundingFather(FreeColObject.readId(e));&#xD;
             if (father != null) player.addFather(father);&#xD;
             player.invalidateCanSeeTiles();// Might be coronado?&#xD;
             &#xD;
         } else if (HistoryEvent.getXMLElementTagName().equals(tag)) {&#xD;
             player.getHistory().add(new HistoryEvent(e));&#xD;
&#xD;
         } else if (LastSale.getXMLElementTagName().equals(tag)) {&#xD;
             player.addLastSale(new LastSale(e));&#xD;
&#xD;
         } else if (ModelMessage.getXMLElementTagName().equals(tag)) {&#xD;
             player.addModelMessage(new ModelMessage(e));&#xD;
&#xD;
         } else if (TradeRoute.getXMLElementTagName().equals(tag)) {&#xD;
             player.getTradeRoutes().add(new TradeRoute(game, e));&#xD;
&#xD;
         } else {&#xD;
             logger.warning(&quot;addObject unrecognized: &quot; + tag);&#xD;
         }&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdVZA1IiEeibjuLm5_lcNQ" name="addPlayer" specification="_WZ3OQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdVZBFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdVZBVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     NodeList nodes = element.getChildNodes();&#xD;
     for (int i = 0; i &lt; nodes.getLength(); i++) {&#xD;
         Element playerElement = (Element)nodes.item(i);&#xD;
         String id = FreeColObject.readId(playerElement);&#xD;
         Player p = game.getFreeColGameObject(id, Player.class);&#xD;
         if (p == null) {&#xD;
             game.addPlayer(new Player(game, playerElement));&#xD;
         } else {&#xD;
             p.readFromXMLElement(playerElement);&#xD;
         }&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdVZBlIiEeibjuLm5_lcNQ" name="animateAttack" specification="_WZ31UVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdVZB1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdVZCFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final FreeColClient freeColClient = getFreeColClient();&#xD;
     final Game game = getGame();&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     String str;&#xD;
     Unit u;&#xD;
&#xD;
     if ((str = element.getAttribute(&quot;attacker&quot;)).isEmpty()) {&#xD;
         throw new IllegalStateException(&quot;Attack animation for: &quot;&#xD;
             + player.getId() + &quot; missing attacker attribute.&quot;);&#xD;
     }&#xD;
     if ((u = game.getFreeColGameObject(str, Unit.class)) == null&#xD;
         &amp;&amp; (u = selectUnitFromElement(game, element, str)) == null) {&#xD;
         throw new IllegalStateException(&quot;Attack animation for: &quot;&#xD;
             + player.getId() + &quot; omitted attacker: &quot; + str);&#xD;
     }&#xD;
     final Unit attacker = u;&#xD;
&#xD;
     if ((str = element.getAttribute(&quot;defender&quot;)).isEmpty()) {&#xD;
         throw new IllegalStateException(&quot;Attack animation for: &quot;&#xD;
             + player.getId() + &quot; missing defender attribute.&quot;);&#xD;
     }&#xD;
     if ((u = game.getFreeColGameObject(str, Unit.class)) == null&#xD;
         &amp;&amp; (u = selectUnitFromElement(game, element, str)) == null) {&#xD;
         throw new IllegalStateException(&quot;Attack animation for: &quot;&#xD;
             + player.getId() + &quot; omitted defender: &quot; + str);&#xD;
     }&#xD;
     final Unit defender = u;&#xD;
&#xD;
     if ((str = element.getAttribute(&quot;attackerTile&quot;)).isEmpty()) {&#xD;
         throw new IllegalStateException(&quot;Attack animation for: &quot;&#xD;
             + player.getId() + &quot; missing attacker tile attribute.&quot;);&#xD;
     }&#xD;
     final Tile attackerTile = game.getFreeColGameObject(str, Tile.class);&#xD;
     if (attackerTile == null) {&#xD;
         throw new IllegalStateException(&quot;Attack animation for: &quot;&#xD;
             + player.getId() + &quot; omitted attacker tile: &quot; + str);&#xD;
     }&#xD;
&#xD;
     if ((str = element.getAttribute(&quot;defenderTile&quot;)).isEmpty()) {&#xD;
         throw new IllegalStateException(&quot;Attack animation for: &quot;&#xD;
             + player.getId() + &quot; missing defender tile attribute.&quot;);&#xD;
     }&#xD;
     final Tile defenderTile = game.getFreeColGameObject(str, Tile.class);&#xD;
     if (defenderTile == null) {&#xD;
         throw new IllegalStateException(&quot;Attack animation for: &quot;&#xD;
             + player.getId() + &quot; omitted defender tile: &quot; + str);&#xD;
     }&#xD;
&#xD;
     final boolean success&#xD;
         = Boolean.parseBoolean(element.getAttribute(&quot;success&quot;));&#xD;
&#xD;
     // All is well, do the animation.&#xD;
     invokeAndWait(() -> {&#xD;
             igc().animateAttack(attacker, defender,&#xD;
                                 attackerTile, defenderTile, success);&#xD;
         });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdVZCVIiEeibjuLm5_lcNQ" name="animateMove" specification="_WZ4cYVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdVZClIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdVZC1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final FreeColClient freeColClient = getFreeColClient();&#xD;
     final Game game = getGame();&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
&#xD;
     String unitId = element.getAttribute(&quot;unit&quot;);&#xD;
     if (unitId.isEmpty()) {&#xD;
         logger.warning(&quot;Animation for: &quot; + player.getId()&#xD;
             + &quot; missing unitId.&quot;);&#xD;
         return null;&#xD;
     }&#xD;
     Unit u = game.getFreeColGameObject(unitId, Unit.class);&#xD;
     if (u == null) {&#xD;
         u = selectUnitFromElement(game, element, unitId);&#xD;
         //if (u != null) logger.info(&quot;Added unit from element: &quot; + unitId);&#xD;
     }&#xD;
     if (u == null) {&#xD;
         logger.warning(&quot;Animation for: &quot; + player.getId()&#xD;
             + &quot; missing unit:&quot; + unitId);&#xD;
         return null;&#xD;
     }&#xD;
     final Unit unit = u;&#xD;
&#xD;
     String oldTileId = element.getAttribute(&quot;oldTile&quot;);&#xD;
     if (oldTileId.isEmpty()) {&#xD;
         logger.warning(&quot;Animation for: &quot; + player.getId()&#xD;
             + &quot; missing oldTileId&quot;);&#xD;
         return null;&#xD;
     }&#xD;
     final Tile oldTile = game.getFreeColGameObject(oldTileId, Tile.class);&#xD;
     if (oldTile == null) {&#xD;
         logger.warning(&quot;Animation for: &quot; + player.getId()&#xD;
             + &quot; missing oldTile: &quot; + oldTileId);&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     String newTileId = element.getAttribute(&quot;newTile&quot;);&#xD;
     if (newTileId.isEmpty()) {&#xD;
         logger.warning(&quot;Animation for: &quot; + player.getId()&#xD;
             + &quot; missing newTileId&quot;);&#xD;
         return null;&#xD;
     }&#xD;
     final Tile newTile = game.getFreeColGameObject(newTileId, Tile.class);&#xD;
     if (newTile == null) {&#xD;
         logger.warning(&quot;Animation for: &quot; + player.getId()&#xD;
             + &quot; missing newTile: &quot; + newTileId);&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     invokeAndWait(() -> { igc().animateMove(unit, oldTile, newTile); });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdWAEFIiEeibjuLm5_lcNQ" name="chat" specification="_WZ5DcFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdWAEVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdWAElIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     final ChatMessage chatMessage = new ChatMessage(game, element);&#xD;
&#xD;
     invokeLater(() -> {&#xD;
             igc().chat(chatMessage.getPlayer(game),&#xD;
                        chatMessage.getMessage(), chatMessage.isPrivate());&#xD;
         });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdWAE1IiEeibjuLm5_lcNQ" name="chooseFoundingFather" specification="_WZ5qgFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdWAFFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdWAFVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final ChooseFoundingFatherMessage message&#xD;
         = new ChooseFoundingFatherMessage(getGame(), element);&#xD;
     final List&lt;FoundingFather> ffs = message.getFathers();&#xD;
&#xD;
     invokeLater(() -> { igc().chooseFoundingFather(ffs); });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdWAFlIiEeibjuLm5_lcNQ" name="closeMenus" specification="_Vx-H0FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdWAF1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>invokeAndWait(closeMenusRunnable);&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdWAGFIiEeibjuLm5_lcNQ" name="diplomacy" specification="_WZ6RkFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdWAGVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdWAGlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     final DiplomacyMessage message&#xD;
         = new DiplomacyMessage(getGame(), element);&#xD;
     final DiplomaticTrade agreement = message.getAgreement();&#xD;
&#xD;
     final FreeColGameObject our = message.getOurFCGO(game);&#xD;
     if (our == null) {&#xD;
         logger.warning(&quot;Our FCGO omitted from diplomacy message.&quot;);&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     final FreeColGameObject other = message.getOtherFCGO(game);&#xD;
     if (other == null) {&#xD;
         logger.warning(&quot;Other FCGO omitted from diplomacy message.&quot;);&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     invokeAndWait(() -> {&#xD;
             message.setAgreement(igc().diplomacy(our, other, agreement));&#xD;
         });&#xD;
     return (message.getAgreement() == null) ? null&#xD;
         : message.toXMLElement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdWnIFIiEeibjuLm5_lcNQ" name="disposeUnits" specification="_WZ6Rk1IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdWnIVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdWnIlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Game game = getGame();&#xD;
     NodeList nodes = element.getChildNodes();&#xD;
&#xD;
     for (int i = 0; i &lt; nodes.getLength(); i++) {&#xD;
         // Do not read the whole unit out of the element as we are&#xD;
         // only going to dispose of it, not forgetting that the&#xD;
         // server may have already done so and its view will only&#xD;
         // mislead us here in the client.&#xD;
         Element e = (Element) nodes.item(i);&#xD;
         String id = FreeColObject.readId(e);&#xD;
         Unit u = game.getFreeColGameObject(id, Unit.class);&#xD;
         if (u == null) {&#xD;
             logger.warning(&quot;Object is not a unit&quot;);&#xD;
         } else {&#xD;
             u.dispose();&#xD;
         }&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdXOMFIiEeibjuLm5_lcNQ" name="error" specification="_WZ64olIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdXOMVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdXOMlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final String messageId = element.getAttribute(&quot;messageID&quot;);&#xD;
     final String message = element.getAttribute(&quot;message&quot;);&#xD;
&#xD;
     invokeLater(() -> { igc().error(messageId, message); });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdXOM1IiEeibjuLm5_lcNQ" name="featureChange" specification="_WZ7fsFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdXONFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdXONVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     final Specification spec = game.getSpecification();&#xD;
     boolean add = &quot;add&quot;.equalsIgnoreCase(element.getAttribute(&quot;add&quot;));&#xD;
     String id = FreeColObject.readId(element);&#xD;
     FreeColGameObject object = game.getFreeColGameObject(id);&#xD;
     if (object == null) {&#xD;
         logger.warning(&quot;featureChange with null object&quot;);&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     NodeList nodes = element.getChildNodes();&#xD;
     for (int i = 0; i &lt; nodes.getLength(); i++) {&#xD;
         Element e = (Element) nodes.item(i);&#xD;
&#xD;
         final String tag = e.getTagName();&#xD;
         if (Ability.getXMLElementTagName().equals(tag)) {&#xD;
             if (add) {&#xD;
                 object.addAbility(new Ability(e, spec));&#xD;
             } else {&#xD;
                 object.removeAbility(new Ability(e, spec));&#xD;
             }&#xD;
&#xD;
         } else if (Modifier.getXMLElementTagName().equals(tag)) {&#xD;
             if (add) {&#xD;
                 object.addModifier(new Modifier(e, spec));&#xD;
             } else {&#xD;
                 object.removeModifier(new Modifier(e, spec));&#xD;
             }&#xD;
&#xD;
         } else {&#xD;
             logger.warning(&quot;featureChange unrecognized: &quot; + tag);&#xD;
         }&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdXONlIiEeibjuLm5_lcNQ" name="firstContact" specification="_WZ8GwFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdXON1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdXOOFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     final FirstContactMessage message&#xD;
         = new FirstContactMessage(game, element);&#xD;
&#xD;
     final Player player = message.getPlayer(game);&#xD;
     if (player == null || player != getFreeColClient().getMyPlayer()) {&#xD;
         logger.warning(&quot;firstContact with bad player: &quot; + player);&#xD;
         return null;&#xD;
     }&#xD;
     final Player other = message.getOtherPlayer(game);&#xD;
     if (other == null || other == player || !other.isIndian()) {&#xD;
         logger.warning(&quot;firstContact with bad other player: &quot; + other);&#xD;
         return null;&#xD;
     }&#xD;
     final Tile tile = message.getTile(game);&#xD;
     if (tile != null &amp;&amp; tile.getOwner() != other) {&#xD;
         logger.warning(&quot;firstContact with bad tile: &quot; + tile);&#xD;
         return null;&#xD;
     }&#xD;
     final int n = message.getSettlementCount();&#xD;
&#xD;
     invokeLater(() -> { igc().firstContact(player, other, tile, n); });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdX1QFIiEeibjuLm5_lcNQ" name="fountainOfYouth" specification="_WZ8Gw1IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdX1QVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdX1QlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final int n = getIntegerAttribute(element, &quot;migrants&quot;);&#xD;
     if (n &lt;= 0) {&#xD;
         logger.warning(&quot;Invalid migrants attribute: &quot;&#xD;
             + element.getAttribute(&quot;migrants&quot;));&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     invokeLater(() -> { igc().fountainOfYouth(n); });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdX1Q1IiEeibjuLm5_lcNQ" name="gameEnded" specification="_WZ8t0FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdX1RFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdX1RVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>FreeColClient freeColClient = getFreeColClient();&#xD;
     FreeColDebugger.finishDebugRun(freeColClient, true);&#xD;
     final Player winner&#xD;
         = getGame().getFreeColGameObject(element.getAttribute(&quot;winner&quot;),&#xD;
                                          Player.class);&#xD;
     if (winner == null) {&#xD;
         logger.warning(&quot;Invalid player for gameEnded&quot;);&#xD;
         return null;&#xD;
     }&#xD;
     final String highScore = element.getAttribute(&quot;highScore&quot;);&#xD;
&#xD;
     if (winner == freeColClient.getMyPlayer()) {&#xD;
         invokeLater(() -> { igc().victory(highScore); });&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdX1RlIiEeibjuLm5_lcNQ" name="indianDemand" specification="_WZ9U4FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdX1R1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdX1SFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     final Player player = getFreeColClient().getMyPlayer();&#xD;
     final IndianDemandMessage message&#xD;
         = new IndianDemandMessage(game, element);&#xD;
     final Unit unit = message.getUnit(game);&#xD;
     if (unit == null) {&#xD;
         logger.warning(&quot;IndianDemand with null unit: &quot;&#xD;
             + element.getAttribute(&quot;unit&quot;));&#xD;
         return null;&#xD;
     }&#xD;
     final Colony colony = message.getColony(game);&#xD;
     if (colony == null) {&#xD;
         logger.warning(&quot;IndianDemand with null colony: &quot;&#xD;
             + element.getAttribute(&quot;colony&quot;));&#xD;
         return null;&#xD;
     } else if (!player.owns(colony)) {&#xD;
         throw new IllegalArgumentException(&quot;Demand to anothers colony&quot;);&#xD;
     }&#xD;
&#xD;
     invokeAndWait(() -> {&#xD;
             message.setResult(igc().indianDemand(unit, colony,&#xD;
                     message.getType(game), message.getAmount()));&#xD;
         });&#xD;
     return message.toXMLElement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdX1SVIiEeibjuLm5_lcNQ" name="lootCargo" specification="_WZ9U41IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdX1SlIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdX1S1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     final LootCargoMessage message = new LootCargoMessage(game, element);&#xD;
     final Unit unit = message.getUnit(game);&#xD;
     final String defenderId = message.getDefenderId();&#xD;
     final List&lt;Goods> goods = message.getGoods();&#xD;
     if (unit == null || goods == null) return null;&#xD;
&#xD;
     invokeLater(() -> { igc().loot(unit, goods, defenderId); });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdYcUFIiEeibjuLm5_lcNQ" name="monarchAction" specification="_WZ978lIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdYcUVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdYcUlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     final MonarchActionMessage message&#xD;
         = new MonarchActionMessage(game, element);&#xD;
&#xD;
     invokeLater(() -> {&#xD;
             igc().monarch(message.getAction(), message.getTemplate(),&#xD;
                           message.getMonarchKey());&#xD;
         });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdYcU1IiEeibjuLm5_lcNQ" name="multiple" specification="_WZ-jAVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdYcVFIiEeibjuLm5_lcNQ" name="connection" type="_WWSV0FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdYcVVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdYcVlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>NodeList nodes = element.getChildNodes();&#xD;
     List&lt;Element> results = new ArrayList&lt;>();&#xD;
&#xD;
     for (int i = 0; i &lt; nodes.getLength(); i++) {&#xD;
         try {&#xD;
             Element reply = handle(connection, (Element)nodes.item(i));&#xD;
             if (reply != null) results.add(reply);&#xD;
         } catch (Exception e) {&#xD;
             logger.log(Level.WARNING, &quot;Caught crash in multiple item &quot; + i&#xD;
                 + &quot;, continuing.&quot;, e);&#xD;
         }&#xD;
     }&#xD;
     return DOMMessage.collapseElements(results);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdYcV1IiEeibjuLm5_lcNQ" name="newLandName" specification="_WZ_KEVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdYcWFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdYcWVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     NewLandNameMessage message = new NewLandNameMessage(game, element);&#xD;
     final Unit unit = message.getUnit(getFreeColClient().getMyPlayer());&#xD;
     final String defaultName = message.getNewLandName();&#xD;
     if (unit == null || defaultName == null &#xD;
         || !unit.hasTile()) return null;&#xD;
&#xD;
     invokeLater(() -> { igc().newLandName(defaultName, unit); });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdYcWlIiEeibjuLm5_lcNQ" name="newRegionName" specification="_WZ_xIFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdYcW1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdYcXFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     NewRegionNameMessage message = new NewRegionNameMessage(game, element);&#xD;
     final Tile tile = message.getTile(game);&#xD;
     final Unit unit = message.getUnit(getFreeColClient().getMyPlayer());&#xD;
     final Region region = message.getRegion(game);&#xD;
     final String defaultName = message.getNewRegionName();&#xD;
     if (defaultName == null || region == null) return null;&#xD;
&#xD;
     invokeLater(() -> {&#xD;
             igc().newRegionName(region, defaultName, tile, unit);&#xD;
         });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdYcXVIiEeibjuLm5_lcNQ" name="newTurn" specification="_WaAYMFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdYcXlIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdYcX1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final int n = getIntegerAttribute(element, &quot;turn&quot;);&#xD;
     if (n &lt; 0) {&#xD;
         logger.warning(&quot;Invalid turn for newTurn&quot;);&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     invokeLater(() -> { igc().newTurn(n); });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdZDYFIiEeibjuLm5_lcNQ" name="reconnect" specification="_WaA_QFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdZDYVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdZDYlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>logger.finest(&quot;Entered reconnect.&quot;);&#xD;
&#xD;
     invokeLater(reconnectRunnable);&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdZDY1IiEeibjuLm5_lcNQ" name="remove" specification="_WaC0cFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdZDZFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdZDZVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     final FreeColGameObject divert&#xD;
         = game.getFreeColGameObject(element.getAttribute(&quot;divert&quot;));&#xD;
     final List&lt;FreeColGameObject> objects = new ArrayList&lt;>();&#xD;
     NodeList nodeList = element.getChildNodes();&#xD;
     for (int i = 0; i &lt; nodeList.getLength(); i++) {&#xD;
         Element e = (Element)nodeList.item(i);&#xD;
         String idString = FreeColObject.readId(e);&#xD;
         FreeColGameObject fcgo = game.getFreeColGameObject(idString);&#xD;
         if (fcgo == null) {&#xD;
             // This can happen legitimately when an update that&#xD;
             // removes pointers to a disappearing unit happens,&#xD;
             // then a gc which drops the weak reference in&#xD;
             // freeColGameObjects, before this remove is processed.&#xD;
             continue;&#xD;
         }&#xD;
         objects.add(fcgo);&#xD;
     }&#xD;
&#xD;
     if (!objects.isEmpty()) {&#xD;
         invokeLater(() -> { igc().remove(objects, divert); });&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdZDZlIiEeibjuLm5_lcNQ" name="setAI" specification="_WaDbgFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdZDZ1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdZDaFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     Player p = game.getFreeColGameObject(element.getAttribute(&quot;player&quot;),&#xD;
                                          Player.class);&#xD;
     p.setAI(Boolean.parseBoolean(element.getAttribute(&quot;ai&quot;)));&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdZDaVIiEeibjuLm5_lcNQ" name="setCurrentPlayer" specification="_WaECkFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdZDalIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdZDa1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Player player&#xD;
         = getGame().getFreeColGameObject(element.getAttribute(&quot;player&quot;),&#xD;
                                          Player.class);&#xD;
     if (player == null) {&#xD;
         logger.warning(&quot;Invalid player for setCurrentPlayer&quot;);&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     igc().setCurrentPlayer(player); // It is safe to call this one directly&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdZqcFIiEeibjuLm5_lcNQ" name="setDead" specification="_WaEpoFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdZqcVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdZqclIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Player player = getGame()&#xD;
         .getFreeColGameObject(element.getAttribute(&quot;player&quot;),Player.class);&#xD;
     if (player == null) {&#xD;
         logger.warning(&quot;Invalid player for setDead&quot;);&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     invokeLater(() -> { igc().setDead(player); });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdZqc1IiEeibjuLm5_lcNQ" name="setStance" specification="_WaFQsFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdZqdFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdZqdVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = getGame();&#xD;
     final Stance stance = Enum.valueOf(Stance.class,&#xD;
                                        element.getAttribute(&quot;stance&quot;));&#xD;
     if (stance == null) {&#xD;
         logger.warning(&quot;Invalid stance for setStance&quot;);&#xD;
         return null;&#xD;
     }&#xD;
     final Player p1 = game&#xD;
         .getFreeColGameObject(element.getAttribute(&quot;first&quot;), Player.class);&#xD;
     if (p1 == null) {&#xD;
         logger.warning(&quot;Invalid player1 for setStance&quot;);&#xD;
         return null;&#xD;
     }&#xD;
     final Player p2 = game&#xD;
         .getFreeColGameObject(element.getAttribute(&quot;second&quot;),Player.class);&#xD;
     if (p2 == null) {&#xD;
         logger.warning(&quot;Invalid player2 for setStance&quot;);&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     invokeLater(() -> { igc().setStance(stance, p1, p2); });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdZqdlIiEeibjuLm5_lcNQ" name="spyResult" specification="_WaF3wFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdZqd1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdZqeFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>// The element contains two children, being the full and&#xD;
     // normal versions of the settlement-being-spied-upon's tile.&#xD;
     // It has to be the tile, as otherwise we do not see the units&#xD;
     // defending the settlement.  So, we have to unpack, update&#xD;
     // with the first, display, then update with the second.  This&#xD;
     // is hacky as the client could retain the settlement&#xD;
     // information, but the potential abuses are limited.&#xD;
     NodeList nodeList = element.getChildNodes();&#xD;
     if (nodeList.getLength() != 2) {&#xD;
         logger.warning(&quot;spyResult length = &quot; + nodeList.getLength());&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     final Game game = getGame();&#xD;
     final String tileId = element.getAttribute(&quot;tile&quot;);&#xD;
     final Tile tile = game.getFreeColGameObject(tileId, Tile.class);&#xD;
     if (tile == null) {&#xD;
         logger.warning(&quot;spyResult bad tile = &quot; + tileId);&#xD;
         return null;&#xD;
     }&#xD;
&#xD;
     // Read the privileged tile information from fullElement, and&#xD;
     // pass a runnable to the display routine that restores the&#xD;
     // normal view of the tile, which happens when the colony panel&#xD;
     // is closed.&#xD;
     final Element fullElement = (Element)nodeList.item(0);&#xD;
     final Element normalElement = (Element)nodeList.item(1);&#xD;
     tile.readFromXMLElement(fullElement);&#xD;
     invokeLater(() -> {&#xD;
             igc().spyColony(tile, () -> {&#xD;
                     tile.readFromXMLElement(normalElement);&#xD;
                 });&#xD;
         });&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdZqeVIiEeibjuLm5_lcNQ" name="update" specification="_WaF3w1IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdZqelIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdZqe1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Player player = getFreeColClient().getMyPlayer();&#xD;
     boolean visibilityChange = false;&#xD;
&#xD;
     NodeList nodeList = element.getChildNodes();&#xD;
     for (int i = 0; i &lt; nodeList.getLength(); i++) {&#xD;
         Element e = (Element)nodeList.item(i);&#xD;
         String id = FreeColObject.readId(e);&#xD;
         FreeColGameObject fcgo = getGame().getFreeColGameObject(id);&#xD;
         if (fcgo == null) {&#xD;
             logger.warning(&quot;Update object not present in client: &quot; + id);&#xD;
         } else {&#xD;
             fcgo.readFromXMLElement(e);&#xD;
         }&#xD;
         if ((fcgo instanceof Player &amp;&amp; (fcgo == player))&#xD;
             || ((fcgo instanceof Settlement || fcgo instanceof Unit)&#xD;
                 &amp;&amp; player.owns((Ownable)fcgo))) {&#xD;
             visibilityChange = true;//-vis(player)&#xD;
         }&#xD;
     }&#xD;
     if (visibilityChange) player.invalidateCanSeeTiles();//+vis(player)&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_Vx7EgFIiEeibjuLm5_lcNQ" name="igc" visibility="private" method="_WdUK4FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O6lIiEeibjuLm5_lcNQ">
                    <body>Shorthand to get the controller.&#xD;
     *&#xD;
     * @return The in-game controller.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WW6A4FIiEeibjuLm5_lcNQ" type="_VyaMsFIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Vx-H0FIiEeibjuLm5_lcNQ" name="closeMenus" visibility="private" method="_WdWAFlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7191IiEeibjuLm5_lcNQ">
                    <body>Trivial handler to allow the server to signal to the client&#xD;
     * that an offer that caused a popup (for example, a native demand&#xD;
     * or diplomacy proposal) has not been answered quickly enough and&#xD;
     * that the offering player has assumed this player has&#xD;
     * refused-by-inaction, and therefore, the popup needs to be&#xD;
     * closed.&#xD;
     *&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ5qg1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZyVwFIiEeibjuLm5_lcNQ" name="InGameInputHandler" method="_WdTj1FIiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_WZyVwlIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_WZyVw1IiEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd7O6VIiEeibjuLm5_lcNQ">
                    <body>The constructor to use.&#xD;
     *&#xD;
     * @param freeColClient The &lt;code>FreeColClient&lt;/code> for the game.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZyVwVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZyVxFIiEeibjuLm5_lcNQ" type="_Vx4oQFIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZy80FIiEeibjuLm5_lcNQ" name="invokeAndWait" visibility="private" method="_WdUK4lIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O61IiEeibjuLm5_lcNQ">
                    <body>Shorthand to run in the EDT and wait.&#xD;
     *&#xD;
     * @param runnable The &lt;code>Runnable&lt;/code> to run.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZy80VIiEeibjuLm5_lcNQ" name="runnable" type="_WZxHoVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZy80lIiEeibjuLm5_lcNQ" name="invokeLater" visibility="private" method="_WdUK5FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O7FIiEeibjuLm5_lcNQ">
                    <body>Shorthand to run in the EDT eventually.&#xD;
     *&#xD;
     * @param runnable The &lt;code>Runnable&lt;/code> to run.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZy801IiEeibjuLm5_lcNQ" name="runnable" type="_WZxHoVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZzj4FIiEeibjuLm5_lcNQ" name="getIntegerAttribute" visibility="private" isStatic="true" method="_WdUx8FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O7VIiEeibjuLm5_lcNQ">
                    <body>Get the integer value of an element attribute.&#xD;
     *&#xD;
     * @param element The &lt;code>Element&lt;/code> to query.&#xD;
     * @param attrib The attribute to use.&#xD;
     * @return The integer value of the attribute, or&#xD;
     *     Integer.MIN_VALUE on failure.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZzj4VIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZzj4lIiEeibjuLm5_lcNQ" name="attrib">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZzj41IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ0K8FIiEeibjuLm5_lcNQ" name="selectElement" visibility="private" isStatic="true" method="_WdUx9FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7O7lIiEeibjuLm5_lcNQ">
                    <body>Select a child element with the given object identifier from a&#xD;
     * parent element.&#xD;
     *&#xD;
     * @param parent The parent &lt;code>Element&lt;/code>.&#xD;
     * @param key The key to search for.&#xD;
     * @return An &lt;code>Element&lt;/code> with matching key,&#xD;
     *     or null if none found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ0K8VIiEeibjuLm5_lcNQ" name="parent" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ0K8lIiEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZ0K81IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ0yAFIiEeibjuLm5_lcNQ" name="selectUnitFromElement" visibility="private" isStatic="true" method="_WdUx-FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd718FIiEeibjuLm5_lcNQ">
                    <body>Sometimes units appear which the client does not know about,&#xD;
     * and are passed in as the children of the parent element.&#xD;
     * Worse, if their location is a Unit, that unit has to be passed in too.&#xD;
     * Pull a unit out of the children by id.&#xD;
     *&#xD;
     * @param game The &lt;code>Game&lt;/code> to add the unit to.&#xD;
     * @param element The &lt;code>Element&lt;/code> to find a unit in.&#xD;
     * @param id The object identifier of the unit to find.&#xD;
     * @return A unit or null if none found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ0yAVIiEeibjuLm5_lcNQ" name="game" type="_WWPSgVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ0yAlIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ0yA1IiEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WZ0yBFIiEeibjuLm5_lcNQ" type="_WWRuwVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ1ZEFIiEeibjuLm5_lcNQ" name="handle" method="_WdUx_VIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WZ1ZEVIiEeibjuLm5_lcNQ" name="connection" type="_WWSV0FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ1ZElIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ2AIFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ2nMlIiEeibjuLm5_lcNQ" name="addObject" visibility="private" method="_WdVZAFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd718VIiEeibjuLm5_lcNQ">
                    <body>Add the objects which are the children of this Element.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ2nM1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ2nNFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ3OQFIiEeibjuLm5_lcNQ" name="addPlayer" visibility="private" method="_WdVZA1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd718lIiEeibjuLm5_lcNQ">
                    <body>Handle an &quot;addPlayer&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ3OQVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ31UFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ31UVIiEeibjuLm5_lcNQ" name="animateAttack" visibility="private" method="_WdVZBlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd7181IiEeibjuLm5_lcNQ">
                    <body>Handle an &quot;animateAttack&quot;-message.  This only performs animation, if&#xD;
     * required.  It does not actually perform any attacks.&#xD;
     *&#xD;
     * @param element An element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds attributes for the old and new tiles and&#xD;
     *     an element for the unit that is moving (which are used&#xD;
     *     solely to operate the animation).&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ31UlIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ4cYFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ4cYVIiEeibjuLm5_lcNQ" name="animateMove" visibility="private" method="_WdVZCVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd719FIiEeibjuLm5_lcNQ">
                    <body>Handle an &quot;animateMove&quot;-message.  This only performs&#xD;
     * animation, if required.  It does not actually change unit&#xD;
     * positions, which happens in an &quot;update&quot;.&#xD;
     *&#xD;
     * @param element An element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds attributes for the old and new tiles and&#xD;
     *     an element for the unit that is moving (which are used&#xD;
     *     solely to operate the animation).&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ4cYlIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ4cY1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ5DcFIiEeibjuLm5_lcNQ" name="chat" visibility="private" method="_WdWAEFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd719VIiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;chat&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ5DcVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ5DclIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ5qgFIiEeibjuLm5_lcNQ" name="chooseFoundingFather" visibility="private" method="_WdWAE1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd719lIiEeibjuLm5_lcNQ">
                    <body>Handle an &quot;chooseFoundingFather&quot;-request.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.  The choice is returned asynchronously.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ5qgVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ5qglIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ6RkFIiEeibjuLm5_lcNQ" name="diplomacy" visibility="private" method="_WdWAGFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd71-FIiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;diplomacy&quot;-request.  If the message informs of an&#xD;
     * acceptance or rejection then display the result and return&#xD;
     * null.  If the message is a proposal, then ask the user about&#xD;
     * it and return the response with appropriate response set.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) containing a &quot;diplomacy&quot;-message.&#xD;
     * @return A diplomacy response, or null if none required.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ6RkVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ6RklIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ6Rk1IiEeibjuLm5_lcNQ" name="disposeUnits" visibility="private" method="_WdWnIFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd71-VIiEeibjuLm5_lcNQ">
                    <body>Disposes of the &lt;code>Unit&lt;/code>s which are the children of this&#xD;
     * Element.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ64oFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ64oVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ64olIiEeibjuLm5_lcNQ" name="error" visibility="private" method="_WdXOMFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd71-lIiEeibjuLm5_lcNQ">
                    <body>Handle an &quot;error&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ64o1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ64pFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ7fsFIiEeibjuLm5_lcNQ" name="featureChange" visibility="private" method="_WdXOM1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd71-1IiEeibjuLm5_lcNQ">
                    <body>Adds a feature to or removes a feature from a FreeColGameObject.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ7fsVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ7fslIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ8GwFIiEeibjuLm5_lcNQ" name="firstContact" visibility="private" method="_WdXONlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd71_FIiEeibjuLm5_lcNQ">
                    <body>Handle a first contact with a native nation.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ8GwVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ8GwlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ8Gw1IiEeibjuLm5_lcNQ" name="fountainOfYouth" visibility="private" method="_WdX1QFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd71_VIiEeibjuLm5_lcNQ">
                    <body>Ask the player to choose migrants from a fountain of youth event.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ8GxFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ8GxVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ8t0FIiEeibjuLm5_lcNQ" name="gameEnded" visibility="private" method="_WdX1Q1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd8dAFIiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;gameEnded&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ8t0VIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ8t0lIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ9U4FIiEeibjuLm5_lcNQ" name="indianDemand" visibility="private" method="_WdX1RlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd8dAVIiEeibjuLm5_lcNQ">
                    <body>Handle an &quot;indianDemand&quot;-request.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return An &lt;code>IndianDemand&lt;/code> message containing the response,&#xD;
     *     or null on error.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ9U4VIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ9U4lIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ9U41IiEeibjuLm5_lcNQ" name="lootCargo" visibility="private" method="_WdX1SVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd8dAlIiEeibjuLm5_lcNQ">
                    <body>Ask the player to choose something to loot.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.  The choice is returned asynchronously.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ978FIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ978VIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ978lIiEeibjuLm5_lcNQ" name="monarchAction" visibility="private" method="_WdYcUFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd8dA1IiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;monarchAction&quot;-request.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.  The response is returned asynchronously.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ9781IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ-jAFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ-jAVIiEeibjuLm5_lcNQ" name="multiple" visibility="private" method="_WdYcU1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd8dBFIiEeibjuLm5_lcNQ">
                    <body>Handle all the children of this element.&#xD;
     *&#xD;
     * @param connection The &lt;code>Connection&lt;/code> the element arrived on.&#xD;
     * @param element The &lt;code>Element&lt;/code> to process.&#xD;
     * @return An &lt;code>Element&lt;/code> containing the response/s.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ-jAlIiEeibjuLm5_lcNQ" name="connection" type="_WWSV0FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ-jA1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ_KEFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ_KEVIiEeibjuLm5_lcNQ" name="newLandName" visibility="private" method="_WdYcV1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd8dBVIiEeibjuLm5_lcNQ">
                    <body>Ask the player to name the new land.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.  The name is returned asynchronously.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ_KElIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ_KE1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WZ_xIFIiEeibjuLm5_lcNQ" name="newRegionName" visibility="private" method="_WdYcWlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd8dBlIiEeibjuLm5_lcNQ">
                    <body>Ask the player to name a new region.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.  The name is returned asynchronously.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WZ_xIVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WZ_xIlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaAYMFIiEeibjuLm5_lcNQ" name="newTurn" visibility="private" method="_WdYcXVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd8dB1IiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;newTurn&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree)&#xD;
     *            that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaAYMVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaAYMlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaA_QFIiEeibjuLm5_lcNQ" name="reconnect" visibility="private" method="_WdZDYFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WaA_QVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaA_QlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaC0cFIiEeibjuLm5_lcNQ" name="remove" visibility="private" method="_WdZDY1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd8dCVIiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;remove&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaC0cVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaC0clIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaDbgFIiEeibjuLm5_lcNQ" name="setAI" visibility="private" method="_WdZDZlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd8dClIiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;setAI&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaDbgVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaDbglIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaECkFIiEeibjuLm5_lcNQ" name="setCurrentPlayer" visibility="private" method="_WdZDaVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9EEFIiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;setCurrentPlayer&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaECkVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaECklIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaEpoFIiEeibjuLm5_lcNQ" name="setDead" visibility="private" method="_WdZqcFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9EEVIiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;setDead&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaEpoVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaEpolIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaFQsFIiEeibjuLm5_lcNQ" name="setStance" visibility="private" method="_WdZqc1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9EElIiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;setStance&quot;-request.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaFQsVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaFQslIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaF3wFIiEeibjuLm5_lcNQ" name="spyResult" visibility="private" method="_WdZqdlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9EE1IiEeibjuLm5_lcNQ">
                    <body>Handle a &quot;spyResult&quot; message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaF3wVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaF3wlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaF3w1IiEeibjuLm5_lcNQ" name="update" visibility="private" method="_WdZqeVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9EFFIiEeibjuLm5_lcNQ">
                    <body>Handle an &quot;update&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaF3xFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaGe0FIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_VyNYYFIiEeibjuLm5_lcNQ" name="InputHandler" isAbstract="true">
                <ownedComment xmi:id="_Wd9EFVIiEeibjuLm5_lcNQ">
                  <body>Provides common methods for input handlers.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_Wc1pwFIiEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_WWE6cVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeblM1IiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wc2Q0FIiEeibjuLm5_lcNQ" value="Logger.getLogger(InputHandler.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Wc2Q0VIiEeibjuLm5_lcNQ" name="freeColClient" visibility="protected" isLeaf="true" type="_WWJL4VIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WecMQVIiEeibjuLm5_lcNQ"/>
                <interfaceRealization xmi:id="_WaHs8FIiEeibjuLm5_lcNQ" client="_VyNYYFIiEeibjuLm5_lcNQ" supplier="_WXcMYFIiEeibjuLm5_lcNQ" contract="_WXcMYFIiEeibjuLm5_lcNQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wda4kVIiEeibjuLm5_lcNQ" name="InputHandler" specification="_WaIUAFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wda4klIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wda4k1IiEeibjuLm5_lcNQ" type="_VyNYYFIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>this.freeColClient = freeColClient;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wda4lFIiEeibjuLm5_lcNQ" name="getGUI" specification="_VyN_cFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wda4lVIiEeibjuLm5_lcNQ" type="_WWKaAVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return freeColClient.getGUI();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wda4llIiEeibjuLm5_lcNQ" name="getGame" specification="_VyOmgFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wda4l1IiEeibjuLm5_lcNQ" type="_WWPSgVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return freeColClient.getGame();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wda4mFIiEeibjuLm5_lcNQ" name="disconnect" specification="_WaKwQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wda4mVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wda4mlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>// Updating the GUI should always be done in the EDT:&#xD;
     javax.swing.SwingUtilities.invokeLater(() -> {&#xD;
             if (getGUI().containsInGameComponents()) {&#xD;
                 if (freeColClient.getFreeColServer() == null) {&#xD;
                     getGUI().returnToTitle();&#xD;
                 } else {&#xD;
                     getGUI().removeInGameComponents();&#xD;
                 }&#xD;
             }&#xD;
         });&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wda4m1IiEeibjuLm5_lcNQ" name="unknown" specification="_WaLXUFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wda4nFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wda4nVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>logger.warning(&quot;Unknown message type: &quot; + element.getTagName());&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_VyN_cFIiEeibjuLm5_lcNQ" name="getGUI" visibility="protected" method="_Wda4lFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9EF1IiEeibjuLm5_lcNQ">
                    <body>Gets the GUI.&#xD;
     *&#xD;
     * @return The GUI.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaI7ElIiEeibjuLm5_lcNQ" type="_WWKaAVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_VyOmgFIiEeibjuLm5_lcNQ" name="getGame" visibility="protected" method="_Wda4llIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9EGFIiEeibjuLm5_lcNQ">
                    <body>Gets the Game.&#xD;
     *&#xD;
     * @return The &lt;code>Game&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaI7E1IiEeibjuLm5_lcNQ" type="_WWPSgVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaIUAFIiEeibjuLm5_lcNQ" name="InputHandler" method="_Wda4kVIiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_WaIUAlIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_WaI7EFIiEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd9EFlIiEeibjuLm5_lcNQ">
                    <body>The constructor to use.&#xD;
     *&#xD;
     * @param freeColClient The &lt;code>FreeColClient&lt;/code> for the game.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaIUAVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaI7EVIiEeibjuLm5_lcNQ" type="_VyNYYFIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaJiIFIiEeibjuLm5_lcNQ" name="handle" isAbstract="true">
                  <ownedParameter xmi:id="_WaJiIVIiEeibjuLm5_lcNQ" name="connection" type="_WWSV0FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaJiIlIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaJiI1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaKwQFIiEeibjuLm5_lcNQ" name="disconnect" visibility="protected" method="_Wda4mFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9EGVIiEeibjuLm5_lcNQ">
                    <body>Handles a &quot;disconnect&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaKwQVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaKwQlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaLXUFIiEeibjuLm5_lcNQ" name="unknown" visibility="protected" method="_Wda4m1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9EGlIiEeibjuLm5_lcNQ">
                    <body>Handles a message of unknown type.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaLXUVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaLXUlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_VyRp0FIiEeibjuLm5_lcNQ" name="MapEditorController" isLeaf="true">
                <ownedComment xmi:id="_Wd9EG1IiEeibjuLm5_lcNQ">
                  <body>The map editor controller.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_Wc3e8FIiEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_WWE6cVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeczUVIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wc4GAFIiEeibjuLm5_lcNQ" value="Logger.getLogger(MapEditorController.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Wc4tEVIiEeibjuLm5_lcNQ" name="freeColClient" visibility="private" isLeaf="true" type="_WWJL4VIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WedaYVIiEeibjuLm5_lcNQ"/>
                <ownedAttribute xmi:id="_Wc5UIFIiEeibjuLm5_lcNQ" name="gui" visibility="private" isLeaf="true" type="_WWKaAVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeeBcVIiEeibjuLm5_lcNQ"/>
                <ownedAttribute xmi:id="_Wc5UIlIiEeibjuLm5_lcNQ" name="currentMapTransform" visibility="private" type="_VyS38FIiEeibjuLm5_lcNQ" association="_WeeogVIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wc5UI1IiEeibjuLm5_lcNQ" value="null"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdbfoFIiEeibjuLm5_lcNQ" name="MapEditorController" specification="_WaNMgFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdbfoVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdbfolIiEeibjuLm5_lcNQ" type="_VyRp0FIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>this.freeColClient = freeColClient;&#xD;
     this.gui = freeColClient.getGUI();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdbfo1IiEeibjuLm5_lcNQ" name="startMapEditor" specification="_VyUGEFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>try {&#xD;
         Specification specification = getDefaultSpecification();&#xD;
         freeColClient.setMapEditor(true);&#xD;
         final FreeColServer freeColServer&#xD;
             = new FreeColServer(false, false, specification, 0, null);&#xD;
         freeColClient.setFreeColServer(freeColServer);&#xD;
         Game game = freeColServer.getGame();&#xD;
         requireNativeNations(game);&#xD;
         freeColClient.setGame(game);&#xD;
         freeColClient.setMyPlayer(null);&#xD;
         freeColClient.getSoundController().playSound(null);&#xD;
&#xD;
         gui.closeMainPanel();&#xD;
         gui.closeMenus();&#xD;
         freeColClient.setInGame(true);&#xD;
         gui.changeViewMode(GUI.VIEW_TERRAIN_MODE);&#xD;
         gui.startMapEditorGUI();&#xD;
     } catch (IOException e) {&#xD;
         gui.showErrorMessage(&quot;server.initialize&quot;);&#xD;
         return;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdbfpFIiEeibjuLm5_lcNQ" name="getDefaultSpecification" specification="_VyUGEVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdbfpVIiEeibjuLm5_lcNQ" type="_WWP5kVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return FreeCol.loadSpecification(FreeCol.getTCFile(), &#xD;
         FreeCol.getAdvantages(), FreeCol.getDifficulty());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdbfplIiEeibjuLm5_lcNQ" name="setMapTransform" specification="_WXkvQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdbfp1IiEeibjuLm5_lcNQ" name="mt" type="_VyS38FIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>currentMapTransform = mt;&#xD;
     gui.updateMapControls();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdbfqFIiEeibjuLm5_lcNQ" name="getMapTransform" specification="_VyUtIFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdbfqVIiEeibjuLm5_lcNQ" type="_VyS38FIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return currentMapTransform;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdcGsFIiEeibjuLm5_lcNQ" name="transform" specification="_WaOaoFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdcGsVIiEeibjuLm5_lcNQ" name="t" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>if (currentMapTransform != null) {&#xD;
         currentMapTransform.transform(t);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdcGslIiEeibjuLm5_lcNQ" name="newMap" specification="_VyVUMFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>final Game game = freeColClient.getGame();&#xD;
     final Specification spec = game.getSpecification();&#xD;
&#xD;
     gui.removeInGameComponents();&#xD;
     OptionGroup mgo = gui.showMapGeneratorOptionsDialog(true);&#xD;
     if (mgo == null) return;&#xD;
     game.setMapGeneratorOptions(mgo);&#xD;
     Map map = freeColClient.getFreeColServer().getMapGenerator()&#xD;
         .createMap(new LogBuilder(-1));&#xD;
     requireNativeNations(game);&#xD;
     gui.setFocus(game.getMap().getTile(1,1));&#xD;
     gui.updateMenuBar();&#xD;
     gui.refresh();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdcGs1IiEeibjuLm5_lcNQ" name="saveGame" specification="_VyVUMVIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>File file = gui.showSaveDialog(FreeColDirectories.getSaveDirectory(),&#xD;
                                    FreeColDirectories.MAP_FILE_NAME);&#xD;
     if (file != null) saveGame(file);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdcGtFIiEeibjuLm5_lcNQ" name="saveGame" specification="_WaOaolIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdcGtVIiEeibjuLm5_lcNQ" name="file" type="_WWAB8FIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_WdcGtlIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WdcGt1IiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Game game = freeColClient.getGame();&#xD;
     Map map = game.getMap();&#xD;
     map.resetContiguity();&#xD;
     map.resetHighSeasCount();&#xD;
     map.resetLayers();&#xD;
&#xD;
     gui.showStatusPanel(Messages.message(&quot;status.savingGame&quot;));&#xD;
     Thread t = new Thread(FreeCol.CLIENT_THREAD+&quot;Saving Map&quot;) {&#xD;
             @Override&#xD;
             public void run() {&#xD;
                 try {&#xD;
                     BufferedImage thumb = gui.createMiniMapThumbNail();&#xD;
                     freeColClient.getFreeColServer()&#xD;
                         .saveMapEditorGame(file, thumb);&#xD;
                     SwingUtilities.invokeLater(() -> {&#xD;
                             gui.closeStatusPanel();&#xD;
                             gui.requestFocusInWindow();&#xD;
                         });&#xD;
                 } catch (IOException e) {&#xD;
                     SwingUtilities.invokeLater(() -> {&#xD;
                             gui.showErrorMessage(FreeCol.badSave(file));&#xD;
                         });&#xD;
                 }&#xD;
             }&#xD;
         };&#xD;
     t.start();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdcGuFIiEeibjuLm5_lcNQ" name="loadGame" specification="_VyV7QFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>File file = gui.showLoadSaveFileDialog();&#xD;
     if (file != null) loadGame(file);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdcGuVIiEeibjuLm5_lcNQ" name="requireNativeNations" specification="_WaPBslIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdcGulIiEeibjuLm5_lcNQ" name="game" type="_WWPSgVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>final Specification spec = game.getSpecification();&#xD;
     for (Nation n : spec.getIndianNations()) {&#xD;
         Player p = game.getPlayerByNation(n);&#xD;
         if (p == null) {&#xD;
             p = new ServerPlayer(game, false, n, null, null);&#xD;
             game.addPlayer(p);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdcGu1IiEeibjuLm5_lcNQ" name="loadGame" specification="_WaPBtFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdcGvFIiEeibjuLm5_lcNQ" name="file" type="_WWAB8FIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>final File theFile = file;&#xD;
&#xD;
     freeColClient.setMapEditor(true);&#xD;
&#xD;
     class ErrorJob implements Runnable {&#xD;
         private final StringTemplate template;&#xD;
&#xD;
         ErrorJob(StringTemplate template) {&#xD;
             this.template = template;&#xD;
         }&#xD;
&#xD;
         @Override&#xD;
         public void run() {&#xD;
             gui.closeMenus();&#xD;
             gui.showErrorMessage(template);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     gui.showStatusPanel(Messages.message(&quot;status.loadingGame&quot;));&#xD;
&#xD;
     Runnable loadGameJob = () -> {&#xD;
         FreeColServer freeColServer = freeColClient.getFreeColServer();&#xD;
         try {&#xD;
             Specification spec = getDefaultSpecification();&#xD;
             Game game = FreeColServer.readGame(new FreeColSavegameFile(theFile),&#xD;
                                                spec, freeColServer);&#xD;
             freeColClient.setGame(game);&#xD;
             requireNativeNations(game);&#xD;
             SwingUtilities.invokeLater(() -> {&#xD;
                     gui.closeStatusPanel();&#xD;
                     gui.setFocus(freeColClient.getGame().getMap().getTile(1,1));&#xD;
                     gui.updateMenuBar();&#xD;
                     gui.refresh();&#xD;
                 });&#xD;
         } catch (FreeColException e) {&#xD;
             reloadMainPanel();&#xD;
             SwingUtilities.invokeLater(new ErrorJob(StringTemplate.name(e.getMessage())));&#xD;
         } catch (FileNotFoundException e) {&#xD;
             reloadMainPanel();&#xD;
             SwingUtilities.invokeLater(new ErrorJob(StringTemplate.key(&quot;server.fileNotFound&quot;)));&#xD;
         } catch (IOException e) {&#xD;
             reloadMainPanel();&#xD;
             SwingUtilities.invokeLater(new ErrorJob(StringTemplate.key(&quot;server.initialize&quot;)));&#xD;
         } catch (XMLStreamException e) {&#xD;
             reloadMainPanel();&#xD;
             SwingUtilities.invokeLater(new ErrorJob(FreeCol.badLoad(theFile)));&#xD;
         }&#xD;
     };&#xD;
     freeColClient.setWork(loadGameJob);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdctwFIiEeibjuLm5_lcNQ" name="reloadMainPanel" specification="_VyV7QVIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>SwingUtilities.invokeLater(() -> {&#xD;
             gui.closeMainPanel();&#xD;
             gui.showMainPanel(null);&#xD;
             freeColClient.getSoundController()&#xD;
                 .playSound(&quot;sound.intro.general&quot;);&#xD;
         });&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_VyUGEFIiEeibjuLm5_lcNQ" name="startMapEditor" method="_Wdbfo1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rI1IiEeibjuLm5_lcNQ">
                    <body>Enters map editor modus.&#xD;
     *&#xD;
     * FIXME: The TC and difficulty level can now be set at the&#xD;
     * command line, but we should do better.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_VyUGEVIiEeibjuLm5_lcNQ" name="getDefaultSpecification" method="_WdbfpFIiEeibjuLm5_lcNQ" raisedException="_WWBQEVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rJFIiEeibjuLm5_lcNQ">
                    <body>Get the default specification from the default TC.&#xD;
     *&#xD;
     * @return A &lt;code>Specification&lt;/code> to use in the map editor.&#xD;
     * @throws IOException on failure to find the spec.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaNzkFIiEeibjuLm5_lcNQ" type="_WWP5kVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_VyUtIFIiEeibjuLm5_lcNQ" name="getMapTransform" method="_WdbfqFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rJlIiEeibjuLm5_lcNQ">
                    <body>Gets the current &lt;code>MapTransform&lt;/code>.&#xD;
     * @return The transform that should be applied to a&#xD;
     *      &lt;code>Tile&lt;/code> that is clicked on the map.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WXlWUVIiEeibjuLm5_lcNQ" type="_VyS38FIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_VyVUMFIiEeibjuLm5_lcNQ" name="newMap" method="_WdcGslIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rKFIiEeibjuLm5_lcNQ">
                    <body>Creates a new map using a &lt;code>MapGenerator&lt;/code>. A panel&#xD;
     * with the &lt;code>MapGeneratorOptions&lt;/code> is first displayed.&#xD;
     *&#xD;
     * @see MapGenerator&#xD;
     * @see MapGeneratorOptions</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_VyVUMVIiEeibjuLm5_lcNQ" name="saveGame" method="_WdcGs1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rKVIiEeibjuLm5_lcNQ">
                    <body>Opens a dialog where the user should specify the filename&#xD;
     * and saves the game.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_VyV7QFIiEeibjuLm5_lcNQ" name="loadGame" method="_WdcGuFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rK1IiEeibjuLm5_lcNQ">
                    <body>Opens a dialog where the user should specify the filename and loads the&#xD;
     * game.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_VyV7QVIiEeibjuLm5_lcNQ" name="reloadMainPanel" visibility="private" method="_WdctwFIiEeibjuLm5_lcNQ"/>
                <ownedOperation xmi:id="_WXkvQFIiEeibjuLm5_lcNQ" name="setMapTransform" method="_WdbfplIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rJVIiEeibjuLm5_lcNQ">
                    <body>Sets the currently chosen &lt;code>MapTransform&lt;/code>.&#xD;
     * @param mt The transform that should be applied to a&#xD;
     *      &lt;code>Tile&lt;/code> that is clicked on the map.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WXlWUFIiEeibjuLm5_lcNQ" name="mt" type="_VyS38FIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaNMgFIiEeibjuLm5_lcNQ" name="MapEditorController" method="_WdbfoFIiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_WaNMglIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_WaNMg1IiEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd9rIlIiEeibjuLm5_lcNQ">
                    <body>Creates a new &lt;code>MapEditorController&lt;/code>.&#xD;
     *&#xD;
     * @param freeColClient The &lt;code>FreeColClient&lt;/code> for the game.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaNMgVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaNMhFIiEeibjuLm5_lcNQ" type="_VyRp0FIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaOaoFIiEeibjuLm5_lcNQ" name="transform" method="_WdcGsFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rJ1IiEeibjuLm5_lcNQ">
                    <body>Transforms the given &lt;code>Tile&lt;/code> using the&#xD;
     * {@link #getMapTransform() current &lt;code>MapTransform&lt;/code>}.&#xD;
     *&#xD;
     * @param t The &lt;code>Tile&lt;/code> to be modified.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaOaoVIiEeibjuLm5_lcNQ" name="t" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaOaolIiEeibjuLm5_lcNQ" name="saveGame" method="_WdcGtFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rKlIiEeibjuLm5_lcNQ">
                    <body>Saves the game to the given file.&#xD;
     *&#xD;
     * @param file The &lt;code>File&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaOao1IiEeibjuLm5_lcNQ" name="file" type="_WWAB8FIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_WaPBsFIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WaPBsVIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WaPBslIiEeibjuLm5_lcNQ" name="requireNativeNations" method="_WdcGuVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rLFIiEeibjuLm5_lcNQ">
                    <body>Require all native nation players to be present in a game.&#xD;
     *&#xD;
     * @param game The &lt;code>Game&lt;/code> to add native nations to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaPBs1IiEeibjuLm5_lcNQ" name="game" type="_WWPSgVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaPBtFIiEeibjuLm5_lcNQ" name="loadGame" method="_WdcGu1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd9rLVIiEeibjuLm5_lcNQ">
                    <body>Loads a game from the given file.&#xD;
     *&#xD;
     * @param file The &lt;code>File&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaPowFIiEeibjuLm5_lcNQ" name="file" type="_WWAB8FIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Interface" xmi:id="_VyS38FIiEeibjuLm5_lcNQ" name="IMapTransform">
                  <ownedOperation xmi:id="_WaMlcFIiEeibjuLm5_lcNQ" name="transform" isAbstract="true">
                    <ownedComment xmi:id="_Wd9rIVIiEeibjuLm5_lcNQ">
                      <body>Applies this transformation to the given tile.&#xD;
         * @param t The &lt;code>Tile&lt;/code> to be transformed,</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_WaMlcVIiEeibjuLm5_lcNQ" name="t" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_VyaMsFIiEeibjuLm5_lcNQ" name="InGameController" isLeaf="true">
                <ownedComment xmi:id="_Wd-SMFIiEeibjuLm5_lcNQ">
                  <body>The controller that will be used while the game is played.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_Wc6iQFIiEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_WWE6cVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WefPkVIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wc6iQVIiEeibjuLm5_lcNQ" value="Logger.getLogger(InGameController.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Wc7JUFIiEeibjuLm5_lcNQ" name="UNIT_LAST_MOVE_DELAY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wc7JUVIiEeibjuLm5_lcNQ" value="300"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Wc7JUlIiEeibjuLm5_lcNQ" name="abortTrade" visibility="private" isLeaf="true" isStatic="true" type="_WWQgoVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_Wef2oVIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wc7JU1IiEeibjuLm5_lcNQ" value="StringTemplate.template(&quot;&quot;)"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Wc7JVFIiEeibjuLm5_lcNQ" name="freeColClient" visibility="private" isLeaf="true" type="_WWJL4VIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WegdsFIiEeibjuLm5_lcNQ"/>
                <ownedAttribute xmi:id="_Wc7wYVIiEeibjuLm5_lcNQ" name="gui" visibility="private" isLeaf="true" type="_WWKaAVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WehEwFIiEeibjuLm5_lcNQ"/>
                <ownedAttribute xmi:id="_Wc8XcVIiEeibjuLm5_lcNQ" name="moveMode" visibility="private" type="_VymZ8FIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wc8XclIiEeibjuLm5_lcNQ" value="MoveMode.NEXT_ACTIVE_UNIT"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Wc8-gFIiEeibjuLm5_lcNQ" name="messagesToIgnore" visibility="private" isLeaf="true" type="_WXq14VIiEeibjuLm5_lcNQ" isReadOnly="true" association="_Wehr0FIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wc9lkFIiEeibjuLm5_lcNQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_Wc9lklIiEeibjuLm5_lcNQ" name="turnReportMessages" visibility="private" isLeaf="true" type="_WWr-cVIiEeibjuLm5_lcNQ" isOrdered="true" isReadOnly="true" association="_Wehr01IiEeibjuLm5_lcNQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Wc9lk1IiEeibjuLm5_lcNQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Wc-MoFIiEeibjuLm5_lcNQ" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_WaSsEFIiEeibjuLm5_lcNQ" client="_VyaMsFIiEeibjuLm5_lcNQ" supplier="_WYEegVIiEeibjuLm5_lcNQ" contract="_WYEegVIiEeibjuLm5_lcNQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WddU0FIiEeibjuLm5_lcNQ" name="InGameController" specification="_WaT6MFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WddU0VIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WddU0lIiEeibjuLm5_lcNQ" type="_VyaMsFIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>this.freeColClient = freeColClient;&#xD;
     this.gui = freeColClient.getGUI();&#xD;
&#xD;
     // FIXME: fetch value of lastSaveGameFile from a persistent&#xD;
     // client value&#xD;
     //   lastSaveGameFile = new File(freeColClient.getClientOptions().getString(null));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdd74FIiEeibjuLm5_lcNQ" name="askServer" specification="_VyoPIFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdd74VIiEeibjuLm5_lcNQ" type="_WYFFkVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return freeColClient.askServer();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdd74lIiEeibjuLm5_lcNQ" name="sound" specification="_Vyo2MFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdd741IiEeibjuLm5_lcNQ" name="soundKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>freeColClient.getSoundController().playSound(soundKey);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdd75FIiEeibjuLm5_lcNQ" name="getSpecification" specification="_Vyo2MlIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdd75VIiEeibjuLm5_lcNQ" type="_WWP5kVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return freeColClient.getGame().getSpecification();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdd75lIiEeibjuLm5_lcNQ" name="requireOurTurn" specification="_VypdQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdd751IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (freeColClient.currentPlayerIsMyPlayer()) return true;&#xD;
     if (freeColClient.isInGame()) {&#xD;
         gui.showInformationMessage(&quot;info.notYourTurn&quot;);&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdei8FIiEeibjuLm5_lcNQ" name="colonyPanel" specification="_WaVIUFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdei8VIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdei8lIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>gui.showColonyPanel(colony, (unit.isCarrier()) ? unit : null);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdei81IiEeibjuLm5_lcNQ" name="getSettlementAt" specification="_WaVvYFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdei9FIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdei9VIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdei9lIiEeibjuLm5_lcNQ" type="_WWvBwVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return tile.getNeighbourOrNull(direction).getSettlement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdei91IiEeibjuLm5_lcNQ" name="getNationAt" specification="_WaWWcFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdei-FIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdei-VIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdei-lIiEeibjuLm5_lcNQ" type="_WWQgoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Tile newTile = tile.getNeighbourOrNull(direction);&#xD;
     Player player = null;&#xD;
     if (newTile.hasSettlement()) {&#xD;
         player = newTile.getSettlement().getOwner();&#xD;
     } else if (newTile.getFirstUnit() != null) {&#xD;
         player = newTile.getFirstUnit().getOwner();&#xD;
     } else { // should not happen&#xD;
         player = freeColClient.getGame().getUnknownEnemy();&#xD;
     }&#xD;
     return player.getNationLabel();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdei-1IiEeibjuLm5_lcNQ" name="updateGUI" specification="_WaW9gFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdei_FIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>if (displayModelMessages(false, false)) {&#xD;
         ; // If messages are displayed they probably refer to the&#xD;
           // current unit, so do not update it.&#xD;
     } else if (updateActiveUnit(tile)) {&#xD;
         ; // setActiveUnit will update the menu bar&#xD;
     } else {&#xD;
         gui.updateMapControls();&#xD;
         gui.updateMenuBar();&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdei_VIiEeibjuLm5_lcNQ" name="askAssignTradeRoute" specification="_WaW9glIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdei_lIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdei_1IiEeibjuLm5_lcNQ" name="tradeRoute" type="_WWvo0VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdejAFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (tradeRoute == unit.getTradeRoute()) return true;&#xD;
&#xD;
     if (tradeRoute != null &amp;&amp; unit.getTradeRoute() != null) {&#xD;
         if (!gui.confirmClearTradeRoute(unit)) return false;&#xD;
     }&#xD;
&#xD;
     return askServer().assignTradeRoute(unit, tradeRoute)&#xD;
         &amp;&amp; unit.getTradeRoute() == tradeRoute;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdfKAFIiEeibjuLm5_lcNQ" name="askClaimTile" specification="_WacdEFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdfKAVIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfKAlIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfKA1IiEeibjuLm5_lcNQ" name="claimant" type="_WWme4FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfKBFIiEeibjuLm5_lcNQ" name="price">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdfKBVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player owner = tile.getOwner();&#xD;
     if (price &lt; 0) { // not for sale&#xD;
         return false;&#xD;
     } else if (price > 0) { // for sale&#xD;
         ClaimAction act = gui.getClaimChoice(tile, player, price, owner);&#xD;
         if (act == null) return false; // Cancelled&#xD;
         switch (act) {&#xD;
         case ACCEPT: // accepted price&#xD;
             break;&#xD;
         case STEAL:&#xD;
             price = NetworkConstants.STEAL_LAND;&#xD;
             break;&#xD;
         default:&#xD;
             logger.warning(&quot;Claim dialog fail: &quot; + act);&#xD;
             return false;&#xD;
         }&#xD;
     } // else price == 0 and we can just proceed to claim&#xD;
&#xD;
     // Ask the server&#xD;
     return askServer().claimTile(tile, claimant, price)&#xD;
         &amp;&amp; player.owns(tile);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdfKBlIiEeibjuLm5_lcNQ" name="askClearGotoOrders" specification="_WavYAVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdfKB1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfKCFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!askAssignTradeRoute(unit, null)) return false;&#xD;
&#xD;
     if (unit.getDestination() == null) return true;&#xD;
&#xD;
     if (askSetDestination(unit, null)) {&#xD;
         gui.clearGotoPath();&#xD;
         return true;&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdfKCVIiEeibjuLm5_lcNQ" name="askEmbark" specification="_Wav_EVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdfKClIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfKC1IiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfKDFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>ColonyWas colonyWas = (unit.getColony() != null)&#xD;
         ? new ColonyWas(unit.getColony()) : null;&#xD;
     EuropeWas europeWas = (unit.isInEurope())&#xD;
         ? new EuropeWas(unit.getOwner().getEurope()) : null;&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     if (askServer().embark(unit, carrier, null)&#xD;
         &amp;&amp; unit.getLocation() == carrier) {&#xD;
         sound(&quot;sound.event.loadCargo&quot;);&#xD;
         unitWas.fireChanges();&#xD;
         if (colonyWas != null) colonyWas.fireChanges();&#xD;
         if (europeWas != null) europeWas.fireChanges();&#xD;
         return true;&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdfKDVIiEeibjuLm5_lcNQ" name="askEmigrate" specification="_WaxNMFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdfKDlIiEeibjuLm5_lcNQ" name="europe" type="_WXyxsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfKD1IiEeibjuLm5_lcNQ" name="slot">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdfKEFIiEeibjuLm5_lcNQ" type="_WWRuwVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>if (europe == null&#xD;
         || !MigrationType.validMigrantSlot(slot)) return null;&#xD;
&#xD;
     EuropeWas europeWas = new EuropeWas(europe);&#xD;
     Unit newUnit = null;&#xD;
     if (askServer().emigrate(slot)&#xD;
         &amp;&amp; (newUnit = europeWas.getNewUnit()) != null) {&#xD;
         europeWas.fireChanges();&#xD;
     }&#xD;
     return newUnit;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdfxEFIiEeibjuLm5_lcNQ" name="emigration" specification="_Wax0QFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdfxEVIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfxElIiEeibjuLm5_lcNQ" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdfxE1IiEeibjuLm5_lcNQ" name="fountainOfYouth">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Europe europe = player.getEurope();&#xD;
     if (europe == null) return;&#xD;
&#xD;
     for (; n > 0 || player.checkEmigrate() ; n--) {&#xD;
         if (!allSame(europe.getRecruitables())) {&#xD;
             final int nf = n;&#xD;
             gui.showEmigrationDialog(player, fountainOfYouth,&#xD;
                 (Integer value) -> { // Value is a valid slot&#xD;
                     emigrate(player,&#xD;
                         Europe.MigrationType.convertToMigrantSlot(value),&#xD;
                         nf-1, fountainOfYouth);&#xD;
                 });&#xD;
             return;&#xD;
         }&#xD;
         Unit u = askEmigrate(europe, Europe.MigrationType.getDefaultSlot());&#xD;
         if (u == null) break; // Give up on failure, try again next turn&#xD;
         player.addModelMessage(player.getEmigrationMessage(u));&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdfxFFIiEeibjuLm5_lcNQ" name="askLoadGoods" specification="_Wa03kFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdfxFVIiEeibjuLm5_lcNQ" name="loc" type="_WX3DIVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfxFlIiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfxF1IiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdfxGFIiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfxGVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>TradeLocation trl = carrier.getTradeLocation();&#xD;
     if (trl == null) return false;&#xD;
&#xD;
     // Size check, if there are spare holds they can be filled, but...&#xD;
     int loadable = carrier.getLoadableAmount(type);&#xD;
     if (amount > loadable) amount = loadable;&#xD;
&#xD;
     final Player player = carrier.getOwner();&#xD;
     final Market market = player.getMarket();&#xD;
     MarketWas marketWas = (market != null) ? new MarketWas(player) : null;&#xD;
&#xD;
     if (carrier.isInEurope()) {&#xD;
         // Are the goods boycotted?&#xD;
         if (!player.canTrade(type)) return false;&#xD;
&#xD;
         // Check that the purchase is funded.&#xD;
         if (!player.checkGold(market.getBidPrice(type, amount))) {&#xD;
             gui.showInformationMessage(&quot;info.notEnoughGold&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Try to purchase.&#xD;
     int oldAmount = carrier.getGoodsContainer().getGoodsCount(type);&#xD;
     if (askServer().loadGoods(loc, type, amount, carrier)&#xD;
         &amp;&amp; carrier.getGoodsContainer().getGoodsCount(type) != oldAmount) {&#xD;
         if (marketWas != null) marketWas.fireChanges(type, amount);&#xD;
         return true;&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdfxGlIiEeibjuLm5_lcNQ" name="askSetDestination" specification="_Wa2FsFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdfxG1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfxHFIiEeibjuLm5_lcNQ" name="destination" type="_WX3DIVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfxHVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return askServer().setDestination(unit, destination)&#xD;
         &amp;&amp; unit.getDestination() == destination;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdfxHlIiEeibjuLm5_lcNQ" name="askUnloadGoods" specification="_Wa364FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdfxH1IiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfxIFIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdfxIVIiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdfxIlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>// Do not check for trade location, unloading can include dumping&#xD;
     // which can happen anywhere&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     final Market market = player.getMarket();&#xD;
     MarketWas marketWas = (market != null) ? new MarketWas(player) : null;&#xD;
&#xD;
     int oldAmount = carrier.getGoodsContainer().getGoodsCount(type);&#xD;
     if (askServer().unloadGoods(type, amount, carrier)&#xD;
         &amp;&amp; carrier.getGoodsContainer().getGoodsCount(type) != oldAmount) {&#xD;
         if (marketWas != null) marketWas.fireChanges(type, -amount);&#xD;
         return true;&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdgYIFIiEeibjuLm5_lcNQ" name="getSaveGameString" specification="_Wa4h8FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdgYIVIiEeibjuLm5_lcNQ" name="game" type="_WWPSgVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdgYIlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player player = freeColClient.getMyPlayer();&#xD;
     final String gid = Integer.toHexString(game.getUUID().hashCode());&#xD;
     final Turn turn = game.getTurn();&#xD;
     return (/* player.getName() + &quot;_&quot; */ gid&#xD;
         + &quot;_&quot; + Messages.message(player.getNationLabel())&#xD;
         + &quot;_&quot; + turn.getSaveGameSuffix()&#xD;
         + &quot;.&quot; + FreeCol.FREECOL_SAVE_EXTENSION)&#xD;
         .replaceAll(&quot; &quot;, &quot;_&quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdgYI1IiEeibjuLm5_lcNQ" name="autoSaveGame" specification="_VysgkFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>final Game game = freeColClient.getGame();&#xD;
     if (game == null) return;&#xD;
&#xD;
     // unconditional save per round (fixed file &quot;last-turn&quot;)&#xD;
     final ClientOptions options = freeColClient.getClientOptions();&#xD;
     final String prefix = options.getText(ClientOptions.AUTO_SAVE_PREFIX);&#xD;
     final String lastTurnName = prefix + &quot;-&quot;&#xD;
         + options.getText(ClientOptions.LAST_TURN_NAME)&#xD;
         + &quot;.&quot; + FreeCol.FREECOL_SAVE_EXTENSION;&#xD;
     final String beforeLastTurnName = prefix + &quot;-&quot;&#xD;
         + options.getText(ClientOptions.BEFORE_LAST_TURN_NAME)&#xD;
         + &quot;.&quot; + FreeCol.FREECOL_SAVE_EXTENSION;&#xD;
     File autoSaveDir = FreeColDirectories.getAutosaveDirectory();&#xD;
     File lastTurnFile = new File(autoSaveDir, lastTurnName);&#xD;
     File beforeLastTurnFile = new File(autoSaveDir, beforeLastTurnName);&#xD;
     // if &quot;last-turn&quot; file exists, shift it to &quot;before-last-turn&quot; file&#xD;
     if (lastTurnFile.exists()) {&#xD;
         beforeLastTurnFile.delete();&#xD;
         lastTurnFile.renameTo(beforeLastTurnFile);&#xD;
     }&#xD;
     saveGame(lastTurnFile);&#xD;
&#xD;
     // conditional save after user-set period&#xD;
     int saveGamePeriod = options.getInteger(ClientOptions.AUTOSAVE_PERIOD);&#xD;
     int turnNumber = game.getTurn().getNumber();&#xD;
     if (saveGamePeriod >= 1 &amp;&amp; turnNumber % saveGamePeriod == 0) {&#xD;
         String fileName = prefix + &quot;-&quot; + getSaveGameString(game);&#xD;
         saveGame(new File(autoSaveDir, fileName));&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdgYJFIiEeibjuLm5_lcNQ" name="saveGame" specification="_Wa5JAFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdgYJVIiEeibjuLm5_lcNQ" name="file" type="_WWAB8FIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_WdgYJlIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WdgYJ1IiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdgYKFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final FreeColServer server = freeColClient.getFreeColServer();&#xD;
     boolean result = false;&#xD;
     gui.showStatusPanel(Messages.message(&quot;status.savingGame&quot;));&#xD;
     try {&#xD;
         server.setActiveUnit(gui.getActiveUnit());&#xD;
         server.saveGame(file, freeColClient.getClientOptions());&#xD;
         result = true;&#xD;
     } catch (IOException e) {&#xD;
         gui.showErrorMessage(FreeCol.badSave(file));&#xD;
     } finally {&#xD;
         gui.closeStatusPanel();&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdgYKVIiEeibjuLm5_lcNQ" name="shouldAllowMessage" specification="_Wa5wEFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdgYKlIiEeibjuLm5_lcNQ" name="message" type="_WWr-cVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdgYK1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>BooleanOption option = freeColClient.getClientOptions()&#xD;
         .getBooleanOption(message);&#xD;
     return (option == null) ? true : option.getValue();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdg_MFIiEeibjuLm5_lcNQ" name="startIgnoringMessage" specification="_Wa5wE1IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdg_MVIiEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdg_MlIiEeibjuLm5_lcNQ" name="turn" type="_WYBbMFIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>messagesToIgnore.put(key, turn.getNumber());&#xD;
     logger.finer(&quot;Ignore message start: &quot; + key);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdg_M1IiEeibjuLm5_lcNQ" name="stopIgnoringMessage" specification="_VytHoFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdg_NFIiEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>messagesToIgnore.remove(key);&#xD;
     logger.finer(&quot;Ignore message stop: &quot; + key);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdg_NVIiEeibjuLm5_lcNQ" name="reapIgnoredMessages" specification="_Wa6XIlIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdg_NlIiEeibjuLm5_lcNQ" name="turn" type="_WYBbMFIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>Iterator&lt;String> keys = messagesToIgnore.keySet().iterator();&#xD;
     while (keys.hasNext()) {&#xD;
         String key = keys.next();&#xD;
         if (messagesToIgnore.get(key) &lt; turn.getNumber()) {&#xD;
             keys.remove();&#xD;
             logger.finer(&quot;Ignore message reap: &quot; + key);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdg_N1IiEeibjuLm5_lcNQ" name="continueIgnoreMessage" specification="_Wa6-MFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdg_OFIiEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdg_OVIiEeibjuLm5_lcNQ" name="turn" type="_WYBbMFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdg_OlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Integer value;&#xD;
     if (key != null&#xD;
         &amp;&amp; (value = messagesToIgnore.get(key)) != null&#xD;
         &amp;&amp; value + 1 == turn.getNumber()) {&#xD;
         messagesToIgnore.put(key, value + 1);&#xD;
         logger.finer(&quot;Ignore message continue: &quot; + key);&#xD;
         return true;&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdg_O1IiEeibjuLm5_lcNQ" name="displayTurnReportMessages" specification="_VytusFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>gui.showReportTurnPanel(turnReportMessages);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdhmQFIiEeibjuLm5_lcNQ" name="displayModelMessages" specification="_VyuVwFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdhmQVIiEeibjuLm5_lcNQ" name="allMessages">
                    <eAnnotations xmi:id="_WdhmQlIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WdhmQ1IiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdhmRFIiEeibjuLm5_lcNQ" name="endOfTurn">
                    <eAnnotations xmi:id="_WdhmRVIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WdhmRlIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdhmR1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player player = freeColClient.getMyPlayer();&#xD;
     final Turn thisTurn = freeColClient.getGame().getTurn();&#xD;
     final ArrayList&lt;ModelMessage> messages = new ArrayList&lt;>();&#xD;
&#xD;
     for (ModelMessage m : ((allMessages) ? player.getModelMessages()&#xD;
             : player.getNewModelMessages())) {&#xD;
         if (shouldAllowMessage(m)&#xD;
             &amp;&amp; !continueIgnoreMessage(m.getIgnoredMessageKey(), thisTurn)) {&#xD;
             messages.add(m);&#xD;
         }&#xD;
         m.setBeenDisplayed(true);&#xD;
     }&#xD;
&#xD;
     reapIgnoredMessages(thisTurn);&#xD;
&#xD;
     if (!messages.isEmpty()) {&#xD;
         Runnable uiTask;&#xD;
         if (endOfTurn) {&#xD;
             turnReportMessages.addAll(messages);&#xD;
             uiTask = () -> { displayTurnReportMessages(); };&#xD;
         } else {&#xD;
             uiTask = () -> { gui.showModelMessages(messages); };&#xD;
         }&#xD;
         gui.invokeNowOrWait(uiTask);&#xD;
     }&#xD;
     return !messages.isEmpty();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdiNUFIiEeibjuLm5_lcNQ" name="doExecuteGotoOrders" specification="_VyuVyFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdiNUVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (gui.isShowingSubPanel()) return false; // Clear the panel first&#xD;
&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     final Unit active = gui.getActiveUnit();&#xD;
     Unit stillActive = null;&#xD;
&#xD;
     // Ensure the goto mode sticks.&#xD;
     moveMode = moveMode.maximize(MoveMode.EXECUTE_GOTO_ORDERS);&#xD;
&#xD;
     // Deal with the trade route units first.&#xD;
     List&lt;ModelMessage> messages = new ArrayList&lt;>();&#xD;
     while (player.hasNextTradeRouteUnit()) {&#xD;
         Unit unit = player.getNextTradeRouteUnit();&#xD;
         gui.setActiveUnit(unit);&#xD;
         if (moveToDestination(unit, messages)) stillActive = unit;&#xD;
     }&#xD;
     if (!messages.isEmpty()) {&#xD;
         for (ModelMessage m : messages) {&#xD;
             player.addModelMessage(m);&#xD;
             turnReportMessages.add(m);&#xD;
         }&#xD;
         displayModelMessages(false, false);&#xD;
         gui.setActiveUnit((stillActive != null) ? stillActive : active);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // The active unit might also be a going-to unit.  Make sure it&#xD;
     // gets processed first.  setNextGoingToUnit will fail harmlessly&#xD;
     // if it is not a going-to unit so this is safe.&#xD;
     if (active != null) player.setNextGoingToUnit(active);&#xD;
&#xD;
     // Process all units.&#xD;
     while (player.hasNextGoingToUnit()) {&#xD;
         Unit unit = player.getNextGoingToUnit();&#xD;
         gui.setActiveUnit(unit);&#xD;
         // Move the unit as much as possible&#xD;
         if (moveToDestination(unit, null)) stillActive = unit;&#xD;
&#xD;
         // Might have LCR messages to display&#xD;
         displayModelMessages(false, false);&#xD;
&#xD;
         // Give the player a chance to deal with any problems&#xD;
         // shown in a popup before pressing on with more moves.&#xD;
         if (gui.isShowingSubPanel()) {&#xD;
             gui.requestFocusForSubPanel();&#xD;
             break;&#xD;
         }&#xD;
     }&#xD;
     gui.setActiveUnit((stillActive != null) ? stillActive : active);&#xD;
     return stillActive == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdiNUlIiEeibjuLm5_lcNQ" name="doEndTurn" specification="_Vyu80VIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdiNU1IiEeibjuLm5_lcNQ" name="showDialog">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdiNVFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (showDialog) {&#xD;
         List&lt;Unit> units = freeColClient.getMyPlayer().getUnits().stream()&#xD;
             .filter(Unit::couldMove).collect(Collectors.toList());&#xD;
         if (!units.isEmpty()) {&#xD;
             // Modal dialog takes over&#xD;
             gui.showEndTurnDialog(units,&#xD;
                 (Boolean value) -> {&#xD;
                     if (value != null &amp;&amp; value) {&#xD;
                         endTurn(false);&#xD;
                     }&#xD;
                 });&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Ensure end-turn mode sticks.&#xD;
     moveMode = moveMode.maximize(MoveMode.END_TURN);&#xD;
&#xD;
     // Make sure all goto orders are complete before ending turn.&#xD;
     if (!doExecuteGotoOrders()) return false;&#xD;
&#xD;
     // Check for desync as last thing!&#xD;
     if (FreeColDebugger.isInDebugMode(FreeColDebugger.DebugMode.DESYNC)&#xD;
         &amp;&amp; DebugUtils.checkDesyncAction(freeColClient)) {&#xD;
         freeColClient.getConnectController().reconnect();&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Clean up lingering menus.&#xD;
     gui.closeMenus();&#xD;
&#xD;
     // Clear active unit if any.&#xD;
     gui.setActiveUnit(null);&#xD;
&#xD;
     // Unskip all skipped, some may have been faked in-client.&#xD;
     // Server-side skipped units are set active in csNewTurn.&#xD;
     for (Unit unit : freeColClient.getMyPlayer().getUnits()) {&#xD;
         if (unit.getState() == UnitState.SKIPPED) {&#xD;
             unit.setState(UnitState.ACTIVE);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Restart the selection cycle.&#xD;
     moveMode = MoveMode.NEXT_ACTIVE_UNIT;&#xD;
&#xD;
     // Clear outdated turn report messages.&#xD;
     turnReportMessages.clear();&#xD;
&#xD;
     // Inform the server of end of turn.&#xD;
     return askServer().endTurn();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdiNVVIiEeibjuLm5_lcNQ" name="updateActiveUnit" specification="_Wa7lQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdiNVlIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdiNV1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>// Make sure the active unit is done.&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     Unit unit = gui.getActiveUnit();&#xD;
     if (unit != null &amp;&amp; unit.couldMove()) return false;&#xD;
&#xD;
     // Flush any outstanding orders once the mode is raised.&#xD;
     if (moveMode != MoveMode.NEXT_ACTIVE_UNIT&#xD;
         &amp;&amp; !doExecuteGotoOrders()) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Successfully found a unit to display&#xD;
     if (player.hasNextActiveUnit()) {&#xD;
         gui.setActiveUnit(player.getNextActiveUnit());&#xD;
         return true;&#xD;
     }&#xD;
&#xD;
     // No unit to find.&#xD;
     gui.setActiveUnit(null);&#xD;
&#xD;
     // No active units left.  Do the goto orders.&#xD;
     if (!doExecuteGotoOrders()) return true;&#xD;
&#xD;
     // If not already ending the turn, use the fallback tile if&#xD;
     // supplied, then check for automatic end of turn, otherwise&#xD;
     // just select nothing and wait.&#xD;
     final ClientOptions options = freeColClient.getClientOptions();&#xD;
     if (tile != null) {&#xD;
         gui.setSelectedTile(tile);&#xD;
     } else if (options.getBoolean(ClientOptions.AUTO_END_TURN)) {&#xD;
         doEndTurn(options.getBoolean(ClientOptions.SHOW_END_TURN_DIALOG));&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdiNWFIiEeibjuLm5_lcNQ" name="moveToDestination" specification="_Wa7lQ1IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdiNWVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdiNWlIiEeibjuLm5_lcNQ" name="messages" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdiNW1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Location destination;&#xD;
     if (!requireOurTurn()&#xD;
         || unit.isAtSea()&#xD;
         || unit.getMovesLeft() &lt;= 0&#xD;
         || unit.getState() == UnitState.SKIPPED) {&#xD;
         return false;&#xD;
     } else if (unit.getTradeRoute() != null) {&#xD;
         return followTradeRoute(unit, messages);&#xD;
     } else if ((destination = unit.getDestination()) == null) {&#xD;
         return unit.getMovesLeft() > 0;&#xD;
     }&#xD;
&#xD;
     // Find a path to the destination and try to follow it.&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     PathNode path = unit.findPath(destination);&#xD;
     if (path == null) {&#xD;
         StringTemplate src = unit.getLocation()&#xD;
             .getLocationLabelFor(player);&#xD;
         StringTemplate dst = destination.getLocationLabelFor(player);&#xD;
         StringTemplate template = StringTemplate&#xD;
             .template(&quot;info.moveToDestinationFailed&quot;)&#xD;
             .addStringTemplate(&quot;%unit%&quot;,&#xD;
                 unit.getLabel(Unit.UnitLabelType.NATIONAL))&#xD;
             .addStringTemplate(&quot;%location%&quot;, src)&#xD;
             .addStringTemplate(&quot;%destination%&quot;, dst);&#xD;
         gui.showInformationMessage(unit, template);&#xD;
         return false;&#xD;
     }&#xD;
     gui.setActiveUnit(unit);&#xD;
&#xD;
     // Clear ordinary destinations if arrived.&#xD;
     if (movePath(unit, path) &amp;&amp; unit.isAtLocation(destination)) {&#xD;
         askClearGotoOrders(unit);&#xD;
         Colony colony = (unit.hasTile()) ? unit.getTile().getColony()&#xD;
             : null;&#xD;
         if (colony != null &amp;&amp; !checkCashInTreasureTrain(unit)) {&#xD;
             colonyPanel(colony, unit);&#xD;
         }&#xD;
         return unit.couldMove();&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdiNXFIiEeibjuLm5_lcNQ" name="moveDirection" specification="_Wa8zYVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdiNXVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdiNXlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdiNX1IiEeibjuLm5_lcNQ" name="interactive">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdiNYFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>// If this move would reach the unit destination but we&#xD;
     // discover that it would be permanently impossible to complete,&#xD;
     // clear the destination.&#xD;
     Unit.MoveType mt = unit.getMoveType(direction);&#xD;
     Location destination = unit.getDestination();&#xD;
     Tile oldTile = unit.getTile();&#xD;
     boolean clearDestination = destination != null&#xD;
         &amp;&amp; oldTile != null&#xD;
         &amp;&amp; Map.isSameLocation(oldTile.getNeighbourOrNull(direction),&#xD;
                               destination);&#xD;
&#xD;
     // Consider all the move types.&#xD;
     boolean result = mt.isLegal();&#xD;
     switch (mt) {&#xD;
     case MOVE_HIGH_SEAS:&#xD;
         if (freeColClient.getMyPlayer().getEurope() == null) {&#xD;
             ; // do nothing&#xD;
         } else if (destination == null) {&#xD;
             result = moveHighSeas(unit, direction);&#xD;
             break;&#xD;
         } else if (destination instanceof Europe) {&#xD;
             result = moveTo(unit, destination);&#xD;
             break;&#xD;
         }&#xD;
         // Fall through&#xD;
     case MOVE:&#xD;
         result = moveMove(unit, direction);&#xD;
         break;&#xD;
     case EXPLORE_LOST_CITY_RUMOUR:&#xD;
         result = moveExplore(unit, direction);&#xD;
         break;&#xD;
     case ATTACK_UNIT:&#xD;
         result = moveAttack(unit, direction);&#xD;
         break;&#xD;
     case ATTACK_SETTLEMENT:&#xD;
         result = moveAttackSettlement(unit, direction);&#xD;
         break;&#xD;
     case EMBARK:&#xD;
         result = moveEmbark(unit, direction);&#xD;
         break;&#xD;
     case ENTER_INDIAN_SETTLEMENT_WITH_FREE_COLONIST:&#xD;
         result = moveLearnSkill(unit, direction);&#xD;
         break;&#xD;
     case ENTER_INDIAN_SETTLEMENT_WITH_SCOUT:&#xD;
         result = moveScoutIndianSettlement(unit, direction);&#xD;
         break;&#xD;
     case ENTER_INDIAN_SETTLEMENT_WITH_MISSIONARY:&#xD;
         result = moveUseMissionary(unit, direction);&#xD;
         break;&#xD;
     case ENTER_FOREIGN_COLONY_WITH_SCOUT:&#xD;
         result = moveScoutColony(unit, direction);&#xD;
         break;&#xD;
     case ENTER_SETTLEMENT_WITH_CARRIER_AND_GOODS:&#xD;
         result = moveTrade(unit, direction);&#xD;
         break;&#xD;
&#xD;
     // Illegal moves&#xD;
     case MOVE_NO_ACCESS_BEACHED:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             StringTemplate nation = getNationAt(unit.getTile(), direction);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noAccessBeached&quot;)&#xD;
                 .addStringTemplate(&quot;%nation%&quot;, nation));&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_ACCESS_CONTACT:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             StringTemplate nation = getNationAt(unit.getTile(), direction);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noAccessContact&quot;)&#xD;
                 .addStringTemplate(&quot;%nation%&quot;, nation));&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_ACCESS_GOODS:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             StringTemplate nation = getNationAt(unit.getTile(), direction);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noAccessGoods&quot;)&#xD;
                 .addStringTemplate(&quot;%nation%&quot;, nation)&#xD;
                 .addStringTemplate(&quot;%unit%&quot;,&#xD;
                     unit.getLabel(Unit.UnitLabelType.NATIONAL)));&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_ACCESS_LAND:&#xD;
         if (!moveDisembark(unit, direction)) {&#xD;
             if (interactive) {&#xD;
                 sound(&quot;sound.event.illegalMove&quot;);&#xD;
             }&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_ACCESS_MISSION_BAN:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             StringTemplate nation = getNationAt(unit.getTile(), direction);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noAccessMissionBan&quot;)&#xD;
                 .addStringTemplate(&quot;%unit%&quot;,&#xD;
                     unit.getLabel(Unit.UnitLabelType.NATIONAL))&#xD;
                 .addStringTemplate(&quot;%nation%&quot;, nation));&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_ACCESS_SETTLEMENT:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             StringTemplate nation = getNationAt(unit.getTile(), direction);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noAccessSettlement&quot;)&#xD;
                 .addStringTemplate(&quot;%unit%&quot;,&#xD;
                     unit.getLabel(Unit.UnitLabelType.NATIONAL))&#xD;
                 .addStringTemplate(&quot;%nation%&quot;, nation));&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_ACCESS_SKILL:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noAccessSkill&quot;)&#xD;
                 .addStringTemplate(&quot;%unit%&quot;,&#xD;
                     unit.getLabel(Unit.UnitLabelType.NATIONAL)));&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_ACCESS_TRADE:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             StringTemplate nation = getNationAt(unit.getTile(), direction);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noAccessTrade&quot;)&#xD;
                 .addStringTemplate(&quot;%nation%&quot;, nation));&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_ACCESS_WAR:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             StringTemplate nation = getNationAt(unit.getTile(), direction);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noAccessWar&quot;)&#xD;
                 .addStringTemplate(&quot;%nation%&quot;, nation));&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_ACCESS_WATER:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noAccessWater&quot;)&#xD;
                 .addStringTemplate(&quot;%unit%&quot;,&#xD;
                     unit.getLabel(Unit.UnitLabelType.NATIONAL)));&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_ATTACK_MARINE:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noAttackWater&quot;)&#xD;
                 .addStringTemplate(&quot;%unit%&quot;,&#xD;
                     unit.getLabel(Unit.UnitLabelType.NATIONAL)));&#xD;
         }&#xD;
         break;&#xD;
     case MOVE_NO_MOVES:&#xD;
         // The unit may have some moves left, but not enough&#xD;
         // to move to the next node.  The move is illegal&#xD;
         // this turn, but might not be next turn, so do not cancel the&#xD;
         // destination but set the state to skipped instead.&#xD;
         clearDestination = false;&#xD;
         unit.setState(UnitState.SKIPPED);&#xD;
         break;&#xD;
     case MOVE_NO_TILE:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             gui.showInformationMessage(unit, StringTemplate&#xD;
                 .template(&quot;move.noTile&quot;)&#xD;
                 .addStringTemplate(&quot;%unit%&quot;,&#xD;
                     unit.getLabel(Unit.UnitLabelType.NATIONAL)));&#xD;
         }&#xD;
         break;&#xD;
     default:&#xD;
         if (interactive || clearDestination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
         }&#xD;
         result = false;&#xD;
         break;&#xD;
     }&#xD;
     if (clearDestination &amp;&amp; !unit.isDisposed()) {&#xD;
         askClearGotoOrders(unit);&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdi0YFIiEeibjuLm5_lcNQ" name="movePath" specification="_Wa9aclIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdi0YVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdi0YlIiEeibjuLm5_lcNQ" name="path" type="_WX8isVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdi0Y1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>for (; path != null; path = path.next) {&#xD;
         if (unit.isAtLocation(path.getLocation())) continue;&#xD;
&#xD;
         if (path.getLocation() instanceof Europe) {&#xD;
             if (unit.hasTile()&#xD;
                 &amp;&amp; unit.getTile().isDirectlyHighSeasConnected()) {&#xD;
                 moveTo(unit, path.getLocation());&#xD;
             } else {&#xD;
                 logger.warning(&quot;Can not move to Europe from &quot;&#xD;
                     + unit.getLocation()&#xD;
                     + &quot; on path: &quot; + path.fullPathToString());&#xD;
             }&#xD;
             return false;&#xD;
         } else if (path.getLocation() instanceof Tile) {&#xD;
             if (path.getDirection() == null) {&#xD;
                 if (unit.isInEurope()) {&#xD;
                     moveTo(unit, unit.getGame().getMap());&#xD;
                 } else {&#xD;
                     logger.warning(&quot;Null direction on path: &quot;&#xD;
                         + path.fullPathToString());&#xD;
                 }&#xD;
                 return false;&#xD;
             } else {&#xD;
                 if (!moveDirection(unit, path.getDirection(), false)) {&#xD;
                     return false;&#xD;
                 }&#xD;
                 if (unit.hasTile()&#xD;
                     &amp;&amp; unit.getTile().getDiscoverableRegion() != null) {&#xD;
                     // Break up the goto to allow region naming to occur,&#xD;
                     // BR#2707&#xD;
                     return false;&#xD;
                 }&#xD;
             }&#xD;
         } else if (path.getLocation() instanceof Unit) {&#xD;
             return moveEmbark(unit, path.getDirection());&#xD;
&#xD;
         } else {&#xD;
             logger.warning(&quot;Bad path: &quot; + path.fullPathToString());&#xD;
         }&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdi0ZFIiEeibjuLm5_lcNQ" name="moveAttack" specification="_Wa-BglIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdi0ZVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdi0ZlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdi0Z1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Tile tile = unit.getTile();&#xD;
     Tile target = tile.getNeighbourOrNull(direction);&#xD;
     Unit u = target.getFirstUnit();&#xD;
     if (u == null || unit.getOwner().owns(u)) return false;&#xD;
&#xD;
     askClearGotoOrders(unit);&#xD;
     if (gui.confirmHostileAction(unit, target)&#xD;
         &amp;&amp; gui.confirmPreCombat(unit, target)) {&#xD;
         askServer().attack(unit, direction);&#xD;
     }&#xD;
     // Always return false, as the unit has either attacked and lost&#xD;
     // its remaining moves, or the move can not proceed because it is&#xD;
     // blocked.&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdi0aFIiEeibjuLm5_lcNQ" name="moveAttackSettlement" specification="_Wa-okVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdi0aVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdi0alIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdi0a1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Tile tile = unit.getTile();&#xD;
     Tile target = tile.getNeighbourOrNull(direction);&#xD;
     Settlement settlement = target.getSettlement();&#xD;
     if (settlement == null&#xD;
         || unit.getOwner().owns(settlement)) return false;&#xD;
&#xD;
     ArmedUnitSettlementAction act&#xD;
         = gui.getArmedUnitSettlementChoice(settlement);&#xD;
     if (act == null) return true; // Cancelled&#xD;
     switch (act) {&#xD;
     case SETTLEMENT_ATTACK:&#xD;
         if (gui.confirmHostileAction(unit, target)&#xD;
             &amp;&amp; gui.confirmPreCombat(unit, target)) {&#xD;
             askServer().attack(unit, direction);&#xD;
             Colony col = target.getColony();&#xD;
             if (col != null &amp;&amp; unit.getOwner().owns(col)) {&#xD;
                 colonyPanel(col, unit);&#xD;
             }&#xD;
             return false;&#xD;
         }&#xD;
         break;&#xD;
     case SETTLEMENT_TRIBUTE:&#xD;
         int amount = (settlement instanceof Colony)&#xD;
             ? gui.confirmEuropeanTribute(unit, (Colony)settlement,&#xD;
                 getNationSummary(settlement.getOwner()))&#xD;
             : (settlement instanceof IndianSettlement)&#xD;
             ? gui.confirmNativeTribute(unit, (IndianSettlement)settlement)&#xD;
             : -1;&#xD;
         if (amount &lt;= 0) return true; // Cancelled&#xD;
         return moveTribute(unit, amount, direction);&#xD;
&#xD;
     default:&#xD;
         logger.warning(&quot;showArmedUnitSettlementDialog fail: &quot; + act);&#xD;
         break;&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdi0bFIiEeibjuLm5_lcNQ" name="moveDiplomacy" specification="_Wa_PoVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdi0bVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdi0blIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdi0b1IiEeibjuLm5_lcNQ" name="dt" type="_WWkpsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdi0cFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Settlement settlement = getSettlementAt(unit.getTile(), direction);&#xD;
     if (settlement == null&#xD;
         || !(settlement instanceof Colony)) return false;&#xD;
     Colony colony = (Colony)settlement;&#xD;
&#xD;
     // Can not negotiate with the REF.&#xD;
     final Game game = freeColClient.getGame();&#xD;
     final Player player = unit.getOwner();&#xD;
     final Player other = colony.getOwner();&#xD;
     if (other == player.getREFPlayer()) return false;&#xD;
&#xD;
     StringTemplate nation = other.getNationLabel();&#xD;
     while (dt != null) {&#xD;
         // Inform server of current agreement.&#xD;
         dt = askServer().diplomacy(game, unit, colony, dt);&#xD;
         // Returned dt will be null if we sent or the other player&#xD;
         // replied with an accept/reject.  Otherwise consider&#xD;
         // counter proposal.&#xD;
         if (dt != null) {&#xD;
             dt = gui.showNegotiationDialog(unit, colony, dt,&#xD;
                 dt.getSendMessage(player, colony));&#xD;
         }&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdjbcFIiEeibjuLm5_lcNQ" name="moveDisembark" specification="_WbAdwFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdjbcVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdjbclIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_Wdjbc1IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WdjbdFIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdjbdVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Tile tile = unit.getTile().getNeighbourOrNull(direction);&#xD;
     if (tile.getFirstUnit() != null&#xD;
         &amp;&amp; tile.getFirstUnit().getOwner() != unit.getOwner()) {&#xD;
         return false; // Can not disembark onto other nation units.&#xD;
     }&#xD;
&#xD;
     // Disembark selected units able to move.&#xD;
     unit.setStateToAllChildren(UnitState.ACTIVE);&#xD;
     final List&lt;Unit> disembarkable = unit.getUnitList().stream()&#xD;
         .filter(u -> u.getMoveType(tile).isProgress())&#xD;
         .collect(Collectors.toList());&#xD;
     if (disembarkable.isEmpty()) return false; // Fail, did not find one&#xD;
     if (disembarkable.size() == 1) {&#xD;
         if (gui.confirm(tile,&#xD;
                         StringTemplate.key(&quot;disembark.text&quot;),&#xD;
                         disembarkable.get(0), &quot;ok&quot;, &quot;cancel&quot;)) {&#xD;
             moveDirection(disembarkable.get(0), direction, false);&#xD;
         }&#xD;
     } else {&#xD;
         List&lt;ChoiceItem&lt;Unit>> choices = new ArrayList&lt;>();&#xD;
         for (Unit dUnit : disembarkable) {&#xD;
             choices.add(new ChoiceItem&lt;>(dUnit.getDescription(Unit.UnitLabelType.NATIONAL),&#xD;
                                          dUnit));&#xD;
         }&#xD;
         choices.add(new ChoiceItem&lt;>(Messages.message(&quot;all&quot;), unit));&#xD;
&#xD;
         // Use moveDirection() to disembark units as while the&#xD;
         // destination tile is known to be clear of other player&#xD;
         // units or settlements, it may have a rumour or need&#xD;
         // other special handling.&#xD;
         Unit u = gui.getChoice(unit.getTile(),&#xD;
                                Messages.message(&quot;disembark.text&quot;),&#xD;
                                unit,&#xD;
                                &quot;none&quot;, choices);&#xD;
         if (u == null) {&#xD;
             // Cancelled, done.&#xD;
         } else if (u == unit) {&#xD;
             // Disembark all.&#xD;
             for (Unit dUnit : disembarkable) {&#xD;
                 // Guard against loss of control when asking the&#xD;
                 // server to move the unit.&#xD;
                 try {&#xD;
                     moveDirection(dUnit, direction, false);&#xD;
                 } finally {&#xD;
                     continue;&#xD;
                 }&#xD;
             }&#xD;
         } else {&#xD;
             moveDirection(u, direction, false);&#xD;
         }&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdjbdlIiEeibjuLm5_lcNQ" name="moveEmbark" specification="_WbBr4FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdjbd1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdjbeFIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdjbeVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (unit.getColony() != null&#xD;
         &amp;&amp; !gui.confirmLeaveColony(unit)) return false;&#xD;
&#xD;
     Tile sourceTile = unit.getTile();&#xD;
     Tile destinationTile = sourceTile.getNeighbourOrNull(direction);&#xD;
     Unit carrier = null;&#xD;
     List&lt;ChoiceItem&lt;Unit>> choices = new ArrayList&lt;>();&#xD;
     for (Unit u : destinationTile.getUnitList()) {&#xD;
         if (u.canAdd(unit)) {&#xD;
             String m = u.getDescription(Unit.UnitLabelType.NATIONAL);&#xD;
             choices.add(new ChoiceItem&lt;>(m, u));&#xD;
             carrier = u; // Save a default&#xD;
         }&#xD;
     }&#xD;
     if (choices.isEmpty()) {&#xD;
         throw new RuntimeException(&quot;Unit &quot; + unit.getId()&#xD;
             + &quot; found no carrier to embark upon.&quot;);&#xD;
     } else if (choices.size() == 1) {&#xD;
         // Use the default&#xD;
     } else {&#xD;
         carrier = gui.getChoice(unit.getTile(),&#xD;
                                 Messages.message(&quot;embark.text&quot;),&#xD;
                                 unit,&#xD;
                                 &quot;none&quot;, choices);&#xD;
         if (carrier == null) return true; // User cancelled&#xD;
     }&#xD;
&#xD;
     // Proceed to embark&#xD;
     askClearGotoOrders(unit);&#xD;
     if (!askServer().embark(unit, carrier, direction)&#xD;
         || unit.getLocation() != carrier) {&#xD;
         unit.setState(UnitState.SKIPPED);&#xD;
         return false;&#xD;
     }&#xD;
     unit.getOwner().invalidateCanSeeTiles();&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdjbelIiEeibjuLm5_lcNQ" name="moveExplore" specification="_WbCS8FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdjbe1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdjbfFIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdjbfVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Tile tile = unit.getTile().getNeighbourOrNull(direction);&#xD;
     if (!gui.confirm(unit.getTile(),&#xD;
             StringTemplate.key(&quot;exploreLostCityRumour.text&quot;), unit,&#xD;
             &quot;exploreLostCityRumour.yes&quot;, &quot;exploreLostCityRumour.no&quot;)) {&#xD;
         return true;&#xD;
     }&#xD;
     if (tile.getLostCityRumour().getType()== LostCityRumour.RumourType.MOUNDS&#xD;
         &amp;&amp; !gui.confirm(unit.getTile(),&#xD;
             StringTemplate.key(&quot;exploreMoundsRumour.text&quot;), unit,&#xD;
             &quot;exploreLostCityRumour.yes&quot;, &quot;exploreLostCityRumour.no&quot;)) {&#xD;
         askServer().declineMounds(unit, direction);&#xD;
     }&#xD;
     return moveMove(unit, direction);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdjbflIiEeibjuLm5_lcNQ" name="moveHighSeas" specification="_WbC6AFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdjbf1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdjbgFIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdjbgVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>// Confirm moving to Europe if told to move to a null tile&#xD;
     // (FIXME: can this still happen?), or if crossing the boundary&#xD;
     // between coastal and high sea.  Otherwise just move.&#xD;
     Tile oldTile = unit.getTile();&#xD;
     Tile newTile = oldTile.getNeighbourOrNull(direction);&#xD;
     if (newTile == null&#xD;
         || (!oldTile.isDirectlyHighSeasConnected()&#xD;
             &amp;&amp; newTile.isDirectlyHighSeasConnected())) {&#xD;
         if (unit.getTradeRoute() != null) {&#xD;
             TradeRouteStop stop = unit.getStop();&#xD;
             if (stop != null &amp;&amp; TradeRoute.isStopValid(unit, stop)&#xD;
                 &amp;&amp; stop.getLocation() instanceof Europe) {&#xD;
                 moveTo(unit, stop.getLocation());&#xD;
                 return false;&#xD;
             }&#xD;
         } else if (unit.getDestination() instanceof Europe) {&#xD;
             moveTo(unit, unit.getDestination());&#xD;
             return false;&#xD;
         } else {&#xD;
             if (gui.confirm(oldTile, StringTemplate&#xD;
                     .template(&quot;highseas.text&quot;)&#xD;
                     .addAmount(&quot;%number%&quot;, unit.getSailTurns()),&#xD;
                     unit, &quot;highseas.yes&quot;, &quot;highseas.no&quot;)) {&#xD;
                 moveTo(unit, unit.getOwner().getEurope());&#xD;
                 return false;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return moveMove(unit, direction);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdkCgFIiEeibjuLm5_lcNQ" name="moveLearnSkill" specification="_WbDhEFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdkCgVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkCglIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkCg1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>askClearGotoOrders(unit);&#xD;
     // Refresh knowledge of settlement skill.  It may have been&#xD;
     // learned by another player.&#xD;
     if (!askServer().askSkill(unit, direction)) return false;&#xD;
&#xD;
     IndianSettlement settlement&#xD;
         = (IndianSettlement)getSettlementAt(unit.getTile(), direction);&#xD;
     UnitType skill = settlement.getLearnableSkill();&#xD;
     if (skill == null) {&#xD;
         gui.showInformationMessage(settlement, &quot;info.noMoreSkill&quot;);&#xD;
     } else if (!unit.getType().canBeUpgraded(skill, ChangeType.NATIVES)) {&#xD;
         gui.showInformationMessage(settlement, StringTemplate&#xD;
             .template(&quot;info.cantLearnSkill&quot;)&#xD;
             .addStringTemplate(&quot;%unit%&quot;,&#xD;
                 unit.getLabel(Unit.UnitLabelType.NATIONAL))&#xD;
             .addNamed(&quot;%skill%&quot;, skill));&#xD;
     } else if (gui.confirm(unit.getTile(), StringTemplate&#xD;
             .template(&quot;learnSkill.text&quot;)&#xD;
             .addNamed(&quot;%skill%&quot;, skill),&#xD;
             unit, &quot;learnSkill.yes&quot;, &quot;learnSkill.no&quot;)) {&#xD;
         if (askServer().learnSkill(unit, direction)) {&#xD;
             if (unit.isDisposed()) {&#xD;
                 gui.showInformationMessage(settlement, &quot;learnSkill.die&quot;);&#xD;
                 return false;&#xD;
             }&#xD;
             if (unit.getType() != skill) {&#xD;
                 gui.showInformationMessage(settlement, &quot;learnSkill.leave&quot;);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdkChFIiEeibjuLm5_lcNQ" name="moveMove" specification="_WbEIIFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdkChVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkChlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkCh1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final ClientOptions options = freeColClient.getClientOptions();&#xD;
     if (unit.canCarryUnits() &amp;&amp; unit.hasSpaceLeft()&#xD;
         &amp;&amp; options.getBoolean(ClientOptions.AUTOLOAD_SENTRIES)) {&#xD;
         // Autoload sentries if selected&#xD;
         List&lt;Unit> waiting = (unit.getColony() != null)&#xD;
             ? unit.getTile().getUnitList()&#xD;
             : Collections.&lt;Unit>emptyList();&#xD;
         for (Unit u : waiting) {&#xD;
             if (u.getState() != UnitState.SENTRY&#xD;
                 || !unit.couldCarry(u)) continue;&#xD;
             try {&#xD;
                 askEmbark(u, unit);&#xD;
             } finally {&#xD;
                 if (u.getLocation() != unit) {&#xD;
                     u.setState(UnitState.SKIPPED);&#xD;
                 }&#xD;
                 continue;&#xD;
             }&#xD;
         }&#xD;
         // Boarding consumed this unit's moves.&#xD;
         if (unit.getMovesLeft() &lt;= 0) return false;&#xD;
     }&#xD;
&#xD;
     // Ask the server&#xD;
     if (!askServer().move(unit, direction)) {&#xD;
         // Can fail due to desynchronization.  Skip this unit so&#xD;
         // we do not end up retrying indefinitely.&#xD;
         unit.setState(UnitState.SKIPPED);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     unit.getOwner().invalidateCanSeeTiles();&#xD;
     &#xD;
     final Tile tile = unit.getTile();&#xD;
&#xD;
     // Perform a short pause on an active unit's last move if&#xD;
     // the option is enabled.&#xD;
     if (unit.getMovesLeft() &lt;= 0&#xD;
         &amp;&amp; options.getBoolean(ClientOptions.UNIT_LAST_MOVE_DELAY)) {&#xD;
         gui.paintImmediatelyCanvasInItsBounds();&#xD;
         try {&#xD;
             Thread.sleep(UNIT_LAST_MOVE_DELAY);&#xD;
         } catch (InterruptedException e) {} // Ignore&#xD;
     }&#xD;
&#xD;
     // Update the active unit and GUI.&#xD;
     boolean ret = !unit.isDisposed() &amp;&amp; !checkCashInTreasureTrain(unit);&#xD;
     if (ret) {&#xD;
         if (tile.getColony() != null &amp;&amp; unit.isCarrier()) {&#xD;
             final Colony colony = tile.getColony();&#xD;
             if (unit.getTradeRoute() == null&#xD;
                 &amp;&amp; Map.isSameLocation(tile, unit.getDestination())) {&#xD;
                 colonyPanel(colony, unit);&#xD;
             }&#xD;
         }&#xD;
         ret = unit.getMovesLeft() > 0;&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdkCiFIiEeibjuLm5_lcNQ" name="moveScoutColony" specification="_WbEvMFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdkCiVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkCilIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkCi1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Game game = freeColClient.getGame();&#xD;
     Colony colony = (Colony) getSettlementAt(unit.getTile(), direction);&#xD;
     boolean canNeg = colony.getOwner() != unit.getOwner().getREFPlayer();&#xD;
     askClearGotoOrders(unit);&#xD;
&#xD;
     ScoutColonyAction act&#xD;
         = gui.getScoutForeignColonyChoice(colony, unit, canNeg);&#xD;
     if (act == null) return true; // Cancelled&#xD;
     switch (act) {&#xD;
     case FOREIGN_COLONY_ATTACK:&#xD;
         return moveAttackSettlement(unit, direction);&#xD;
     case FOREIGN_COLONY_NEGOTIATE:&#xD;
         Player player = unit.getOwner();&#xD;
         DiplomaticTrade agreement&#xD;
             = new DiplomaticTrade(game, TradeContext.DIPLOMATIC,&#xD;
                                   player, colony.getOwner(), null, 0);&#xD;
         agreement = gui.showNegotiationDialog(unit, colony,&#xD;
             agreement, agreement.getSendMessage(player, colony));&#xD;
         return (agreement == null&#xD;
             || agreement.getStatus() == TradeStatus.REJECT_TRADE) ? true&#xD;
             : moveDiplomacy(unit, direction, agreement);&#xD;
     case FOREIGN_COLONY_SPY:&#xD;
         return moveSpy(unit, direction);&#xD;
     default:&#xD;
         logger.warning(&quot;showScoutForeignColonyDialog fail: &quot; + act);&#xD;
         break;&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdkCjFIiEeibjuLm5_lcNQ" name="moveScoutIndianSettlement" specification="_WbFWQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdkCjVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkCjlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkCj1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Tile unitTile = unit.getTile();&#xD;
     Tile tile = unitTile.getNeighbourOrNull(direction);&#xD;
     IndianSettlement settlement = tile.getIndianSettlement();&#xD;
     Player player = unit.getOwner();&#xD;
     askClearGotoOrders(unit);&#xD;
&#xD;
     // Offer the choices.&#xD;
     String number = askServer().scoutSettlement(unit, direction);&#xD;
     if (number == null) number = Messages.message(&quot;many&quot;);&#xD;
     ScoutIndianSettlementAction act&#xD;
         = gui.getScoutIndianSettlementChoice(settlement, number);&#xD;
     if (act == null) return true; // Cancelled&#xD;
     switch (act) {&#xD;
     case INDIAN_SETTLEMENT_ATTACK:&#xD;
         if (!gui.confirmPreCombat(unit, tile)) return true;&#xD;
         askServer().attack(unit, direction);&#xD;
         return false;&#xD;
     case INDIAN_SETTLEMENT_SPEAK:&#xD;
         final int oldGold = player.getGold();&#xD;
         String result = askServer().scoutSpeakToChief(unit, direction);&#xD;
         if (result == null) {&#xD;
             return false; // Fail&#xD;
         } else if (&quot;die&quot;.equals(result)) {&#xD;
             gui.showInformationMessage(settlement,&#xD;
                 &quot;scoutSettlement.speakDie&quot;);&#xD;
             return false;&#xD;
         } else if (&quot;expert&quot;.equals(result)) {&#xD;
             gui.showInformationMessage(settlement, StringTemplate&#xD;
                 .template(&quot;scoutSettlement.expertScout&quot;)&#xD;
                 .addNamed(&quot;%unit%&quot;, unit.getType()));&#xD;
         } else if (&quot;tales&quot;.equals(result)) {&#xD;
             gui.showInformationMessage(settlement,&#xD;
                 &quot;scoutSettlement.speakTales&quot;);&#xD;
         } else if (&quot;beads&quot;.equals(result)) {&#xD;
             gui.showInformationMessage(settlement, StringTemplate&#xD;
                 .template(&quot;scoutSettlement.speakBeads&quot;)&#xD;
                 .addAmount(&quot;%amount%&quot;, player.getGold() - oldGold));&#xD;
         } else if (&quot;nothing&quot;.equals(result)) {&#xD;
             gui.showInformationMessage(settlement, StringTemplate&#xD;
                 .template(&quot;scoutSettlement.speakNothing&quot;)&#xD;
                 .addStringTemplate(&quot;%nation%&quot;, player.getNationLabel()));&#xD;
         } else {&#xD;
             logger.warning(&quot;Invalid result from askScoutSpeak: &quot; + result);&#xD;
         }&#xD;
         return false;&#xD;
     case INDIAN_SETTLEMENT_TRIBUTE:&#xD;
         return moveTribute(unit, 1, direction);&#xD;
     default:&#xD;
         logger.warning(&quot;showScoutIndianSettlementDialog fail: &quot; + act);&#xD;
         break;&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdkpkFIiEeibjuLm5_lcNQ" name="moveSpy" specification="_WbF9UFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdkpkVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkpklIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdkpk1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>askServer().spy(unit, direction);&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdkplFIiEeibjuLm5_lcNQ" name="moveTrade" specification="_WbGkYFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdkplVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkpllIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdkpl1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>askClearGotoOrders(unit);&#xD;
&#xD;
     Settlement settlement = getSettlementAt(unit.getTile(), direction);&#xD;
     if (settlement instanceof Colony) {&#xD;
         final Game game = freeColClient.getGame();&#xD;
         final Player player = unit.getOwner();&#xD;
         DiplomaticTrade agreement&#xD;
             = new DiplomaticTrade(game, TradeContext.TRADE,&#xD;
                 player, settlement.getOwner(), null, 0);&#xD;
         agreement = gui.showNegotiationDialog(unit, settlement,&#xD;
             agreement, agreement.getSendMessage(player, settlement));&#xD;
         return (agreement == null&#xD;
             || agreement.getStatus() == TradeStatus.REJECT_TRADE) ? true&#xD;
             : moveDiplomacy(unit, direction, agreement);&#xD;
     } else if (settlement instanceof IndianSettlement) {&#xD;
         return moveTradeIndianSettlement(unit, direction);&#xD;
     } else {&#xD;
         throw new RuntimeException(&quot;Bogus settlement: &quot;&#xD;
             + settlement.getId());&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdkpmFIiEeibjuLm5_lcNQ" name="moveTradeIndianSettlement" specification="_WbHLcFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdkpmVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkpmlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdkpm1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Settlement settlement = getSettlementAt(unit.getTile(), direction);&#xD;
&#xD;
     StringTemplate baseTemplate = StringTemplate&#xD;
         .template(&quot;tradeProposition.welcome&quot;)&#xD;
         .addStringTemplate(&quot;%nation%&quot;,&#xD;
             settlement.getOwner().getNationLabel())&#xD;
         .addName(&quot;%settlement%&quot;, settlement.getName());&#xD;
     StringTemplate template = baseTemplate;&#xD;
     boolean[] results = askServer()&#xD;
         .openTransactionSession(unit, settlement);&#xD;
     while (results != null) {&#xD;
         // The session tracks buy/sell/gift events and disables&#xD;
         // them when one happens.  So only offer such options if&#xD;
         // the session allows it and the carrier is in good shape.&#xD;
         boolean buy = results[0] &amp;&amp; unit.hasSpaceLeft();&#xD;
         boolean sel = results[1] &amp;&amp; unit.hasGoodsCargo();&#xD;
         boolean gif = results[2] &amp;&amp; unit.hasGoodsCargo();&#xD;
         if (!buy &amp;&amp; !sel &amp;&amp; !gif) break;&#xD;
&#xD;
         TradeAction act = gui.getIndianSettlementTradeChoice(settlement,&#xD;
             template, buy, sel, gif);&#xD;
         if (act == null) break;&#xD;
         StringTemplate t = null;&#xD;
         switch (act) {&#xD;
         case BUY:&#xD;
             t = attemptBuyFromSettlement(unit, settlement);&#xD;
             if (t == null) {&#xD;
                 results[0] = false;&#xD;
                 template = baseTemplate;&#xD;
             } else {&#xD;
                 template = t;&#xD;
             }&#xD;
             break;&#xD;
         case SELL:&#xD;
             t = attemptSellToSettlement(unit, settlement);&#xD;
             if (t == null) {&#xD;
                 results[1] = false;&#xD;
                 template = baseTemplate;&#xD;
             } else {&#xD;
                 template = t;&#xD;
             }&#xD;
             break;&#xD;
         case GIFT:&#xD;
             t = attemptGiftToSettlement(unit, settlement);&#xD;
             if (t == null) {&#xD;
                 results[2] = false;&#xD;
                 template = baseTemplate;&#xD;
             } else {&#xD;
                 template = t;&#xD;
             }&#xD;
             break;&#xD;
         default:&#xD;
             logger.warning(&quot;showIndianSettlementTradeDialog fail: &quot;&#xD;
                 + act);&#xD;
             results = null;&#xD;
             break;&#xD;
         }&#xD;
         if (template == abortTrade) template = baseTemplate;&#xD;
     }&#xD;
&#xD;
     askServer().closeTransactionSession(unit, settlement);&#xD;
     if (unit.getMovesLeft() > 0) gui.setActiveUnit(unit); // No trade?&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdkpnFIiEeibjuLm5_lcNQ" name="tradeFailMessage" specification="_WbHygVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdkpnVIiEeibjuLm5_lcNQ" name="fail">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdkpnlIiEeibjuLm5_lcNQ" name="settlement" type="_WWvBwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdkpn1IiEeibjuLm5_lcNQ" name="goods" type="_WWo7IFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkpoFIiEeibjuLm5_lcNQ" type="_WWQgoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>switch (fail) {&#xD;
     case NO_TRADE_GOODS:&#xD;
         return StringTemplate.template(&quot;trade.noTradeGoods&quot;)&#xD;
             .addNamed(&quot;%goods%&quot;, goods);&#xD;
     case NO_TRADE_HAGGLE:&#xD;
         return StringTemplate.template(&quot;trade.noTradeHaggle&quot;);&#xD;
     case NO_TRADE_HOSTILE:&#xD;
         return StringTemplate.template(&quot;trade.noTradeHostile&quot;);&#xD;
     case NO_TRADE: // Proposal was refused&#xD;
     default:&#xD;
         break;&#xD;
     }&#xD;
     return StringTemplate.template(&quot;trade.noTrade&quot;)&#xD;
         .addName(&quot;%settlement%&quot;,&#xD;
             settlement.getLocationLabelFor(freeColClient.getMyPlayer()));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdkpoVIiEeibjuLm5_lcNQ" name="attemptBuyFromSettlement" specification="_WbIZk1IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdkpolIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdkpo1IiEeibjuLm5_lcNQ" name="settlement" type="_WWvBwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdkppFIiEeibjuLm5_lcNQ" type="_WWQgoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Game game = freeColClient.getGame();&#xD;
     Player player = freeColClient.getMyPlayer();&#xD;
     Goods goods = null;&#xD;
&#xD;
     // Get list of goods for sale&#xD;
     List&lt;Goods> forSale = askServer()&#xD;
         .getGoodsForSaleInSettlement(game, unit, settlement);&#xD;
     for (;;) {&#xD;
         if (forSale.isEmpty()) { // Nothing to sell to the player&#xD;
             return StringTemplate.template(&quot;trade.nothingToSell&quot;);&#xD;
         }&#xD;
&#xD;
         // Choose goods to buy&#xD;
         List&lt;ChoiceItem&lt;Goods>> choices = new ArrayList&lt;>();&#xD;
         for (Goods g : forSale) {&#xD;
             String label = Messages.message(g.getLabel(true));&#xD;
             choices.add(new ChoiceItem&lt;>(label, g));&#xD;
         }&#xD;
         goods = gui.getChoice(unit.getTile(),&#xD;
                               Messages.message(&quot;buyProposition.text&quot;),&#xD;
                               settlement,&#xD;
                               &quot;nothing&quot;, choices);&#xD;
         if (goods == null) break; // Trade aborted by the player&#xD;
&#xD;
         int gold = -1; // Initially ask for a price&#xD;
         for (;;) {&#xD;
             gold = askServer().buyProposition(unit, settlement,&#xD;
                 goods, gold);&#xD;
             if (gold &lt;= 0) {&#xD;
                 return tradeFailMessage(gold, settlement, goods);&#xD;
             }&#xD;
&#xD;
             // Show dialog for buy proposal&#xD;
             boolean canBuy = player.checkGold(gold);&#xD;
             BuyAction act&#xD;
                 = gui.getBuyChoice(unit, settlement, goods, gold, canBuy);&#xD;
             if (act == null) break; // User cancelled&#xD;
             switch (act) {&#xD;
             case BUY: // Accept price, make purchase&#xD;
                 return (askServer().buyFromSettlement(unit,&#xD;
                         settlement, goods, gold)) ? null&#xD;
                     : abortTrade;&#xD;
             case HAGGLE: // Try to negotiate a lower price&#xD;
                 gold = gold * 9 / 10;&#xD;
                 break;&#xD;
             default:&#xD;
                 logger.warning(&quot;showBuyDialog fail: &quot; + act);&#xD;
                 return null;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return abortTrade;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdlQoFIiEeibjuLm5_lcNQ" name="attemptSellToSettlement" specification="_WbJnsFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdlQoVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdlQolIiEeibjuLm5_lcNQ" name="settlement" type="_WWvBwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdlQo1IiEeibjuLm5_lcNQ" type="_WWQgoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Goods goods = null;&#xD;
     for (;;) {&#xD;
         // Choose goods to sell&#xD;
         List&lt;ChoiceItem&lt;Goods>> choices = new ArrayList&lt;>();&#xD;
         for (Goods g : unit.getGoodsList()) {&#xD;
             String label = Messages.message(g.getLabel(true));&#xD;
             choices.add(new ChoiceItem&lt;>(label, g));&#xD;
         }&#xD;
         goods = gui.getChoice(unit.getTile(),&#xD;
                               Messages.message(&quot;sellProposition.text&quot;),&#xD;
                               settlement,&#xD;
                               &quot;nothing&quot;, choices);&#xD;
         if (goods == null) break; // Trade aborted by the player&#xD;
&#xD;
         int gold = -1; // Initially ask for a price&#xD;
         for (;;) {&#xD;
             gold = askServer().sellProposition(unit, settlement,&#xD;
                                                goods, gold);&#xD;
             if (gold &lt;= 0) {&#xD;
                 return tradeFailMessage(gold, settlement, goods);&#xD;
             }&#xD;
&#xD;
             // Show dialog for sale proposal&#xD;
             SellAction act = gui.getSellChoice(unit, settlement,&#xD;
                                                goods, gold);&#xD;
             if (act == null) break; // Cancelled&#xD;
             switch (act) {&#xD;
             case SELL: // Accepted price, make the sale&#xD;
                 return (askServer().sellToSettlement(unit, settlement,&#xD;
                         goods, gold)) ? null&#xD;
                     : abortTrade;&#xD;
             case HAGGLE: // Ask for more money&#xD;
                 gold = (gold * 11) / 10;&#xD;
                 break;&#xD;
             case GIFT: // Decide to make a gift of the goods&#xD;
                 askServer().deliverGiftToSettlement(unit,&#xD;
                     settlement, goods);&#xD;
                 return abortTrade;&#xD;
             default:&#xD;
                 logger.warning(&quot;showSellDialog fail: &quot; + act);&#xD;
                 return null;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return abortTrade;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdlQpFIiEeibjuLm5_lcNQ" name="attemptGiftToSettlement" specification="_WbKOwFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdlQpVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdlQplIiEeibjuLm5_lcNQ" name="settlement" type="_WWvBwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdlQp1IiEeibjuLm5_lcNQ" type="_WWQgoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>List&lt;ChoiceItem&lt;Goods>> choices = new ArrayList&lt;>();&#xD;
     for (Goods g : unit.getGoodsList()) {&#xD;
         String label = Messages.message(g.getLabel(true));&#xD;
         choices.add(new ChoiceItem&lt;>(label, g));&#xD;
     }&#xD;
     Goods goods = gui.getChoice(unit.getTile(),&#xD;
                                 Messages.message(&quot;gift.text&quot;),&#xD;
                                 settlement,&#xD;
                                 &quot;cancel&quot;, choices);&#xD;
     return (goods != null&#xD;
         &amp;&amp; askServer().deliverGiftToSettlement(unit, settlement, goods))&#xD;
         ? null&#xD;
         : abortTrade;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdlQqFIiEeibjuLm5_lcNQ" name="moveTribute" specification="_WbK10FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdlQqVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdlQqlIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdlQq1IiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdlQrFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Game game = freeColClient.getGame();&#xD;
     Player player = unit.getOwner();&#xD;
     Tile tile = unit.getTile();&#xD;
     Tile target = tile.getNeighbourOrNull(direction);&#xD;
     Settlement settlement = target.getSettlement();&#xD;
     Player other = settlement.getOwner();&#xD;
&#xD;
     // Indians are easy and can use the basic tribute mechanism.&#xD;
     if (settlement.getOwner().isIndian()) {&#xD;
         askServer().demandTribute(unit, direction);&#xD;
         return false;&#xD;
     }&#xD;
     &#xD;
     // Europeans might be human players, so we convert to a diplomacy&#xD;
     // dialog.&#xD;
     DiplomaticTrade agreement&#xD;
         = new DiplomaticTrade(game, TradeContext.TRIBUTE, player, other,&#xD;
                               null, 0);&#xD;
     agreement.add(new StanceTradeItem(game, player, other, Stance.PEACE));&#xD;
     agreement.add(new GoldTradeItem(game, other, player, amount));&#xD;
     return moveDiplomacy(unit, direction, agreement);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdlQrVIiEeibjuLm5_lcNQ" name="moveUseMissionary" specification="_WbLc4FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdlQrlIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdlQr1IiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdlQsFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>IndianSettlement settlement&#xD;
         = (IndianSettlement)getSettlementAt(unit.getTile(), direction);&#xD;
     Player player = unit.getOwner();&#xD;
     boolean canEstablish = !settlement.hasMissionary();&#xD;
     boolean canDenounce = !canEstablish&#xD;
         &amp;&amp; !settlement.hasMissionary(player);&#xD;
     askClearGotoOrders(unit);&#xD;
&#xD;
     // Offer the choices.&#xD;
     MissionaryAction act = gui.getMissionaryChoice(unit, settlement,&#xD;
         canEstablish, canDenounce);&#xD;
     if (act == null) return true;&#xD;
     switch (act) {&#xD;
     case ESTABLISH_MISSION: case DENOUNCE_HERESY:&#xD;
         if (askServer().missionary(unit, direction,&#xD;
                 act == MissionaryAction.DENOUNCE_HERESY)&#xD;
             &amp;&amp; settlement.hasMissionary(player)) {&#xD;
             sound(&quot;sound.event.missionEstablished&quot;);&#xD;
             player.invalidateCanSeeTiles();&#xD;
         }&#xD;
         break;&#xD;
     case INCITE_INDIANS:&#xD;
         List&lt;ChoiceItem&lt;Player>> choices = new ArrayList&lt;>();&#xD;
         for (Player p : freeColClient.getGame().getLiveEuropeanPlayers(player)) {&#xD;
             String label = Messages.message(p.getCountryLabel());&#xD;
             choices.add(new ChoiceItem&lt;>(label, p));&#xD;
         }&#xD;
         Player enemy = gui.getChoice(unit.getTile(),&#xD;
             Messages.message(&quot;missionarySettlement.inciteQuestion&quot;),&#xD;
             unit,&#xD;
             &quot;missionarySettlement.cancel&quot;, choices);&#xD;
         if (enemy == null) return true;&#xD;
         int gold = askServer().incite(unit, direction, enemy, -1);&#xD;
         if (gold &lt; 0) {&#xD;
             // protocol fail&#xD;
         } else if (!player.checkGold(gold)) {&#xD;
             gui.showInformationMessage(settlement, StringTemplate&#xD;
                 .template(&quot;missionarySettlement.inciteGoldFail&quot;)&#xD;
                 .add(&quot;%player%&quot;, enemy.getName())&#xD;
                 .addAmount(&quot;%amount%&quot;, gold));&#xD;
         } else if (gui.confirm(unit.getTile(), StringTemplate&#xD;
                 .template(&quot;missionarySettlement.inciteConfirm&quot;)&#xD;
                 .add(&quot;%player%&quot;, enemy.getName())&#xD;
                 .addAmount(&quot;%amount%&quot;, gold),&#xD;
                 unit, &quot;yes&quot;, &quot;no&quot;)) {&#xD;
             askServer().incite(unit, direction, enemy, gold);&#xD;
         }&#xD;
         break;&#xD;
     default:&#xD;
         logger.warning(&quot;showUseMissionaryDialog fail&quot;);&#xD;
         break;&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdl3sFIiEeibjuLm5_lcNQ" name="followTradeRoute" specification="_WbMD8FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdl3sVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdl3slIiEeibjuLm5_lcNQ" name="messages" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdl3s1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player player = unit.getOwner();&#xD;
     final TradeRoute tr = unit.getTradeRoute();&#xD;
     final boolean detailed = freeColClient.getClientOptions()&#xD;
         .getBoolean(ClientOptions.SHOW_GOODS_MOVEMENT);&#xD;
     final boolean checkProduction = freeColClient.getClientOptions()&#xD;
         .getBoolean(ClientOptions.STOCK_ACCOUNTS_FOR_PRODUCTION);&#xD;
     final List&lt;TradeRouteStop> stops = unit.getCurrentStops();&#xD;
     boolean result = false;&#xD;
&#xD;
     // If required, accumulate a summary of all the activity of&#xD;
     // this unit on its trade route.&#xD;
     LogBuilder lb = new LogBuilder((detailed &amp;&amp; !tr.isSilent()) ? 256&#xD;
         : -1);&#xD;
     lb.mark();&#xD;
&#xD;
     // Validate the whole route.&#xD;
     boolean valid = true;&#xD;
     for (TradeRouteStop trs : stops) {&#xD;
         if (!TradeRoute.isStopValid(unit, trs)) {&#xD;
             lb.add(&quot; &quot;, Messages.message(trs.invalidStopLabel(player)));&#xD;
             valid = false;&#xD;
         }&#xD;
     }&#xD;
     if (!valid) {&#xD;
         clearOrders(unit);&#xD;
         stops.clear();&#xD;
         result = unit.getMovesLeft() > 0;&#xD;
     }&#xD;
&#xD;
     // Try to find work to do on the current list of stops.&#xD;
     while (!stops.isEmpty()) {&#xD;
         TradeRouteStop stop = stops.remove(0);&#xD;
&#xD;
         if (!unit.atStop(stop)) {&#xD;
             // Not at stop, give up if no moves left or the path was&#xD;
             // exhausted on a previous round.&#xD;
             if (unit.getMovesLeft() &lt;= 0&#xD;
                 || unit.getState() == UnitState.SKIPPED) {&#xD;
                 lb.add(&quot; &quot;, Messages.message(stop&#xD;
                         .getLabelFor(&quot;tradeRoute.toStop&quot;, player)));&#xD;
                 break;&#xD;
             }&#xD;
&#xD;
             // Find a path to the stop, skip if none.&#xD;
             Location destination = stop.getLocation();&#xD;
             PathNode path = unit.findPath(destination);&#xD;
             if (path == null) {&#xD;
                 lb.add(&quot; &quot;, Messages.message(stop&#xD;
                         .getLabelFor(&quot;tradeRoute.pathStop&quot;, player)));&#xD;
                 unit.setState(UnitState.SKIPPED);&#xD;
                 break;&#xD;
             }&#xD;
             &#xD;
             // Try to follow the path.  If the unit does not reach&#xD;
             // the stop it is finished for now.&#xD;
             movePath(unit, path);&#xD;
             if (!unit.atStop(stop)) {&#xD;
                 unit.setState(UnitState.SKIPPED);&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
&#xD;
         // At the stop, do the work available.&#xD;
         lb.mark();&#xD;
         unloadUnitAtStop(unit, lb); // Anything to unload?&#xD;
         loadUnitAtStop(unit, lb);   // Anything to load?&#xD;
         lb.grew(&quot; &quot;, Messages.message(stop.getLabelFor(&quot;tradeRoute.atStop&quot;,&#xD;
                                                        player)));&#xD;
&#xD;
         // If the un/load consumed the moves, break now before&#xD;
         // updating the stop.  This allows next turn to retry&#xD;
         // un/loading, but this time it will not consume the moves.&#xD;
         if (unit.getMovesLeft() &lt;= 0) break;&#xD;
&#xD;
         // Find the next stop with work to do.&#xD;
         TradeRouteStop next = null;&#xD;
         List&lt;TradeRouteStop> moreStops = unit.getCurrentStops();&#xD;
         if (unit.atStop(moreStops.get(0))) moreStops.remove(0);&#xD;
         for (TradeRouteStop trs : moreStops) {&#xD;
             if (trs.hasWork(unit, (!checkProduction) ? 0&#xD;
                             : unit.getTurnsToReach(trs.getLocation()))) {&#xD;
                 next = trs;&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
         if (next == null) {&#xD;
             // No work was found anywhere on the trade route,&#xD;
             // so we should skip this unit.&#xD;
             lb.add(&quot; &quot;, Messages.message(&quot;tradeRoute.wait&quot;));&#xD;
             unit.setState(UnitState.SKIPPED);&#xD;
             break;&#xD;
         }&#xD;
         // Add a message for any skipped stops.&#xD;
         List&lt;TradeRouteStop> skipped&#xD;
             = tr.getStopSublist(stops.get(0), next);&#xD;
         if (!skipped.isEmpty()) {&#xD;
             StringTemplate t = StringTemplate.label(&quot;&quot;)&#xD;
                 .add(&quot;tradeRoute.skipped&quot;);&#xD;
             String sep = &quot; &quot;;&#xD;
             for (TradeRouteStop trs : skipped) {&#xD;
                 t.addName(sep)&#xD;
                     .addStringTemplate(trs.getLocation()&#xD;
                         .getLocationLabelFor(player));&#xD;
                 sep = &quot;, &quot;;&#xD;
             }&#xD;
             t.addName(&quot;.&quot;);&#xD;
             lb.add(&quot; &quot;, Messages.message(t));&#xD;
         }&#xD;
         // Bring the next stop to the head of the stops list if it&#xD;
         // is present.&#xD;
         while (!stops.isEmpty() &amp;&amp; stops.get(0) != next) {&#xD;
             stops.remove(0);&#xD;
         }&#xD;
         // Set the new stop, skip on error.&#xD;
         if (!askServer().setCurrentStop(unit, tr.getIndex(next))) {&#xD;
             unit.setState(UnitState.SKIPPED);&#xD;
             break;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (lb.grew()) {&#xD;
         ModelMessage m = new ModelMessage(MessageType.GOODS_MOVEMENT,&#xD;
                                           &quot;tradeRoute.prefix&quot;, unit)&#xD;
             .addName(&quot;%route%&quot;, tr.getName())&#xD;
             .addStringTemplate(&quot;%unit%&quot;,&#xD;
                 unit.getLabel(Unit.UnitLabelType.NATIONAL))&#xD;
             .addName(&quot;%data%&quot;, lb.toString());&#xD;
         if (messages != null) {&#xD;
             messages.add(m);&#xD;
         } else {&#xD;
             player.addModelMessage(m);&#xD;
             turnReportMessages.add(m);&#xD;
         }&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdl3tFIiEeibjuLm5_lcNQ" name="loadUnitAtStop" specification="_WbNSEFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdl3tVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdl3tlIiEeibjuLm5_lcNQ" name="lb" type="_WXiTAFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdl3t1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final TradeLocation trl = unit.getTradeLocation();&#xD;
     if (trl == null) return false;&#xD;
&#xD;
     final TradeRouteStop stop = unit.getStop();&#xD;
     boolean ret = false;&#xD;
&#xD;
     // Get the collapsed list of goods to load at this stop.&#xD;
     List&lt;AbstractGoods> toLoad = stop.getCompactCargo();&#xD;
     // If already at capacity for a goods type, drop it from the&#xD;
     // toLoad list, otherwise reduce its amount by the amount&#xD;
     // already loaded.  Handle excess goods.&#xD;
     for (Goods g : unit.getCompactGoods()) {&#xD;
         AbstractGoods ag = AbstractGoods.findByType(g.getType(), toLoad);&#xD;
         if (ag != null) {&#xD;
             int goodsAmount = g.getAmount();&#xD;
             int amount = ag.getAmount() - goodsAmount;&#xD;
             if (amount &lt;= 0) { // At capacity&#xD;
                 toLoad.remove(ag);&#xD;
             } else { // Modify amount&#xD;
                 ag.setAmount(amount);&#xD;
             }&#xD;
         } else {&#xD;
             // Excess goods on board.  They must have failed to&#xD;
             // unload somewhere.&#xD;
             lb.add(&quot; &quot;, Messages.message(StringTemplate&#xD;
                     .template(&quot;tradeRoute.loadStopBlocked&quot;)&#xD;
                     .addStringTemplate(&quot;%goods%&quot;, g.getLabel())));&#xD;
         }                &#xD;
     }&#xD;
&#xD;
     // Adjust toLoad with the actual export amount.  Some goods&#xD;
     // may not have an export surplus.  Add messages for them and&#xD;
     // drop from the toLoad list.&#xD;
     Iterator&lt;AbstractGoods> iterator = toLoad.iterator();&#xD;
     while (iterator.hasNext()) {&#xD;
         AbstractGoods ag = iterator.next();&#xD;
         int amount = stop.getExportAmount(ag.getType(), 0);&#xD;
         if (amount &lt;= 0) {&#xD;
             if (stop.getCargo().contains(ag.getType())) {&#xD;
                 // Complain only if this goods type was planned to load&#xD;
                 int present = stop.getGoodsCount(ag.getType());&#xD;
                 lb.add(&quot; &quot;, getLoadGoodsMessage(ag.getType(), 0, present,&#xD;
                                                 0, -1));&#xD;
             }&#xD;
             iterator.remove();&#xD;
         } else {&#xD;
             ag.setAmount(Math.min(amount, ag.getAmount()));&#xD;
         }&#xD;
     }&#xD;
     // Load the goods.&#xD;
     for (AbstractGoods ag : toLoad) {&#xD;
         GoodsType type = ag.getType();&#xD;
         int demand = ag.getAmount();&#xD;
         ret = askLoadGoods(stop.getLocation(), type, demand, unit);&#xD;
         if (!ret) {&#xD;
             // Assume any failure is due to goods still on board,&#xD;
             // and thus no further loading is likely to succeed.&#xD;
             break;&#xD;
         }&#xD;
         int present = stop.getGoodsCount(type);&#xD;
         int export = stop.getExportAmount(type, 0);&#xD;
         lb.add(&quot; &quot;, getLoadGoodsMessage(type, demand, present,&#xD;
                                         export, demand));&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdl3uFIiEeibjuLm5_lcNQ" name="getLoadGoodsMessage" specification="_WbN5IFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdl3uVIiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdl3ulIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdl3u1IiEeibjuLm5_lcNQ" name="present">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdl3vFIiEeibjuLm5_lcNQ" name="export">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdl3vVIiEeibjuLm5_lcNQ" name="toLoad">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdl3vlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String key;&#xD;
     int more;&#xD;
&#xD;
     if (amount == 0) {&#xD;
         key = (present == 0)&#xD;
             // Loaded no %goods% from an empty warehouse.&#xD;
             ? &quot;tradeRoute.loadStopNone&quot;&#xD;
             // Loaded no %goods% with %more% more retained...&#xD;
             : &quot;tradeRoute.loadStopNoExport&quot;;&#xD;
         more = present;&#xD;
     } else if (toLoad &lt; export) {&#xD;
         key = &quot;tradeRoute.loadStopImport&quot;;&#xD;
         // Loaded %amount% %goods% lacking space for %more% more&#xD;
         more = export - toLoad;&#xD;
     } else if (present > export &amp;&amp; toLoad > export) {&#xD;
         // Loaded %amount% %goods% with %more% more retained...&#xD;
         key = &quot;tradeRoute.loadStopExport&quot;;&#xD;
         more = present - export;&#xD;
     } else {&#xD;
         // Loaded %amount% %goods%&#xD;
         key = &quot;tradeRoute.loadStop&quot;;&#xD;
         more = -1; // not displayed&#xD;
     }&#xD;
     return Messages.message(StringTemplate.template(key)&#xD;
         .addAmount(&quot;%amount%&quot;, amount)&#xD;
         .addNamed(&quot;%goods%&quot;, type)&#xD;
         .addAmount(&quot;%more%&quot;, more));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdl3v1IiEeibjuLm5_lcNQ" name="unloadUnitAtStop" specification="_WbOgMFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdl3wFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdl3wVIiEeibjuLm5_lcNQ" name="lb" type="_WXiTAFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdl3wlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final TradeLocation trl = unit.getTradeLocation();&#xD;
     if (trl == null) return false;&#xD;
&#xD;
     final TradeRouteStop stop = unit.getStop();&#xD;
     final List&lt;GoodsType> goodsTypesToLoad = stop.getCargo();&#xD;
     boolean ret = false;&#xD;
&#xD;
     // Unload everything that is on the carrier but not listed to&#xD;
     // be loaded at this stop.&#xD;
     Game game = freeColClient.getGame();&#xD;
     for (Goods goods : unit.getCompactGoodsList()) {&#xD;
         GoodsType type = goods.getType();&#xD;
         if (goodsTypesToLoad.contains(type)) continue; // Keep this cargo.&#xD;
&#xD;
         int present = goods.getAmount();&#xD;
         int toUnload = present;&#xD;
         int atStop = trl.getImportAmount(type, 0);&#xD;
         int amount = toUnload;&#xD;
         if (amount > atStop) {&#xD;
             StringTemplate locName = ((Location)trl).getLocationLabel();&#xD;
             int option = freeColClient.getClientOptions()&#xD;
                 .getInteger(ClientOptions.UNLOAD_OVERFLOW_RESPONSE);&#xD;
             switch (option) {&#xD;
             case ClientOptions.UNLOAD_OVERFLOW_RESPONSE_ASK:&#xD;
                 StringTemplate template = StringTemplate&#xD;
                     .template(&quot;traderoute.warehouseCapacity&quot;)&#xD;
                     .addStringTemplate(&quot;%unit%&quot;,&#xD;
                         unit.getLabel(Unit.UnitLabelType.NATIONAL))&#xD;
                     .addStringTemplate(&quot;%colony%&quot;, locName)&#xD;
                     .addAmount(&quot;%amount%&quot;, toUnload - atStop)&#xD;
                     .addNamed(&quot;%goods%&quot;, goods);&#xD;
                 if (!gui.confirm(unit.getTile(), template,&#xD;
                                  unit, &quot;yes&quot;, &quot;no&quot;)) amount = atStop;&#xD;
                 break;&#xD;
             case ClientOptions.UNLOAD_OVERFLOW_RESPONSE_NEVER:&#xD;
                 amount = atStop;&#xD;
                 break;&#xD;
             case ClientOptions.UNLOAD_OVERFLOW_RESPONSE_ALWAYS:&#xD;
                 break;&#xD;
             default:&#xD;
                 logger.warning(&quot;Illegal UNLOAD_OVERFLOW_RESPONSE: &quot;&#xD;
                     + Integer.toString(option));&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
&#xD;
         // Try to unload.&#xD;
         ret = (amount == 0) ? false : askUnloadGoods(type, amount, unit);&#xD;
         if (ret) {&#xD;
             lb.add(&quot; &quot;, getUnloadGoodsMessage(unit, type, amount,&#xD;
                                               present, atStop, toUnload));&#xD;
         }&#xD;
     }&#xD;
&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdmewFIiEeibjuLm5_lcNQ" name="getUnloadGoodsMessage" specification="_WbPHQVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdmewVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdmewlIiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdmew1IiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdmexFIiEeibjuLm5_lcNQ" name="present">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdmexVIiEeibjuLm5_lcNQ" name="atStop">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdmexlIiEeibjuLm5_lcNQ" name="toUnload">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdmex1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String key = null;&#xD;
     int onBoard = unit.getGoodsCount(type);&#xD;
     int unloaded = present - onBoard;&#xD;
     int more = 0;&#xD;
&#xD;
     if (unloaded &lt; amount) {&#xD;
         // Tried to unload %amount% %goods%, but %more% was unloaded&#xD;
         key = &quot;tradeRoute.unloadStopFail&quot;;&#xD;
         more = unloaded;&#xD;
     } else if (amount > atStop) {&#xD;
         if (amount == toUnload) {&#xD;
             // Unloaded %amount% %goods% and dumped %more%.&#xD;
             key = &quot;tradeRoute.unloadStopImport&quot;;&#xD;
             more = toUnload - atStop;&#xD;
         } else {&#xD;
             // Unloaded %amount% %goods% with %more% more retained...&#xD;
             key = (amount == 0) ? &quot;tradeRoute.unloadStopNoExport&quot;&#xD;
                 : &quot;tradeRoute.unloadStopExport&quot;;&#xD;
             more = onBoard;&#xD;
         }&#xD;
     } else {&#xD;
         // Unloaded %amount% %goods%&#xD;
         key = &quot;tradeRoute.unloadStop&quot;;&#xD;
     }&#xD;
&#xD;
     return Messages.message(StringTemplate.template(key)&#xD;
         .addAmount(&quot;%amount%&quot;, amount)&#xD;
         .addAmount(&quot;%more%&quot;, more)&#xD;
         .addNamed(&quot;%goods%&quot;, type));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdmeyFIiEeibjuLm5_lcNQ" name="abandonColony" specification="_WbPuVVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdmeyVIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdmeylIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player player = freeColClient.getMyPlayer();&#xD;
     if (!requireOurTurn() || colony == null&#xD;
         || !player.owns(colony) || colony.getUnitCount() > 0)&#xD;
         return false;&#xD;
&#xD;
     // Proceed to abandon&#xD;
     final Tile tile = colony.getTile();&#xD;
     boolean ret = askServer().abandonColony(colony)&#xD;
         &amp;&amp; !tile.hasSettlement();&#xD;
     if (ret) {&#xD;
         player.invalidateCanSeeTiles();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdmey1IiEeibjuLm5_lcNQ" name="animateAttack" specification="_WbQ8cFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdmezFIiEeibjuLm5_lcNQ" name="attacker" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdmezVIiEeibjuLm5_lcNQ" name="defender" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdmezlIiEeibjuLm5_lcNQ" name="attackerTile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdmez1IiEeibjuLm5_lcNQ" name="defenderTile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdme0FIiEeibjuLm5_lcNQ" name="success">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>// Note: we used to focus the map on the unit even when&#xD;
     // animation is off as long as the center-active-unit option&#xD;
     // was set.  However IR#115 requested that if animation is off&#xD;
     // that we display nothing so as to speed up the other player&#xD;
     // moves as much as possible.&#xD;
     if (freeColClient.getAnimationSpeed(attacker.getOwner()) > 0) {&#xD;
         gui.animateUnitAttack(attacker, defender,&#xD;
                               attackerTile, defenderTile, success);&#xD;
     }&#xD;
     gui.refresh();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdme0VIiEeibjuLm5_lcNQ" name="animateMove" specification="_WbRjgFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdme0lIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdme01IiEeibjuLm5_lcNQ" name="oldTile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdme1FIiEeibjuLm5_lcNQ" name="newTile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>// Note: we used to focus the map on the unit even when&#xD;
     // animation is off as long as the center-active-unit option&#xD;
     // was set.  However IR#115 requested that if animation is off&#xD;
     // that we display nothing so as to speed up the other player&#xD;
     // moves as much as possible.&#xD;
     if (freeColClient.getAnimationSpeed(unit.getOwner()) > 0) {&#xD;
         gui.animateUnitMove(unit, oldTile, newTile);&#xD;
     } else if (freeColClient.getMyPlayer().owns(unit)) {&#xD;
         gui.requireFocus(newTile);&#xD;
     }&#xD;
     gui.refresh();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdnF0FIiEeibjuLm5_lcNQ" name="assignTeacher" specification="_WbSKkFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdnF0VIiEeibjuLm5_lcNQ" name="student" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdnF0lIiEeibjuLm5_lcNQ" name="teacher" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdnF01IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player player = freeColClient.getMyPlayer();&#xD;
     if (!requireOurTurn()&#xD;
         || student == null&#xD;
         || !player.owns(student)&#xD;
         || student.getColony() == null&#xD;
         || !student.isInColony()&#xD;
         || teacher == null&#xD;
         || !player.owns(teacher)&#xD;
         || !student.canBeStudent(teacher)&#xD;
         || teacher.getColony() == null&#xD;
         || student.getColony() != teacher.getColony()&#xD;
         || !teacher.getColony().canTrain(teacher))&#xD;
         return false;&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(student);&#xD;
     boolean ret = askServer().assignTeacher(student, teacher)&#xD;
         &amp;&amp; student.getTeacher() == teacher;&#xD;
     if (ret) {&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdnF1FIiEeibjuLm5_lcNQ" name="assignTradeRoute" specification="_WbSxoFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdnF1VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdnF1lIiEeibjuLm5_lcNQ" name="tradeRoute" type="_WWvo0VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdnF11IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (unit == null) return false;&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askAssignTradeRoute(unit, tradeRoute);&#xD;
     if (ret) {&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdnF2FIiEeibjuLm5_lcNQ" name="boardShip" specification="_WbTYsFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdnF2VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdnF2lIiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdnF21IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null || unit.isCarrier()&#xD;
         || carrier == null || !carrier.canCarryUnits()&#xD;
         || !unit.isAtLocation(carrier.getLocation())) return false;&#xD;
&#xD;
     boolean ret = askEmbark(unit, carrier);&#xD;
     if (ret) {&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdnF3FIiEeibjuLm5_lcNQ" name="buildColony" specification="_WbTYtFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdnF3VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdnF3lIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null) return false;&#xD;
&#xD;
     // Check unit, which must be on the map and able to build.&#xD;
     if (unit == null) return false;&#xD;
     final Tile tile = unit.getTile();&#xD;
     if (tile == null) return false;&#xD;
     if (!unit.canBuildColony()) {&#xD;
         gui.showInformationMessage(unit, StringTemplate&#xD;
             .template(&quot;buildColony.badUnit&quot;)&#xD;
             .addName(&quot;%unit%&quot;, unit.getName()));&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Join existing colony if present&#xD;
     final Colony colony = tile.getColony();&#xD;
     if (colony != null) {&#xD;
         askServer().joinColony(unit, colony);&#xD;
         updateGUI(null);&#xD;
         colonyPanel(colony, unit);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Check for other impediments.&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     NoClaimReason reason = player.canClaimToFoundSettlementReason(tile);&#xD;
     switch (reason) {&#xD;
     case NONE:&#xD;
     case NATIVES: // Tile can still be claimed&#xD;
         break;&#xD;
     default:&#xD;
         gui.showInformationMessage(reason.getDescriptionKey());&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Show the warnings if applicable.&#xD;
     if (freeColClient.getClientOptions()&#xD;
         .getBoolean(ClientOptions.SHOW_COLONY_WARNINGS)) {&#xD;
         StringTemplate warnings = tile.getBuildColonyWarnings(unit);&#xD;
         if (!warnings.getReplacements().isEmpty()&#xD;
             &amp;&amp; !gui.confirm(tile, warnings,&#xD;
                             unit, &quot;buildColony.yes&quot;, &quot;buildColony.no&quot;)) {&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Get and check the name.&#xD;
     String name = gui.getNewColonyName(player, tile);&#xD;
     if (name == null) return false;&#xD;
&#xD;
     // Claim tile from other owners before founding a settlement.&#xD;
     // Only native owners that we can steal, buy from, or use a&#xD;
     // bonus center tile exception should be possible by this point.&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = player.owns(tile);&#xD;
     if (!ret) {&#xD;
         ret = askClaimTile(player, tile, unit, player.getLandPrice(tile));&#xD;
         if (!ret) NameCache.putSettlementName(player, name);&#xD;
     }            &#xD;
     if (ret) {&#xD;
         ret = askServer().buildColony(name, unit)&#xD;
             &amp;&amp; tile.hasSettlement();&#xD;
         if (ret) {&#xD;
             sound(&quot;sound.event.buildingComplete&quot;);&#xD;
             player.invalidateCanSeeTiles();&#xD;
             unitWas.fireChanges();&#xD;
             // Check units present for treasure cash-in as they are now&#xD;
             // at a colony.&#xD;
             for (Unit u : tile.getUnitList()) checkCashInTreasureTrain(u);&#xD;
             colonyPanel((Colony)tile.getSettlement(), unit);&#xD;
         }&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdns4FIiEeibjuLm5_lcNQ" name="buyGoods" specification="_WbT_wlIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdns4VIiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdns4lIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdns41IiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdns5FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || type == null || amount &lt;= 0&#xD;
         || carrier == null&#xD;
         || !carrier.isInEurope()&#xD;
         || !freeColClient.getMyPlayer().owns(carrier)) return false;&#xD;
&#xD;
     final Europe europe = carrier.getOwner().getEurope();&#xD;
     EuropeWas europeWas = new EuropeWas(europe);&#xD;
     UnitWas unitWas = new UnitWas(carrier);&#xD;
     boolean ret = askLoadGoods(europe, type, amount, carrier);&#xD;
     if (ret) {&#xD;
         sound(&quot;sound.event.loadCargo&quot;);&#xD;
         europeWas.fireChanges();&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdns5VIiEeibjuLm5_lcNQ" name="chat" specification="_WbUm0VIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdns5lIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdns51IiEeibjuLm5_lcNQ" name="message">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdns6FIiEeibjuLm5_lcNQ" name="pri">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>gui.displayChatMessage(player, message, pri);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdns6VIiEeibjuLm5_lcNQ" name="changeState" specification="_WbVN4FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdns6lIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdns61IiEeibjuLm5_lcNQ" name="state" type="_WYBbMlIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdns7FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null) return false;&#xD;
     if (unit.getState() == state) return true;&#xD;
     if (!unit.checkSetState(state)) return false;&#xD;
&#xD;
     // Check if this is a hostile fortification, and give the player&#xD;
     // a chance to confirm.&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     if (state == UnitState.FORTIFYING &amp;&amp; unit.isOffensiveUnit()&#xD;
         &amp;&amp; !unit.hasAbility(Ability.PIRACY)) {&#xD;
         Tile tile = unit.getTile();&#xD;
         if (tile != null &amp;&amp; tile.getOwningSettlement() != null) {&#xD;
             Player enemy = tile.getOwningSettlement().getOwner();&#xD;
             if (player != enemy&#xD;
                 &amp;&amp; player.getStance(enemy) != Stance.ALLIANCE&#xD;
                 &amp;&amp; !gui.confirmHostileAction(unit, tile))&#xD;
                 return false; // Aborted&#xD;
         }&#xD;
     }&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askServer().changeState(unit, state)&#xD;
         &amp;&amp; unit.getState() == state;&#xD;
     if (ret) {&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdns7VIiEeibjuLm5_lcNQ" name="changeWorkImprovementType" specification="_WbV08VIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdns7lIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdns71IiEeibjuLm5_lcNQ" name="improvementType" type="_WX_mAFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdns8FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null || improvementType == null&#xD;
         || !unit.hasTile()&#xD;
         || !unit.checkSetState(UnitState.IMPROVING)&#xD;
         || improvementType.isNatural()) return false;&#xD;
&#xD;
     // May need to claim the tile first&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     final Tile tile = unit.getTile();&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = player.owns(tile)&#xD;
         || askClaimTile(player, tile, unit, player.getLandPrice(tile));&#xD;
     if (ret) {&#xD;
         ret = askServer()&#xD;
             .changeWorkImprovementType(unit, improvementType)&#xD;
             &amp;&amp; unit.getWorkImprovement() != null&#xD;
             &amp;&amp; unit.getWorkImprovement().getType() == improvementType;&#xD;
         if (ret) {&#xD;
             unitWas.fireChanges();&#xD;
         }&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdoT8FIiEeibjuLm5_lcNQ" name="changeWorkType" specification="_WbWcAFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdoT8VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdoT8lIiEeibjuLm5_lcNQ" name="workType" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdoT81IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null) return false;&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askServer().changeWorkType(unit, workType)&#xD;
         &amp;&amp; unit.getWorkType() == workType;&#xD;
     if (ret) {&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdoT9FIiEeibjuLm5_lcNQ" name="checkCashInTreasureTrain" specification="_WbXDEFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdoT9VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdoT9lIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null&#xD;
         || !unit.canCarryTreasure() || !unit.canCashInTreasureTrain())&#xD;
         return false; // Fail quickly if just not a candidate.&#xD;
&#xD;
     final Tile tile = unit.getTile();&#xD;
     final Europe europe = unit.getOwner().getEurope();&#xD;
     if (europe == null || unit.isInEurope()) {&#xD;
         ;// No need to check for transport.&#xD;
     } else {&#xD;
         int fee = unit.getTransportFee();&#xD;
         StringTemplate template;&#xD;
         if (fee == 0) {&#xD;
             template = StringTemplate.template(&quot;cashInTreasureTrain.free&quot;);&#xD;
         } else {&#xD;
             int percent = getSpecification()&#xD;
                 .getInteger(GameOptions.TREASURE_TRANSPORT_FEE);&#xD;
             template = StringTemplate.template(&quot;cashInTreasureTrain.pay&quot;)&#xD;
                 .addAmount(&quot;%fee%&quot;, percent);&#xD;
         }&#xD;
         if (!gui.confirm(unit.getTile(), template, unit,&#xD;
                          &quot;accept&quot;, &quot;reject&quot;)) return false;&#xD;
     }&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askServer().cashInTreasureTrain(unit)&#xD;
         &amp;&amp; unit.isDisposed();&#xD;
     if (ret) {&#xD;
         sound(&quot;sound.event.cashInTreasureTrain&quot;);&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(tile);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdoT91IiEeibjuLm5_lcNQ" name="chooseFoundingFather" specification="_WbXqIFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdoT-FIiEeibjuLm5_lcNQ" name="ffs" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdoT-VIiEeibjuLm5_lcNQ" name="ff" type="_WWl30FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdoT-lIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (ffs == null) return false;&#xD;
&#xD;
     Player player = freeColClient.getMyPlayer();&#xD;
     player.setCurrentFather(ff);&#xD;
     return askServer().chooseFoundingFather(ffs, ff);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdoT-1IiEeibjuLm5_lcNQ" name="chooseFoundingFather" specification="_WbYRMVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdoT_FIiEeibjuLm5_lcNQ" name="ffs" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>if (ffs == null) return;&#xD;
     gui.showChooseFoundingFatherDialog(ffs,&#xD;
         (FoundingFather ff) -> chooseFoundingFather(ffs, ff));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdoT_VIiEeibjuLm5_lcNQ" name="claimTile" specification="_WbaGYFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdoT_lIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdoT_1IiEeibjuLm5_lcNQ" name="claimant" type="_WWme4FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdoUAFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || tile == null&#xD;
         || claimant == null) return false;&#xD;
&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     final int price = ((claimant instanceof Settlement)&#xD;
             ? player.canClaimForSettlement(tile)&#xD;
             : player.canClaimForImprovement(tile))&#xD;
         ? 0&#xD;
         : player.getLandPrice(tile);&#xD;
     UnitWas unitWas = (claimant instanceof Unit)&#xD;
         ? new UnitWas((Unit)claimant) : null;&#xD;
     boolean ret = askClaimTile(player, tile, claimant, price);&#xD;
     if (ret) {&#xD;
         if (unitWas != null) unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdoUAVIiEeibjuLm5_lcNQ" name="clearGotoOrders" specification="_WbatcFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdoUAlIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdoUA1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null) return false;&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askClearGotoOrders(unit);&#xD;
     if (ret) {&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdo7AFIiEeibjuLm5_lcNQ" name="clearOrders" specification="_Wbatc1IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdo7AVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdo7AlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null) return false;&#xD;
&#xD;
     if (unit.getState() == UnitState.IMPROVING&#xD;
         &amp;&amp; !gui.confirm(unit.getTile(), StringTemplate&#xD;
             .template(&quot;clearOrders.text&quot;)&#xD;
             .addAmount(&quot;%turns%&quot;, unit.getWorkTurnsLeft()),&#xD;
             unit, &quot;ok&quot;, &quot;cancel&quot;)) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askClearGotoOrders(unit)&#xD;
         &amp;&amp; (unit.getState() == UnitState.ACTIVE&#xD;
             || askServer().changeState(unit, UnitState.ACTIVE));&#xD;
     if (ret) {&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdo7A1IiEeibjuLm5_lcNQ" name="clearSpeciality" specification="_WbbUglIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdo7BFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdo7BVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null) return false;&#xD;
&#xD;
     UnitType oldType = unit.getType();&#xD;
     UnitType newType = oldType.getTargetType(ChangeType.CLEAR_SKILL,&#xD;
                                              unit.getOwner());&#xD;
     if (newType == null) {&#xD;
         gui.showInformationMessage(unit, StringTemplate&#xD;
             .template(&quot;clearSpeciality.impossible&quot;)&#xD;
             .addStringTemplate(&quot;%unit%&quot;,&#xD;
                 unit.getLabel(Unit.UnitLabelType.NATIONAL)));&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     final Tile tile = (gui.isShowingSubPanel()) ? null : unit.getTile();&#xD;
     if (!gui.confirm(tile, StringTemplate&#xD;
             .template(&quot;clearSpeciality.areYouSure&quot;)&#xD;
             .addStringTemplate(&quot;%oldUnit%&quot;,&#xD;
                 unit.getLabel(Unit.UnitLabelType.NATIONAL))&#xD;
             .addNamed(&quot;%unit%&quot;, newType),&#xD;
             unit, &quot;ok&quot;, &quot;cancel&quot;)) {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Try to clear.&#xD;
     // Note that this routine is only called out of UnitLabel,&#xD;
     // where the unit icon is always updated anyway.&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askServer().clearSpeciality(unit)&#xD;
         &amp;&amp; unit.getType() == newType;&#xD;
     if (ret) {&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdo7BlIiEeibjuLm5_lcNQ" name="closeMenus" specification="_Vy4GwFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>gui.closeMenus();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdo7B1IiEeibjuLm5_lcNQ" name="declareIndependence" specification="_Vy4t0FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdo7CFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn()) return false;&#xD;
&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     if (player.getNewLandName() == null) {&#xD;
         return false; // Can only happen in debug mode.&#xD;
     }&#xD;
&#xD;
     // Check for adequate support.&#xD;
     StringTemplate declare = player.checkDeclareIndependence();&#xD;
     if (declare != null) {&#xD;
         gui.showInformationMessage(declare);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Confirm intention, and collect nation+country names.&#xD;
     List&lt;String> names = gui.confirmDeclaration();&#xD;
     if (names == null&#xD;
         || names.get(0) == null || names.get(0).isEmpty()&#xD;
         || names.get(1) == null || names.get(1).isEmpty()) {&#xD;
         // Empty name => user cancelled.&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Ask server.&#xD;
     boolean ret = askServer().declareIndependence(names.get(0), names.get(1))&#xD;
         &amp;&amp; player.isRebel();&#xD;
     if (ret) {&#xD;
         gui.showDeclarationPanel();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdo7CVIiEeibjuLm5_lcNQ" name="diplomacy" specification="_Wbb7kFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdo7ClIiEeibjuLm5_lcNQ" name="our" type="_WWme4FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdo7C1IiEeibjuLm5_lcNQ" name="other" type="_WWme4FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdo7DFIiEeibjuLm5_lcNQ" name="agreement" type="_WWkpsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdo7DVIiEeibjuLm5_lcNQ" type="_WWkpsVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final Player player = freeColClient.getMyPlayer();&#xD;
     final Player otherPlayer = agreement.getOtherPlayer(player);&#xD;
     StringTemplate t, nation = otherPlayer.getNationLabel();&#xD;
&#xD;
     switch (agreement.getStatus()) {&#xD;
     case ACCEPT_TRADE:&#xD;
         boolean visibilityChange = false;&#xD;
         for (Colony c : agreement.getColoniesGivenBy(player)) {&#xD;
             player.removeSettlement(c);//-vis(player)&#xD;
             visibilityChange = true;&#xD;
         }&#xD;
         for (Unit u : agreement.getUnitsGivenBy(player)) {&#xD;
             player.removeUnit(u);//-vis(player)&#xD;
             visibilityChange = true;&#xD;
         }&#xD;
         if (visibilityChange) player.invalidateCanSeeTiles();//+vis(player)&#xD;
         ModelMessage mm&#xD;
             = new ModelMessage(ModelMessage.MessageType.FOREIGN_DIPLOMACY,&#xD;
                                &quot;diplomacy.offerAccepted&quot;, otherPlayer)&#xD;
                 .addStringTemplate(&quot;%nation%&quot;, nation);&#xD;
         player.addModelMessage(mm);&#xD;
         updateGUI(null);&#xD;
         break;&#xD;
     case REJECT_TRADE:&#xD;
         t = StringTemplate.template(&quot;diplomacy.offerRejected&quot;)&#xD;
             .addStringTemplate(&quot;%nation%&quot;, nation);&#xD;
         gui.showInformationMessage(t);&#xD;
         break;&#xD;
     case PROPOSE_TRADE:&#xD;
         t = agreement.getReceiveMessage(otherPlayer);&#xD;
         DiplomaticTrade ourAgreement&#xD;
             = gui.showNegotiationDialog(our, other, agreement, t);&#xD;
         if (ourAgreement == null) {&#xD;
             agreement.setStatus(TradeStatus.REJECT_TRADE);&#xD;
         } else {&#xD;
             agreement = ourAgreement;&#xD;
         }&#xD;
         return agreement;&#xD;
     default:&#xD;
         logger.warning(&quot;Bogus trade status: &quot; + agreement.getStatus());&#xD;
         break;&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdpiEFIiEeibjuLm5_lcNQ" name="disbandUnit" specification="_WbciolIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdpiEVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdpiElIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null) return false;&#xD;
&#xD;
     if (unit.getColony() != null&#xD;
         &amp;&amp; !gui.confirmLeaveColony(unit)) return false;&#xD;
     final Tile tile = (gui.isShowingSubPanel()) ? null : unit.getTile();&#xD;
     if (!gui.confirm(tile, StringTemplate.key(&quot;disbandUnit.text&quot;),&#xD;
                      unit, &quot;disbandUnit.yes&quot;, &quot;cancel&quot;))&#xD;
         return false;&#xD;
&#xD;
     // Try to disband&#xD;
     boolean ret = askServer().disbandUnit(unit) &amp;&amp; unit.isDisposed();&#xD;
     if (ret) {&#xD;
         updateGUI(tile);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdpiE1IiEeibjuLm5_lcNQ" name="displayHighScores" specification="_Vy5U4FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdpiFFIiEeibjuLm5_lcNQ" name="high">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdpiFVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;HighScore> scores = askServer().getHighScores();&#xD;
     gui.showHighScoresPanel((high == null) ? null&#xD;
         : (high) ? &quot;highscores.yes&quot; : &quot;highscores.no&quot;,&#xD;
         scores);&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdpiFlIiEeibjuLm5_lcNQ" name="displayModelMessages" specification="_Vy578VIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdpiF1IiEeibjuLm5_lcNQ" name="allMessages">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdpiGFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return displayModelMessages(allMessages, false);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdpiGVIiEeibjuLm5_lcNQ" name="emigrate" specification="_WbdJsFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdpiGlIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdpiG1IiEeibjuLm5_lcNQ" name="slot">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdpiHFIiEeibjuLm5_lcNQ" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdpiHVIiEeibjuLm5_lcNQ" name="foY">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (player == null || !player.isColonial()&#xD;
         || !MigrationType.validMigrantSlot(slot)) return;&#xD;
&#xD;
     if (askEmigrate(player.getEurope(), slot) != null) {&#xD;
         emigration(player, n, foY);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdpiHlIiEeibjuLm5_lcNQ" name="endTurn" specification="_Vy6jAFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdpiH1IiEeibjuLm5_lcNQ" name="showDialog">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdpiIFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn()) return false;&#xD;
&#xD;
     return doEndTurn(showDialog &amp;&amp; freeColClient.getClientOptions()&#xD;
         .getBoolean(ClientOptions.SHOW_END_TURN_DIALOG));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdqJIFIiEeibjuLm5_lcNQ" name="equipUnitForRole" specification="_WbdwwFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdqJIVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdqJIlIiEeibjuLm5_lcNQ" name="role" type="_WX-X4FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdqJI1IiEeibjuLm5_lcNQ" name="roleCount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdqJJFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null || role == null || 0 > roleCount&#xD;
         || roleCount > role.getMaximumCount()) return false;&#xD;
     if (role == unit.getRole()&#xD;
         &amp;&amp; roleCount == unit.getRoleCount()) return true;&#xD;
&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     final Colony colony = unit.getColony();&#xD;
     ColonyWas colonyWas = (colony != null) ? new ColonyWas(colony) : null;&#xD;
     final Europe europe = player.getEurope();&#xD;
     EuropeWas europeWas = (europe != null) ? new EuropeWas(europe) : null;&#xD;
     final Market market = (europe != null) ? player.getMarket() : null;&#xD;
     MarketWas marketWas = (market != null) ? new MarketWas(player) : null;&#xD;
     int price = -1;&#xD;
&#xD;
     List&lt;AbstractGoods> req = unit.getGoodsDifference(role, roleCount);&#xD;
     if (unit.isInEurope()) {&#xD;
         for (AbstractGoods ag : req) {&#xD;
             GoodsType goodsType = ag.getType();&#xD;
             if (!player.canTrade(goodsType) &amp;&amp; !payArrears(goodsType)) {&#xD;
                 return false; // payment failed&#xD;
             }&#xD;
         }&#xD;
         price = player.getEurope().priceGoods(req);&#xD;
         if (price &lt; 0 || !player.checkGold(price)) return false;&#xD;
     } else if (colony != null) {&#xD;
         for (AbstractGoods ag : req) {&#xD;
             if (colony.getGoodsCount(ag.getType()) &lt; ag.getAmount()) {&#xD;
                 StringTemplate template = StringTemplate&#xD;
                     .template(&quot;equipUnit.impossible&quot;)&#xD;
                     .addName(&quot;%colony%&quot;, colony.getName())&#xD;
                     .addNamed(&quot;%equipment%&quot;, ag.getType())&#xD;
                     .addStringTemplate(&quot;%unit%&quot;,&#xD;
                         unit.getLabel(Unit.UnitLabelType.NATIONAL));&#xD;
                 gui.showInformationMessage(unit, template);&#xD;
                 return false;&#xD;
             }&#xD;
         }&#xD;
     } else {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askServer().equipUnitForRole(unit, role, roleCount)&#xD;
         &amp;&amp; unit.getRole() == role;&#xD;
     if (ret) {&#xD;
         if (colonyWas != null) colonyWas.fireChanges();&#xD;
         if (europeWas != null) europeWas.fireChanges();&#xD;
         if (marketWas != null) marketWas.fireChanges(req);&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdqJJVIiEeibjuLm5_lcNQ" name="error" specification="_Vy7xIFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdqJJlIiEeibjuLm5_lcNQ" name="messageId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdqJJ1IiEeibjuLm5_lcNQ" name="message">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>gui.showErrorMessage(messageId, message);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdqJKFIiEeibjuLm5_lcNQ" name="executeGotoOrders" specification="_Vy8YMFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdqJKVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn()) return false;&#xD;
&#xD;
     return doExecuteGotoOrders();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdqJKlIiEeibjuLm5_lcNQ" name="firstContact" specification="_WbeX0VIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdqJK1IiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdqJLFIiEeibjuLm5_lcNQ" name="other" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdqJLVIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdqJLlIiEeibjuLm5_lcNQ" name="result">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdqJL1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (player == null || player == null || player == other&#xD;
         || tile == null) return false;&#xD;
&#xD;
     boolean ret = askServer().firstContact(player, other, tile, result);&#xD;
     if (ret) {&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdqwMFIiEeibjuLm5_lcNQ" name="firstContact" specification="_Wbe-5FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdqwMVIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdqwMlIiEeibjuLm5_lcNQ" name="other" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdqwM1IiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdqwNFIiEeibjuLm5_lcNQ" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>gui.showFirstContactDialog(player, other, tile, n,&#xD;
         (Boolean b) -> firstContact(player, other, tile, b));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdqwNVIiEeibjuLm5_lcNQ" name="fountainOfYouth" specification="_Vy8_QFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdqwNlIiEeibjuLm5_lcNQ" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Player player = freeColClient.getMyPlayer();&#xD;
     final boolean fountainOfYouth = true;&#xD;
     gui.showEmigrationDialog(player, fountainOfYouth,&#xD;
         (Integer value) -> { // Value is a valid slot&#xD;
             emigrate(player,&#xD;
                      Europe.MigrationType.convertToMigrantSlot(value),&#xD;
                      n-1, fountainOfYouth);&#xD;
         });&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdqwN1IiEeibjuLm5_lcNQ" name="getNationSummary" specification="_Wbfl9FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdqwOFIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdqwOVIiEeibjuLm5_lcNQ" type="_WX77oVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>if (player == null) return null;&#xD;
&#xD;
     return askServer().getNationSummary(player);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdqwOlIiEeibjuLm5_lcNQ" name="getNewTradeRoute" specification="_WbgNAlIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdqwO1IiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdqwPFIiEeibjuLm5_lcNQ" type="_WWvo0VIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>if (player == null) return null;&#xD;
&#xD;
     final int n = player.getTradeRoutes().size();&#xD;
     return (askServer().getNewTradeRoute()&#xD;
         &amp;&amp; player.getTradeRoutes().size() == n + 1)&#xD;
         ? player.getTradeRoutes().get(n)&#xD;
         : null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdqwPVIiEeibjuLm5_lcNQ" name="getREFUnits" specification="_Vy9mUFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdqwPlIiEeibjuLm5_lcNQ" type="_WXugQlIiEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WdqwP1IiEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (!requireOurTurn()) ? Collections.&lt;AbstractUnit>emptyList()&#xD;
         : askServer().getREFUnits();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdrXQFIiEeibjuLm5_lcNQ" name="getServerStatistics" specification="_Vy-NYVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdrXQVIiEeibjuLm5_lcNQ" type="_WYYnkFIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return askServer().getStatistics();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdrXQlIiEeibjuLm5_lcNQ" name="goToTile" specification="_Wbg0EFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdrXQ1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdrXRFIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdrXRVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null&#xD;
         || !freeColClient.getMyPlayer().owns(unit)) return false;&#xD;
&#xD;
     if (!gui.confirmClearTradeRoute(unit)) return false;&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askSetDestination(unit, tile);&#xD;
     if (ret) {&#xD;
         moveToDestination(unit, null);&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdrXRlIiEeibjuLm5_lcNQ" name="ignoreMessage" specification="_WbhbIVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdrXR1IiEeibjuLm5_lcNQ" name="message" type="_WWr-cVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdrXSFIiEeibjuLm5_lcNQ" name="flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdrXSVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String key;&#xD;
     if (message == null&#xD;
         || (key = message.getIgnoredMessageKey()) == null) return false;&#xD;
&#xD;
     if (flag) {&#xD;
         final Turn turn = freeColClient.getGame().getTurn();&#xD;
         if (!continueIgnoreMessage(key, turn)) {&#xD;
             startIgnoringMessage(key, turn);&#xD;
         }&#xD;
     } else {&#xD;
         stopIgnoringMessage(key);&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdrXSlIiEeibjuLm5_lcNQ" name="indianDemand" specification="_WbiCMFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdrXS1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdrXTFIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdrXTVIiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdrXTlIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdrXT1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (unit == null || colony == null) return false;&#xD;
&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     final int opt = freeColClient.getClientOptions()&#xD;
         .getInteger(ClientOptions.INDIAN_DEMAND_RESPONSE);&#xD;
     boolean accepted;&#xD;
     ModelMessage m = null;&#xD;
     String nation = Messages.message(unit.getOwner().getNationLabel());&#xD;
     if (type == null) {&#xD;
         switch (opt) {&#xD;
         case ClientOptions.INDIAN_DEMAND_RESPONSE_ASK:&#xD;
             accepted = gui.confirm(colony.getTile(), StringTemplate&#xD;
                 .template(&quot;indianDemand.gold.text&quot;)&#xD;
                 .addName(&quot;%nation%&quot;, nation)&#xD;
                 .addName(&quot;%colony%&quot;, colony.getName())&#xD;
                 .addAmount(&quot;%amount%&quot;, amount),&#xD;
                 unit, &quot;accept&quot;, &quot;indianDemand.gold.no&quot;);&#xD;
             break;&#xD;
         case ClientOptions.INDIAN_DEMAND_RESPONSE_ACCEPT:&#xD;
             m = new ModelMessage(ModelMessage.MessageType.DEMANDS,&#xD;
                 &quot;indianDemand.gold.text&quot;, colony, unit)&#xD;
                 .addName(&quot;%nation%&quot;, nation)&#xD;
                 .addName(&quot;%colony%&quot;, colony.getName())&#xD;
                 .addAmount(&quot;%amount%&quot;, amount);&#xD;
             accepted = true;&#xD;
             break;&#xD;
         case ClientOptions.INDIAN_DEMAND_RESPONSE_REJECT:&#xD;
             m = new ModelMessage(ModelMessage.MessageType.DEMANDS,&#xD;
                 &quot;indianDemand.gold.text&quot;, colony, unit)&#xD;
                 .addName(&quot;%nation%&quot;, nation)&#xD;
                 .addName(&quot;%colony%&quot;, colony.getName())&#xD;
                 .addAmount(&quot;%amount%&quot;, amount);&#xD;
             accepted = false;&#xD;
             break;&#xD;
         default:&#xD;
             throw new RuntimeException(&quot;Impossible option value.&quot;);&#xD;
         }&#xD;
     } else {&#xD;
         switch (opt) {&#xD;
         case ClientOptions.INDIAN_DEMAND_RESPONSE_ASK:&#xD;
             if (type.isFoodType()) {&#xD;
                 accepted = gui.confirm(colony.getTile(),&#xD;
                     StringTemplate.template(&quot;indianDemand.food.text&quot;)&#xD;
                     .addName(&quot;%nation%&quot;, nation)&#xD;
                     .addName(&quot;%colony%&quot;, colony.getName())&#xD;
                     .addAmount(&quot;%amount%&quot;, amount),&#xD;
                     unit, &quot;indianDemand.food.yes&quot;, &quot;indianDemand.food.no&quot;);&#xD;
             } else {&#xD;
                 accepted = gui.confirm(colony.getTile(),&#xD;
                     StringTemplate.template(&quot;indianDemand.other.text&quot;)&#xD;
                     .addName(&quot;%nation%&quot;, nation)&#xD;
                     .addName(&quot;%colony%&quot;, colony.getName())&#xD;
                     .addAmount(&quot;%amount%&quot;, amount)&#xD;
                     .addNamed(&quot;%goods%&quot;, type),&#xD;
                     unit, &quot;accept&quot;, &quot;indianDemand.other.no&quot;);&#xD;
             }&#xD;
             break;&#xD;
         case ClientOptions.INDIAN_DEMAND_RESPONSE_ACCEPT:&#xD;
             if (type.isFoodType()) {&#xD;
                 m = new ModelMessage(ModelMessage.MessageType.DEMANDS,&#xD;
                     &quot;indianDemand.food.text&quot;, colony, unit)&#xD;
                     .addName(&quot;%nation%&quot;, nation)&#xD;
                     .addName(&quot;%colony%&quot;, colony.getName())&#xD;
                     .addAmount(&quot;%amount%&quot;, amount);&#xD;
             } else {&#xD;
                 m = new ModelMessage(ModelMessage.MessageType.DEMANDS,&#xD;
                     &quot;indianDemand.other.text&quot;, colony, unit)&#xD;
                     .addName(&quot;%nation%&quot;, nation)&#xD;
                     .addName(&quot;%colony%&quot;, colony.getName())&#xD;
                     .addAmount(&quot;%amount%&quot;, amount)&#xD;
                     .addNamed(&quot;%goods%&quot;, type);&#xD;
             }&#xD;
             accepted = true;&#xD;
             break;&#xD;
         case ClientOptions.INDIAN_DEMAND_RESPONSE_REJECT:&#xD;
             if (type.isFoodType()) {&#xD;
                 m = new ModelMessage(ModelMessage.MessageType.DEMANDS,&#xD;
                     &quot;indianDemand.food.text&quot;, colony, unit)&#xD;
                     .addName(&quot;%nation%&quot;, nation)&#xD;
                     .addName(&quot;%colony%&quot;, colony.getName())&#xD;
                     .addAmount(&quot;%amount%&quot;, amount);&#xD;
             } else {&#xD;
                 m = new ModelMessage(ModelMessage.MessageType.DEMANDS,&#xD;
                     &quot;indianDemand.other.text&quot;, colony, unit)&#xD;
                     .addName(&quot;%nation%&quot;, nation)&#xD;
                     .addName(&quot;%colony%&quot;, colony.getName())&#xD;
                     .addAmount(&quot;%amount%&quot;, amount)&#xD;
                     .addNamed(&quot;%goods%&quot;, type);&#xD;
             }&#xD;
             accepted = false;&#xD;
             break;&#xD;
         default:&#xD;
             throw new RuntimeException(&quot;Impossible option value.&quot;);&#xD;
         }&#xD;
     }&#xD;
     if (m != null) {&#xD;
         player.addModelMessage(m);&#xD;
         displayModelMessages(false);&#xD;
     }&#xD;
     return accepted;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdr-UFIiEeibjuLm5_lcNQ" name="leaveShip" specification="_WbipQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdr-UVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdr-UlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Unit carrier;&#xD;
     if (!requireOurTurn() || unit == null&#xD;
         || (carrier = unit.getCarrier()) == null) return false;&#xD;
&#xD;
     // Proceed to disembark&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askServer().disembark(unit)&#xD;
         &amp;&amp; unit.getLocation() != carrier;&#xD;
     if (ret) {&#xD;
         checkCashInTreasureTrain(unit);&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdr-U1IiEeibjuLm5_lcNQ" name="loadCargo" specification="_WbjQUFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdr-VFIiEeibjuLm5_lcNQ" name="goods" type="_WWo7IFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdr-VVIiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdr-VlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || goods == null || goods.getAmount() &lt;= 0&#xD;
         || goods.getLocation() == null&#xD;
         || carrier == null || !carrier.isCarrier()) return false;&#xD;
&#xD;
     if (goods.getLocation() instanceof Europe) {&#xD;
         return buyGoods(goods.getType(), goods.getAmount(), carrier);&#xD;
     }&#xD;
     UnitWas carrierWas = new UnitWas(carrier);&#xD;
     UnitWas sourceWas = null;&#xD;
     ColonyWas colonyWas = null;&#xD;
     if (goods.getLocation() instanceof Unit) {&#xD;
         Unit source = (Unit)goods.getLocation();&#xD;
         sourceWas = new UnitWas(source);&#xD;
     } else {&#xD;
         Colony colony = carrier.getColony();&#xD;
         if (colony == null) return false;&#xD;
         colonyWas = new ColonyWas(colony);&#xD;
     }&#xD;
&#xD;
     boolean ret = askLoadGoods(goods.getLocation(), goods.getType(),&#xD;
                                goods.getAmount(), carrier);&#xD;
     if (ret) {&#xD;
         sound(&quot;sound.event.loadCargo&quot;);&#xD;
         if (colonyWas != null) colonyWas.fireChanges();&#xD;
         if (sourceWas != null) sourceWas.fireChanges();&#xD;
         carrierWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdr-V1IiEeibjuLm5_lcNQ" name="loadGame" specification="_VzACkFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>File file = gui.showLoadSaveFileDialog();&#xD;
     if (file == null) return;&#xD;
     if (freeColClient.isInGame() &amp;&amp; !gui.confirmStopGame()) return;&#xD;
&#xD;
     freeColClient.getConnectController().quitGame(true);&#xD;
     turnReportMessages.clear();&#xD;
     gui.setActiveUnit(null);&#xD;
     gui.removeInGameComponents();&#xD;
     FreeColDirectories.setSavegameFile(file.getPath());&#xD;
     freeColClient.getConnectController().startSavedGame(file, null);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdr-WFIiEeibjuLm5_lcNQ" name="lootCargo" specification="_WbjQVFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdr-WVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdr-WlIiEeibjuLm5_lcNQ" name="goods" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdr-W1IiEeibjuLm5_lcNQ" name="defenderId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdr-XFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (unit == null || goods == null || goods.isEmpty()&#xD;
         || defenderId == null) return false;&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askServer().loot(unit, defenderId, goods);&#xD;
     if (ret) {&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdslYFIiEeibjuLm5_lcNQ" name="loot" specification="_WbkecVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdslYVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdslYlIiEeibjuLm5_lcNQ" name="goods" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdslY1IiEeibjuLm5_lcNQ" name="defenderId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>gui.showCaptureGoodsDialog(unit, goods,&#xD;
         (List&lt;Goods> gl) -> lootCargo(unit, gl, defenderId));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdslZFIiEeibjuLm5_lcNQ" name="monarchAction" specification="_WblskFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdslZVIiEeibjuLm5_lcNQ" name="action" type="_WX6tgVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdslZlIiEeibjuLm5_lcNQ" name="accept">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdslZ1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (action == null) return false;&#xD;
&#xD;
     boolean ret = false;&#xD;
     switch (action) {&#xD;
     case RAISE_TAX_ACT: case RAISE_TAX_WAR:&#xD;
     case MONARCH_MERCENARIES: case HESSIAN_MERCENARIES:&#xD;
         ret = askServer().answerMonarch(action, accept);&#xD;
         break;&#xD;
     default:&#xD;
         break;&#xD;
     }&#xD;
     if (ret) {&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdslaFIiEeibjuLm5_lcNQ" name="monarch" specification="_WbmToFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdslaVIiEeibjuLm5_lcNQ" name="action" type="_WX6tgVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdslalIiEeibjuLm5_lcNQ" name="template" type="_WWQgoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdsla1IiEeibjuLm5_lcNQ" name="monarchKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>gui.showMonarchDialog(action, template, monarchKey,&#xD;
         (Boolean b) -> monarchAction(action, b));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdslbFIiEeibjuLm5_lcNQ" name="moveTo" specification="_Wbm6sFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdslbVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdslblIiEeibjuLm5_lcNQ" name="destination" type="_WX3DIVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdslb1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null&#xD;
         || destination == null) return false;&#xD;
&#xD;
     // Sanity check current state.&#xD;
     if (destination instanceof Europe) {&#xD;
         if (unit.isInEurope()) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     } else if (destination instanceof Map) {&#xD;
         if (unit.hasTile() &amp;&amp; unit.getTile().getMap() == destination) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     } else if (destination instanceof Settlement) {&#xD;
         if (unit.hasTile()) {&#xD;
             sound(&quot;sound.event.illegalMove&quot;);&#xD;
             return false;&#xD;
         }&#xD;
     } else {&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     // Autoload?&#xD;
     boolean update = false;&#xD;
     if (freeColClient.getClientOptions()&#xD;
         .getBoolean(ClientOptions.AUTOLOAD_EMIGRANTS)&#xD;
         &amp;&amp; unit.isInEurope()) {&#xD;
         for (Unit u : unit.getOwner().getEurope().getUnitList()) {&#xD;
             if (!u.isNaval()&#xD;
                 &amp;&amp; u.getState() == UnitState.SENTRY&#xD;
                 &amp;&amp; unit.canAdd(u)) {&#xD;
                 if (askEmbark(u, unit)) update = true;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askServer().moveTo(unit, destination);&#xD;
     if (ret) {&#xD;
         unitWas.fireChanges();&#xD;
         update = true;&#xD;
     }&#xD;
     if (update) updateGUI(null);&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdtMcFIiEeibjuLm5_lcNQ" name="moveUnit" specification="_WbnhwFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdtMcVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdtMclIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdtMc1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null&#xD;
         || direction == null || !unit.hasTile()) return false;&#xD;
&#xD;
     if (!askClearGotoOrders(unit)) return false;&#xD;
&#xD;
     final int unitCount = unit.getUnitCount(),&#xD;
         goodsCount = unit.getGoodsList().size();&#xD;
     final Tile oldTile = unit.getTile();&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     ColonyWas colonyWas = (unit.getColony() == null) ? null&#xD;
         : new ColonyWas(unit.getColony());&#xD;
     unit.setState(UnitState.ACTIVE);&#xD;
     moveDirection(unit, direction, true);&#xD;
     boolean ret = unit.getTile() != oldTile&#xD;
         || unitWas.fireChanges();&#xD;
     if (ret) {&#xD;
         if (colonyWas != null) colonyWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
         if (!unit.couldMove() &amp;&amp; unit.hasTile()) {&#xD;
             // Show colony panel if unit out of moves&#xD;
             Colony colony = unit.getTile().getColony();&#xD;
             if (colony != null) colonyPanel(colony, unit);&#xD;
         }&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdtMdFIiEeibjuLm5_lcNQ" name="moveTileCursor" specification="_WboI0FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdtMdVIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdtMdlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (direction == null) return false;&#xD;
&#xD;
     final Tile tile = gui.getSelectedTile();&#xD;
     if (tile == null) return false;&#xD;
&#xD;
     final Tile newTile = tile.getNeighbourOrNull(direction);&#xD;
     if (newTile == null) return false;&#xD;
&#xD;
     gui.setSelectedTile(newTile);&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdtMd1IiEeibjuLm5_lcNQ" name="nameNewLand" specification="_Wbov4VIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdtMeFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdtMeVIiEeibjuLm5_lcNQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdtMelIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (unit == null || name == null) return false;&#xD;
&#xD;
     // Respond to the server.&#xD;
     if (!askServer().newLandName(unit, name)) return false;&#xD;
&#xD;
     // The name is set, bring up the first landing panel.&#xD;
     final Player player = unit.getOwner();&#xD;
     StringTemplate t = StringTemplate.template(&quot;event.firstLanding&quot;)&#xD;
         .addName(&quot;%name%&quot;, name);&#xD;
     gui.showEventPanel(Messages.message(t), &quot;image.flavor.event.firstLanding&quot;,&#xD;
                        null);&#xD;
&#xD;
     // Add tutorial message.&#xD;
     final String key = FreeColActionUI.getHumanKeyStrokeText(freeColClient&#xD;
         .getActionManager().getFreeColAction(&quot;buildColonyAction&quot;)&#xD;
         .getAccelerator());&#xD;
     player.addModelMessage(new ModelMessage(ModelMessage.MessageType.TUTORIAL,&#xD;
             &quot;buildColony.tutorial&quot;, player)&#xD;
         .addName(&quot;%colonyKey%&quot;, key)&#xD;
         .add(&quot;%colonyMenuItem%&quot;, &quot;buildColonyAction.name&quot;)&#xD;
         .add(&quot;%ordersMenuItem%&quot;, &quot;menuBar.orders&quot;));&#xD;
     displayModelMessages(false);&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdtzgFIiEeibjuLm5_lcNQ" name="nameNewRegion" specification="_WbpW8VIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdtzgVIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_WdtzglIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_Wdtzg1IiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdtzhFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_WdtzhVIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WdtzhlIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdtzh1IiEeibjuLm5_lcNQ" name="region" type="_WWuasVIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_WdtziFIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WdtziVIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdtzilIiEeibjuLm5_lcNQ" name="name">
                    <eAnnotations xmi:id="_Wdtzi1IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WdtzjFIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdtzjVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (tile == null || unit == null || region == null) return false;&#xD;
&#xD;
     return askServer().newRegionName(region, tile, unit, name);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdtzjlIiEeibjuLm5_lcNQ" name="newLandName" specification="_WbqlEFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdtzj1IiEeibjuLm5_lcNQ" name="defaultName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdtzkFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>gui.showNamingDialog(&#xD;
         StringTemplate.key(&quot;newLand.text&quot;), defaultName, unit,&#xD;
         (String name) -> {&#xD;
             if (name == null || name.isEmpty()) name = defaultName;&#xD;
             nameNewLand(unit, name);&#xD;
         });&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdtzkVIiEeibjuLm5_lcNQ" name="newRegionName" specification="_WbrMIFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdtzklIiEeibjuLm5_lcNQ" name="region" type="_WWuasVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdtzk1IiEeibjuLm5_lcNQ" name="defaultName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdtzlFIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdtzlVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>if (region.hasName()) {&#xD;
         if (region.isPacific()) {&#xD;
             gui.showEventPanel(Messages.message(&quot;event.discoverPacific&quot;),&#xD;
                                &quot;image.flavor.event.discoverPacific&quot;, null);&#xD;
         }&#xD;
         nameNewRegion(tile, unit, region, defaultName);&#xD;
     } else {&#xD;
         gui.showNamingDialog(&#xD;
             StringTemplate.template(&quot;nameRegion.text&quot;)&#xD;
                           .addStringTemplate(&quot;%type%&quot;, region.getLabel()),&#xD;
             defaultName, unit,&#xD;
             (String name) -> {&#xD;
                 if (name == null || name.isEmpty()) name = defaultName;&#xD;
                 nameNewRegion(tile, unit, region, name);&#xD;
             });&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdtzllIiEeibjuLm5_lcNQ" name="newTurn" specification="_VzCe0FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdtzl1IiEeibjuLm5_lcNQ" name="turn">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdtzmFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Game game = freeColClient.getGame();&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
&#xD;
     if (turn &lt; 0) {&#xD;
         logger.warning(&quot;Bad turn in newTurn: &quot; + turn);&#xD;
         return false;&#xD;
     }&#xD;
     Turn newTurn = new Turn(turn);&#xD;
     game.setTurn(newTurn);&#xD;
     logger.info(&quot;New turn: &quot; + newTurn + &quot;/&quot; + turn);&#xD;
&#xD;
     final boolean alert = freeColClient.getClientOptions()&#xD;
         .getBoolean(ClientOptions.AUDIO_ALERTS);&#xD;
     if (alert) sound(&quot;sound.event.alertSound&quot;);&#xD;
&#xD;
     final Turn currTurn = game.getTurn();&#xD;
     if (currTurn.isFirstSeasonTurn()) {&#xD;
         player.addModelMessage(new ModelMessage(MessageType.WARNING,&#xD;
                                                 &quot;twoTurnsPerYear&quot;, player)&#xD;
             .addStringTemplate(&quot;%year%&quot;, currTurn.getLabel())&#xD;
             .addAmount(&quot;%amount%&quot;, currTurn.getSeasonNumber()));&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdtzmVIiEeibjuLm5_lcNQ" name="nextActiveUnit" specification="_VzDF4lIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdtzmlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn()) return false;&#xD;
&#xD;
     updateGUI(null);&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WduakFIiEeibjuLm5_lcNQ" name="nextModelMessage" specification="_VzDs8FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WduakVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return displayModelMessages(false, false);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WduaklIiEeibjuLm5_lcNQ" name="payArrears" specification="_WbrMJVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wduak1IiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdualFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || type == null) return false;&#xD;
&#xD;
     Player player = freeColClient.getMyPlayer();&#xD;
     int arrears = player.getArrears(type);&#xD;
     if (arrears &lt;= 0) return false;&#xD;
     if (!player.checkGold(arrears)) {&#xD;
         gui.showInformationMessage(StringTemplate&#xD;
             .template(&quot;payArrears.noGold&quot;)&#xD;
                 .addAmount(&quot;%amount%&quot;, arrears));&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     StringTemplate t = StringTemplate.template(&quot;payArrears.text&quot;)&#xD;
         .addAmount(&quot;%amount%&quot;, arrears);&#xD;
     if (!gui.confirm(null, t, type, &quot;ok&quot;, &quot;cancel&quot;)) return false;&#xD;
&#xD;
     boolean ret = askServer().payArrears(type) &amp;&amp; player.canTrade(type);&#xD;
     if (ret) {&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdualVIiEeibjuLm5_lcNQ" name="payForBuilding" specification="_WbrzMVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WduallIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdual1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || colony == null) return false;&#xD;
&#xD;
     if (!getSpecification().getBoolean(GameOptions.PAY_FOR_BUILDING)) {&#xD;
         gui.showInformationMessage(&quot;payForBuilding.disabled&quot;);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     if (!colony.canPayToFinishBuilding()) {&#xD;
         gui.showInformationMessage(&quot;info.notEnoughGold&quot;);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     final int price = colony.getPriceForBuilding();&#xD;
     StringTemplate t = StringTemplate.template(&quot;payForBuilding.text&quot;)&#xD;
         .addAmount(&quot;%amount%&quot;, price);&#xD;
     if (!gui.confirm(null, t, colony, &quot;yes&quot;, &quot;no&quot;)) return false;&#xD;
&#xD;
     ColonyWas colonyWas = new ColonyWas(colony);&#xD;
     boolean ret = askServer().payForBuilding(colony)&#xD;
         &amp;&amp; colony.getPriceForBuilding() == 0;&#xD;
     if (ret) {&#xD;
         colonyWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WduamFIiEeibjuLm5_lcNQ" name="putOutsideColony" specification="_WcIfIFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WduamVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WduamlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Colony colony;&#xD;
     if (!requireOurTurn() || unit == null&#xD;
         || (colony = unit.getColony()) == null) return false;&#xD;
&#xD;
     if (!gui.confirmLeaveColony(unit)) return false;&#xD;
&#xD;
     ColonyWas colonyWas = new ColonyWas(colony);&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askServer().putOutsideColony(unit)&#xD;
         &amp;&amp; unit.getLocation() == colony.getTile();&#xD;
     if (ret) {&#xD;
         colonyWas.fireChanges();&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wduam1IiEeibjuLm5_lcNQ" name="reconnect" specification="_VzEUAFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>if (gui.confirm(&quot;reconnect.text&quot;, &quot;reconnect.no&quot;, &quot;reconnect.yes&quot;)) {&#xD;
         logger.finest(&quot;Reconnect quit.&quot;);&#xD;
         freeColClient.quit();&#xD;
     } else {&#xD;
         logger.finest(&quot;Reconnect accepted.&quot;);&#xD;
         freeColClient.getConnectController().reconnect();&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WduanFIiEeibjuLm5_lcNQ" name="recruitUnitInEurope" specification="_VzE7EFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WduanVIiEeibjuLm5_lcNQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WduanlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn()&#xD;
         || !MigrationType.validMigrantIndex(index)) return false;&#xD;
&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     if (!player.isColonial()) return false;&#xD;
&#xD;
     if (!player.checkGold(player.getRecruitPrice())) {&#xD;
         gui.showInformationMessage(&quot;info.notEnoughGold&quot;);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     Unit newUnit = askEmigrate(player.getEurope(),&#xD;
                                MigrationType.migrantIndexToSlot(index));&#xD;
     if (newUnit != null) {&#xD;
         player.setNextActiveUnit(newUnit);&#xD;
         gui.setActiveUnit(newUnit);&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return newUnit != null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdvBoFIiEeibjuLm5_lcNQ" name="remove" specification="_WcJGMFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdvBoVIiEeibjuLm5_lcNQ" name="objects" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdvBolIiEeibjuLm5_lcNQ" name="divert" type="_WWme4FIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>final Player player = freeColClient.getMyPlayer();&#xD;
     boolean visibilityChange = false;&#xD;
     for (FreeColGameObject fcgo : objects) {&#xD;
         if (divert != null) player.divertModelMessages(fcgo, divert);&#xD;
     &#xD;
         if (fcgo instanceof Settlement) {&#xD;
             Settlement settlement = (Settlement)fcgo;&#xD;
             if (settlement != null &amp;&amp; settlement.getOwner() != null) {&#xD;
                 settlement.getOwner().removeSettlement(settlement);&#xD;
             }&#xD;
             visibilityChange = true;//-vis(player)&#xD;
             &#xD;
         } else if (fcgo instanceof Unit) {&#xD;
             // Deselect the object if it is the current active unit.&#xD;
             Unit u = (Unit)fcgo;&#xD;
             if (u == gui.getActiveUnit()) gui.setActiveUnit(null);&#xD;
&#xD;
             // Temporary hack until we have real containers.&#xD;
             if (u != null &amp;&amp; u.getOwner() != null) {&#xD;
                 u.getOwner().removeUnit(u);&#xD;
             }&#xD;
             visibilityChange = true;//-vis(player)&#xD;
         }&#xD;
&#xD;
         // Do just the low level dispose that removes&#xD;
         // reference to this object in the client.  The other&#xD;
         // updates should have done the rest.&#xD;
         fcgo.disposeResources();&#xD;
     }&#xD;
     if (visibilityChange) player.invalidateCanSeeTiles();//+vis(player)&#xD;
&#xD;
     gui.refresh();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdvBo1IiEeibjuLm5_lcNQ" name="rename" specification="_WcKUUFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdvBpFIiEeibjuLm5_lcNQ" name="object" type="_WX7UkVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdvBpVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player player = freeColClient.getMyPlayer();&#xD;
     if (!(object instanceof Ownable)&#xD;
         || !player.owns((Ownable)object)) return false;&#xD;
&#xD;
     String name = null;&#xD;
     if (object instanceof Colony) {&#xD;
         Colony colony = (Colony) object;&#xD;
         name = gui.getInput(colony.getTile(),&#xD;
                             StringTemplate.key(&quot;renameColony.text&quot;),&#xD;
                             colony.getName(), &quot;rename&quot;, &quot;cancel&quot;);&#xD;
         if (name == null) { // User cancelled&#xD;
             return false;&#xD;
         } else if (name.isEmpty()) { // Zero length invalid&#xD;
             gui.showInformationMessage(&quot;info.enterSomeText&quot;);&#xD;
             return false;&#xD;
         } else if (colony.getName().equals(name)) { // No change&#xD;
             return false;&#xD;
         } else if (player.getSettlementByName(name) != null) {&#xD;
             // Colony name must be unique.&#xD;
             gui.showInformationMessage((Colony)object, StringTemplate&#xD;
                 .template(&quot;nameColony.notUnique&quot;)&#xD;
                 .addName(&quot;%name%&quot;, name));&#xD;
             return false;&#xD;
         }&#xD;
     } else if (object instanceof Unit) {&#xD;
         Unit unit = (Unit) object;&#xD;
         name = gui.getInput(unit.getTile(),&#xD;
                             StringTemplate.key(&quot;renameUnit.text&quot;),&#xD;
                             unit.getName(), &quot;rename&quot;, &quot;cancel&quot;);&#xD;
         if (name == null) return false; // User cancelled&#xD;
     } else {&#xD;
         logger.warning(&quot;Tried to rename an unsupported Nameable: &quot;&#xD;
             + object);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     return askServer().rename((FreeColGameObject)object, name);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdvBplIiEeibjuLm5_lcNQ" name="saveGame" specification="_VzFiIFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdvBp1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!freeColClient.canSaveCurrentGame()) return false;&#xD;
&#xD;
     final Game game = freeColClient.getGame();&#xD;
     if (game == null) return false; // Keyboard handling can race init&#xD;
     String fileName = getSaveGameString(game);&#xD;
     File file = gui.showSaveDialog(FreeColDirectories.getSaveDirectory(),&#xD;
                                    fileName);&#xD;
     if (file == null) return false;&#xD;
     final boolean confirm = freeColClient.getClientOptions()&#xD;
         .getBoolean(ClientOptions.CONFIRM_SAVE_OVERWRITE);&#xD;
     if (!confirm&#xD;
         || !file.exists()&#xD;
         || gui.confirm(&quot;saveConfirmationDialog.areYouSure.text&quot;,&#xD;
                        &quot;ok&quot;, &quot;cancel&quot;)) {&#xD;
         FreeColDirectories.setSavegameFile(file.getPath());&#xD;
         return saveGame(file);&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdvBqFIiEeibjuLm5_lcNQ" name="selectDestination" specification="_WcK7YFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdvBqVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdvBqlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null) return false;&#xD;
&#xD;
     if (!gui.confirmClearTradeRoute(unit)) return false;&#xD;
     Location destination = gui.showSelectDestinationDialog(unit);&#xD;
     if (destination == null) return false;&#xD;
&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askSetDestination(unit, destination);&#xD;
     if (ret) {&#xD;
         if (destination instanceof Europe) {&#xD;
             if (unit.hasTile()&#xD;
                 &amp;&amp; unit.getTile().isDirectlyHighSeasConnected()) {&#xD;
                 moveTo(unit, destination);&#xD;
             } else {&#xD;
                 moveToDestination(unit, null);&#xD;
             }&#xD;
         } else {&#xD;
             if (unit.isInEurope()) {&#xD;
                 moveTo(unit, destination);&#xD;
             } else {&#xD;
                 moveToDestination(unit, null);&#xD;
             }&#xD;
         }&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdvBq1IiEeibjuLm5_lcNQ" name="sellGoods" specification="_WcN-sFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdvBrFIiEeibjuLm5_lcNQ" name="goods" type="_WWo7IFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdvBrVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || goods == null&#xD;
         || !(goods.getLocation() instanceof Unit)) return false;&#xD;
&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     Unit carrier = (Unit)goods.getLocation();&#xD;
&#xD;
     Europe europe = player.getEurope();&#xD;
     EuropeWas europeWas = new EuropeWas(europe);&#xD;
     UnitWas unitWas = new UnitWas(carrier);&#xD;
     boolean ret = askUnloadGoods(goods.getType(), goods.getAmount(), carrier);&#xD;
     if (ret) {&#xD;
         sound(&quot;sound.event.sellCargo&quot;);&#xD;
         europeWas.fireChanges();&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdvosFIiEeibjuLm5_lcNQ" name="sendChat" specification="_VzGwQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdvosVIiEeibjuLm5_lcNQ" name="chat">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdvoslIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (chat == null) return false;&#xD;
&#xD;
     return askServer().chat(freeColClient.getMyPlayer(), chat);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdvos1IiEeibjuLm5_lcNQ" name="setBuildQueue" specification="_WcOlwVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdvotFIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdvotVIiEeibjuLm5_lcNQ" name="buildQueue" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdvotlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || colony == null&#xD;
         || buildQueue == null) return false;&#xD;
&#xD;
     ColonyWas colonyWas = new ColonyWas(colony);&#xD;
     boolean ret = askServer().setBuildQueue(colony, buildQueue);&#xD;
     if (ret) {&#xD;
         colonyWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdvot1IiEeibjuLm5_lcNQ" name="setCurrentPlayer" specification="_WcQa8FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdvouFIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdvouVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (FreeColDebugger.isInDebugMode(FreeColDebugger.DebugMode.MENUS)&#xD;
         &amp;&amp; freeColClient.currentPlayerIsMyPlayer()) {&#xD;
         gui.closeMenus();&#xD;
     }&#xD;
     FreeColDebugger.finishDebugRun(freeColClient, false);&#xD;
&#xD;
     final Game game = freeColClient.getGame();&#xD;
     game.setCurrentPlayer(player);&#xD;
&#xD;
     if (freeColClient.getMyPlayer().equals(player)) {&#xD;
         if (FreeColDebugger.isInDebugMode(FreeColDebugger.DebugMode.DESYNC)&#xD;
             &amp;&amp; DebugUtils.checkDesyncAction(freeColClient)) {&#xD;
             freeColClient.getConnectController().reconnect();&#xD;
             return false;&#xD;
         }&#xD;
&#xD;
         // Save the game (if it isn't newly loaded)&#xD;
         if (freeColClient.getFreeColServer() != null&#xD;
             &amp;&amp; game.getTurn().getNumber() > 0) autoSaveGame();&#xD;
&#xD;
         // Get turn report out quickly before more message display occurs.&#xD;
         player.removeDisplayedModelMessages();&#xD;
         displayModelMessages(true, true);&#xD;
&#xD;
         player.invalidateCanSeeTiles();&#xD;
&#xD;
         // Check for emigration.&#xD;
         Europe europe = player.getEurope();&#xD;
         if (player.hasAbility(Ability.SELECT_RECRUIT)) {&#xD;
             emigration(player, 0, false);&#xD;
         } else {&#xD;
             while (player.checkEmigrate()) {&#xD;
                 askEmigrate(europe,&#xD;
                     Europe.MigrationType.getUnspecificSlot());&#xD;
             }&#xD;
         }&#xD;
         &#xD;
         // Wake up human!&#xD;
         if (!freeColClient.isSinglePlayer()) {&#xD;
             sound(&quot;sound.anthem.&quot; + player.getNationId());&#xD;
         }&#xD;
&#xD;
         player.resetIterators();&#xD;
         updateGUI(player.getFallbackTile());&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdvoulIiEeibjuLm5_lcNQ" name="setDead" specification="_WcRCAVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdvou1IiEeibjuLm5_lcNQ" name="dead" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdvovFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (dead == null) return false;&#xD;
&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     if (player == dead) {&#xD;
         FreeColDebugger.finishDebugRun(freeColClient, true);&#xD;
         if (freeColClient.isSinglePlayer()) {&#xD;
             if (player.getPlayerType() == Player.PlayerType.RETIRED) {&#xD;
                 ; // Do nothing, retire routine will quit&#xD;
&#xD;
             } else if (player.getPlayerType() != Player.PlayerType.UNDEAD&#xD;
                 &amp;&amp; gui.confirm(&quot;defeatedSinglePlayer.text&quot;,&#xD;
                                &quot;defeatedSinglePlayer.yes&quot;, &quot;quit&quot;)) {&#xD;
                 freeColClient.askServer().enterRevengeMode();&#xD;
             } else {&#xD;
                 freeColClient.quit();&#xD;
             }&#xD;
         } else {&#xD;
             if (!gui.confirm(&quot;defeated.text&quot;, &quot;defeated.yes&quot;,&#xD;
                              &quot;quit&quot;)) freeColClient.quit();&#xD;
         }&#xD;
     } else {&#xD;
         player.setStance(dead, null);&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdwPwFIiEeibjuLm5_lcNQ" name="setGameConnected" specification="_VzHXUFIiEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>final Player player = freeColClient.getMyPlayer();&#xD;
     if (player != null) {&#xD;
         player.refilterModelMessages(freeColClient.getClientOptions());&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdw20FIiEeibjuLm5_lcNQ" name="setGoodsLevels" specification="_WcRpEFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdw20VIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdw20lIiEeibjuLm5_lcNQ" name="goodsType" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdw201IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (colony == null || goodsType == null) return false;&#xD;
&#xD;
     return askServer().setGoodsLevels(colony,&#xD;
                                       colony.getExportData(goodsType));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdw21FIiEeibjuLm5_lcNQ" name="setInDebugMode" specification="_VzH-YFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdw21VIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>FreeColDebugger.enableDebugMode(FreeColDebugger.DebugMode.MENUS);&#xD;
     updateGUI(null);&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdxd4FIiEeibjuLm5_lcNQ" name="setStance" specification="_WcSQIVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdxd4VIiEeibjuLm5_lcNQ" name="stance" type="_WWtzoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdxd4lIiEeibjuLm5_lcNQ" name="first" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdxd41IiEeibjuLm5_lcNQ" name="second" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdxd5FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (stance == null || first == null || second == null) return false;&#xD;
&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     Stance old = first.getStance(second);&#xD;
     try {&#xD;
         first.setStance(second, stance);&#xD;
     } catch (IllegalStateException e) {&#xD;
         logger.log(Level.WARNING, &quot;Illegal stance transition&quot;, e);&#xD;
         return false;&#xD;
     }&#xD;
     if (player == first &amp;&amp; old == Stance.UNCONTACTED) {&#xD;
         sound(&quot;sound.event.meet.&quot; + second.getNationId());&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdxd5VIiEeibjuLm5_lcNQ" name="setTradeRoutes" specification="_WcS3NFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdxd5lIiEeibjuLm5_lcNQ" name="routes" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdxd51IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (routes == null) return false;&#xD;
&#xD;
     return askServer().setTradeRoutes(routes);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdxd6FIiEeibjuLm5_lcNQ" name="spyColony" specification="_WcUFUVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdxd6VIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdxd6lIiEeibjuLm5_lcNQ" name="recover" type="_WZxHoVIiEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>gui.showSpyColonyPanel(tile, recover);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdxd61IiEeibjuLm5_lcNQ" name="trainUnitInEurope" specification="_WcUsYVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdxd7FIiEeibjuLm5_lcNQ" name="unitType" type="_WYCCQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdxd7VIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unitType == null) return false;&#xD;
&#xD;
     final Player player = freeColClient.getMyPlayer();&#xD;
     final Europe europe = player.getEurope();&#xD;
     if (!player.checkGold(europe.getUnitPrice(unitType))) {&#xD;
         gui.showInformationMessage(&quot;info.notEnoughGold&quot;);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     EuropeWas europeWas = new EuropeWas(europe);&#xD;
     Unit newUnit = null;&#xD;
     boolean ret = askServer().trainUnitInEurope(unitType)&#xD;
         &amp;&amp; (newUnit = europeWas.getNewUnit()) != null;&#xD;
     if (ret) {&#xD;
         europeWas.fireChanges();&#xD;
         player.setNextActiveUnit(newUnit);&#xD;
         gui.setActiveUnit(newUnit);&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdxd7lIiEeibjuLm5_lcNQ" name="unload" specification="_WcVTcFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdxd71IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdxd8FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null&#xD;
         || !unit.isCarrier()) return false;&#xD;
&#xD;
     boolean ret = true;&#xD;
     Colony colony = unit.getColony();&#xD;
     if (colony != null) { // In colony, unload units and goods.&#xD;
         for (Unit u : unit.getUnitList()) {&#xD;
             ret = leaveShip(u) &amp;&amp; ret;&#xD;
         }&#xD;
         for (Goods goods : unit.getGoodsList()) {&#xD;
             ret = unloadCargo(goods, false) &amp;&amp; ret;&#xD;
         }&#xD;
     } else if (unit.isInEurope()) { // In Europe, unload non-boycotted goods&#xD;
         Player player = freeColClient.getMyPlayer();&#xD;
         for (Goods goods : unit.getCompactGoodsList()) {&#xD;
             if (player.canTrade(goods.getType())) {&#xD;
                 ret = sellGoods(goods) &amp;&amp; ret;&#xD;
             }&#xD;
         }&#xD;
         if (unit.hasGoodsCargo()) { // Goods left here must be dumped.&#xD;
             gui.showDumpCargoDialog(unit,&#xD;
                 (List&lt;Goods> goodsList) -> {&#xD;
                     for (Goods g : goodsList) unloadCargo(g, true);&#xD;
                 });&#xD;
             return false;&#xD;
         }&#xD;
     } else { // Dump goods, units dislike jumping overboard&#xD;
         for (Goods goods : unit.getGoodsList()) {&#xD;
             ret = unloadCargo(goods, false) &amp;&amp; ret;&#xD;
         }&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wdxd8VIiEeibjuLm5_lcNQ" name="unloadCargo" specification="_WcV6gFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wdxd8lIiEeibjuLm5_lcNQ" name="goods" type="_WWo7IFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wdxd81IiEeibjuLm5_lcNQ" name="dump">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wdxd9FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || goods == null&#xD;
         || goods.getAmount() &lt;= 0&#xD;
         || !(goods.getLocation() instanceof Unit)) return false;&#xD;
&#xD;
     // Find the carrier&#xD;
     final Unit carrier = (Unit)goods.getLocation();&#xD;
&#xD;
     // Use Europe-specific routine if needed&#xD;
     if (carrier.isInEurope()) return sellGoods(goods);&#xD;
&#xD;
     // Check for a colony&#xD;
     final Colony colony = carrier.getColony();&#xD;
&#xD;
     // Unload&#xD;
     ColonyWas colonyWas = (colony == null) ? null : new ColonyWas(colony);&#xD;
     UnitWas unitWas = new UnitWas(carrier);&#xD;
     boolean ret = askUnloadGoods(goods.getType(), goods.getAmount(), carrier);&#xD;
     if (ret) {&#xD;
         if (!dump) sound(&quot;sound.event.unloadCargo&quot;);&#xD;
         if (colonyWas != null) colonyWas.fireChanges();&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdyE8FIiEeibjuLm5_lcNQ" name="updateTradeRoute" specification="_WcWhkFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdyE8VIiEeibjuLm5_lcNQ" name="route" type="_WWvo0VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdyE8lIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (route == null) return false;&#xD;
&#xD;
     return askServer().updateTradeRoute(route);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdyE81IiEeibjuLm5_lcNQ" name="victory" specification="_VzJMgFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdyE9FIiEeibjuLm5_lcNQ" name="score">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>displayHighScores(&quot;true&quot;.equalsIgnoreCase(score));&#xD;
     gui.showVictoryDialog((Boolean result) -> victory(result));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdyE9VIiEeibjuLm5_lcNQ" name="victory" specification="_VzJzkFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdyE9lIiEeibjuLm5_lcNQ" name="quit">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WdyE91IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (quit) {&#xD;
         freeColClient.newGame(false);&#xD;
     } else {&#xD;
         askServer().continuePlaying();&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdyE-FIiEeibjuLm5_lcNQ" name="waitUnit" specification="_VzKaoFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdyE-VIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn()) return false;&#xD;
&#xD;
     // Defeat the normal check for whether the current unit can move.&#xD;
     gui.setActiveUnit(null);&#xD;
     updateGUI(null);&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_WdysAFIiEeibjuLm5_lcNQ" name="work" specification="_WcXIoFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WdysAVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdysAlIiEeibjuLm5_lcNQ" name="workLocation" type="_WYD3cVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WdysA1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!requireOurTurn() || unit == null&#xD;
         || workLocation == null) return false;&#xD;
&#xD;
     StringTemplate template;&#xD;
     if (unit.getStudent() != null&#xD;
         &amp;&amp; !gui.confirmAbandonEducation(unit, false)) return false;&#xD;
&#xD;
     Colony colony = workLocation.getColony();&#xD;
     if (workLocation instanceof ColonyTile) {&#xD;
         Tile tile = ((ColonyTile)workLocation).getWorkTile();&#xD;
         if (tile.hasLostCityRumour()) {&#xD;
             gui.showInformationMessage(&quot;tileHasRumour&quot;);&#xD;
             return false;&#xD;
         }&#xD;
         if (!unit.getOwner().owns(tile)) {&#xD;
             if (!claimTile(tile, colony)) return false;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Try to change the work location.&#xD;
     ColonyWas colonyWas = new ColonyWas(colony);&#xD;
     UnitWas unitWas = new UnitWas(unit);&#xD;
     boolean ret = askServer().work(unit, workLocation)&#xD;
         &amp;&amp; unit.getLocation() == workLocation;&#xD;
     if (ret) {&#xD;
         colonyWas.fireChanges();&#xD;
         unitWas.fireChanges();&#xD;
         updateGUI(null);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_VyoPIFIiEeibjuLm5_lcNQ" name="askServer" visibility="private" method="_Wdd74FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd-5RlIiEeibjuLm5_lcNQ">
                    <body>Meaningfully named access to the ServerAPI.&#xD;
     *&#xD;
     * @return The ServerAPI.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaUhQFIiEeibjuLm5_lcNQ" type="_WYFFkVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Vyo2MFIiEeibjuLm5_lcNQ" name="sound" visibility="private" method="_Wdd74lIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd-5R1IiEeibjuLm5_lcNQ">
                    <body>Play a sound.&#xD;
     *&#xD;
     * @param soundKey The sound resource key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vyo2MVIiEeibjuLm5_lcNQ" name="soundKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vyo2MlIiEeibjuLm5_lcNQ" name="getSpecification" visibility="private" method="_Wdd75FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd-5SFIiEeibjuLm5_lcNQ">
                    <body>Gets the specification for the current game.&#xD;
     *&#xD;
     * @return The current game specification.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaUhQVIiEeibjuLm5_lcNQ" type="_WWP5kVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_VypdQFIiEeibjuLm5_lcNQ" name="requireOurTurn" visibility="private" method="_Wdd75lIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gUFIiEeibjuLm5_lcNQ">
                    <body>Require that it is this client's player's turn.&#xD;
     * Put up the notYourTurn message if not.&#xD;
     *&#xD;
     * @return True if it is our turn.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VypdQVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VysgkFIiEeibjuLm5_lcNQ" name="autoSaveGame" visibility="private" method="_WdgYI1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAHYlIiEeibjuLm5_lcNQ">
                    <body>Creates at least one autosave game file of the currently played&#xD;
     * game in the autosave directory.  Does nothing if there is no&#xD;
     * game running.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_VytHoFIiEeibjuLm5_lcNQ" name="stopIgnoringMessage" visibility="private" method="_Wdg_M1IiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_VytHolIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_VytHo1IiEeibjuLm5_lcNQ" key="synchronized"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_WeAHZlIiEeibjuLm5_lcNQ">
                    <body>Stop ignoring a kind of message.&#xD;
     *&#xD;
     * @param key The key for a message to stop ignoring.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VytHoVIiEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VytusFIiEeibjuLm5_lcNQ" name="displayTurnReportMessages" method="_Wdg_O1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAHaVIiEeibjuLm5_lcNQ">
                    <body>Displays the messages in the current turn report.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_VyuVwFIiEeibjuLm5_lcNQ" name="displayModelMessages" method="_WdhmQFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAHalIiEeibjuLm5_lcNQ">
                    <body>Displays pending &lt;code>ModelMessage&lt;/code>s.&#xD;
     *&#xD;
     * @param allMessages Display all messages or just the undisplayed ones.&#xD;
     * @param endOfTurn Use a turn report panel if necessary.&#xD;
     * @return True if any messages were displayed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VyuVwVIiEeibjuLm5_lcNQ" name="allMessages">
                    <eAnnotations xmi:id="_VyuVxFIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_VyuVxVIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VyuVwlIiEeibjuLm5_lcNQ" name="endOfTurn">
                    <eAnnotations xmi:id="_VyuVxlIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_VyuVx1IiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VyuVw1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VyuVyFIiEeibjuLm5_lcNQ" name="doExecuteGotoOrders" visibility="private" method="_WdiNUFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAHa1IiEeibjuLm5_lcNQ">
                    <body>Do the goto orders operation.&#xD;
     *&#xD;
     * @return True if all goto orders have been performed and no units&#xD;
     *     reached their destination and are free to move again.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vyu80FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vyu80VIiEeibjuLm5_lcNQ" name="doEndTurn" visibility="private" method="_WdiNUlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAHbFIiEeibjuLm5_lcNQ">
                    <body>End the turn.&#xD;
     *&#xD;
     * @param showDialog Show the end turn dialog?&#xD;
     * @return True if the turn ended.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vyu80lIiEeibjuLm5_lcNQ" name="showDialog">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Vyu801IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vy4GwFIiEeibjuLm5_lcNQ" name="closeMenus" method="_Wdo7BlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjqlIiEeibjuLm5_lcNQ">
                    <body>Close any open GUI menus.&#xD;
     *&#xD;
     * Called from IGIH.closeMenus.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_Vy4t0FIiEeibjuLm5_lcNQ" name="declareIndependence" method="_Wdo7B1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjq1IiEeibjuLm5_lcNQ">
                    <body>Declares independence for the home country.&#xD;
     *&#xD;
     * Called from DeclareIndependenceAction&#xD;
     *&#xD;
     * @return True if independence was declared.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vy4t0VIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vy5U4FIiEeibjuLm5_lcNQ" name="displayHighScores" method="_WdpiE1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKsVIiEeibjuLm5_lcNQ">
                    <body>Display the high scores.&#xD;
     *&#xD;
     * Called from IGIH.gameEnded, ReportHighScoresAction&#xD;
     *&#xD;
     * @param high A &lt;code>Boolean&lt;/code> whose values indicates whether&#xD;
     *     a new high score has been achieved, or no information if null.&#xD;
     * @return True, the high scores were displayed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vy5U4VIiEeibjuLm5_lcNQ" name="high">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Vy578FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vy578VIiEeibjuLm5_lcNQ" name="displayModelMessages" method="_WdpiFlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKslIiEeibjuLm5_lcNQ">
                    <body>Displays pending &lt;code>ModelMessage&lt;/code>s.&#xD;
     *&#xD;
     * Called from IGIH.displayModelMessagesRunnable&#xD;
     *&#xD;
     * @param allMessages Display all messages or just the undisplayed ones.&#xD;
     * @return True if any messages were displayed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vy578lIiEeibjuLm5_lcNQ" name="allMessages">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Vy5781IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vy6jAFIiEeibjuLm5_lcNQ" name="endTurn" method="_WdpiHlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKtFIiEeibjuLm5_lcNQ">
                    <body>End the turn command.&#xD;
     *&#xD;
     * Called from EndTurnAction, GUI.showEndTurnDialog&#xD;
     *&#xD;
     * @param showDialog If false, suppress showing the end turn dialog.&#xD;
     * @return True if the turn was ended.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vy7KEFIiEeibjuLm5_lcNQ" name="showDialog">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Vy7KEVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vy7xIFIiEeibjuLm5_lcNQ" name="error" method="_WdqJJVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKtlIiEeibjuLm5_lcNQ">
                    <body>Display an error.&#xD;
     *&#xD;
     * Called from IGIH.error.&#xD;
     *&#xD;
     * @param messageId The i18n-keyname of the error message to display.&#xD;
     * @param message An alternative (possibly non-i18n) message to&#xD;
     *     display if the resource specified by &lt;code>messageId&lt;/code>&#xD;
     *     is unavailable.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vy7xIVIiEeibjuLm5_lcNQ" name="messageId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Vy7xIlIiEeibjuLm5_lcNQ" name="message">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vy8YMFIiEeibjuLm5_lcNQ" name="executeGotoOrders" method="_WdqJKFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKt1IiEeibjuLm5_lcNQ">
                    <body>Execute goto orders command.&#xD;
     *&#xD;
     * Called from ExecuteGotoOrdersAction.&#xD;
     *&#xD;
     * @return True if all goto orders have been performed and no units&#xD;
     *     reached their destination and are free to move again.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vy8YMVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vy8_QFIiEeibjuLm5_lcNQ" name="fountainOfYouth" method="_WdqwNVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKulIiEeibjuLm5_lcNQ">
                    <body>Handle a fountain of youth event.&#xD;
     *&#xD;
     * Called from IGIH.fountainOfYouth.&#xD;
     *&#xD;
     * @param n The number of migrants available for selection.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vy8_QVIiEeibjuLm5_lcNQ" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vy9mUFIiEeibjuLm5_lcNQ" name="getREFUnits" method="_WdqwPVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKvVIiEeibjuLm5_lcNQ">
                    <body>Gathers information about the REF.&#xD;
     *&#xD;
     * Called from ReportNavalPanel, ReportMilitaryPanel&#xD;
     *&#xD;
     * @return a &lt;code>List&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Vy9mUVIiEeibjuLm5_lcNQ" type="_WXugQlIiEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vy-NYFIiEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Vy-NYVIiEeibjuLm5_lcNQ" name="getServerStatistics" method="_WdrXQFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxwFIiEeibjuLm5_lcNQ">
                    <body>Retrieves the server statistics.&#xD;
     *&#xD;
     * Called from StatisticsPanel&#xD;
     *&#xD;
     * @return A &lt;code>Map&lt;/code> containing the server statistics.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WYZOoVIiEeibjuLm5_lcNQ" type="_WYYnkFIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_VzACkFIiEeibjuLm5_lcNQ" name="loadGame" method="_Wdr-V1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxxlIiEeibjuLm5_lcNQ">
                    <body>Opens a dialog where the user should specify the filename and&#xD;
     * loads the game.&#xD;
     *&#xD;
     * Called from OpenAction.&#xD;
     *&#xD;
     * Returns no status as this game is stopped.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_VzCe0FIiEeibjuLm5_lcNQ" name="newTurn" method="_WdtzllIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeEY1VIiEeibjuLm5_lcNQ">
                    <body>Switch to a new turn.&#xD;
     *&#xD;
     * Called from IGIH.newTurn&#xD;
     *&#xD;
     * @param turn The turn number.&#xD;
     * @return True if the new turn occurs.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VzDF4FIiEeibjuLm5_lcNQ" name="turn">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VzDF4VIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VzDF4lIiEeibjuLm5_lcNQ" name="nextActiveUnit" method="_WdtzmVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeEY1lIiEeibjuLm5_lcNQ">
                    <body>Makes a new unit active.&#xD;
     *&#xD;
     * Called from PGC.startGame, ColonyPanel.closeColonyPanel&#xD;
     *&#xD;
     * @return True unless it was not our turn.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VzDF41IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VzDs8FIiEeibjuLm5_lcNQ" name="nextModelMessage" method="_WduakFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_4FIiEeibjuLm5_lcNQ">
                    <body>Displays the next &lt;code>ModelMessage&lt;/code>.&#xD;
     *&#xD;
     * Called from CC.reconnect, CargoPanel,&#xD;
     * ColonyPanel.closeColonyPanel, EuropePanel.exitAction,&#xD;
     * EuropePanel.MarketPanel&#xD;
     *&#xD;
     * @return True if any messages were displayed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VzDs8VIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VzEUAFIiEeibjuLm5_lcNQ" name="reconnect" method="_Wduam1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_5FIiEeibjuLm5_lcNQ">
                    <body>Query whether the user wants to reconnect?&#xD;
     *&#xD;
     * Called from ReconnectAction, IGIH.reconnectRunnable&#xD;
     *&#xD;
     * Returns no status, this game is going away.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_VzE7EFIiEeibjuLm5_lcNQ" name="recruitUnitInEurope" method="_WduanFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_5VIiEeibjuLm5_lcNQ">
                    <body>Recruit a unit from a specified index in Europe.&#xD;
     *&#xD;
     * Called from RecruitPanel&#xD;
     *&#xD;
     * @param index The index in Europe to recruit from, [0..RECRUIT_COUNT).&#xD;
     * @return True if a unit was recruited.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VzE7EVIiEeibjuLm5_lcNQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VzE7ElIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VzFiIFIiEeibjuLm5_lcNQ" name="saveGame" method="_WdvBplIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_6FIiEeibjuLm5_lcNQ">
                    <body>Opens a dialog where the user should specify the filename and&#xD;
     * saves the game.&#xD;
     *&#xD;
     * Called from SaveAction and SaveAndQuitAction.&#xD;
     *&#xD;
     * @return True if the game was saved.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VzGJMFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VzGwQFIiEeibjuLm5_lcNQ" name="sendChat" method="_WdvosFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_61IiEeibjuLm5_lcNQ">
                    <body>Sends a public chat message.&#xD;
     *&#xD;
     * Called from ChatPanel&#xD;
     *&#xD;
     * @param chat The text of the message.&#xD;
     * @return True if the message was sent.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VzGwQVIiEeibjuLm5_lcNQ" name="chat">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VzGwQlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VzHXUFIiEeibjuLm5_lcNQ" name="setGameConnected" method="_WdwPwFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_71IiEeibjuLm5_lcNQ">
                    <body>Informs this controller that a game has been newly loaded.&#xD;
     *&#xD;
     * Called from ConnectController.startSavedGame&#xD;
     *&#xD;
     * No status returned to connect controller.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_VzH-YFIiEeibjuLm5_lcNQ" name="setInDebugMode" method="_Wdw21FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm8FIiEeibjuLm5_lcNQ">
                    <body>Sets the debug mode to include the extra menu commands.&#xD;
     *&#xD;
     * Called from DebugAction&#xD;
     *&#xD;
     * @return True, always succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VzH-YVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VzJMgFIiEeibjuLm5_lcNQ" name="victory" method="_WdyE81IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm-FIiEeibjuLm5_lcNQ">
                    <body>The player has won, show the high scores and victory dialog.&#xD;
     *&#xD;
     * Called from IGIH.gameEnded.&#xD;
     *&#xD;
     * @param score If &quot;true&quot;, a new high score was reached.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VzJMgVIiEeibjuLm5_lcNQ" name="score">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VzJzkFIiEeibjuLm5_lcNQ" name="victory" method="_WdyE9VIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm-VIiEeibjuLm5_lcNQ">
                    <body>The player has won!&#xD;
     *&#xD;
     * Called from GUI.showVictoryDialog&#xD;
     *&#xD;
     * @param quit If true, leave this game and start a new one.&#xD;
     * @return True.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VzJzkVIiEeibjuLm5_lcNQ" name="quit">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_VzJzklIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_VzKaoFIiEeibjuLm5_lcNQ" name="waitUnit" method="_WdyE-FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm-lIiEeibjuLm5_lcNQ">
                    <body>Tell a unit to wait.&#xD;
     *&#xD;
     * Called from WaitAction.&#xD;
     *&#xD;
     * @return True, this can not fail.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_VzKaoVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WaT6MFIiEeibjuLm5_lcNQ" name="InGameController" method="_WddU0FIiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_WaT6MlIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_WaT6M1IiEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-5RVIiEeibjuLm5_lcNQ">
                    <body>The constructor to use.&#xD;
     *&#xD;
     * @param freeColClient The &lt;code>FreeColClient&lt;/code> for the game.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaT6MVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaT6NFIiEeibjuLm5_lcNQ" type="_VyaMsFIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaVIUFIiEeibjuLm5_lcNQ" name="colonyPanel" visibility="private" method="_Wdei8FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gUVIiEeibjuLm5_lcNQ">
                    <body>Display the colony panel for a colony, and select the unit that just&#xD;
     * arrived there if it is a carrier.&#xD;
     *&#xD;
     * @param colony The &lt;code>Colony&lt;/code> to display.&#xD;
     * @param unit An optional &lt;code>Unit&lt;/code> to select.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaVIUVIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaVIUlIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaVvYFIiEeibjuLm5_lcNQ" name="getSettlementAt" visibility="private" method="_Wdei81IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gUlIiEeibjuLm5_lcNQ">
                    <body>Convenience function to find an adjacent settlement.  Intended&#xD;
     * to be called in contexts where we are expecting a settlement to&#xD;
     * be there, such as when handling a particular move type.&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to start at.&#xD;
     * @param direction The &lt;code>Direction&lt;/code> to step.&#xD;
     * @return A settlement on the adjacent tile if any.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaVvYVIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaVvYlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaVvY1IiEeibjuLm5_lcNQ" type="_WWvBwVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaWWcFIiEeibjuLm5_lcNQ" name="getNationAt" visibility="private" method="_Wdei91IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gU1IiEeibjuLm5_lcNQ">
                    <body>Convenience function to find the nation controlling an adjacent&#xD;
     * settlement.  Intended to be called in contexts where we are&#xD;
     * expecting a settlement or unit to be there, such as when&#xD;
     * handling a particular move type.&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to start at.&#xD;
     * @param direction The &lt;code>Direction&lt;/code> to step.&#xD;
     * @return The name of the nation controlling a settlement on the&#xD;
     *         adjacent tile if any.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaWWcVIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaWWclIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaWWc1IiEeibjuLm5_lcNQ" type="_WWQgoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaW9gFIiEeibjuLm5_lcNQ" name="updateGUI" visibility="private" method="_Wdei-1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gVFIiEeibjuLm5_lcNQ">
                    <body>Update the GUI and the active unit with a fallback tile.&#xD;
     *&#xD;
     * @param tile An optional fallback &lt;code>Tile&lt;/code> to display if&#xD;
     *     no active unit is found, useful when the last unit might have&#xD;
     *     died.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaW9gVIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WaW9glIiEeibjuLm5_lcNQ" name="askAssignTradeRoute" visibility="private" method="_Wdei_VIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gVVIiEeibjuLm5_lcNQ">
                    <body>Ask the server to assign a trade route.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to assign to.&#xD;
     * @param tradeRoute The &lt;code>TradeRoute&lt;/code> to assign.&#xD;
     * @return True if the assignment succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaW9g1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaW9hFIiEeibjuLm5_lcNQ" name="tradeRoute" type="_WWvo0VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaXkkFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WacdEFIiEeibjuLm5_lcNQ" name="askClaimTile" visibility="private" method="_WdfKAFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gVlIiEeibjuLm5_lcNQ">
                    <body>Claim a tile.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> that is claiming.&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to claim.&#xD;
     * @param claimant The &lt;code>Unit&lt;/code> or &lt;code>Colony&lt;/code> claiming.&#xD;
     * @param price The price required.&#xD;
     * @return True if the claim succeeded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WacdEVIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wak_8FIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wak_8VIiEeibjuLm5_lcNQ" name="claimant" type="_WWme4FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wauw8FIiEeibjuLm5_lcNQ" name="price">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WavYAFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WavYAVIiEeibjuLm5_lcNQ" name="askClearGotoOrders" visibility="private" method="_WdfKBlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gV1IiEeibjuLm5_lcNQ">
                    <body>Clears the goto orders of the given unit by setting its destination&#xD;
     * to null.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to clear the destination for.&#xD;
     * @return True if the unit now has no destination or trade route.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WavYAlIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wav_EFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wav_EVIiEeibjuLm5_lcNQ" name="askEmbark" visibility="private" method="_WdfKCVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gWFIiEeibjuLm5_lcNQ">
                    <body>Embark onto a carrier.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to embark.&#xD;
     * @param carrier The carrier &lt;code>Unit&lt;/code> to board.&#xD;
     * @return True if boarding succeeded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wav_ElIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wav_E1IiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WawmIFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WaxNMFIiEeibjuLm5_lcNQ" name="askEmigrate" visibility="private" method="_WdfKDVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gWVIiEeibjuLm5_lcNQ">
                    <body>A unit in Europe emigrates.&#xD;
     *&#xD;
     * This is unusual for an ask* routine in that it uses a *Was&#xD;
     * structure, but it is needed to extract the unit.&#xD;
     *&#xD;
     * @param europe The &lt;code>Europe&lt;/code> where the unit appears.&#xD;
     * @param slot The slot to choose, [0..RECRUIT_COUNT].&#xD;
     * @return The new &lt;code>Unit&lt;/code> or null on failure.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WaxNMVIiEeibjuLm5_lcNQ" name="europe" type="_WXyxsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WaxNMlIiEeibjuLm5_lcNQ" name="slot">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WaxNM1IiEeibjuLm5_lcNQ" type="_WWRuwVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Wax0QFIiEeibjuLm5_lcNQ" name="emigration" visibility="private" method="_WdfxEFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gWlIiEeibjuLm5_lcNQ">
                    <body>Select all the units to emigrate from Europe.  If they are all&#xD;
     * the same they can be picked automatically, but otherwise use&#xD;
     * the emigration dialog.  Only to be called if the player is&#xD;
     * allowed to select the unit type (i.e. FoY or has Brewster).&#xD;
     *&#xD;
     * The server contains the count of available FoY-units, and&#xD;
     * maintains the immigration/immigrationRequired amounts, so this&#xD;
     * routine will fail harmlessly if it asks for too much.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> that owns the unit.&#xD;
     * @param n The number of units known to be eligible to emigrate.&#xD;
     * @param fountainOfYouth True if this migration if due to a FoY.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wax0QVIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wax0QlIiEeibjuLm5_lcNQ" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wax0Q1IiEeibjuLm5_lcNQ" name="fountainOfYouth">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa03kFIiEeibjuLm5_lcNQ" name="askLoadGoods" visibility="private" method="_WdfxFFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gW1IiEeibjuLm5_lcNQ">
                    <body>Load some goods onto a carrier.&#xD;
     *&#xD;
     * @param loc The &lt;code>Location&lt;/code> to load from.&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> to load.&#xD;
     * @param amount The amount of goods to load.&#xD;
     * @param carrier The &lt;code>Unit&lt;/code> to load onto.&#xD;
     * @return True if the load succeeded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa03kVIiEeibjuLm5_lcNQ" name="loc" type="_WX3DIVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa03klIiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa03k1IiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wa1eoFIiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa1eoVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa2FsFIiEeibjuLm5_lcNQ" name="askSetDestination" visibility="private" method="_WdfxGlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_Wd_gXFIiEeibjuLm5_lcNQ">
                    <body>Set a destination for a unit.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to direct.&#xD;
     * @param destination The destination &lt;code>Location&lt;/code>.&#xD;
     * @return True if the destination was set.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa2FsVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa2FslIiEeibjuLm5_lcNQ" name="destination" type="_WX3DIVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa2swFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa364FIiEeibjuLm5_lcNQ" name="askUnloadGoods" visibility="private" method="_WdfxHlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAHYFIiEeibjuLm5_lcNQ">
                    <body>Unload some goods from a carrier.&#xD;
     *&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> to unload.&#xD;
     * @param amount The amount of goods to unload.&#xD;
     * @param carrier The &lt;code>Unit&lt;/code> carrying the goods.&#xD;
     * @return True if the unload succeeded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa364VIiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa364lIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wa3641IiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa365FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa4h8FIiEeibjuLm5_lcNQ" name="getSaveGameString" visibility="private" method="_WdgYIFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAHYVIiEeibjuLm5_lcNQ">
                    <body>Get the trunk of the save game string.&#xD;
     *&#xD;
     * @param game The &lt;code>Game&lt;/code> to query.&#xD;
     * @return The trunk of the file name to use for saved games.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa4h8VIiEeibjuLm5_lcNQ" name="game" type="_WWPSgVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa4h8lIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa5JAFIiEeibjuLm5_lcNQ" name="saveGame" visibility="private" method="_WdgYJFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAHY1IiEeibjuLm5_lcNQ">
                    <body>Saves the game to the given file.&#xD;
     *&#xD;
     * @param file The &lt;code>File&lt;/code>.&#xD;
     * @return True if the game was saved.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa5JAVIiEeibjuLm5_lcNQ" name="file" type="_WWAB8FIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_Wa5JA1IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_Wa5JBFIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wa5JAlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa5wEFIiEeibjuLm5_lcNQ" name="shouldAllowMessage" visibility="private" method="_WdgYKVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAHZFIiEeibjuLm5_lcNQ">
                    <body>Provides an opportunity to filter the messages delivered to the canvas.&#xD;
     *&#xD;
     * @param message the message that is candidate for delivery to the canvas&#xD;
     * @return true if the message should be delivered</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa5wEVIiEeibjuLm5_lcNQ" name="message" type="_WWr-cVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa5wElIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa5wE1IiEeibjuLm5_lcNQ" name="startIgnoringMessage" visibility="private" method="_Wdg_MFIiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_Wa6XIFIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Wa6XIVIiEeibjuLm5_lcNQ" key="synchronized"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_WeAHZVIiEeibjuLm5_lcNQ">
                    <body>Start ignoring a kind of message.&#xD;
     *&#xD;
     * @param key The key for a message to ignore.&#xD;
     * @param turn The current &lt;code>Turn&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa5wFFIiEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wa5wFVIiEeibjuLm5_lcNQ" name="turn" type="_WYBbMFIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa6XIlIiEeibjuLm5_lcNQ" name="reapIgnoredMessages" visibility="private" method="_Wdg_NVIiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_Wa6XJFIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Wa6XJVIiEeibjuLm5_lcNQ" key="synchronized"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_WeAHZ1IiEeibjuLm5_lcNQ">
                    <body>Reap all ignored message keys that are older than the given turn.&#xD;
     *&#xD;
     * @param turn The &lt;code>Turn&lt;/code> value to test against.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa6XI1IiEeibjuLm5_lcNQ" name="turn" type="_WYBbMFIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa6-MFIiEeibjuLm5_lcNQ" name="continueIgnoreMessage" visibility="private" method="_Wdg_N1IiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_Wa6-M1IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Wa6-NFIiEeibjuLm5_lcNQ" key="synchronized"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_WeAHaFIiEeibjuLm5_lcNQ">
                    <body>See if messages with a given key were ignored last turn.  If so,&#xD;
     * continue to ignore them.&#xD;
     *&#xD;
     * @param key The key to check.&#xD;
     * @param turn The current &lt;code>Turn&lt;/code>.&#xD;
     * @return True if the message should continue to be ignored.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa6-MVIiEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wa6-MlIiEeibjuLm5_lcNQ" name="turn" type="_WYBbMFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa6-NVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa7lQFIiEeibjuLm5_lcNQ" name="updateActiveUnit" visibility="private" method="_WdiNVVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAucFIiEeibjuLm5_lcNQ">
                    <body>Makes a new unit active if any, or focus on a tile (useful if the&#xD;
     * current unit just died).&#xD;
     *&#xD;
     * Displays any new &lt;code>ModelMessage&lt;/code>s with&#xD;
     * {@link #nextModelMessage}.&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to select if no new unit can&#xD;
     *     be made active.&#xD;
     * @return True if the active unit changes.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa7lQVIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa7lQlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa7lQ1IiEeibjuLm5_lcNQ" name="moveToDestination" visibility="private" method="_WdiNWFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAucVIiEeibjuLm5_lcNQ">
                    <body>Moves the given unit towards its destination/s if possible.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to move.&#xD;
     * @param messages An optional list in which to retain any&#xD;
     *     trade route &lt;code>ModelMessage&lt;/code>s generated.&#xD;
     * @return True if the unit reached its destination, is still alive,&#xD;
     *     and has more moves to make.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa8MUFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa8MUVIiEeibjuLm5_lcNQ" name="messages" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa8MUlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa8zYVIiEeibjuLm5_lcNQ" name="moveDirection" method="_WdiNXFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAuclIiEeibjuLm5_lcNQ">
                    <body>Move a unit in a given direction.&#xD;
     *&#xD;
     * Public for the test suite.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to move.&#xD;
     * @param direction The &lt;code>Direction&lt;/code> to move in.&#xD;
     * @param interactive Interactive mode: play sounds and emit errors.&#xD;
     * @return True if the unit can possibly move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa8zYlIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa8zY1IiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa9acFIiEeibjuLm5_lcNQ" name="interactive">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wa9acVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa9aclIiEeibjuLm5_lcNQ" name="movePath" visibility="private" method="_Wdi0YFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAuc1IiEeibjuLm5_lcNQ">
                    <body>Follow a path.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to move.&#xD;
     * @param path The path to follow.&#xD;
     * @return True if the unit has completed the path and can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa9ac1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa-BgFIiEeibjuLm5_lcNQ" name="path" type="_WX8isVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa-BgVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa-BglIiEeibjuLm5_lcNQ" name="moveAttack" visibility="private" method="_Wdi0ZFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAudFIiEeibjuLm5_lcNQ">
                    <body>Confirm attack or demand a tribute from a native settlement, following&#xD;
     * an attacking move.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to perform the attack.&#xD;
     * @param direction The direction in which to attack.&#xD;
     * @return True if the unit could move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa-Bg1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa-BhFIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa-okFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa-okVIiEeibjuLm5_lcNQ" name="moveAttackSettlement" visibility="private" method="_Wdi0aFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAudVIiEeibjuLm5_lcNQ">
                    <body>Confirm attack or demand a tribute from a settlement, following&#xD;
     * an attacking move.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to perform the attack.&#xD;
     * @param direction The direction in which to attack.&#xD;
     * @return True if the unit could move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa-oklIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa-ok1IiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa_PoFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wa_PoVIiEeibjuLm5_lcNQ" name="moveDiplomacy" visibility="private" method="_Wdi0bFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAudlIiEeibjuLm5_lcNQ">
                    <body>Initiates diplomacy with a foreign power.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> negotiating.&#xD;
     * @param direction The direction of a settlement to negotiate with.&#xD;
     * @param dt The base &lt;code>DiplomaticTrade&lt;/code> agreement to&#xD;
     *     begin the negotiation with.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wa_2sFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa_2sVIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa_2slIiEeibjuLm5_lcNQ" name="dt" type="_WWkpsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wa_2s1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbAdwFIiEeibjuLm5_lcNQ" name="moveDisembark" visibility="private" method="_WdjbcFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAud1IiEeibjuLm5_lcNQ">
                    <body>Check the carrier for passengers to disembark, possibly&#xD;
     * snatching a useful result from the jaws of a&#xD;
     * MOVE_NO_ACCESS_LAND failure.&#xD;
     *&#xD;
     * @param unit The carrier containing the unit to disembark.&#xD;
     * @param direction The direction in which to disembark the unit.&#xD;
     * @return True if the disembark &quot;succeeds&quot; (which deliberately includes&#xD;
     *     declined disembarks).</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbAdwVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbBE0FIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_WbBE0lIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_WbBE01IiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbBE0VIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbBr4FIiEeibjuLm5_lcNQ" name="moveEmbark" visibility="private" method="_WdjbdlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAueFIiEeibjuLm5_lcNQ">
                    <body>Embarks the specified unit onto a carrier in a specified direction&#xD;
     * following a move of MoveType.EMBARK.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that wishes to embark.&#xD;
     * @param direction The direction in which to embark.&#xD;
     * @return True if the unit could move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbBr4VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbBr4lIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbBr41IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbCS8FIiEeibjuLm5_lcNQ" name="moveExplore" visibility="private" method="_WdjbelIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAueVIiEeibjuLm5_lcNQ">
                    <body>Confirm exploration of a lost city rumour, following a move of&#xD;
     * MoveType.EXPLORE_LOST_CITY_RUMOUR.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is exploring.&#xD;
     * @param direction The direction of a rumour.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbCS8VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbCS8lIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbCS81IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbC6AFIiEeibjuLm5_lcNQ" name="moveHighSeas" visibility="private" method="_WdjbflIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAuelIiEeibjuLm5_lcNQ">
                    <body>Moves a unit onto the &quot;high seas&quot; in a specified direction following&#xD;
     * a move of MoveType.MOVE_HIGH_SEAS.&#xD;
     * This may result in a move to Europe, no move, or an ordinary move.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to be moved.&#xD;
     * @param direction The direction in which to move.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbC6AVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbC6AlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbC6A1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbDhEFIiEeibjuLm5_lcNQ" name="moveLearnSkill" visibility="private" method="_WdkCgFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAue1IiEeibjuLm5_lcNQ">
                    <body>Move a free colonist to a native settlement to learn a skill following&#xD;
     * a move of MoveType.ENTER_INDIAN_SETTLEMENT_WITH_FREE_COLONIST.&#xD;
     * The colonist does not physically get into the village, it will&#xD;
     * just stay where it is and gain the skill.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to learn the skill.&#xD;
     * @param direction The direction in which the Indian settlement lies.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbDhEVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbDhElIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbDhE1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbEIIFIiEeibjuLm5_lcNQ" name="moveMove" visibility="private" method="_WdkChFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeAufFIiEeibjuLm5_lcNQ">
                    <body>Actually move a unit in a specified direction, following a move&#xD;
     * of MoveType.MOVE.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to be moved.&#xD;
     * @param direction The direction in which to move the Unit.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbEIIVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbEIIlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbEII1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbEvMFIiEeibjuLm5_lcNQ" name="moveScoutColony" visibility="private" method="_WdkCiFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBVgFIiEeibjuLm5_lcNQ">
                    <body>Move to a foreign colony and either attack, negotiate with the&#xD;
     * foreign power or spy on them.  Follows a move of&#xD;
     * MoveType.ENTER_FOREIGN_COLONY_WITH_SCOUT.&#xD;
     *&#xD;
     * FIXME: Unify trade and negotiation.&#xD;
     *&#xD;
     * @param unit The unit that will spy, negotiate or attack.&#xD;
     * @param direction The direction in which the foreign colony lies.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbEvMVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbEvMlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbEvM1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbFWQFIiEeibjuLm5_lcNQ" name="moveScoutIndianSettlement" visibility="private" method="_WdkCjFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBVgVIiEeibjuLm5_lcNQ">
                    <body>Move a scout into an Indian settlement to speak with the chief,&#xD;
     * or demand a tribute following a move of&#xD;
     * MoveType.ENTER_INDIAN_SETTLEMENT_WITH_SCOUT.&#xD;
     * The scout does not physically get into the village, it will&#xD;
     * just stay where it is.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is scouting.&#xD;
     * @param direction The direction in which the Indian settlement lies.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbFWQVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbFWQlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbFWQ1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbF9UFIiEeibjuLm5_lcNQ" name="moveSpy" visibility="private" method="_WdkpkFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBVglIiEeibjuLm5_lcNQ">
                    <body>Spy on a foreign colony.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is spying.&#xD;
     * @param direction The &lt;code>Direction&lt;/code> of a colony to spy on.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbF9UVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbF9UlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbF9U1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbGkYFIiEeibjuLm5_lcNQ" name="moveTrade" visibility="private" method="_WdkplFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBVg1IiEeibjuLm5_lcNQ">
                    <body>Arrive at a settlement with a laden carrier following a move of&#xD;
     * MoveType.ENTER_SETTLEMENT_WITH_CARRIER_AND_GOODS.&#xD;
     *&#xD;
     * @param unit The carrier.&#xD;
     * @param direction The direction to the settlement.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbGkYVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbGkYlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbGkY1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbHLcFIiEeibjuLm5_lcNQ" name="moveTradeIndianSettlement" visibility="private" method="_WdkpmFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBVhFIiEeibjuLm5_lcNQ">
                    <body>Trading with the natives, including buying, selling and&#xD;
     * delivering gifts.  (Deliberate use of Settlement rather than&#xD;
     * IndianSettlement throughout these routines as some unification&#xD;
     * with colony trading is anticipated, and the native AI already&#xD;
     * uses the same DeliverGiftMessage to deliver gifts to Colonies).&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is a carrier containing goods.&#xD;
     * @param direction The direction the unit could move in order to enter a&#xD;
     *            &lt;code>Settlement&lt;/code>.&#xD;
     * @see Settlement&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbHLcVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbHLclIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbHygFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbHygVIiEeibjuLm5_lcNQ" name="tradeFailMessage" visibility="private" method="_WdkpnFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBVhVIiEeibjuLm5_lcNQ">
                    <body>Displays an appropriate trade failure message.&#xD;
     *&#xD;
     * @param fail The failure state.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> that failed to trade.&#xD;
     * @param goods The &lt;code>Goods&lt;/code> that failed to trade.&#xD;
     * @return A &lt;code>StringTemplate&lt;/code> describing the failure.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbHyglIiEeibjuLm5_lcNQ" name="fail">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbIZkFIiEeibjuLm5_lcNQ" name="settlement" type="_WWvBwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbIZkVIiEeibjuLm5_lcNQ" name="goods" type="_WWo7IFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbIZklIiEeibjuLm5_lcNQ" type="_WWQgoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WbIZk1IiEeibjuLm5_lcNQ" name="attemptBuyFromSettlement" visibility="private" method="_WdkpoVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBVhlIiEeibjuLm5_lcNQ">
                    <body>User interaction for buying from the natives.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is trading.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> that is trading.&#xD;
     * @return A &lt;code>StringTemplate&lt;/code> containing a message if&#xD;
     *     there is problem, or null on success.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbJAoFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbJAoVIiEeibjuLm5_lcNQ" name="settlement" type="_WWvBwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbJAolIiEeibjuLm5_lcNQ" type="_WWQgoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WbJnsFIiEeibjuLm5_lcNQ" name="attemptSellToSettlement" visibility="private" method="_WdlQoFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBVh1IiEeibjuLm5_lcNQ">
                    <body>User interaction for selling to the natives.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is trading.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> that is trading.&#xD;
     * @return A &lt;code>StringTemplate&lt;/code> containing a message if&#xD;
     *     there is problem, or null on success.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbJnsVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbJnslIiEeibjuLm5_lcNQ" name="settlement" type="_WWvBwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbJns1IiEeibjuLm5_lcNQ" type="_WWQgoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WbKOwFIiEeibjuLm5_lcNQ" name="attemptGiftToSettlement" visibility="private" method="_WdlQpFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBViFIiEeibjuLm5_lcNQ">
                    <body>User interaction for delivering a gift to the natives.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is trading.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> that is trading.&#xD;
     * @return A &lt;code>StringTemplate&lt;/code> containing a message if&#xD;
     *     there is problem, or null on success.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbKOwVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbKOwlIiEeibjuLm5_lcNQ" name="settlement" type="_WWvBwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbKOw1IiEeibjuLm5_lcNQ" type="_WWQgoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WbK10FIiEeibjuLm5_lcNQ" name="moveTribute" visibility="private" method="_WdlQqFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBViVIiEeibjuLm5_lcNQ">
                    <body>Demand a tribute.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to perform the attack.&#xD;
     * @param amount An amount of tribute to demand.&#xD;
     * @param direction The direction in which to attack.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbK10VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbK10lIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbK101IiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbK11FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbLc4FIiEeibjuLm5_lcNQ" name="moveUseMissionary" visibility="private" method="_WdlQrVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBVilIiEeibjuLm5_lcNQ">
                    <body>Move a missionary into a native settlement, following a move of&#xD;
     * MoveType.ENTER_INDIAN_SETTLEMENT_WITH_MISSIONARY.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that will enter the settlement.&#xD;
     * @param direction The direction in which the Indian settlement lies.&#xD;
     * @return True if the unit can move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbLc4VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbLc4lIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbLc41IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbMD8FIiEeibjuLm5_lcNQ" name="followTradeRoute" visibility="private" method="_Wdl3sFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeBVi1IiEeibjuLm5_lcNQ">
                    <body>Follows a trade route, doing load/unload actions, moving the unit,&#xD;
     * and updating the stop and destination.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> on the route.&#xD;
     * @param messages An optional list in which to retain any&#xD;
     *     &lt;code>ModelMessage&lt;/code>s generated.&#xD;
     * @return True if the unit should keep moving, which can only&#xD;
     *     happen if the trade route is found to be broken and the&#xD;
     *     unit is thrown off it.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbMD8VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbMD8lIiEeibjuLm5_lcNQ" name="messages" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbMD81IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbNSEFIiEeibjuLm5_lcNQ" name="loadUnitAtStop" visibility="private" method="_Wdl3tFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8kFIiEeibjuLm5_lcNQ">
                    <body>Work out what goods to load onto a unit at a stop, and load them.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to load.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to update.&#xD;
     * @return True if goods were loaded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbNSEVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbNSElIiEeibjuLm5_lcNQ" name="lb" type="_WXiTAFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbNSE1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbN5IFIiEeibjuLm5_lcNQ" name="getLoadGoodsMessage" visibility="private" method="_Wdl3uFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8kVIiEeibjuLm5_lcNQ">
                    <body>Gets a message describing a goods loading.&#xD;
     *&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> the type of goods being loaded.&#xD;
     * @param amount The amount of goods actually loaded.&#xD;
     * @param present The amount of goods already at the location.&#xD;
     * @param export The amount of goods available to export.&#xD;
     * @param toLoad The amount of goods the unit should load according to&#xD;
     *     the trade route orders.&#xD;
     * @return A summary of the load.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbN5IVIiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbN5IlIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbN5I1IiEeibjuLm5_lcNQ" name="present">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbN5JFIiEeibjuLm5_lcNQ" name="export">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbN5JVIiEeibjuLm5_lcNQ" name="toLoad">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbN5JlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbOgMFIiEeibjuLm5_lcNQ" name="unloadUnitAtStop" visibility="private" method="_Wdl3v1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8klIiEeibjuLm5_lcNQ">
                    <body>Work out what goods to unload from a unit at a stop, and unload them.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to unload.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to update.&#xD;
     * @return True if something was unloaded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbOgMVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbOgMlIiEeibjuLm5_lcNQ" name="lb" type="_WXiTAFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbPHQFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbPHQVIiEeibjuLm5_lcNQ" name="getUnloadGoodsMessage" visibility="private" method="_WdmewFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8k1IiEeibjuLm5_lcNQ">
                    <body>Gets a message describing a goods unloading.&#xD;
     *&#xD;
     * Normally just state that a certain amount of goods was&#xD;
     * unloaded.  Make special mention if the actual unloaded amount&#xD;
     * was short (unloaded &amp;lt; amount), or an overflow is happening&#xD;
     * (amount &amp;gt; atStop) in which case distinguish dumping (amount&#xD;
     * == toUnload) from retaining on board).&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is unloading.&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> the type of goods being unloaded.&#xD;
     * @param amount The amount of goods requested to be unloaded.&#xD;
     * @param present The amount of goods originally on the unit.&#xD;
     * @param atStop The amount of goods space available at the stop.&#xD;
     * @param toUnload The amount of goods that should be unloaded according&#xD;
     *     to the trade route orders.&#xD;
     * @return A summary of the unload.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbPHQlIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbPHQ1IiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbPuUFIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbPuUVIiEeibjuLm5_lcNQ" name="present">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbPuUlIiEeibjuLm5_lcNQ" name="atStop">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbPuU1IiEeibjuLm5_lcNQ" name="toUnload">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbPuVFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbPuVVIiEeibjuLm5_lcNQ" name="abandonColony" method="_WdmeyFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8lFIiEeibjuLm5_lcNQ">
                    <body>Abandon a colony with no units.&#xD;
     *&#xD;
     * Called from ColonyPanel.closeColonyPanel&#xD;
     *&#xD;
     * @param colony The &lt;code>Colony&lt;/code> to be abandoned.&#xD;
     * @return True if the colony was abandoned.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbQVYFIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbQVYVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbQ8cFIiEeibjuLm5_lcNQ" name="animateAttack" method="_Wdmey1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8lVIiEeibjuLm5_lcNQ">
                    <body>Animate an attack.&#xD;
     *&#xD;
     * Called from IGIH.animateAttack.&#xD;
     *&#xD;
     * @param attacker The attacking &lt;code>Unit&lt;/code>.&#xD;
     * @param defender The defending &lt;code>Unit&lt;/code>.&#xD;
     * @param attackerTile The &lt;code>Tile&lt;/code> the attack originates from.&#xD;
     * @param defenderTile The &lt;code>Tile&lt;/code> the defence takes place on.&#xD;
     * @param success True if the attack succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbQ8cVIiEeibjuLm5_lcNQ" name="attacker" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbQ8clIiEeibjuLm5_lcNQ" name="defender" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbQ8c1IiEeibjuLm5_lcNQ" name="attackerTile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbQ8dFIiEeibjuLm5_lcNQ" name="defenderTile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbQ8dVIiEeibjuLm5_lcNQ" name="success">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbRjgFIiEeibjuLm5_lcNQ" name="animateMove" method="_Wdme0VIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8llIiEeibjuLm5_lcNQ">
                    <body>Animate a move.&#xD;
     *&#xD;
     * Called from IGIH.animateMove.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that moves.&#xD;
     * @param oldTile The &lt;code>Tile&lt;/code> the move begins at.&#xD;
     * @param newTile The &lt;code>Tile&lt;/code> the move ends at.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbRjgVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbRjglIiEeibjuLm5_lcNQ" name="oldTile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbRjg1IiEeibjuLm5_lcNQ" name="newTile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WbSKkFIiEeibjuLm5_lcNQ" name="assignTeacher" method="_WdnF0FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8l1IiEeibjuLm5_lcNQ">
                    <body>Assigns a student to a teacher.&#xD;
     *&#xD;
     * Called from UnitLabel&#xD;
     *&#xD;
     * @param student The student &lt;code>Unit&lt;/code>.&#xD;
     * @param teacher The teacher &lt;code>Unit&lt;/code>.&#xD;
     * @return True if the student was assigned.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbSKkVIiEeibjuLm5_lcNQ" name="student" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbSKklIiEeibjuLm5_lcNQ" name="teacher" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbSKk1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbSxoFIiEeibjuLm5_lcNQ" name="assignTradeRoute" method="_WdnF1FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8mFIiEeibjuLm5_lcNQ">
                    <body>Assigns a trade route to a unit.&#xD;
     *&#xD;
     * Called from EuropePanel.DestinationPanel, TradeRoutePanel(),&#xD;
     * TradeRoutePanel.newRoute&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to assign a trade route to.&#xD;
     * @param tradeRoute The &lt;code>TradeRoute&lt;/code> to assign.&#xD;
     * @return True if the route was successfully assigned.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbSxoVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbSxolIiEeibjuLm5_lcNQ" name="tradeRoute" type="_WWvo0VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbSxo1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbTYsFIiEeibjuLm5_lcNQ" name="boardShip" method="_WdnF2FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8mVIiEeibjuLm5_lcNQ">
                    <body>Boards a specified unit onto a carrier.&#xD;
     * The carrier must be at the same location as the boarding unit.&#xD;
     *&#xD;
     * Called from CargoPanel, TilePopup.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> which is to board the carrier.&#xD;
     * @param carrier The carrier to board.&#xD;
     * @return True if the unit boards the carrier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbTYsVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbTYslIiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbTYs1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbTYtFIiEeibjuLm5_lcNQ" name="buildColony" method="_WdnF3FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8mlIiEeibjuLm5_lcNQ">
                    <body>Use the active unit to build a colony.&#xD;
     *&#xD;
     * Called from BuildColonyAction.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to build the colony.&#xD;
     * @return True if a colony was built.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbT_wFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbT_wVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbT_wlIiEeibjuLm5_lcNQ" name="buyGoods" method="_Wdns4FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8m1IiEeibjuLm5_lcNQ">
                    <body>Buy goods in Europe.&#xD;
     * The amount of goods is adjusted to the space in the carrier.&#xD;
     *&#xD;
     * Called from CargoPanel, TilePopup, loadCargo()&#xD;
     *&#xD;
     * @param type The type of goods to buy.&#xD;
     * @param amount The amount of goods to buy.&#xD;
     * @param carrier The &lt;code>Unit&lt;/code> acting as carrier.&#xD;
     * @return True if the purchase succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbT_w1IiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbT_xFIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbT_xVIiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbUm0FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbUm0VIiEeibjuLm5_lcNQ" name="chat" method="_Wdns5VIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeB8nFIiEeibjuLm5_lcNQ">
                    <body>Chat with another player.&#xD;
     *&#xD;
     * Called from IGIH.chat.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to chat with.&#xD;
     * @param message What to say.&#xD;
     * @param pri If true, the message is private.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbUm0lIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbUm01IiEeibjuLm5_lcNQ" name="message">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbUm1FIiEeibjuLm5_lcNQ" name="pri">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbVN4FIiEeibjuLm5_lcNQ" name="changeState" method="_Wdns6VIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjoFIiEeibjuLm5_lcNQ">
                    <body>Changes the state of this &lt;code>Unit&lt;/code>.&#xD;
     *&#xD;
     * Called from FortifyAction, SentryAction, TilePopup, UnitLabel&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code>&#xD;
     * @param state The state of the unit.&#xD;
     * @return True if the state was changed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbVN4VIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbVN4lIiEeibjuLm5_lcNQ" name="state" type="_WYBbMlIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbV08FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbV08VIiEeibjuLm5_lcNQ" name="changeWorkImprovementType" method="_Wdns7VIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjoVIiEeibjuLm5_lcNQ">
                    <body>Changes the work type of this &lt;code>Unit&lt;/code>.&#xD;
     *&#xD;
     * Called from ImprovementAction.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code>&#xD;
     * @param improvementType a &lt;code>TileImprovementType&lt;/code> value&#xD;
     * @return True if the improvement was changed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbV08lIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbV081IiEeibjuLm5_lcNQ" name="improvementType" type="_WX_mAFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbV09FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbWcAFIiEeibjuLm5_lcNQ" name="changeWorkType" method="_WdoT8FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjolIiEeibjuLm5_lcNQ">
                    <body>Changes the work type of this &lt;code>Unit&lt;/code>.&#xD;
     *&#xD;
     * Called from ColonyPanel.tryWork, UnitLabel&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code>&#xD;
     * @param workType The new &lt;code>GoodsType&lt;/code> to produce.&#xD;
     * @return True if the work type was changed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbWcAVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbWcAlIiEeibjuLm5_lcNQ" name="workType" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbWcA1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbXDEFIiEeibjuLm5_lcNQ" name="checkCashInTreasureTrain" method="_WdoT9FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjo1IiEeibjuLm5_lcNQ">
                    <body>Check if a unit is a treasure train, and if it should be cashed in.&#xD;
     * Transfers the gold carried by this unit to the {@link Player owner}.&#xD;
     *&#xD;
     * Called from TilePopup&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to be checked.&#xD;
     * @return True if the unit was cashed in (and disposed).</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbXDEVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbXDElIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbXqIFIiEeibjuLm5_lcNQ" name="chooseFoundingFather" method="_WdoT91IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjpFIiEeibjuLm5_lcNQ">
                    <body>Choose a founding father from an offered list.&#xD;
     *&#xD;
     * Called from GUI.showChooseFoundingFatherDialog&#xD;
     *&#xD;
     * @param ffs A list of &lt;code>FoundingFather&lt;/code>s to choose from.&#xD;
     * @param ff The chosen &lt;code>FoundingFather&lt;/code> (may be null).&#xD;
     * @return True if a father was chosen.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbXqIVIiEeibjuLm5_lcNQ" name="ffs" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbXqIlIiEeibjuLm5_lcNQ" name="ff" type="_WWl30FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbXqI1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbYRMVIiEeibjuLm5_lcNQ" name="chooseFoundingFather" method="_WdoT-1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjpVIiEeibjuLm5_lcNQ">
                    <body>Choose a founding father from an offered list.&#xD;
     *&#xD;
     * Called from IGIH.chooseFoundingFather.&#xD;
     *&#xD;
     * @param ffs A list of &lt;code>FoundingFather&lt;/code>s to choose from.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbY4QFIiEeibjuLm5_lcNQ" name="ffs" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WbaGYFIiEeibjuLm5_lcNQ" name="claimTile" method="_WdoT_VIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjplIiEeibjuLm5_lcNQ">
                    <body>Claim a tile.&#xD;
     *&#xD;
     * Called from ColonyPanel.ASingleTilePanel, UnitLabel and work()&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to claim.&#xD;
     * @param claimant The &lt;code>Unit&lt;/code> or &lt;code>Colony&lt;/code> claiming.&#xD;
     * @return True if the claim succeeded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbaGYVIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbaGYlIiEeibjuLm5_lcNQ" name="claimant" type="_WWme4FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbaGY1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbatcFIiEeibjuLm5_lcNQ" name="clearGotoOrders" method="_WdoUAVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjp1IiEeibjuLm5_lcNQ">
                    <body>Clears the goto orders of the given unit by setting its destination&#xD;
     * to null.&#xD;
     *&#xD;
     * Called from CanvasMouseListener&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to clear the destination for.&#xD;
     * @return True if the unit has no destination.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbatcVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbatclIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wbatc1IiEeibjuLm5_lcNQ" name="clearOrders" method="_Wdo7AFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjqFIiEeibjuLm5_lcNQ">
                    <body>Clears the orders of the given unit.&#xD;
     * Make the unit active and set a null destination and trade route.&#xD;
     *&#xD;
     * Called from ClearOrdersAction, TilePopup, TradeRoutePanel, UnitLabel&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to clear the orders of&#xD;
     * @return boolean &lt;b>true&lt;/b> if the orders were cleared</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbbUgFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbbUgVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbbUglIiEeibjuLm5_lcNQ" name="clearSpeciality" method="_Wdo7A1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjqVIiEeibjuLm5_lcNQ">
                    <body>Clear the speciality of a Unit, making it a Free Colonist.&#xD;
     *&#xD;
     * Called from UnitLabel&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to clear the speciality of.&#xD;
     * @return True if the speciality was cleared.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbbUg1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbbUhFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wbb7kFIiEeibjuLm5_lcNQ" name="diplomacy" method="_Wdo7CVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeCjrFIiEeibjuLm5_lcNQ">
                    <body>Handle a diplomatic offer.&#xD;
     *&#xD;
     * Called from IGIH.diplomacy&#xD;
     *&#xD;
     * @param our Our &lt;code>FreeColGameObject&lt;/code> that is negotiating.&#xD;
     * @param other The other &lt;code>FreeColGameObject&lt;/code>.&#xD;
     * @param agreement The &lt;code>DiplomaticTrade&lt;/code> agreement.&#xD;
     * @return A counter agreement, a rejected agreement, or null if&#xD;
     *     the original agreement was already decided.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wbb7kVIiEeibjuLm5_lcNQ" name="our" type="_WWme4FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbb7klIiEeibjuLm5_lcNQ" name="other" type="_WWme4FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbcioFIiEeibjuLm5_lcNQ" name="agreement" type="_WWkpsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbcioVIiEeibjuLm5_lcNQ" type="_WWkpsVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WbciolIiEeibjuLm5_lcNQ" name="disbandUnit" method="_WdpiEFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKsFIiEeibjuLm5_lcNQ">
                    <body>Disbands the active unit.&#xD;
     *&#xD;
     * Called from DisbandUnitAction.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to disband.&#xD;
     * @return True if the unit was disbanded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wbcio1IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbcipFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbdJsFIiEeibjuLm5_lcNQ" name="emigrate" method="_WdpiGVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKs1IiEeibjuLm5_lcNQ">
                    <body>Emigrate a unit from Europe.&#xD;
     *&#xD;
     * Called from GUI.showEmigrationDialog.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> that owns the unit.&#xD;
     * @param slot The slot to emigrate from, [0..RECRUIT_COUNT].&#xD;
     * @param n The number of remaining units known to be eligible to migrate.&#xD;
     * @param foY True if this migration is due to a fountain of youth event.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbdJsVIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbdJslIiEeibjuLm5_lcNQ" name="slot">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbdJs1IiEeibjuLm5_lcNQ" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbdJtFIiEeibjuLm5_lcNQ" name="foY">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbdwwFIiEeibjuLm5_lcNQ" name="equipUnitForRole" method="_WdqJIFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKtVIiEeibjuLm5_lcNQ">
                    <body>Change the role-equipment a unit has.&#xD;
     *&#xD;
     * Called from DefaultTransferHandler, QuickActionMenu&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code>.&#xD;
     * @param role The &lt;code>Role&lt;/code> to assume.&#xD;
     * @param roleCount The role count.&#xD;
     * @return True if the role is taken.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbdwwVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbdwwlIiEeibjuLm5_lcNQ" name="role" type="_WX-X4FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbdww1IiEeibjuLm5_lcNQ" name="roleCount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbeX0FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbeX0VIiEeibjuLm5_lcNQ" name="firstContact" method="_WdqJKlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKuFIiEeibjuLm5_lcNQ">
                    <body>A player makes first contact with a native player.&#xD;
     *&#xD;
     * Called from GUI.showFirstContactDialog&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> making contact.&#xD;
     * @param other The native &lt;code>Player&lt;/code> being contacted.&#xD;
     * @param tile An optional &lt;code>Tile&lt;/code> to offer the player if&#xD;
     *     they have made a first landing.&#xD;
     * @param result Whether the initial treaty was accepted.&#xD;
     * @return True if first contact occurs.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbeX0lIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbe-4FIiEeibjuLm5_lcNQ" name="other" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbe-4VIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbe-4lIiEeibjuLm5_lcNQ" name="result">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wbe-41IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wbe-5FIiEeibjuLm5_lcNQ" name="firstContact" method="_WdqwMFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKuVIiEeibjuLm5_lcNQ">
                    <body>A player makes first contact with a native player.&#xD;
     *&#xD;
     * Called from IGIH.firstContact.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> making contact.&#xD;
     * @param other The native &lt;code>Player&lt;/code> being contacted.&#xD;
     * @param tile An optional &lt;code>Tile&lt;/code> to offer the player if&#xD;
     *     they have made a first landing.&#xD;
     * @param n The number of settlements claimed by the native player.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wbfl8FIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbfl8VIiEeibjuLm5_lcNQ" name="other" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbfl8lIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbfl81IiEeibjuLm5_lcNQ" name="n">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wbfl9FIiEeibjuLm5_lcNQ" name="getNationSummary" method="_WdqwN1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKu1IiEeibjuLm5_lcNQ">
                    <body>Get the nation summary for a player.&#xD;
     *&#xD;
     * Called from DiplomaticTradePanel, ReportForeignAffairsPanel,&#xD;
     * ReportIndianPanel&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to summarize.&#xD;
     * @return A summary of that nation, or null on error.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbgNAFIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbgNAVIiEeibjuLm5_lcNQ" type="_WX77oVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WbgNAlIiEeibjuLm5_lcNQ" name="getNewTradeRoute" method="_WdqwOlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDKvFIiEeibjuLm5_lcNQ">
                    <body>Gets a new trade route for a player.&#xD;
     *&#xD;
     * Called from TradeRoutePanel.newRoute&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to get a new trade route for.&#xD;
     * @return A new &lt;code>TradeRoute&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbgNA1IiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbgNBFIiEeibjuLm5_lcNQ" type="_WWvo0VIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Wbg0EFIiEeibjuLm5_lcNQ" name="goToTile" method="_WdrXQlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxwVIiEeibjuLm5_lcNQ">
                    <body>Go to a tile.&#xD;
     *&#xD;
     * Called from CanvasMouseListener, TilePopup&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to move.&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to move to.&#xD;
     * @return True if the destination change was successful.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wbg0EVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbg0ElIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbhbIFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbhbIVIiEeibjuLm5_lcNQ" name="ignoreMessage" method="_WdrXRlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxwlIiEeibjuLm5_lcNQ">
                    <body>Ignore this ModelMessage from now on until it is not generated&#xD;
     * in a turn.&#xD;
     *&#xD;
     * Called from ReportTurnPanel&#xD;
     *&#xD;
     * @param message a &lt;code>ModelMessage&lt;/code> value&#xD;
     * @param flag whether to ignore the ModelMessage or not&#xD;
     * @return True, ignore message status changes can not fail.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbhbIlIiEeibjuLm5_lcNQ" name="message" type="_WWr-cVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbhbI1IiEeibjuLm5_lcNQ" name="flag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbhbJFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbiCMFIiEeibjuLm5_lcNQ" name="indianDemand" method="_WdrXSlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxw1IiEeibjuLm5_lcNQ">
                    <body>Handle a native demand at a colony.&#xD;
     *&#xD;
     * Called from IGIH.indianDemand&#xD;
     *&#xD;
     * @param unit The native &lt;code>Unit&lt;/code> making the demand.&#xD;
     * @param colony The &lt;code>Colony&lt;/code> demanded of.&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> demanded (null means gold).&#xD;
     * @param amount The amount of goods/gold demanded.&#xD;
     * @return Whether the demand was accepted or not.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbiCMVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbiCMlIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbiCM1IiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbiCNFIiEeibjuLm5_lcNQ" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbiCNVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbipQFIiEeibjuLm5_lcNQ" name="leaveShip" method="_Wdr-UFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxxFIiEeibjuLm5_lcNQ">
                    <body>Leave a ship.  The ship must be in harbour.&#xD;
     *&#xD;
     * Called from CargoPanel, ColonyPanel, EuropePanel.unloadAction,&#xD;
     * UnitLabel&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> which is to leave the ship.&#xD;
     * @return True if the unit left the ship.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbipQVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbipQlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbjQUFIiEeibjuLm5_lcNQ" name="loadCargo" method="_Wdr-U1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxxVIiEeibjuLm5_lcNQ">
                    <body>Loads a cargo onto a carrier.&#xD;
     *&#xD;
     * Called from CargoPanel, ColonyPanel, LoadAction, TilePopup.&#xD;
     *&#xD;
     * @param goods The &lt;code>Goods&lt;/code> which are going aboard the carrier.&#xD;
     * @param carrier The &lt;code>Unit&lt;/code> acting as carrier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbjQUVIiEeibjuLm5_lcNQ" name="goods" type="_WWo7IFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbjQUlIiEeibjuLm5_lcNQ" name="carrier" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbjQU1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbjQVFIiEeibjuLm5_lcNQ" name="lootCargo" method="_Wdr-WFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxx1IiEeibjuLm5_lcNQ">
                    <body>Loot some cargo.&#xD;
     *&#xD;
     * Called from GUI.showCaptureGoodsDialog&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is looting.&#xD;
     * @param goods A list of &lt;code>Goods&lt;/code> to choose from.&#xD;
     * @param defenderId The identifier of the defender unit (may have sunk).&#xD;
     * @return True if looting occurs.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wbj3YFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbj3YVIiEeibjuLm5_lcNQ" name="goods" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbj3YlIiEeibjuLm5_lcNQ" name="defenderId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wbj3Y1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbkecVIiEeibjuLm5_lcNQ" name="loot" method="_WdslYFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxyFIiEeibjuLm5_lcNQ">
                    <body>Loot some cargo.&#xD;
     *&#xD;
     * Called from IGIH.lootCargo.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is looting.&#xD;
     * @param goods A list of &lt;code>Goods&lt;/code> to choose from.&#xD;
     * @param defenderId The identifier of the defender unit (may have sunk).</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbkeclIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbkec1IiEeibjuLm5_lcNQ" name="goods" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WblFgFIiEeibjuLm5_lcNQ" name="defenderId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WblskFIiEeibjuLm5_lcNQ" name="monarchAction" method="_WdslZFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxyVIiEeibjuLm5_lcNQ">
                    <body>Accept or reject a monarch action.&#xD;
     *&#xD;
     * Called from GUI.showMonarchDialog&#xD;
     *&#xD;
     * @param action The &lt;code>MonarchAction&lt;/code> performed.&#xD;
     * @param accept If true, accept the action.&#xD;
     * @return True if the monarch was answered.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WblskVIiEeibjuLm5_lcNQ" name="action" type="_WX6tgVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WblsklIiEeibjuLm5_lcNQ" name="accept">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wblsk1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbmToFIiEeibjuLm5_lcNQ" name="monarch" method="_WdslaFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxylIiEeibjuLm5_lcNQ">
                    <body>Do a monarch interaction.&#xD;
     *&#xD;
     * Called from IGIH.monarchAction.&#xD;
     *&#xD;
     * @param action The &lt;code>MonarchAction&lt;/code> to perform.&#xD;
     * @param template A &lt;code>StringTemplate&lt;/code> describing the action.&#xD;
     * @param monarchKey A key for the monarch involved.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbmToVIiEeibjuLm5_lcNQ" name="action" type="_WX6tgVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbmTolIiEeibjuLm5_lcNQ" name="template" type="_WWQgoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbmTo1IiEeibjuLm5_lcNQ" name="monarchKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wbm6sFIiEeibjuLm5_lcNQ" name="moveTo" method="_WdslbFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxy1IiEeibjuLm5_lcNQ">
                    <body>Moves the specified unit somewhere that requires crossing the&#xD;
     * high seas.&#xD;
     *&#xD;
     * Called from EuropePanel.DestinationPanel, TilePopup&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to be moved.&#xD;
     * @param destination The &lt;code>Location&lt;/code> to be moved to.&#xD;
     * @return True if the unit can possibly move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wbm6sVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbm6slIiEeibjuLm5_lcNQ" name="destination" type="_WX3DIVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbm6s1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbnhwFIiEeibjuLm5_lcNQ" name="moveUnit" method="_WdtMcFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeDxzFIiEeibjuLm5_lcNQ">
                    <body>Moves the active unit in a specified direction. This may result in an&#xD;
     * attack, move... action.&#xD;
     *&#xD;
     * Called from MoveAction, CornerMapControls&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to move.&#xD;
     * @param direction The &lt;code>Direction&lt;/code> in which to move&#xD;
     *     the active unit.&#xD;
     * @return True if the unit may move further.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbnhwVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbnhwlIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbnhw1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WboI0FIiEeibjuLm5_lcNQ" name="moveTileCursor" method="_WdtMdFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeEY0FIiEeibjuLm5_lcNQ">
                    <body>Move the tile cursor.&#xD;
     *&#xD;
     * Called from MoveAction in terrain mode.&#xD;
     *&#xD;
     * @param direction The &lt;code>Direction&lt;/code> to move the tile cursor.&#xD;
     * @return True if the tile cursor is moved.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WboI0VIiEeibjuLm5_lcNQ" name="direction" type="_WX4RQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbov4FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Wbov4VIiEeibjuLm5_lcNQ" name="nameNewLand" method="_WdtMd1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeEY0VIiEeibjuLm5_lcNQ">
                    <body>A player names the New World.&#xD;
     *&#xD;
     * Called from GUI.showNameNewLandDialog&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that landed.&#xD;
     * @param name The name to use.&#xD;
     * @return True if the new land was named.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wbov4lIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wbov41IiEeibjuLm5_lcNQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbpW8FIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbpW8VIiEeibjuLm5_lcNQ" name="nameNewRegion" method="_WdtzgFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeEY0lIiEeibjuLm5_lcNQ">
                    <body>The player names a new region.&#xD;
     *&#xD;
     * Called from newRegionName, GUI.showNameNewRegionDialog&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> within the region.&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that has discovered the region.&#xD;
     * @param region The &lt;code>Region&lt;/code> to name.&#xD;
     * @param name The name to offer.&#xD;
     * @return True if the new region was named.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbpW8lIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_Wbp-A1IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_Wbp-BFIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbpW81IiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_Wbp-BVIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_Wbp-BlIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wbp-AFIiEeibjuLm5_lcNQ" name="region" type="_WWuasVIiEeibjuLm5_lcNQ">
                    <eAnnotations xmi:id="_Wbp-B1IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_Wbp-CFIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wbp-AVIiEeibjuLm5_lcNQ" name="name">
                    <eAnnotations xmi:id="_Wbp-CVIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_Wbp-ClIiEeibjuLm5_lcNQ" key="final"/>
                    </eAnnotations>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wbp-AlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbqlEFIiEeibjuLm5_lcNQ" name="newLandName" method="_WdtzjlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeEY01IiEeibjuLm5_lcNQ">
                    <body>Ask the player to name the new land.&#xD;
     *&#xD;
     * Called from IGIH.newLandName.&#xD;
     *&#xD;
     * @param defaultName The default name to use.&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that has landed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbqlEVIiEeibjuLm5_lcNQ" name="defaultName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbqlElIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WbrMIFIiEeibjuLm5_lcNQ" name="newRegionName" method="_WdtzkVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeEY1FIiEeibjuLm5_lcNQ">
                    <body>Ask the player to name a new region.&#xD;
     *&#xD;
     * Called from IGIH.newRegionName.&#xD;
     *&#xD;
     * @param region The &lt;code>Region&lt;/code> to name.&#xD;
     * @param defaultName The default name to use.&#xD;
     * @param tile The &lt;code>Tile&lt;/code> the unit landed at.&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that has landed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbrMIVIiEeibjuLm5_lcNQ" name="region" type="_WWuasVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbrMIlIiEeibjuLm5_lcNQ" name="defaultName">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WbrMI1IiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbrMJFIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WbrMJVIiEeibjuLm5_lcNQ" name="payArrears" method="_WduaklIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_4VIiEeibjuLm5_lcNQ">
                    <body>Pays the tax arrears on this type of goods.&#xD;
     *&#xD;
     * Called from CargoPanel, EuropePanel.MarketPanel,&#xD;
     * EuropePanel.unloadAction, QuickActionMenu&#xD;
     *&#xD;
     * @param type The type of goods for which to pay arrears.&#xD;
     * @return True if the arrears were paid.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbrMJlIiEeibjuLm5_lcNQ" name="type" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbrzMFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WbrzMVIiEeibjuLm5_lcNQ" name="payForBuilding" method="_WdualVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_4lIiEeibjuLm5_lcNQ">
                    <body>Buys the remaining hammers and tools for the {@link Building} currently&#xD;
     * being built in the given &lt;code>Colony&lt;/code>.&#xD;
     *&#xD;
     * Called from BuildQueuePanel&#xD;
     *&#xD;
     * @param colony The &lt;code>Colony&lt;/code> where the building should be&#xD;
     *     bought.&#xD;
     * @return True if the building was bought.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WbrzMlIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WbuPcFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcIfIFIiEeibjuLm5_lcNQ" name="putOutsideColony" method="_WduamFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_41IiEeibjuLm5_lcNQ">
                    <body>Puts the specified unit outside the colony.&#xD;
     *&#xD;
     * Called from ColonyPanel.OutsideColonyPanel, UnitLabel&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code>&#xD;
     * @return True if the unit was successfully put outside the colony.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcIfIVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcIfIlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcJGMFIiEeibjuLm5_lcNQ" name="remove" method="_WdvBoFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_5lIiEeibjuLm5_lcNQ">
                    <body>Remove game objects.&#xD;
     *&#xD;
     * Called from IGIH.remove().&#xD;
     *&#xD;
     * @param objects A list of &lt;code>FreeColGameObject&lt;/code>s to remove.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcJGMVIiEeibjuLm5_lcNQ" name="objects" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcJGMlIiEeibjuLm5_lcNQ" name="divert" type="_WWme4FIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WcKUUFIiEeibjuLm5_lcNQ" name="rename" method="_WdvBo1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_51IiEeibjuLm5_lcNQ">
                    <body>Renames a &lt;code>Nameable&lt;/code>.&#xD;
     *&#xD;
     * Apparently this can be done while it is not your turn.&#xD;
     *&#xD;
     * Called from RenameAction, TilePopup.&#xD;
     *&#xD;
     * @param object The object to rename.&#xD;
     * @return True if the object was renamed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcKUUVIiEeibjuLm5_lcNQ" name="object" type="_WX7UkVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcKUUlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcK7YFIiEeibjuLm5_lcNQ" name="selectDestination" method="_WdvBqFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_6VIiEeibjuLm5_lcNQ">
                    <body>Selects a destination for this unit. Europe and the player's&#xD;
     * colonies are valid destinations.&#xD;
     *&#xD;
     * Called from GotoAction.&#xD;
     *&#xD;
     * @param unit The unit for which to select a destination.&#xD;
     * @return True if the destination change succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcK7YVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcK7YlIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcN-sFIiEeibjuLm5_lcNQ" name="sellGoods" method="_WdvBq1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_6lIiEeibjuLm5_lcNQ">
                    <body>Sells goods in Europe.&#xD;
     *&#xD;
     * Called from EuropePanel.MarketPanel, EuropePanel.unloadAction,&#xD;
     * unload(), unloadCargo()&#xD;
     *&#xD;
     * @param goods The goods to be sold.&#xD;
     * @return True if the sale succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcN-sVIiEeibjuLm5_lcNQ" name="goods" type="_WWo7IFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcOlwFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcOlwVIiEeibjuLm5_lcNQ" name="setBuildQueue" method="_Wdvos1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_7FIiEeibjuLm5_lcNQ">
                    <body>Changes the current construction project of a &lt;code>Colony&lt;/code>.&#xD;
     *&#xD;
     * Called from BuildQueuePanel&#xD;
     *&#xD;
     * @param colony The &lt;code>Colony&lt;/code>&#xD;
     * @param buildQueue List of &lt;code>BuildableType&lt;/code>&#xD;
     * @return True if the build queue was changed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcPM0FIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcPM0VIiEeibjuLm5_lcNQ" name="buildQueue" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcPM0lIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcQa8FIiEeibjuLm5_lcNQ" name="setCurrentPlayer" method="_Wdvot1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_7VIiEeibjuLm5_lcNQ">
                    <body>Set a player to be the new current player.&#xD;
     *&#xD;
     * Called from IGIH.newTurn, IGIH.setCurrentPlayer, CC.login&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to be the new current player.&#xD;
     * @return True if the current player changes.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcQa8VIiEeibjuLm5_lcNQ" name="player" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcRCAFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcRCAVIiEeibjuLm5_lcNQ" name="setDead" method="_WdvoulIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_7lIiEeibjuLm5_lcNQ">
                    <body>Set a player to be dead.&#xD;
     *&#xD;
     * Called from IGIH.setDead&#xD;
     *&#xD;
     * @param dead The dead &lt;code>Player&lt;/code>.&#xD;
     * @return True if the player is marked as dead.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcRCAlIiEeibjuLm5_lcNQ" name="dead" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcRCA1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcRpEFIiEeibjuLm5_lcNQ" name="setGoodsLevels" method="_Wdw20FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeE_8FIiEeibjuLm5_lcNQ">
                    <body>Sets the export settings of the custom house.&#xD;
     *&#xD;
     * Called from WarehouseDialog&#xD;
     *&#xD;
     * @param colony The colony with the custom house.&#xD;
     * @param goodsType The goods for which to set the settings.&#xD;
     * @return True if the levels were set.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcRpEVIiEeibjuLm5_lcNQ" name="colony" type="_WWkCoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcRpElIiEeibjuLm5_lcNQ" name="goodsType" type="_WX11AFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcSQIFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcSQIVIiEeibjuLm5_lcNQ" name="setStance" method="_Wdxd4FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm8VIiEeibjuLm5_lcNQ">
                    <body>Notify the player that the stance between two players has changed.&#xD;
     *&#xD;
     * Called from IGIH.setStance&#xD;
     *&#xD;
     * @param stance The changed &lt;code>Stance&lt;/code>.&#xD;
     * @param first The first &lt;code>Player&lt;/code>.&#xD;
     * @param second The second &lt;code>Player&lt;/code>.&#xD;
     * @return True if the stance change succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcS3MFIiEeibjuLm5_lcNQ" name="stance" type="_WWtzoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcS3MVIiEeibjuLm5_lcNQ" name="first" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcS3MlIiEeibjuLm5_lcNQ" name="second" type="_WWPSg1IiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcS3M1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcS3NFIiEeibjuLm5_lcNQ" name="setTradeRoutes" method="_Wdxd5VIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm8lIiEeibjuLm5_lcNQ">
                    <body>Sets the trade routes for this player&#xD;
     *&#xD;
     * Called from TradeRoutePanel.deleteTradeRoute&#xD;
     *&#xD;
     * @param routes The trade routes to set.&#xD;
     * @return True if the trade routes were set.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcTeQFIiEeibjuLm5_lcNQ" name="routes" type="_WWDsUFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcTeQVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcUFUVIiEeibjuLm5_lcNQ" name="spyColony" method="_Wdxd6FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm81IiEeibjuLm5_lcNQ">
                    <body>Spy on a colony.&#xD;
     *&#xD;
     * Called from IGIH.spyResult.&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to find the colony on.&#xD;
     * @param recover A &lt;code>Runnable&lt;/code> to restore the normal&#xD;
     *     player view of the tile when the spying colony panel is closed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcUFUlIiEeibjuLm5_lcNQ" name="tile" type="_WWRHsVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcUsYFIiEeibjuLm5_lcNQ" name="recover" type="_WZxHoVIiEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WcUsYVIiEeibjuLm5_lcNQ" name="trainUnitInEurope" method="_Wdxd61IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm9FIiEeibjuLm5_lcNQ">
                    <body>Trains a unit of a specified type in Europe.&#xD;
     *&#xD;
     * Called from NewUnitPanel&#xD;
     *&#xD;
     * @param unitType The type of unit to be trained.&#xD;
     * @return True if a new unit was trained.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcUsYlIiEeibjuLm5_lcNQ" name="unitType" type="_WYCCQVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcUsY1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcVTcFIiEeibjuLm5_lcNQ" name="unload" method="_Wdxd7lIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm9VIiEeibjuLm5_lcNQ">
                    <body>Unload, including dumping cargo.&#xD;
     *&#xD;
     * Called from UnloadAction, UnitLabel&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> that is dumping.&#xD;
     * @return True if the unit unloaded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcVTcVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcVTclIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcV6gFIiEeibjuLm5_lcNQ" name="unloadCargo" method="_Wdxd8VIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm9lIiEeibjuLm5_lcNQ">
                    <body>Unload cargo.  If the unit carrying the cargo is not in a&#xD;
     * harbour, or if the given boolean is true, the goods will be&#xD;
     * dumped.&#xD;
     *&#xD;
     * Called from CargoPanel, ColonyPanel, EuropePanel.MarketPanel,&#xD;
     * GUI.showDumpCargoDialog, QuickActionMenu, unload()&#xD;
     *&#xD;
     * @param goods The &lt;code>Goods&lt;/code> to unload.&#xD;
     * @param dump If true, dump the goods.&#xD;
     * @return True if the unload succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcV6gVIiEeibjuLm5_lcNQ" name="goods" type="_WWo7IFIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcV6glIiEeibjuLm5_lcNQ" name="dump">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WcV6g1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcWhkFIiEeibjuLm5_lcNQ" name="updateTradeRoute" method="_WdyE8FIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm91IiEeibjuLm5_lcNQ">
                    <body>Updates a trade route.&#xD;
     *&#xD;
     * Called from TradeRoutePanel(), TradeRoutePanel.newRoute&#xD;
     *&#xD;
     * @param route The trade route to update.&#xD;
     * @return True if the trade route was updated.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcWhkVIiEeibjuLm5_lcNQ" name="route" type="_WWvo0VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcWhklIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcXIoFIiEeibjuLm5_lcNQ" name="work" method="_WdysAFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeFm-1IiEeibjuLm5_lcNQ">
                    <body>Moves a &lt;code>Unit&lt;/code> to a &lt;code>WorkLocation&lt;/code>.&#xD;
     *&#xD;
     * Called from ColonyPanel.tryWork, UnitLabel&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code>.&#xD;
     * @param workLocation The new &lt;code>WorkLocation&lt;/code>.&#xD;
     * @return True if the unit is now working at the new work location.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcXIoVIiEeibjuLm5_lcNQ" name="unit" type="_WWRuwVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcXIolIiEeibjuLm5_lcNQ" name="workLocation" type="_WYD3cVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcXIo1IiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_VyfFMFIiEeibjuLm5_lcNQ" name="ArmedUnitSettlementAction">
                  <eAnnotations xmi:id="_VyfFMVIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_VyfFMlIiEeibjuLm5_lcNQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-SMVIiEeibjuLm5_lcNQ">
                    <body>Actions when an armed unit contacts a settlement.</body>
                  </ownedComment>
                  <ownedLiteral xmi:id="_VygTUFIiEeibjuLm5_lcNQ" name="SETTLEMENT_ATTACK"/>
                  <ownedLiteral xmi:id="_VygTUVIiEeibjuLm5_lcNQ" name="SETTLEMENT_TRIBUTE"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_VygTUlIiEeibjuLm5_lcNQ" name="BoycottAction">
                  <eAnnotations xmi:id="_VygTU1IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_VygTVFIiEeibjuLm5_lcNQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-SMlIiEeibjuLm5_lcNQ">
                    <body>Actions when dealing with a boycott.</body>
                  </ownedComment>
                  <ownedLiteral xmi:id="_Vyg6YVIiEeibjuLm5_lcNQ" name="PAY_ARREARS"/>
                  <ownedLiteral xmi:id="_Vyg6YlIiEeibjuLm5_lcNQ" name="DUMP_CARGO"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Vyg6Y1IiEeibjuLm5_lcNQ" name="BuyAction">
                  <eAnnotations xmi:id="_Vyg6ZFIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Vyg6ZVIiEeibjuLm5_lcNQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-SM1IiEeibjuLm5_lcNQ">
                    <body>Actions when buying from the natives.</body>
                  </ownedComment>
                  <ownedLiteral xmi:id="_VyhhcVIiEeibjuLm5_lcNQ" name="BUY"/>
                  <ownedLiteral xmi:id="_VyhhclIiEeibjuLm5_lcNQ" name="HAGGLE"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Vyhhc1IiEeibjuLm5_lcNQ" name="ClaimAction">
                  <eAnnotations xmi:id="_VyhhdFIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_VyhhdVIiEeibjuLm5_lcNQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-SNFIiEeibjuLm5_lcNQ">
                    <body>Actions when claiming land.</body>
                  </ownedComment>
                  <ownedLiteral xmi:id="_VyiIgVIiEeibjuLm5_lcNQ" name="ACCEPT"/>
                  <ownedLiteral xmi:id="_VyiIglIiEeibjuLm5_lcNQ" name="STEAL"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_VyiIg1IiEeibjuLm5_lcNQ" name="MissionaryAction">
                  <eAnnotations xmi:id="_VyiIhFIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_VyivkFIiEeibjuLm5_lcNQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-SNVIiEeibjuLm5_lcNQ">
                    <body>Actions with a missionary at a native settlement.</body>
                  </ownedComment>
                  <ownedLiteral xmi:id="_VyivklIiEeibjuLm5_lcNQ" name="ESTABLISH_MISSION"/>
                  <ownedLiteral xmi:id="_Vyivk1IiEeibjuLm5_lcNQ" name="DENOUNCE_HERESY"/>
                  <ownedLiteral xmi:id="_VyjWoFIiEeibjuLm5_lcNQ" name="INCITE_INDIANS"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_VyjWoVIiEeibjuLm5_lcNQ" name="ScoutColonyAction">
                  <eAnnotations xmi:id="_VyjWolIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_VyjWo1IiEeibjuLm5_lcNQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-5QFIiEeibjuLm5_lcNQ">
                    <body>Actions in scouting a colony.</body>
                  </ownedComment>
                  <ownedLiteral xmi:id="_VyjWpVIiEeibjuLm5_lcNQ" name="FOREIGN_COLONY_NEGOTIATE"/>
                  <ownedLiteral xmi:id="_VyjWplIiEeibjuLm5_lcNQ" name="FOREIGN_COLONY_SPY"/>
                  <ownedLiteral xmi:id="_VyjWp1IiEeibjuLm5_lcNQ" name="FOREIGN_COLONY_ATTACK"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Vyj9sFIiEeibjuLm5_lcNQ" name="ScoutIndianSettlementAction">
                  <eAnnotations xmi:id="_Vyj9sVIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Vyj9slIiEeibjuLm5_lcNQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-5QVIiEeibjuLm5_lcNQ">
                    <body>Actions in scouting a native settlement.</body>
                  </ownedComment>
                  <ownedLiteral xmi:id="_Vyj9tFIiEeibjuLm5_lcNQ" name="INDIAN_SETTLEMENT_SPEAK"/>
                  <ownedLiteral xmi:id="_VykkwFIiEeibjuLm5_lcNQ" name="INDIAN_SETTLEMENT_TRIBUTE"/>
                  <ownedLiteral xmi:id="_VykkwVIiEeibjuLm5_lcNQ" name="INDIAN_SETTLEMENT_ATTACK"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_VykkwlIiEeibjuLm5_lcNQ" name="SellAction">
                  <eAnnotations xmi:id="_VylL0FIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_VylL0VIiEeibjuLm5_lcNQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-5QlIiEeibjuLm5_lcNQ">
                    <body>Actions when selling to the natives.</body>
                  </ownedComment>
                  <ownedLiteral xmi:id="_VylL01IiEeibjuLm5_lcNQ" name="SELL"/>
                  <ownedLiteral xmi:id="_VylL1FIiEeibjuLm5_lcNQ" name="HAGGLE"/>
                  <ownedLiteral xmi:id="_VylL1VIiEeibjuLm5_lcNQ" name="GIFT"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_VylL1lIiEeibjuLm5_lcNQ" name="TradeAction">
                  <eAnnotations xmi:id="_VylL11IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_VylL2FIiEeibjuLm5_lcNQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-5Q1IiEeibjuLm5_lcNQ">
                    <body>Choice of sales action at a native settlement.</body>
                  </ownedComment>
                  <ownedLiteral xmi:id="_Vyly4VIiEeibjuLm5_lcNQ" name="BUY"/>
                  <ownedLiteral xmi:id="_Vyly4lIiEeibjuLm5_lcNQ" name="SELL"/>
                  <ownedLiteral xmi:id="_Vyly41IiEeibjuLm5_lcNQ" name="GIFT"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_VymZ8FIiEeibjuLm5_lcNQ" name="MoveMode" visibility="private">
                  <eAnnotations xmi:id="_VymZ8VIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_VymZ8lIiEeibjuLm5_lcNQ" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_Wd-5RFIiEeibjuLm5_lcNQ">
                    <body>Selecting next unit depends on mode--- either from the active list,&#xD;
     * from the going-to list, or flush going-to and end the turn.</body>
                  </ownedComment>
                  <ownedOperation xmi:id="_WYHh0FIiEeibjuLm5_lcNQ" name="maximize" method="_WdctwVIiEeibjuLm5_lcNQ">
                    <ownedParameter xmi:id="_WYHh0VIiEeibjuLm5_lcNQ" name="m" type="_VymZ8FIiEeibjuLm5_lcNQ"/>
                    <ownedParameter xmi:id="_WYII4FIiEeibjuLm5_lcNQ" type="_VymZ8FIiEeibjuLm5_lcNQ" direction="return"/>
                  </ownedOperation>
                  <ownedLiteral xmi:id="_VymZ81IiEeibjuLm5_lcNQ" name="NEXT_ACTIVE_UNIT"/>
                  <ownedLiteral xmi:id="_VymZ9FIiEeibjuLm5_lcNQ" name="EXECUTE_GOTO_ORDERS"/>
                  <ownedLiteral xmi:id="_VymZ9VIiEeibjuLm5_lcNQ" name="END_TURN"/>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Vz8dwFIiEeibjuLm5_lcNQ" name="PreGameInputHandler" isLeaf="true">
                <ownedComment xmi:id="_WeFm_FIiEeibjuLm5_lcNQ">
                  <body>Handles the network messages that arrives before the game starts.</body>
                </ownedComment>
                <generalization xmi:id="_WZCu4FIiEeibjuLm5_lcNQ" general="_VyNYYFIiEeibjuLm5_lcNQ"/>
                <ownedAttribute xmi:id="_WdDFIFIiEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_WWE6cVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_WeiS4VIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_WdDsMFIiEeibjuLm5_lcNQ" value="Logger.getLogger(PreGameInputHandler.class.getName())"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd0hMFIiEeibjuLm5_lcNQ" name="PreGameInputHandler" specification="_WcfEcFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd0hMVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd0hMlIiEeibjuLm5_lcNQ" type="_Vz8dwFIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>super(freeColClient);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd1IQFIiEeibjuLm5_lcNQ" name="handle" specification="_WcfrgFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd1IQVIiEeibjuLm5_lcNQ" name="connection" type="_WWSV0FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd1IQlIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd1IQ1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>String type = (element == null) ? &quot;(null)&quot; : element.getTagName();&#xD;
     return (&quot;addPlayer&quot;.equals(type))&#xD;
         ? addPlayer(element)&#xD;
         : (&quot;chat&quot;.equals(type))&#xD;
         ? chat(element)&#xD;
         : (&quot;disconnect&quot;.equals(type))&#xD;
         ? disconnect(element)&#xD;
         : (&quot;error&quot;.equals(type))&#xD;
         ? error(element)&#xD;
         : (&quot;logout&quot;.equals(type))&#xD;
         ? logout(element)&#xD;
         : (&quot;multiple&quot;.equals(type))&#xD;
         ? multiple(connection, element)&#xD;
         : (&quot;playerReady&quot;.equals(type))&#xD;
         ? playerReady(element)&#xD;
         : (&quot;removePlayer&quot;.equals(type))&#xD;
         ? removePlayer(element)&#xD;
         : (&quot;setAvailable&quot;.equals(type))&#xD;
         ? setAvailable(element)&#xD;
         : (&quot;startGame&quot;.equals(type))&#xD;
         ? startGame(element)&#xD;
         : (&quot;updateColor&quot;.equals(type))&#xD;
         ? updateColor(element)&#xD;
         : (&quot;updateGame&quot;.equals(type))&#xD;
         ? updateGame(element)&#xD;
         : (&quot;updateGameOptions&quot;.equals(type))&#xD;
         ? updateGameOptions(element)&#xD;
         : (&quot;updateMapGeneratorOptions&quot;.equals(type))&#xD;
         ? updateMapGeneratorOptions(element)&#xD;
         : (&quot;updateNation&quot;.equals(type))&#xD;
         ? updateNation(element)&#xD;
         : (&quot;updateNationType&quot;.equals(type))&#xD;
         ? updateNationType(element)&#xD;
         : unknown(element);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd1IRFIiEeibjuLm5_lcNQ" name="addPlayer" specification="_Wcg5oFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd1IRVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd1IRlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Game game = getFreeColClient().getGame();&#xD;
&#xD;
     Element playerElement = (Element)element&#xD;
         .getElementsByTagName(Player.getXMLElementTagName()).item(0);&#xD;
     String id = FreeColObject.readId(playerElement);&#xD;
     FreeColGameObject fcgo = game.getFreeColGameObject(id);&#xD;
     if (fcgo == null) {&#xD;
         game.addPlayer(new Player(game, playerElement));&#xD;
     } else {&#xD;
         fcgo.readFromXMLElement(playerElement);&#xD;
     }&#xD;
     getGUI().refreshPlayersTable();&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd1IR1IiEeibjuLm5_lcNQ" name="chat" specification="_WchgsFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd1ISFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd1ISVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Game game = getGame();&#xD;
     ChatMessage chatMessage = new ChatMessage(game, element);&#xD;
     getGUI().displayChatMessage(chatMessage.getPlayer(game),&#xD;
                                 chatMessage.getMessage(),&#xD;
                                 chatMessage.isPrivate());&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd1vUFIiEeibjuLm5_lcNQ" name="error" specification="_Wchgs1IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd1vUVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd1vUlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>getGUI().showErrorMessage((element.hasAttribute(&quot;messageID&quot;))&#xD;
         ? element.getAttribute(&quot;messageID&quot;)&#xD;
         : null,&#xD;
         element.getAttribute(&quot;message&quot;));&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd1vU1IiEeibjuLm5_lcNQ" name="logout" specification="_WciHwlIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd1vVFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd1vVVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Game game = getFreeColClient().getGame();&#xD;
&#xD;
     String playerId = element.getAttribute(&quot;player&quot;);&#xD;
     String reason = element.getAttribute(&quot;reason&quot;);&#xD;
     if (reason != null &amp;&amp; !reason.isEmpty()) {&#xD;
         logger.info(&quot;Client logging out: &quot; + reason);&#xD;
     }&#xD;
&#xD;
     Player player = game.getFreeColGameObject(playerId, Player.class);&#xD;
     game.removePlayer(player);&#xD;
     getGUI().refreshPlayersTable();&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd1vVlIiEeibjuLm5_lcNQ" name="multiple" specification="_Wciu0FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd1vV1IiEeibjuLm5_lcNQ" name="connection" type="_WWSV0FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd1vWFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd1vWVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>NodeList nodes = element.getChildNodes();&#xD;
     Element reply = null;&#xD;
&#xD;
     for (int i = 0; i &lt; nodes.getLength(); i++) {&#xD;
         reply = handle(connection, (Element)nodes.item(i));&#xD;
     }&#xD;
     return reply;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd1vWlIiEeibjuLm5_lcNQ" name="playerReady" specification="_WcjV4FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd1vW1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd1vXFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Game game = getFreeColClient().getGame();&#xD;
&#xD;
     Player player = game&#xD;
         .getFreeColGameObject(element.getAttribute(&quot;player&quot;), Player.class);&#xD;
     boolean ready = Boolean.parseBoolean(element.getAttribute(&quot;value&quot;));&#xD;
     player.setReady(ready);&#xD;
     getGUI().refreshPlayersTable();&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd2WYFIiEeibjuLm5_lcNQ" name="removePlayer" specification="_Wcj88FIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd2WYVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd2WYlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Game game = getFreeColClient().getGame();&#xD;
&#xD;
     Element playerElement = (Element)element&#xD;
         .getElementsByTagName(Player.getXMLElementTagName()).item(0);&#xD;
     Player player = new Player(game, playerElement);&#xD;
&#xD;
     getFreeColClient().getGame().removePlayer(player);&#xD;
     getGUI().refreshPlayersTable();&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd2WY1IiEeibjuLm5_lcNQ" name="setAvailable" specification="_Wcj881IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd2WZFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd2WZVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Nation nation = getGame().getSpecification()&#xD;
         .getNation(element.getAttribute(&quot;nation&quot;));&#xD;
     NationState state = Enum.valueOf(NationState.class,&#xD;
                                      element.getAttribute(&quot;state&quot;));&#xD;
     getFreeColClient().getGame().getNationOptions()&#xD;
         .setNationState(nation, state);&#xD;
     getGUI().refreshPlayersTable();&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd2WZlIiEeibjuLm5_lcNQ" name="startGame" specification="_WclLEFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd2WZ1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd2WaFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>new Thread(FreeCol.CLIENT_THREAD + &quot;Starting game&quot;) {&#xD;
             @Override&#xD;
             public void run() {&#xD;
                 while (getFreeColClient().getGame().getMap() == null) {&#xD;
                     try {&#xD;
                         Thread.sleep(200);&#xD;
                     } catch (Exception ex) {}&#xD;
                 }&#xD;
                 &#xD;
                 SwingUtilities.invokeLater(() -> {&#xD;
                         getFreeColClient().getPreGameController()&#xD;
                             .startGame();&#xD;
                     });&#xD;
             }&#xD;
         }.start();&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd2WaVIiEeibjuLm5_lcNQ" name="updateColor" specification="_WcmZMFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd2WalIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd2Wa1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Game game = getFreeColClient().getGame();&#xD;
     Specification spec = game.getSpecification();&#xD;
     String str = element.getAttribute(&quot;nation&quot;);&#xD;
     Nation nation = spec.getNation(str);&#xD;
     if (nation == null) {&#xD;
         logger.warning(&quot;Invalid nation: &quot; + str);&#xD;
         return null;&#xD;
     }&#xD;
     Color color;&#xD;
     try {&#xD;
         str = element.getAttribute(&quot;color&quot;);&#xD;
         int rgb = Integer.parseInt(str);&#xD;
         color = new Color(rgb);&#xD;
     } catch (NumberFormatException nfe) {&#xD;
         logger.warning(&quot;Invalid color: &quot; + str);&#xD;
         return null;&#xD;
     }&#xD;
     nation.setColor(color);&#xD;
     getFreeColClient().getGUI().refreshPlayersTable();&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd2WbFIiEeibjuLm5_lcNQ" name="updateGame" specification="_WcnAQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd2WbVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd2WblIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>NodeList children = element.getChildNodes();&#xD;
     if (children.getLength() == 1) {&#xD;
         FreeColClient fcc = getFreeColClient();&#xD;
         Game game = fcc.getGame();&#xD;
         game.readFromXMLElement((Element)children.item(0));&#xD;
         fcc.addSpecificationActions(game.getSpecification());&#xD;
     } else {&#xD;
         logger.warning(&quot;Child node expected: &quot; + element.getTagName());&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd29cFIiEeibjuLm5_lcNQ" name="updateGameOptions" specification="_WcnnUFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd29cVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd29clIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Game game = getFreeColClient().getGame();&#xD;
&#xD;
     Element mgoElement = (Element)element&#xD;
         .getElementsByTagName(GameOptions.getXMLElementTagName()).item(0);&#xD;
     Specification spec = game.getSpecification();&#xD;
     OptionGroup gameOptions = spec.getGameOptions();&#xD;
     gameOptions.readFromXMLElement(mgoElement);&#xD;
     spec.clean(&quot;update game options (server initiated)&quot;);&#xD;
&#xD;
     getGUI().updateGameOptions();&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd29c1IiEeibjuLm5_lcNQ" name="updateMapGeneratorOptions" specification="_WcnnU1IiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd29dFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd29dVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Element mgoElement = (Element)element&#xD;
         .getElementsByTagName(MapGeneratorOptions.getXMLElementTagName())&#xD;
         .item(0);&#xD;
     getFreeColClient().getGame().getMapGeneratorOptions()&#xD;
         .readFromXMLElement(mgoElement);&#xD;
&#xD;
     getGUI().updateMapGeneratorOptions();&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd29dlIiEeibjuLm5_lcNQ" name="updateNation" specification="_WcoOYlIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd29d1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd29eFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Game game = getFreeColClient().getGame();&#xD;
&#xD;
     Player player = game&#xD;
         .getFreeColGameObject(element.getAttribute(&quot;player&quot;), Player.class);&#xD;
     Nation nation = getGame().getSpecification()&#xD;
         .getNation(element.getAttribute(&quot;value&quot;));&#xD;
&#xD;
     player.setNation(nation);&#xD;
     getGUI().refreshPlayersTable();&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd29eVIiEeibjuLm5_lcNQ" name="updateNationType" specification="_Wco1cFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd29elIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd29e1IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Game game = getFreeColClient().getGame();&#xD;
&#xD;
     Player player = game&#xD;
         .getFreeColGameObject(element.getAttribute(&quot;player&quot;), Player.class);&#xD;
     NationType nationType = getGame().getSpecification()&#xD;
         .getNationType(element.getAttribute(&quot;value&quot;));&#xD;
&#xD;
     player.changeNationType(nationType);&#xD;
     getGUI().refreshPlayersTable();&#xD;
&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_WcfEcFIiEeibjuLm5_lcNQ" name="PreGameInputHandler" method="_Wd0hMFIiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_WcfEclIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_WcfEc1IiEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_WeGOAFIiEeibjuLm5_lcNQ">
                    <body>The constructor to use.&#xD;
     *&#xD;
     * @param freeColClient The &lt;code>FreeColClient&lt;/code> for the game.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcfEcVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcfEdFIiEeibjuLm5_lcNQ" type="_Vz8dwFIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WcfrgFIiEeibjuLm5_lcNQ" name="handle" method="_Wd1IQFIiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_Wcfrg1IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_WcfrhFIiEeibjuLm5_lcNQ" key="synchronized"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_WcfrgVIiEeibjuLm5_lcNQ" name="connection" type="_WWSV0FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcfrglIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcfrhVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Wcg5oFIiEeibjuLm5_lcNQ" name="addPlayer" visibility="private" method="_Wd1IRFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeGOAVIiEeibjuLm5_lcNQ">
                    <body>Handles an &quot;addPlayer&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wcg5oVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wcg5olIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WchgsFIiEeibjuLm5_lcNQ" name="chat" visibility="private" method="_Wd1IR1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeGOAlIiEeibjuLm5_lcNQ">
                    <body>Handles a &quot;chat&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WchgsVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WchgslIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Wchgs1IiEeibjuLm5_lcNQ" name="error" visibility="private" method="_Wd1vUFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeGOA1IiEeibjuLm5_lcNQ">
                    <body>Handles an &quot;error&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML&#xD;
     *     tree) that holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WciHwFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WciHwVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WciHwlIiEeibjuLm5_lcNQ" name="logout" visibility="private" method="_Wd1vU1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeGOBFIiEeibjuLm5_lcNQ">
                    <body>Handles an &quot;logout&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WciHw1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WciHxFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Wciu0FIiEeibjuLm5_lcNQ" name="multiple" method="_Wd1vVlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeGOBVIiEeibjuLm5_lcNQ">
                    <body>Handle all the children of this element.&#xD;
     *&#xD;
     * @param connection The &lt;code>Connection&lt;/code> the element arrived on.&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return The result of handling the last &lt;code>Element&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wciu0VIiEeibjuLm5_lcNQ" name="connection" type="_WWSV0FIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wciu0lIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wciu01IiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WcjV4FIiEeibjuLm5_lcNQ" name="playerReady" visibility="private" method="_Wd1vWlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeGOBlIiEeibjuLm5_lcNQ">
                    <body>Handles a &quot;playerReady&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcjV4VIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcjV4lIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Wcj88FIiEeibjuLm5_lcNQ" name="removePlayer" visibility="private" method="_Wd2WYFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeGOB1IiEeibjuLm5_lcNQ">
                    <body>Handles a &quot;removePlayer&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wcj88VIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wcj88lIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Wcj881IiEeibjuLm5_lcNQ" name="setAvailable" visibility="private" method="_Wd2WY1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeGOCFIiEeibjuLm5_lcNQ">
                    <body>Handles a &quot;setAvailable&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WckkAFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WckkAVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WclLEFIiEeibjuLm5_lcNQ" name="startGame" visibility="private" method="_Wd2WZlIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_WclLEVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WclLElIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WcmZMFIiEeibjuLm5_lcNQ" name="updateColor" visibility="private" method="_Wd2WaVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeG1EFIiEeibjuLm5_lcNQ">
                    <body>Handles an &quot;updateColor&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcmZMVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcmZMlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WcnAQFIiEeibjuLm5_lcNQ" name="updateGame" visibility="private" method="_Wd2WbFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeG1EVIiEeibjuLm5_lcNQ">
                    <body>Handles an &quot;updateGame&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcnAQVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcnAQlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WcnnUFIiEeibjuLm5_lcNQ" name="updateGameOptions" visibility="private" method="_Wd29cFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeG1ElIiEeibjuLm5_lcNQ">
                    <body>Handles an &quot;updateGameOptions&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcnnUVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcnnUlIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WcnnU1IiEeibjuLm5_lcNQ" name="updateMapGeneratorOptions" visibility="private" method="_Wd29c1IiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeG1E1IiEeibjuLm5_lcNQ">
                    <body>Handles an &quot;updateMapGeneratorOptions&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcoOYFIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcoOYVIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_WcoOYlIiEeibjuLm5_lcNQ" name="updateNation" visibility="private" method="_Wd29dlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeG1FFIiEeibjuLm5_lcNQ">
                    <body>Handles an &quot;updateNation&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcoOY1IiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcoOZFIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Wco1cFIiEeibjuLm5_lcNQ" name="updateNationType" visibility="private" method="_Wd29eVIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeG1FVIiEeibjuLm5_lcNQ">
                    <body>Handles an &quot;updateNationType&quot;-message.&#xD;
     *&#xD;
     * @param element The element (root element in a DOM-parsed XML tree) that&#xD;
     *                holds all the information.&#xD;
     * @return Null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Wco1cVIiEeibjuLm5_lcNQ" name="element" type="_WWGvoVIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wco1clIiEeibjuLm5_lcNQ" type="_WWGvoVIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_V0JSEFIiEeibjuLm5_lcNQ" name="SoundController">
                <ownedComment xmi:id="_WeG1FlIiEeibjuLm5_lcNQ">
                  <body>Controls the SoundPlayer.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_WdETQFIiEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_WWE6cVIiEeibjuLm5_lcNQ" isReadOnly="true" association="_Wei58VIiEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_WdETQVIiEeibjuLm5_lcNQ" value="Logger.getLogger(SoundController.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_WdETQlIiEeibjuLm5_lcNQ" name="soundPlayer" visibility="private" type="_WZI1g1IiEeibjuLm5_lcNQ" association="_WejhAVIiEeibjuLm5_lcNQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd3kgFIiEeibjuLm5_lcNQ" name="SoundController" specification="_WcqDkFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd3kgVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_Wd3kglIiEeibjuLm5_lcNQ" name="sound">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Wd3kg1IiEeibjuLm5_lcNQ" type="_V0JSEFIiEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>final ClientOptions opts = freeColClient.getClientOptions();&#xD;
     if (sound) {&#xD;
         this.soundPlayer = null;&#xD;
         Option amo = opts.getOption(ClientOptions.AUDIO_MIXER);&#xD;
         Option vo = opts.getOption(ClientOptions.AUDIO_VOLUME);&#xD;
         if (!(amo instanceof AudioMixerOption)) {&#xD;
             logger.warning(ClientOptions.AUDIO_MIXER + &quot; is not an AudioMixerOption&quot;);&#xD;
         } else if (!(vo instanceof PercentageOption)) {&#xD;
             logger.warning(ClientOptions.AUDIO_VOLUME + &quot; is not a PercentageOption&quot;);&#xD;
         } else {&#xD;
             try {&#xD;
                 logger.log(Level.INFO, &quot;Create sound controller with &quot;&#xD;
                     + amo + &quot;/&quot; + vo);&#xD;
                     //+ &quot; mixer /&quot; + amo.getValue().toString()&#xD;
                     //+ &quot;/, volume &quot; + volume.getValue().toString());&#xD;
                 this.soundPlayer = new SoundPlayer((AudioMixerOption)amo,&#xD;
                                                    (PercentageOption)vo);&#xD;
             } catch (Exception e) {&#xD;
                 // #3168279 reports an undocumented NPE thrown by&#xD;
                 // AudioSystem.getMixer(null).  Workaround this and other&#xD;
                 // such failures by just disabling sound.&#xD;
                 this.soundPlayer = null;&#xD;
                 logger.log(Level.WARNING, &quot;Sound disabled&quot;, e);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd3khFIiEeibjuLm5_lcNQ" name="canPlaySound" specification="_V0J5IFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd3khVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return soundPlayer != null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd3khlIiEeibjuLm5_lcNQ" name="playSound" specification="_V0KgMVIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd3kh1IiEeibjuLm5_lcNQ" name="sound">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!canPlaySound()) {&#xD;
         return;&#xD;
     }&#xD;
     if (sound == null) {&#xD;
         soundPlayer.stop();&#xD;
     } else {&#xD;
         File file = ResourceManager.getAudio(sound);&#xD;
         if (file != null) {&#xD;
             soundPlayer.playOnce(file);&#xD;
         }&#xD;
         logger.finest(((file == null)&#xD;
             ? &quot;Could not load&quot;&#xD;
             : &quot;Playing&quot;) + &quot; sound: &quot; + sound);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Wd4LkFIiEeibjuLm5_lcNQ" name="getSoundMixerLabelText" specification="_V0LHQFIiEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_Wd4LkVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Mixer mixer;&#xD;
     String text = (soundPlayer == null)&#xD;
         ? Messages.message(&quot;nothing&quot;)&#xD;
         : ((mixer = soundPlayer.getMixer()) == null)&#xD;
             ? Messages.message(&quot;none&quot;)&#xD;
             : mixer.getMixerInfo().getName();&#xD;
     return Messages.message(&quot;current&quot;) + &quot;:  &quot; + text;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_V0J5IFIiEeibjuLm5_lcNQ" name="canPlaySound" method="_Wd3khFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeG1GFIiEeibjuLm5_lcNQ">
                    <body>Can this client play sounds?&#xD;
     *&#xD;
     * @return True if there is a sound player present.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_V0KgMFIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_V0KgMVIiEeibjuLm5_lcNQ" name="playSound" method="_Wd3khlIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeG1GVIiEeibjuLm5_lcNQ">
                    <body>Play a sound.&#xD;
     *&#xD;
     * @param sound The sound resource to play, or if null stop playing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_V0KgMlIiEeibjuLm5_lcNQ" name="sound">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_V0LHQFIiEeibjuLm5_lcNQ" name="getSoundMixerLabelText" method="_Wd4LkFIiEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_WeG1GlIiEeibjuLm5_lcNQ">
                    <body>Get the label text for the sound player mixer.&#xD;
     *&#xD;
     * Needed by the audio mixer option UI.&#xD;
     *&#xD;
     * @return The text.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_V0LHQVIiEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_WcqDkFIiEeibjuLm5_lcNQ" name="SoundController" method="_Wd3kgFIiEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_WcqDk1IiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_WcqDlFIiEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_WeG1F1IiEeibjuLm5_lcNQ">
                    <body>Prepare the sound system.&#xD;
     * &#xD;
     * @param freeColClient The &lt;code>FreeColClient&lt;/code> for the game.&#xD;
     * @param sound Enable sound if true.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_WcqDkVIiEeibjuLm5_lcNQ" name="freeColClient" type="_WWJL4VIiEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_WcqDklIiEeibjuLm5_lcNQ" name="sound">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_WcqDlVIiEeibjuLm5_lcNQ" type="_V0JSEFIiEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeWFoFIiEeibjuLm5_lcNQ" name="" memberEnd="_WeWFoVIiEeibjuLm5_lcNQ _WcvjIFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeWFoVIiEeibjuLm5_lcNQ" name="" type="_VxeYkFIiEeibjuLm5_lcNQ" association="_WeWFoFIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeXTwVIiEeibjuLm5_lcNQ" name="" memberEnd="_WeXTwlIiEeibjuLm5_lcNQ _WcvjIlIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeXTwlIiEeibjuLm5_lcNQ" name="" type="_VxeYkFIiEeibjuLm5_lcNQ" association="_WeXTwVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeX60VIiEeibjuLm5_lcNQ" name="" memberEnd="_WeX60lIiEeibjuLm5_lcNQ _WcwKMVIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeX60lIiEeibjuLm5_lcNQ" name="" type="_VxeYkFIiEeibjuLm5_lcNQ" association="_WeX60VIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeYh4VIiEeibjuLm5_lcNQ" name="" memberEnd="_WeYh4lIiEeibjuLm5_lcNQ _WcxYUFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeYh4lIiEeibjuLm5_lcNQ" name="" type="_VxxTgFIiEeibjuLm5_lcNQ" association="_WeYh4VIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeYh5FIiEeibjuLm5_lcNQ" name="" memberEnd="_WeZI8FIiEeibjuLm5_lcNQ _Wcx_YFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeZI8FIiEeibjuLm5_lcNQ" name="" type="_VxxTgFIiEeibjuLm5_lcNQ" association="_WeYh5FIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeZI8lIiEeibjuLm5_lcNQ" name="" memberEnd="_WeZI81IiEeibjuLm5_lcNQ _Wcx_YlIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeZI81IiEeibjuLm5_lcNQ" name="" type="_VxxTgFIiEeibjuLm5_lcNQ" association="_WeZI8lIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeZwAVIiEeibjuLm5_lcNQ" name="" memberEnd="_WeZwAlIiEeibjuLm5_lcNQ _WczNgFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeZwAlIiEeibjuLm5_lcNQ" name="" type="_Vx4oQFIiEeibjuLm5_lcNQ" association="_WeZwAVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeaXEVIiEeibjuLm5_lcNQ" name="" memberEnd="_WeaXElIiEeibjuLm5_lcNQ _WczNglIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeaXElIiEeibjuLm5_lcNQ" name="" type="_Vx4oQFIiEeibjuLm5_lcNQ" association="_WeaXEVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_Wea-IVIiEeibjuLm5_lcNQ" name="" memberEnd="_Wea-IlIiEeibjuLm5_lcNQ _Wcz0kVIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_Wea-IlIiEeibjuLm5_lcNQ" name="" type="_Vx4oQFIiEeibjuLm5_lcNQ" association="_Wea-IVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeblMFIiEeibjuLm5_lcNQ" name="" memberEnd="_WeblMVIiEeibjuLm5_lcNQ _Wc0boFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeblMVIiEeibjuLm5_lcNQ" name="" type="_Vx4oQFIiEeibjuLm5_lcNQ" association="_WeblMFIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeblM1IiEeibjuLm5_lcNQ" name="" memberEnd="_WeblNFIiEeibjuLm5_lcNQ _Wc1pwFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeblNFIiEeibjuLm5_lcNQ" name="" type="_VyNYYFIiEeibjuLm5_lcNQ" association="_WeblM1IiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WecMQVIiEeibjuLm5_lcNQ" name="" memberEnd="_WecMQlIiEeibjuLm5_lcNQ _Wc2Q0VIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WecMQlIiEeibjuLm5_lcNQ" name="" type="_VyNYYFIiEeibjuLm5_lcNQ" association="_WecMQVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeczUVIiEeibjuLm5_lcNQ" name="" memberEnd="_WeczUlIiEeibjuLm5_lcNQ _Wc3e8FIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeczUlIiEeibjuLm5_lcNQ" name="" type="_VyRp0FIiEeibjuLm5_lcNQ" association="_WeczUVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WedaYVIiEeibjuLm5_lcNQ" name="" memberEnd="_WedaYlIiEeibjuLm5_lcNQ _Wc4tEVIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WedaYlIiEeibjuLm5_lcNQ" name="" type="_VyRp0FIiEeibjuLm5_lcNQ" association="_WedaYVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeeBcVIiEeibjuLm5_lcNQ" name="" memberEnd="_WeeBclIiEeibjuLm5_lcNQ _Wc5UIFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeeBclIiEeibjuLm5_lcNQ" name="" type="_VyRp0FIiEeibjuLm5_lcNQ" association="_WeeBcVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeeogVIiEeibjuLm5_lcNQ" name="" memberEnd="_WeeoglIiEeibjuLm5_lcNQ _Wc5UIlIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeeoglIiEeibjuLm5_lcNQ" name="" type="_VyRp0FIiEeibjuLm5_lcNQ" association="_WeeogVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WefPkVIiEeibjuLm5_lcNQ" name="" memberEnd="_WefPklIiEeibjuLm5_lcNQ _Wc6iQFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WefPklIiEeibjuLm5_lcNQ" name="" type="_VyaMsFIiEeibjuLm5_lcNQ" association="_WefPkVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_Wef2oVIiEeibjuLm5_lcNQ" name="" memberEnd="_Wef2olIiEeibjuLm5_lcNQ _Wc7JUlIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_Wef2olIiEeibjuLm5_lcNQ" name="" type="_VyaMsFIiEeibjuLm5_lcNQ" association="_Wef2oVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WegdsFIiEeibjuLm5_lcNQ" name="" memberEnd="_WegdsVIiEeibjuLm5_lcNQ _Wc7JVFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WegdsVIiEeibjuLm5_lcNQ" name="" type="_VyaMsFIiEeibjuLm5_lcNQ" association="_WegdsFIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WehEwFIiEeibjuLm5_lcNQ" name="" memberEnd="_WehEwVIiEeibjuLm5_lcNQ _Wc7wYVIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WehEwVIiEeibjuLm5_lcNQ" name="" type="_VyaMsFIiEeibjuLm5_lcNQ" association="_WehEwFIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_Wehr0FIiEeibjuLm5_lcNQ" name="" memberEnd="_Wehr0VIiEeibjuLm5_lcNQ _Wc8-gFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_Wehr0VIiEeibjuLm5_lcNQ" name="" type="_VyaMsFIiEeibjuLm5_lcNQ" association="_Wehr0FIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_Wehr01IiEeibjuLm5_lcNQ" name="" memberEnd="_Wehr1FIiEeibjuLm5_lcNQ _Wc9lklIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_Wehr1FIiEeibjuLm5_lcNQ" name="" type="_VyaMsFIiEeibjuLm5_lcNQ" association="_Wehr01IiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WeiS4VIiEeibjuLm5_lcNQ" name="" memberEnd="_WeiS4lIiEeibjuLm5_lcNQ _WdDFIFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WeiS4lIiEeibjuLm5_lcNQ" name="" type="_Vz8dwFIiEeibjuLm5_lcNQ" association="_WeiS4VIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_Wei58VIiEeibjuLm5_lcNQ" name="" memberEnd="_Wei58lIiEeibjuLm5_lcNQ _WdETQFIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_Wei58lIiEeibjuLm5_lcNQ" name="" type="_V0JSEFIiEeibjuLm5_lcNQ" association="_Wei58VIiEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_WejhAVIiEeibjuLm5_lcNQ" name="" memberEnd="_WejhAlIiEeibjuLm5_lcNQ _WdETQlIiEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_WejhAlIiEeibjuLm5_lcNQ" name="" type="_V0JSEFIiEeibjuLm5_lcNQ" association="_WejhAVIiEeibjuLm5_lcNQ"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_WWIk0VIiEeibjuLm5_lcNQ" name="ClientOptions"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_WWJL4VIiEeibjuLm5_lcNQ" name="FreeColClient"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_Vudg0FIiEeibjuLm5_lcNQ" name="common">
            <packagedElement xmi:type="uml:Package" xmi:id="_VueH4FIiEeibjuLm5_lcNQ" name="debug">
              <packagedElement xmi:type="uml:Class" xmi:id="_WWMPMVIiEeibjuLm5_lcNQ" name="FreeColDebugger"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXtSIFIiEeibjuLm5_lcNQ" name="DebugUtils"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_VueH4VIiEeibjuLm5_lcNQ" name="i18n">
              <packagedElement xmi:type="uml:Class" xmi:id="_WWM2QVIiEeibjuLm5_lcNQ" name="Messages"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXt5MFIiEeibjuLm5_lcNQ" name="NameCache"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_VueH4lIiEeibjuLm5_lcNQ" name="io">
              <packagedElement xmi:type="uml:Class" xmi:id="_WWNdUVIiEeibjuLm5_lcNQ" name="FreeColModFile"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWOEYVIiEeibjuLm5_lcNQ" name="FreeColSavegameFile"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWOrcVIiEeibjuLm5_lcNQ" name="FreeColXMLReader"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXhE4FIiEeibjuLm5_lcNQ" name="FreeColDirectories"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Vueu8FIiEeibjuLm5_lcNQ" name="model">
              <packagedElement xmi:type="uml:Package" xmi:id="_VupHAVIiEeibjuLm5_lcNQ" name="NationOptions">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_WWejEVIiEeibjuLm5_lcNQ" name="NationState"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_VvQLAFIiEeibjuLm5_lcNQ" name="DiplomaticTrade">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_WXxjkVIiEeibjuLm5_lcNQ" name="TradeContext"/>
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_WXyKoVIiEeibjuLm5_lcNQ" name="TradeStatus"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_VvQyEFIiEeibjuLm5_lcNQ" name="Europe">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_WXzYwVIiEeibjuLm5_lcNQ" name="MigrationType"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_VvT1YFIiEeibjuLm5_lcNQ" name="ModelMessage">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_WX6GcVIiEeibjuLm5_lcNQ" name="MessageType"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_VvT1YVIiEeibjuLm5_lcNQ" name="Monarch">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_WX6tgVIiEeibjuLm5_lcNQ" name="MonarchAction"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_VvUccFIiEeibjuLm5_lcNQ" name="Player">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_WX9w0FIiEeibjuLm5_lcNQ" name="NoClaimReason"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_VvVDgFIiEeibjuLm5_lcNQ" name="Unit">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_WYBbMlIiEeibjuLm5_lcNQ" name="UnitState"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_VvVDgVIiEeibjuLm5_lcNQ" name="UnitTypeChange">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_WYCpUVIiEeibjuLm5_lcNQ" name="ChangeType"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWPSgVIiEeibjuLm5_lcNQ" name="Game"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWPSg1IiEeibjuLm5_lcNQ" name="Player"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWP5kVIiEeibjuLm5_lcNQ" name="Specification"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWQgoVIiEeibjuLm5_lcNQ" name="StringTemplate"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWRHsVIiEeibjuLm5_lcNQ" name="Tile"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWRuwVIiEeibjuLm5_lcNQ" name="Unit"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWbfwFIiEeibjuLm5_lcNQ" name="GameOptions"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWd8AFIiEeibjuLm5_lcNQ" name="Nation"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWfKIVIiEeibjuLm5_lcNQ" name="NationType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWjbkFIiEeibjuLm5_lcNQ" name="Ability"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWkCoVIiEeibjuLm5_lcNQ" name="Colony"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWkpsVIiEeibjuLm5_lcNQ" name="DiplomaticTrade"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWl30FIiEeibjuLm5_lcNQ" name="FoundingFather"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWme4FIiEeibjuLm5_lcNQ" name="FreeColGameObject"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWntAFIiEeibjuLm5_lcNQ" name="FreeColObject"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWo7IFIiEeibjuLm5_lcNQ" name="Goods"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWpiMVIiEeibjuLm5_lcNQ" name="HistoryEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWrXYFIiEeibjuLm5_lcNQ" name="LastSale"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWr-cVIiEeibjuLm5_lcNQ" name="ModelMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWtMkFIiEeibjuLm5_lcNQ" name="Modifier"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_WWtMklIiEeibjuLm5_lcNQ" name="Ownable"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_WWtzoVIiEeibjuLm5_lcNQ" name="Stance"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWuasVIiEeibjuLm5_lcNQ" name="Region"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWvBwVIiEeibjuLm5_lcNQ" name="Settlement"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWvo0VIiEeibjuLm5_lcNQ" name="TradeRoute"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXhr8FIiEeibjuLm5_lcNQ" name="Map"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXugQFIiEeibjuLm5_lcNQ" name="AbstractGoods"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXugQlIiEeibjuLm5_lcNQ" name="AbstractUnit"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXvHUVIiEeibjuLm5_lcNQ" name="BuildableType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXvuYVIiEeibjuLm5_lcNQ" name="Building"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXwVcVIiEeibjuLm5_lcNQ" name="ColonyTile"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXw8gVIiEeibjuLm5_lcNQ" name="ColonyWas"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXyxsVIiEeibjuLm5_lcNQ" name="Europe"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WXz_0VIiEeibjuLm5_lcNQ" name="EuropeWas"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX0m4VIiEeibjuLm5_lcNQ" name="GoldTradeItem"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX11AFIiEeibjuLm5_lcNQ" name="GoodsType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX2cEFIiEeibjuLm5_lcNQ" name="HighScore"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX2cElIiEeibjuLm5_lcNQ" name="IndianSettlement"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_WX3DIVIiEeibjuLm5_lcNQ" name="Location"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX3qMVIiEeibjuLm5_lcNQ" name="LostCityRumour"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_WX4RQVIiEeibjuLm5_lcNQ" name="Direction"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX44UVIiEeibjuLm5_lcNQ" name="Market"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX5fYVIiEeibjuLm5_lcNQ" name="MarketWas"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_WX7UkVIiEeibjuLm5_lcNQ" name="Nameable"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX77oVIiEeibjuLm5_lcNQ" name="NationSummary"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX8isVIiEeibjuLm5_lcNQ" name="PathNode"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX-X4FIiEeibjuLm5_lcNQ" name="Role"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX--8FIiEeibjuLm5_lcNQ" name="StanceTradeItem"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WX_mAFIiEeibjuLm5_lcNQ" name="TileImprovementType"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_WYANEFIiEeibjuLm5_lcNQ" name="TradeLocation"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WYANElIiEeibjuLm5_lcNQ" name="TradeRouteStop"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WYBbMFIiEeibjuLm5_lcNQ" name="Turn"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WYCCQVIiEeibjuLm5_lcNQ" name="UnitType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WYDQYVIiEeibjuLm5_lcNQ" name="UnitWas"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WYD3cVIiEeibjuLm5_lcNQ" name="WorkLocation"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Vueu8VIiEeibjuLm5_lcNQ" name="networking">
              <packagedElement xmi:type="uml:Class" xmi:id="_WWSV0FIiEeibjuLm5_lcNQ" name="Connection"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWS84FIiEeibjuLm5_lcNQ" name="DOMMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWTj8VIiEeibjuLm5_lcNQ" name="LoginMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWwP4VIiEeibjuLm5_lcNQ" name="ChatMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWw28VIiEeibjuLm5_lcNQ" name="ChooseFoundingFatherMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWxeAVIiEeibjuLm5_lcNQ" name="DiplomacyMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WW1IYFIiEeibjuLm5_lcNQ" name="FirstContactMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WW1vcFIiEeibjuLm5_lcNQ" name="IndianDemandMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WW2WgVIiEeibjuLm5_lcNQ" name="LootCargoMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WW29kVIiEeibjuLm5_lcNQ" name="MonarchActionMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WW3koVIiEeibjuLm5_lcNQ" name="NewLandNameMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WW4ywFIiEeibjuLm5_lcNQ" name="NewRegionNameMessage"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_WXcMYFIiEeibjuLm5_lcNQ" name="MessageHandler"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_WYEegVIiEeibjuLm5_lcNQ" name="NetworkConstants"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WYFFkVIiEeibjuLm5_lcNQ" name="ServerAPI"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_VufWAFIiEeibjuLm5_lcNQ" name="resources">
              <packagedElement xmi:type="uml:Class" xmi:id="_WWUyEFIiEeibjuLm5_lcNQ" name="ResourceManager"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_VupuEFIiEeibjuLm5_lcNQ" name="option">
              <packagedElement xmi:type="uml:Class" xmi:id="_WWfxMVIiEeibjuLm5_lcNQ" name="MapGeneratorOptions"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WWgYQVIiEeibjuLm5_lcNQ" name="OptionGroup"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WYFsoVIiEeibjuLm5_lcNQ" name="BooleanOption"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WZHnYVIiEeibjuLm5_lcNQ" name="AudioMixerOption"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_WZIOcVIiEeibjuLm5_lcNQ" name="Option"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WZI1gVIiEeibjuLm5_lcNQ" name="PercentageOption"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_VvIPMFIiEeibjuLm5_lcNQ" name="util">
              <packagedElement xmi:type="uml:Class" xmi:id="_WXiTAFIiEeibjuLm5_lcNQ" name="LogBuilder"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_WYGTsVIiEeibjuLm5_lcNQ" name="CollectionUtils"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Vwcd0FIiEeibjuLm5_lcNQ" name="sound">
              <packagedElement xmi:type="uml:Class" xmi:id="_WZI1g1IiEeibjuLm5_lcNQ" name="SoundPlayer"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_WWLoIFIiEeibjuLm5_lcNQ" name="FreeColException"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_WWLoIlIiEeibjuLm5_lcNQ" name="ServerInfo"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_VufWAVIiEeibjuLm5_lcNQ" name="server">
            <packagedElement xmi:type="uml:Package" xmi:id="_VufWAlIiEeibjuLm5_lcNQ" name="FreeColServer">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_WWVZIlIiEeibjuLm5_lcNQ" name="GameState"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_VvIPMVIiEeibjuLm5_lcNQ" name="generator">
              <packagedElement xmi:type="uml:Interface" xmi:id="_WXi6EVIiEeibjuLm5_lcNQ" name="MapGenerator"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_VvIPMlIiEeibjuLm5_lcNQ" name="model">
              <packagedElement xmi:type="uml:Class" xmi:id="_WXjhIVIiEeibjuLm5_lcNQ" name="ServerPlayer"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_WWVZIFIiEeibjuLm5_lcNQ" name="FreeColServer"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_WWH9wVIiEeibjuLm5_lcNQ" name="FreeCol"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_VubroFIiEeibjuLm5_lcNQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_VubroVIiEeibjuLm5_lcNQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_WWAB8FIiEeibjuLm5_lcNQ" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_WWApAVIiEeibjuLm5_lcNQ" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_WWBQEVIiEeibjuLm5_lcNQ" name="IOException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_VucSsFIiEeibjuLm5_lcNQ" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_VucSsVIiEeibjuLm5_lcNQ" name="logging">
          <packagedElement xmi:type="uml:Class" xmi:id="_WWETYVIiEeibjuLm5_lcNQ" name="Level"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_WWE6cVIiEeibjuLm5_lcNQ" name="Logger"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_VvPj8FIiEeibjuLm5_lcNQ" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_WXsEAFIiEeibjuLm5_lcNQ" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_WWB3IVIiEeibjuLm5_lcNQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_WWDsUFIiEeibjuLm5_lcNQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_WXqO0FIiEeibjuLm5_lcNQ" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_WXq14VIiEeibjuLm5_lcNQ" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_WXrc8VIiEeibjuLm5_lcNQ" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_WYYnkFIiEeibjuLm5_lcNQ" name="Map"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_VupHAFIiEeibjuLm5_lcNQ" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_VvHBEFIiEeibjuLm5_lcNQ" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_WXgd0FIiEeibjuLm5_lcNQ" name="BufferedImage"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_WWaRoFIiEeibjuLm5_lcNQ" name="Color"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_WZxHoFIiEeibjuLm5_lcNQ" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_WZxHoVIiEeibjuLm5_lcNQ" name="Runnable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_VucSslIiEeibjuLm5_lcNQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_VucSs1IiEeibjuLm5_lcNQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_WWFhgVIiEeibjuLm5_lcNQ" name="SwingUtilities"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Vuc5wFIiEeibjuLm5_lcNQ" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_Vuc5wVIiEeibjuLm5_lcNQ" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_WWGIkVIiEeibjuLm5_lcNQ" name="XMLStreamException"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Vwb2wFIiEeibjuLm5_lcNQ" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_Vwb2wVIiEeibjuLm5_lcNQ" name="sampled">
          <packagedElement xmi:type="uml:Interface" xmi:id="_WZHAUFIiEeibjuLm5_lcNQ" name="Mixer"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Vuc5wlIiEeibjuLm5_lcNQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_Vuc5w1IiEeibjuLm5_lcNQ" name="w3c">
        <packagedElement xmi:type="uml:Package" xmi:id="_Vuc5xFIiEeibjuLm5_lcNQ" name="dom">
          <packagedElement xmi:type="uml:Interface" xmi:id="_WWGvoVIiEeibjuLm5_lcNQ" name="Element"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_WWHWsVIiEeibjuLm5_lcNQ" name="NodeList"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_UsaN8FIiEeibjuLm5_lcNQ">
      <eAnnotations xmi:id="_UsaN8VIiEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_Usa1AFIiEeibjuLm5_lcNQ" base_Package="_UXsiMFIiEeibjuLm5_lcNQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VyfsQFIiEeibjuLm5_lcNQ" base_Element="_VyfFMFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vyg6YFIiEeibjuLm5_lcNQ" base_Element="_VygTUlIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VyhhcFIiEeibjuLm5_lcNQ" base_Element="_Vyg6Y1IiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VyiIgFIiEeibjuLm5_lcNQ" base_Element="_Vyhhc1IiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VyivkVIiEeibjuLm5_lcNQ" base_Element="_VyiIg1IiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VyjWpFIiEeibjuLm5_lcNQ" base_Element="_VyjWoVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vyj9s1IiEeibjuLm5_lcNQ" base_Element="_Vyj9sFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VylL0lIiEeibjuLm5_lcNQ" base_Element="_VykkwlIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vyly4FIiEeibjuLm5_lcNQ" base_Element="_VylL1lIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_Vy-0cFIiEeibjuLm5_lcNQ" genericsValue="String, String" base_Element="_Vy-NYVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWApAFIiEeibjuLm5_lcNQ" base_Element="_WWAB8FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWBQEFIiEeibjuLm5_lcNQ" base_Element="_WWApAVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWB3IFIiEeibjuLm5_lcNQ" base_Element="_WWBQEVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWCeMFIiEeibjuLm5_lcNQ" base_Element="_WWB3IVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWETYFIiEeibjuLm5_lcNQ" base_Element="_WWDsUFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWE6cFIiEeibjuLm5_lcNQ" base_Element="_WWETYVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWFhgFIiEeibjuLm5_lcNQ" base_Element="_WWE6cVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWGIkFIiEeibjuLm5_lcNQ" base_Element="_WWFhgVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWGvoFIiEeibjuLm5_lcNQ" base_Element="_WWGIkVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWHWsFIiEeibjuLm5_lcNQ" base_Element="_WWGvoVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWH9wFIiEeibjuLm5_lcNQ" base_Element="_WWHWsVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWIk0FIiEeibjuLm5_lcNQ" base_Element="_WWH9wVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWJL4FIiEeibjuLm5_lcNQ" base_Element="_WWIk0VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWJy8FIiEeibjuLm5_lcNQ" base_Element="_WWJL4VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWKaAFIiEeibjuLm5_lcNQ" base_Element="_WWJy8VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWLBEFIiEeibjuLm5_lcNQ" base_Element="_WWKaAVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWLBElIiEeibjuLm5_lcNQ" base_Element="_WWLBEVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWLoIVIiEeibjuLm5_lcNQ" base_Element="_WWLoIFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWMPMFIiEeibjuLm5_lcNQ" base_Element="_WWLoIlIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWM2QFIiEeibjuLm5_lcNQ" base_Element="_WWMPMVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWNdUFIiEeibjuLm5_lcNQ" base_Element="_WWM2QVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWOEYFIiEeibjuLm5_lcNQ" base_Element="_WWNdUVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWOrcFIiEeibjuLm5_lcNQ" base_Element="_WWOEYVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWPSgFIiEeibjuLm5_lcNQ" base_Element="_WWOrcVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWPSglIiEeibjuLm5_lcNQ" base_Element="_WWPSgVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWP5kFIiEeibjuLm5_lcNQ" base_Element="_WWPSg1IiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWQgoFIiEeibjuLm5_lcNQ" base_Element="_WWP5kVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWRHsFIiEeibjuLm5_lcNQ" base_Element="_WWQgoVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWRuwFIiEeibjuLm5_lcNQ" base_Element="_WWRHsVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWRuwlIiEeibjuLm5_lcNQ" base_Element="_WWRuwVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWSV0VIiEeibjuLm5_lcNQ" base_Element="_WWSV0FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWTj8FIiEeibjuLm5_lcNQ" base_Element="_WWS84FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWULAFIiEeibjuLm5_lcNQ" base_Element="_WWTj8VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWUyEVIiEeibjuLm5_lcNQ" base_Element="_WWUyEFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWVZIVIiEeibjuLm5_lcNQ" base_Element="_WWVZIFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWWAMFIiEeibjuLm5_lcNQ" base_Element="_WWVZIlIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWaRoVIiEeibjuLm5_lcNQ" base_Element="_WWaRoFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWbfwVIiEeibjuLm5_lcNQ" base_Element="_WWbfwFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWejEFIiEeibjuLm5_lcNQ" base_Element="_WWd8AFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWfKIFIiEeibjuLm5_lcNQ" base_Element="_WWejEVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWfxMFIiEeibjuLm5_lcNQ" base_Element="_WWfKIVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWgYQFIiEeibjuLm5_lcNQ" base_Element="_WWfxMVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWg_UFIiEeibjuLm5_lcNQ" base_Element="_WWgYQVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWkCoFIiEeibjuLm5_lcNQ" base_Element="_WWjbkFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWkpsFIiEeibjuLm5_lcNQ" base_Element="_WWkCoVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWlQwFIiEeibjuLm5_lcNQ" base_Element="_WWkpsVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWl30VIiEeibjuLm5_lcNQ" base_Element="_WWl30FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWnF8FIiEeibjuLm5_lcNQ" base_Element="_WWme4FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWoUEFIiEeibjuLm5_lcNQ" base_Element="_WWntAFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWpiMFIiEeibjuLm5_lcNQ" base_Element="_WWo7IFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWqJQFIiEeibjuLm5_lcNQ" base_Element="_WWpiMVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWr-cFIiEeibjuLm5_lcNQ" base_Element="_WWrXYFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWslgFIiEeibjuLm5_lcNQ" base_Element="_WWr-cVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWtMkVIiEeibjuLm5_lcNQ" base_Element="_WWtMkFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWtzoFIiEeibjuLm5_lcNQ" base_Element="_WWtMklIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWuasFIiEeibjuLm5_lcNQ" base_Element="_WWtzoVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWvBwFIiEeibjuLm5_lcNQ" base_Element="_WWuasVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWvo0FIiEeibjuLm5_lcNQ" base_Element="_WWvBwVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWwP4FIiEeibjuLm5_lcNQ" base_Element="_WWvo0VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWw28FIiEeibjuLm5_lcNQ" base_Element="_WWwP4VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WWxeAFIiEeibjuLm5_lcNQ" base_Element="_WWw28VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WW0hUFIiEeibjuLm5_lcNQ" base_Element="_WWxeAVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WW1IYVIiEeibjuLm5_lcNQ" base_Element="_WW1IYFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WW2WgFIiEeibjuLm5_lcNQ" base_Element="_WW1vcFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WW29kFIiEeibjuLm5_lcNQ" base_Element="_WW2WgVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WW3koFIiEeibjuLm5_lcNQ" base_Element="_WW29kVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WW4LsFIiEeibjuLm5_lcNQ" base_Element="_WW3koVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WW5Z0FIiEeibjuLm5_lcNQ" base_Element="_WW4ywFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXczcFIiEeibjuLm5_lcNQ" base_Element="_WXcMYFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXgd0VIiEeibjuLm5_lcNQ" base_Element="_WXgd0FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXhE4VIiEeibjuLm5_lcNQ" base_Element="_WXhE4FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXhr8VIiEeibjuLm5_lcNQ" base_Element="_WXhr8FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXi6EFIiEeibjuLm5_lcNQ" base_Element="_WXiTAFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXjhIFIiEeibjuLm5_lcNQ" base_Element="_WXi6EVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXkIMFIiEeibjuLm5_lcNQ" base_Element="_WXjhIVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXq14FIiEeibjuLm5_lcNQ" base_Element="_WXqO0FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXrc8FIiEeibjuLm5_lcNQ" base_Element="_WXq14VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXrc8lIiEeibjuLm5_lcNQ" base_Element="_WXrc8VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXsEAVIiEeibjuLm5_lcNQ" base_Element="_WXsEAFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXsrEVIiEeibjuLm5_lcNQ" base_Element="_WXsrEFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXtSIVIiEeibjuLm5_lcNQ" base_Element="_WXtSIFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXt5MVIiEeibjuLm5_lcNQ" base_Element="_WXt5MFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXugQVIiEeibjuLm5_lcNQ" base_Element="_WXugQFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXvHUFIiEeibjuLm5_lcNQ" base_Element="_WXugQlIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXvuYFIiEeibjuLm5_lcNQ" base_Element="_WXvHUVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXwVcFIiEeibjuLm5_lcNQ" base_Element="_WXvuYVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXw8gFIiEeibjuLm5_lcNQ" base_Element="_WXwVcVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXxjkFIiEeibjuLm5_lcNQ" base_Element="_WXw8gVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXyKoFIiEeibjuLm5_lcNQ" base_Element="_WXxjkVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXyxsFIiEeibjuLm5_lcNQ" base_Element="_WXyKoVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXzYwFIiEeibjuLm5_lcNQ" base_Element="_WXyxsVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WXz_0FIiEeibjuLm5_lcNQ" base_Element="_WXzYwVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX0m4FIiEeibjuLm5_lcNQ" base_Element="_WXz_0VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX1N8FIiEeibjuLm5_lcNQ" base_Element="_WX0m4VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX11AVIiEeibjuLm5_lcNQ" base_Element="_WX11AFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX2cEVIiEeibjuLm5_lcNQ" base_Element="_WX2cEFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX3DIFIiEeibjuLm5_lcNQ" base_Element="_WX2cElIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX3qMFIiEeibjuLm5_lcNQ" base_Element="_WX3DIVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX4RQFIiEeibjuLm5_lcNQ" base_Element="_WX3qMVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX44UFIiEeibjuLm5_lcNQ" base_Element="_WX4RQVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX5fYFIiEeibjuLm5_lcNQ" base_Element="_WX44UVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX6GcFIiEeibjuLm5_lcNQ" base_Element="_WX5fYVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX6tgFIiEeibjuLm5_lcNQ" base_Element="_WX6GcVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX7UkFIiEeibjuLm5_lcNQ" base_Element="_WX6tgVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX77oFIiEeibjuLm5_lcNQ" base_Element="_WX7UkVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX8isFIiEeibjuLm5_lcNQ" base_Element="_WX77oVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX9JwFIiEeibjuLm5_lcNQ" base_Element="_WX8isVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX9w0VIiEeibjuLm5_lcNQ" base_Element="_WX9w0FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX-X4VIiEeibjuLm5_lcNQ" base_Element="_WX-X4FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX--8VIiEeibjuLm5_lcNQ" base_Element="_WX--8FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WX_mAVIiEeibjuLm5_lcNQ" base_Element="_WX_mAFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYANEVIiEeibjuLm5_lcNQ" base_Element="_WYANEFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYA0IFIiEeibjuLm5_lcNQ" base_Element="_WYANElIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYBbMVIiEeibjuLm5_lcNQ" base_Element="_WYBbMFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYCCQFIiEeibjuLm5_lcNQ" base_Element="_WYBbMlIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYCpUFIiEeibjuLm5_lcNQ" base_Element="_WYCCQVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYDQYFIiEeibjuLm5_lcNQ" base_Element="_WYCpUVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYD3cFIiEeibjuLm5_lcNQ" base_Element="_WYDQYVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYEegFIiEeibjuLm5_lcNQ" base_Element="_WYD3cVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYFFkFIiEeibjuLm5_lcNQ" base_Element="_WYEegVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYFsoFIiEeibjuLm5_lcNQ" base_Element="_WYFFkVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYGTsFIiEeibjuLm5_lcNQ" base_Element="_WYFsoVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYGTslIiEeibjuLm5_lcNQ" base_Element="_WYGTsVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WYZOoFIiEeibjuLm5_lcNQ" base_Element="_WYYnkFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WZHnYFIiEeibjuLm5_lcNQ" base_Element="_WZHAUFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WZIOcFIiEeibjuLm5_lcNQ" base_Element="_WZHnYVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WZI1gFIiEeibjuLm5_lcNQ" base_Element="_WZIOcVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WZI1glIiEeibjuLm5_lcNQ" base_Element="_WZI1gVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WZJckFIiEeibjuLm5_lcNQ" base_Element="_WZI1g1IiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WZxusFIiEeibjuLm5_lcNQ" base_Element="_WZxHoVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WZ2AIVIiEeibjuLm5_lcNQ" base_Element="_WZ1ZEFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_WZ2nMFIiEeibjuLm5_lcNQ" base_Element="_WZ1ZEFIiEeibjuLm5_lcNQ">
    <annotations xmi:id="_WZ2nMVIiEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WaBmUFIiEeibjuLm5_lcNQ" base_Element="_WaA_QFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_WaBmUVIiEeibjuLm5_lcNQ" base_Element="_WaA_QVIiEeibjuLm5_lcNQ">
    <annotations xmi:id="_WaCNYFIiEeibjuLm5_lcNQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_WaCNYVIiEeibjuLm5_lcNQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Wd8dCFIiEeibjuLm5_lcNQ" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WaKJMFIiEeibjuLm5_lcNQ" base_Element="_WaJiIFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_WaKJMVIiEeibjuLm5_lcNQ" base_Element="_WaJiIFIiEeibjuLm5_lcNQ">
    <annotations xmi:id="_WaKJMlIiEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Wa8zYFIiEeibjuLm5_lcNQ" genericsValue="ModelMessage" base_Element="_Wa8MUVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_WbMrAFIiEeibjuLm5_lcNQ" genericsValue="ModelMessage" base_Element="_WbMD8lIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_WbYRMFIiEeibjuLm5_lcNQ" genericsValue="FoundingFather" base_Element="_WbXqIVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_WbZfUFIiEeibjuLm5_lcNQ" genericsValue="FoundingFather" base_Element="_WbY4QFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_WbkecFIiEeibjuLm5_lcNQ" genericsValue="Goods" base_Element="_Wbj3YVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_WblFgVIiEeibjuLm5_lcNQ" genericsValue="Goods" base_Element="_Wbkec1IiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_WcJtQFIiEeibjuLm5_lcNQ" genericsValue="FreeColGameObject" base_Element="_WcJGMVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_WcPz4FIiEeibjuLm5_lcNQ" genericsValue="BuildableType" base_Element="_WcPM0VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_WcUFUFIiEeibjuLm5_lcNQ" genericsValue="TradeRoute" base_Element="_WcTeQFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WcgSkFIiEeibjuLm5_lcNQ" base_Element="_WcfrgFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_WcgSkVIiEeibjuLm5_lcNQ" base_Element="_WcfrgFIiEeibjuLm5_lcNQ">
    <annotations xmi:id="_WcgSklIiEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WclyIFIiEeibjuLm5_lcNQ" base_Element="_WclLEFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_WclyIVIiEeibjuLm5_lcNQ" base_Element="_WclLEVIiEeibjuLm5_lcNQ">
    <annotations xmi:id="_WclyIlIiEeibjuLm5_lcNQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_WclyI1IiEeibjuLm5_lcNQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_WeGOCVIiEeibjuLm5_lcNQ" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WcwKMFIiEeibjuLm5_lcNQ" base_Element="_WcvjIlIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WcwxQFIiEeibjuLm5_lcNQ" base_Element="_WcwKMVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wcx_YVIiEeibjuLm5_lcNQ" base_Element="_Wcx_YFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WcymcFIiEeibjuLm5_lcNQ" base_Element="_Wcx_YlIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wcz0kFIiEeibjuLm5_lcNQ" base_Element="_WczNglIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wcz0k1IiEeibjuLm5_lcNQ" base_Element="_Wcz0kVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc0bolIiEeibjuLm5_lcNQ" base_Element="_Wc0boFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc2Q0lIiEeibjuLm5_lcNQ" base_Element="_Wc2Q0VIiEeibjuLm5_lcNQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_Wc234FIiEeibjuLm5_lcNQ" name="getFreeColClient" visibility="protected" method="_WdaRgFIiEeibjuLm5_lcNQ">
      <ownedParameter xmi:id="_Wc234VIiEeibjuLm5_lcNQ" type="_WWJL4VIiEeibjuLm5_lcNQ" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc4GAVIiEeibjuLm5_lcNQ" base_Element="_Wc3e8FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_Wc4GAlIiEeibjuLm5_lcNQ" base_Element="_Wc3e8FIiEeibjuLm5_lcNQ">
    <annotations xmi:id="_Wc4GA1IiEeibjuLm5_lcNQ" name="SuppressWarnings">
      <annotationParameters xmi:id="_Wc4tEFIiEeibjuLm5_lcNQ" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Wd9rIFIiEeibjuLm5_lcNQ" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc4tElIiEeibjuLm5_lcNQ" base_Element="_Wc4tEVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc5UIVIiEeibjuLm5_lcNQ" base_Element="_Wc5UIFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc57MFIiEeibjuLm5_lcNQ" base_Element="_Wc5UIlIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc7wYFIiEeibjuLm5_lcNQ" base_Element="_Wc7JVFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc8XcFIiEeibjuLm5_lcNQ" base_Element="_Wc7wYVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc8Xc1IiEeibjuLm5_lcNQ" base_Element="_Wc8XcVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_Wc8-gVIiEeibjuLm5_lcNQ" genericsValue="String, Integer" base_Element="_Wc8-gFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc9lkVIiEeibjuLm5_lcNQ" base_Element="_Wc8-gFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Wc-MoVIiEeibjuLm5_lcNQ" base_Element="_Wc9lklIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_WdE6UFIiEeibjuLm5_lcNQ" base_Element="_WdETQlIiEeibjuLm5_lcNQ"/>
  <uml:OpaqueBehavior xmi:id="_WdaRgFIiEeibjuLm5_lcNQ" name="getFreeColClient" specification="_Wc234FIiEeibjuLm5_lcNQ">
    <ownedParameter xmi:id="_Wda4kFIiEeibjuLm5_lcNQ" type="_WWJL4VIiEeibjuLm5_lcNQ" direction="return"/>
    <language>java</language>
    <body>return freeColClient;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_WdctwVIiEeibjuLm5_lcNQ" name="maximize" specification="_WYHh0FIiEeibjuLm5_lcNQ">
    <ownedParameter xmi:id="_WdctwlIiEeibjuLm5_lcNQ" name="m" type="_VymZ8FIiEeibjuLm5_lcNQ"/>
    <ownedParameter xmi:id="_Wdctw1IiEeibjuLm5_lcNQ" type="_VymZ8FIiEeibjuLm5_lcNQ" direction="return"/>
    <language>java</language>
    <body>return (this.ordinal() &lt; m.ordinal()) ? m : this;&#xD;
     </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_WeXTwFIiEeibjuLm5_lcNQ" base_Element="_WeWFoFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeX60FIiEeibjuLm5_lcNQ" base_Element="_WeXTwVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeYh4FIiEeibjuLm5_lcNQ" base_Element="_WeX60VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeYh41IiEeibjuLm5_lcNQ" base_Element="_WeYh4VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeZI8VIiEeibjuLm5_lcNQ" base_Element="_WeYh5FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeZwAFIiEeibjuLm5_lcNQ" base_Element="_WeZI8lIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeaXEFIiEeibjuLm5_lcNQ" base_Element="_WeZwAVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_Wea-IFIiEeibjuLm5_lcNQ" base_Element="_WeaXEVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_Wea-I1IiEeibjuLm5_lcNQ" base_Element="_Wea-IVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeblMlIiEeibjuLm5_lcNQ" base_Element="_WeblMFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WecMQFIiEeibjuLm5_lcNQ" base_Element="_WeblM1IiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeczUFIiEeibjuLm5_lcNQ" base_Element="_WecMQVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WedaYFIiEeibjuLm5_lcNQ" base_Element="_WeczUVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeeBcFIiEeibjuLm5_lcNQ" base_Element="_WedaYVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeeogFIiEeibjuLm5_lcNQ" base_Element="_WeeBcVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WefPkFIiEeibjuLm5_lcNQ" base_Element="_WeeogVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_Wef2oFIiEeibjuLm5_lcNQ" base_Element="_WefPkVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_Wef2o1IiEeibjuLm5_lcNQ" base_Element="_Wef2oVIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WegdslIiEeibjuLm5_lcNQ" base_Element="_WegdsFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WehEwlIiEeibjuLm5_lcNQ" base_Element="_WehEwFIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_Wehr0lIiEeibjuLm5_lcNQ" base_Element="_Wehr0FIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WeiS4FIiEeibjuLm5_lcNQ" base_Element="_Wehr01IiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_Wei58FIiEeibjuLm5_lcNQ" base_Element="_WeiS4VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WejhAFIiEeibjuLm5_lcNQ" base_Element="_Wei58VIiEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_WekIEFIiEeibjuLm5_lcNQ" base_Element="_WejhAVIiEeibjuLm5_lcNQ"/>
</xmi:XMI>
