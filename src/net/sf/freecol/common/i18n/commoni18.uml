<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_k2TQYFInEeibjuLm5_lcNQ" name="commoni18">
    <eAnnotations xmi:id="_ltD5QFInEeibjuLm5_lcNQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_ltD5QVInEeibjuLm5_lcNQ" source="codegen">
        <details xmi:id="_ltD5QlInEeibjuLm5_lcNQ" key="codegenDirectory" value="/COSC442-FinalProject/src"/>
        <details xmi:id="_nU9rMFInEeibjuLm5_lcNQ" key="AssociatedSourceCode" value="/COSC442-FinalProject/src/net/sf/freecol/common/i18n/DefaultNumberRule.java;3219792527/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/DualNumberRule.java;2082552609/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/ZeroOneNumberRule.java;1135495954/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/Selector.java;234084493/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/Number.java;743333999/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/NumberRules.java;33698748/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/OtherNumberRule.java;3181689736/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/PluralNumberRule.java;2239242898/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/Relation.java;3762540311/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/Rule.java;958152895/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/NameCache.java;2240961983/1;/COSC442-FinalProject/src/net/sf/freecol/common/i18n/Messages.java;771534015/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_mYKEsFInEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_mYKEsVInEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_mYKEslInEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_mYKEs1InEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_mYKEtFInEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_mYKrwFInEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_mYKrwVInEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_mYKrwlInEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_mYKrw1InEeibjuLm5_lcNQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_mXf9YFInEeibjuLm5_lcNQ" name="net">
      <packagedElement xmi:type="uml:Package" xmi:id="_mXf9YVInEeibjuLm5_lcNQ" name="sf">
        <packagedElement xmi:type="uml:Package" xmi:id="_mXf9YlInEeibjuLm5_lcNQ" name="freecol">
          <packagedElement xmi:type="uml:Package" xmi:id="_mXf9Y1InEeibjuLm5_lcNQ" name="common">
            <packagedElement xmi:type="uml:Package" xmi:id="_mXf9ZlInEeibjuLm5_lcNQ" name="util">
              <packagedElement xmi:type="uml:Class" xmi:id="_mb4uIVInEeibjuLm5_lcNQ" name="CollectionUtils"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcIlwVInEeibjuLm5_lcNQ" name="RandomUtils"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcIlw1InEeibjuLm5_lcNQ" name="StringUtils"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_mXhLgFInEeibjuLm5_lcNQ" name="i18n">
              <packagedElement xmi:type="uml:Package" xmi:id="_mXkO1FInEeibjuLm5_lcNQ" name="Number">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_mb9mo1InEeibjuLm5_lcNQ" name="Category"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYI2kFInEeibjuLm5_lcNQ" name="DefaultNumberRule">
                <ownedComment xmi:id="_mdhs4FInEeibjuLm5_lcNQ">
                  <body>This class handles zero or one rule for each number category.</body>
                </ownedComment>
                <generalization xmi:id="_mb5VMFInEeibjuLm5_lcNQ" general="_mYO9MVInEeibjuLm5_lcNQ"/>
                <ownedAttribute xmi:id="_mc7P8FInEeibjuLm5_lcNQ" name="rules" visibility="package" isLeaf="true" type="_mYYuMFInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdqPwFInEeibjuLm5_lcNQ">
                  <qualifier xmi:id="_mc73AlInEeibjuLm5_lcNQ" type="_mYO9MlInEeibjuLm5_lcNQ"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc73AFInEeibjuLm5_lcNQ" value="new EnumMap&lt;>(Category.class)"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdURgFInEeibjuLm5_lcNQ" name="addRule" specification="_mcfyIVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdURgVInEeibjuLm5_lcNQ" name="number" type="_mcfLEFInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdURglInEeibjuLm5_lcNQ" name="rule" type="_mYYuMFInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>rules.put(number, rule);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdURg1InEeibjuLm5_lcNQ" name="addRule" specification="_mcgZMFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdURhFInEeibjuLm5_lcNQ" name="number" type="_mcfLEFInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdURhVInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>rules.put(number, new Rule(input));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdU4kFInEeibjuLm5_lcNQ" name="countRules" specification="_mYKrxFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdU4kVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return rules.values().size();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdU4klInEeibjuLm5_lcNQ" name="getRule" specification="_mcgZM1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdU4k1InEeibjuLm5_lcNQ" name="category" type="_mcfLEFInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdU4lFInEeibjuLm5_lcNQ" type="_mYYuMFInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return rules.get(category);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdU4lVInEeibjuLm5_lcNQ" name="getCategory" specification="_mYLS0FInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdU4llInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdU4l1InEeibjuLm5_lcNQ" type="_mcfLEFInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return find(Category.values(),&#xD;
         category -> rules.containsKey(category)&#xD;
             &amp;&amp; rules.get(category).matches(input), Category.other);&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYKrxFInEeibjuLm5_lcNQ" name="countRules" method="_mdU4kFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYKrxVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYLS0FInEeibjuLm5_lcNQ" name="getCategory" method="_mdU4lVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYLS0VInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mchAQVInEeibjuLm5_lcNQ" type="_mcfLEFInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcfyIVInEeibjuLm5_lcNQ" name="addRule" method="_mdURgFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mcfyIlInEeibjuLm5_lcNQ" name="number" type="_mcfLEFInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcfyI1InEeibjuLm5_lcNQ" name="rule" type="_mYYuMFInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcgZMFInEeibjuLm5_lcNQ" name="addRule" method="_mdURg1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mcgZMVInEeibjuLm5_lcNQ" name="number" type="_mcfLEFInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcgZMlInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcgZM1InEeibjuLm5_lcNQ" name="getRule" method="_mdU4klInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mcgZNFInEeibjuLm5_lcNQ" name="category" type="_mcfLEFInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mchAQFInEeibjuLm5_lcNQ" type="_mYYuMFInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYL54FInEeibjuLm5_lcNQ" name="DualNumberRule">
                <ownedComment xmi:id="_mdhs4VInEeibjuLm5_lcNQ">
                  <body>Number optimized for languages that distinguish the categories one,&#xD;
two and other.</body>
                </ownedComment>
                <generalization xmi:id="_mb6jUFInEeibjuLm5_lcNQ" general="_mYO9MVInEeibjuLm5_lcNQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdU4mFInEeibjuLm5_lcNQ" name="getCategory" specification="_mYMg8FInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdU4mVInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdU4mlInEeibjuLm5_lcNQ" type="_mcfLEFInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>if (input == 1) {&#xD;
         return Category.one;&#xD;
     } else if (input == 2) {&#xD;
         return Category.two;&#xD;
     } else {&#xD;
         return Category.other;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYMg8FInEeibjuLm5_lcNQ" name="getCategory" method="_mdU4mFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYMg8VInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mchAQlInEeibjuLm5_lcNQ" type="_mcfLEFInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYNIAlInEeibjuLm5_lcNQ" name="ZeroOneNumberRule">
                <ownedComment xmi:id="_mdhs4lInEeibjuLm5_lcNQ">
                  <body>Number optimized for languages that place the numbers 0 and 1 in&#xD;
category one, and all others in category other.</body>
                </ownedComment>
                <generalization xmi:id="_mb6jUVInEeibjuLm5_lcNQ" general="_mYO9MVInEeibjuLm5_lcNQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdU4m1InEeibjuLm5_lcNQ" name="getCategory" specification="_mYNvEFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdU4nFInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdU4nVInEeibjuLm5_lcNQ" type="_mcfLEFInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>if (input == 0 || input == 1) {&#xD;
         return Category.one;&#xD;
     } else {&#xD;
         return Category.other;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYNvEFInEeibjuLm5_lcNQ" name="getCategory" method="_mdU4m1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYNvEVInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mchAQ1InEeibjuLm5_lcNQ" type="_mcfLEFInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_mYOWIFInEeibjuLm5_lcNQ" name="Selector">
                <ownedOperation xmi:id="_mYOWIVInEeibjuLm5_lcNQ" name="getKey">
                  <ownedParameter xmi:id="_mYOWIlInEeibjuLm5_lcNQ" name="selector">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYOWI1InEeibjuLm5_lcNQ" name="template">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYO9MFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYO9MVInEeibjuLm5_lcNQ" name="Number" isAbstract="true">
                <ownedComment xmi:id="_mdhs41InEeibjuLm5_lcNQ">
                  <body>Classes implementing this interface can determine the category and&#xD;
the index of a double based on the number rules for a language.&#xD;
 *&#xD;
See the&#xD;
&lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;>&#xD;
Common Locale Data Repository&lt;/a>.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_mc9FIFInEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_mb6jUlInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdq20VInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc9FIVInEeibjuLm5_lcNQ" value="Logger.getLogger(Number.class.getName())"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_mb7KYVInEeibjuLm5_lcNQ" client="_mYO9MVInEeibjuLm5_lcNQ" supplier="_mYOWIFInEeibjuLm5_lcNQ" contract="_mYOWIFInEeibjuLm5_lcNQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdVfoFInEeibjuLm5_lcNQ" name="getKey" specification="_mYQLUFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdVfoVInEeibjuLm5_lcNQ" name="selector">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdVfolInEeibjuLm5_lcNQ" name="template">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdVfo1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>try {&#xD;
         return getKey(Double.parseDouble(selector));&#xD;
     } catch(NumberFormatException e) {&#xD;
         logger.warning(&quot;Syntax error in string template '&quot; + template + &quot;'&quot;);&#xD;
         return Category.other.toString();&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdVfpFInEeibjuLm5_lcNQ" name="getKey" specification="_mYQyYFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdVfpVInEeibjuLm5_lcNQ" name="selector">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdVfplInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getCategory(selector).toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYPkR1InEeibjuLm5_lcNQ" name="getCategory" isAbstract="true">
                  <ownedParameter xmi:id="_mYPkSFInEeibjuLm5_lcNQ" name="selector">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mb7xcFInEeibjuLm5_lcNQ" type="_mYO9MlInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mYQLUFInEeibjuLm5_lcNQ" name="getKey" method="_mdVfoFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYQLUVInEeibjuLm5_lcNQ" name="selector">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYQLUlInEeibjuLm5_lcNQ" name="template">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYQLU1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYQyYFInEeibjuLm5_lcNQ" name="getKey" method="_mdVfpFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYQyYVInEeibjuLm5_lcNQ" name="selector">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYQyYlInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_mYO9MlInEeibjuLm5_lcNQ" name="Category">
                  <ownedLiteral xmi:id="_mYPkQVInEeibjuLm5_lcNQ" name="zero"/>
                  <ownedLiteral xmi:id="_mYPkQlInEeibjuLm5_lcNQ" name="one"/>
                  <ownedLiteral xmi:id="_mYPkQ1InEeibjuLm5_lcNQ" name="two"/>
                  <ownedLiteral xmi:id="_mYPkRFInEeibjuLm5_lcNQ" name="few"/>
                  <ownedLiteral xmi:id="_mYPkRVInEeibjuLm5_lcNQ" name="many"/>
                  <ownedLiteral xmi:id="_mYPkRlInEeibjuLm5_lcNQ" name="other"/>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYQyY1InEeibjuLm5_lcNQ" name="NumberRules">
                <ownedComment xmi:id="_mdhs5FInEeibjuLm5_lcNQ">
                  <body>See the&#xD;
&lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;>&#xD;
Common Locale Data Repository&lt;/a>.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_mc9sMFInEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_mb6jUlInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdsE8VInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc9sMVInEeibjuLm5_lcNQ" value="Logger.getLogger(NumberRules.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc9sMlInEeibjuLm5_lcNQ" name="OTHER_NUMBER_RULE" isLeaf="true" isStatic="true" type="_mYO9MVInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdssAFInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc9sM1InEeibjuLm5_lcNQ" value="new OtherNumberRule()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc9sNFInEeibjuLm5_lcNQ" name="DUAL_NUMBER_RULE" isLeaf="true" isStatic="true" type="_mYO9MVInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdssA1InEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc9sNVInEeibjuLm5_lcNQ" value="new DualNumberRule()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc-TQFInEeibjuLm5_lcNQ" name="PLURAL_NUMBER_RULE" isLeaf="true" isStatic="true" type="_mYO9MVInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdtTEVInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc-TQVInEeibjuLm5_lcNQ" value="new PluralNumberRule()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc-TQlInEeibjuLm5_lcNQ" name="ZERO_ONE_NUMBER_RULE" isLeaf="true" isStatic="true" type="_mYO9MVInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdtTFFInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc-TQ1InEeibjuLm5_lcNQ" value="new ZeroOneNumberRule()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc-TRFInEeibjuLm5_lcNQ" name="numberMap" visibility="private" isLeaf="true" isStatic="true" type="_mb4HEVInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdt6IVInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc-6UVInEeibjuLm5_lcNQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc-6UlInEeibjuLm5_lcNQ" name="COUNT_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc-6U1InEeibjuLm5_lcNQ" value="&quot;count&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc-6VFInEeibjuLm5_lcNQ" name="GENERATION_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc-6VVInEeibjuLm5_lcNQ" value="&quot;generation&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc_hYFInEeibjuLm5_lcNQ" name="LOCALES_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc_hYVInEeibjuLm5_lcNQ" value="&quot;locales&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc_hYlInEeibjuLm5_lcNQ" name="PLURALS_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc_hY1InEeibjuLm5_lcNQ" value="&quot;plurals&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc_hZFInEeibjuLm5_lcNQ" name="PLURAL_RULE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mc_hZVInEeibjuLm5_lcNQ" value="&quot;pluralRule&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mc_hZlInEeibjuLm5_lcNQ" name="PLURAL_RULES_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdAIcFInEeibjuLm5_lcNQ" value="&quot;pluralRules&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdAIcVInEeibjuLm5_lcNQ" name="VERSION_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdAIclInEeibjuLm5_lcNQ" value="&quot;version&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdVfp1InEeibjuLm5_lcNQ" name="NumberRules" specification="_mciOYFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdVfqFInEeibjuLm5_lcNQ" name="in" type="_mb7xcVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdVfqVInEeibjuLm5_lcNQ" type="_mYQyY1InEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>load(in);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdVfqlInEeibjuLm5_lcNQ" name="getNumberForLanguage" specification="_mYSAgFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdVfq1InEeibjuLm5_lcNQ" name="lang">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdVfrFInEeibjuLm5_lcNQ" type="_mYO9MVInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>Number number = numberMap.get(lang);&#xD;
     return (number == null) ? OTHER_NUMBER_RULE : number;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdVfrVInEeibjuLm5_lcNQ" name="isInitialized" specification="_mYSAglInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdVfrlInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return !numberMap.isEmpty();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdWGsFInEeibjuLm5_lcNQ" name="load" specification="_mciOZVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdWGsVInEeibjuLm5_lcNQ" name="in" type="_mb7xcVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>try (&#xD;
         FreeColXMLReader xr = new FreeColXMLReader(in);&#xD;
     ) {&#xD;
         readFromXML(xr);&#xD;
     } catch (Exception e) {&#xD;
         logger.log(Level.WARNING, &quot;Load parse&quot;, e);&#xD;
         throw new RuntimeException(&quot;Error parsing number rules.&quot;, e);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdWGslInEeibjuLm5_lcNQ" name="readFromXML" specification="_mci1cFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdWGs1InEeibjuLm5_lcNQ" name="xr" type="_mb-NsVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>while (xr.nextTag() != XMLStreamConstants.END_ELEMENT) {&#xD;
         String tag = xr.getLocalName();&#xD;
         if (null != tag) switch (tag) {&#xD;
             case VERSION_TAG:&#xD;
                 xr.nextTag();&#xD;
                 break;&#xD;
             case GENERATION_TAG:&#xD;
                 xr.nextTag();&#xD;
                 break;&#xD;
             case PLURALS_TAG:&#xD;
                 while (xr.nextTag() != XMLStreamConstants.END_ELEMENT) {&#xD;
                     tag = xr.getLocalName();&#xD;
                     if (PLURAL_RULES_TAG.equals(tag)) {&#xD;
                         readChild(xr);&#xD;
                     }&#xD;
                 }   break;&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdWGtFInEeibjuLm5_lcNQ" name="readChild" specification="_mci1clInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdWGtVInEeibjuLm5_lcNQ" name="xr" type="_mb-NsVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>String loc = xr.getAttribute(LOCALES_TAG, (String)null);&#xD;
     String[] locales = (loc == null) ? null : loc.split(&quot; &quot;);&#xD;
     if (locales != null) {&#xD;
         DefaultNumberRule numberRule = new DefaultNumberRule();&#xD;
         while (xr.nextTag() != XMLStreamConstants.END_ELEMENT) {&#xD;
             if (PLURAL_RULE_TAG.equals(xr.getLocalName())) {&#xD;
                 String plu = xr.getAttribute(COUNT_TAG, (String)null);&#xD;
                 Category category = Category.valueOf(plu);&#xD;
                 Rule rule = new Rule(xr.getElementText());&#xD;
                 numberRule.addRule(category, rule);&#xD;
             }&#xD;
         }&#xD;
         Number number = null;&#xD;
         switch(numberRule.countRules()) {&#xD;
         case 0:&#xD;
             number = OTHER_NUMBER_RULE;&#xD;
             break;&#xD;
         case 1:&#xD;
             Rule rule = numberRule.getRule(Category.one);&#xD;
             if (rule != null) {&#xD;
                 if (null != rule.toString()) switch (rule.toString()) {&#xD;
                 case &quot;n is 1&quot;:&#xD;
                     number = PLURAL_NUMBER_RULE;&#xD;
                     break;&#xD;
                 case &quot;n in 0..1&quot;:&#xD;
                     number = ZERO_ONE_NUMBER_RULE;&#xD;
                     break;&#xD;
             }&#xD;
             }&#xD;
             break;&#xD;
         case 2:&#xD;
             Rule oneRule = numberRule.getRule(Category.one);&#xD;
             Rule twoRule = numberRule.getRule(Category.two);&#xD;
             if (oneRule != null&#xD;
                 &amp;&amp; &quot;n is 1&quot;.equals(oneRule.toString())&#xD;
                 &amp;&amp; twoRule != null&#xD;
                 &amp;&amp; &quot;n is 2&quot;.equals(twoRule.toString())) {&#xD;
                 number = DUAL_NUMBER_RULE;&#xD;
             }&#xD;
             break;&#xD;
         default:&#xD;
             number = numberRule;&#xD;
         }&#xD;
         for (String locale : locales) {&#xD;
             numberMap.put(locale, number);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYSAgFInEeibjuLm5_lcNQ" name="getNumberForLanguage" isStatic="true" method="_mdVfqlInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYSAgVInEeibjuLm5_lcNQ" name="lang">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mb-0wFInEeibjuLm5_lcNQ" type="_mYO9MVInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mYSAglInEeibjuLm5_lcNQ" name="isInitialized" isStatic="true" method="_mdVfrVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYSAg1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mciOYFInEeibjuLm5_lcNQ" name="NumberRules" method="_mdVfp1InEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_mciOYlInEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_mciOY1InEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_mciOYVInEeibjuLm5_lcNQ" name="in" type="_mb7xcVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mciOZFInEeibjuLm5_lcNQ" type="_mYQyY1InEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mciOZVInEeibjuLm5_lcNQ" name="load" isStatic="true" method="_mdWGsFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mciOZlInEeibjuLm5_lcNQ" name="in" type="_mb7xcVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mci1cFInEeibjuLm5_lcNQ" name="readFromXML" visibility="private" isStatic="true" method="_mdWGslInEeibjuLm5_lcNQ" raisedException="_mb9moVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mci1cVInEeibjuLm5_lcNQ" name="xr" type="_mb-NsVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mci1clInEeibjuLm5_lcNQ" name="readChild" visibility="private" isStatic="true" method="_mdWGtFInEeibjuLm5_lcNQ" raisedException="_mb9moVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mci1c1InEeibjuLm5_lcNQ" name="xr" type="_mb-NsVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYUcwFInEeibjuLm5_lcNQ" name="OtherNumberRule">
                <ownedComment xmi:id="_mdiT8FInEeibjuLm5_lcNQ">
                  <body>Number optimized for languages that do not distinguish any number&#xD;
categories. The category returned is always other.</body>
                </ownedComment>
                <generalization xmi:id="_mcAp8FInEeibjuLm5_lcNQ" general="_mYO9MVInEeibjuLm5_lcNQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdWGtlInEeibjuLm5_lcNQ" name="getCategory" specification="_mYUcwVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdWGt1InEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdWGuFInEeibjuLm5_lcNQ" type="_mcfLEFInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return Category.other;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYUcwVInEeibjuLm5_lcNQ" name="getCategory" method="_mdWGtlInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYUcwlInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mcjcgFInEeibjuLm5_lcNQ" type="_mcfLEFInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYVD01InEeibjuLm5_lcNQ" name="PluralNumberRule">
                <ownedComment xmi:id="_mdiT8VInEeibjuLm5_lcNQ">
                  <body>Number optimized for languages that distinguish the categories one&#xD;
and other.</body>
                </ownedComment>
                <generalization xmi:id="_mcBRAFInEeibjuLm5_lcNQ" general="_mYO9MVInEeibjuLm5_lcNQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdWGuVInEeibjuLm5_lcNQ" name="getCategory" specification="_mYVq4FInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdWGulInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdWGu1InEeibjuLm5_lcNQ" type="_mcfLEFInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>if (input == 1) {&#xD;
         return Category.one;&#xD;
     } else {&#xD;
         return Category.other;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYVq4FInEeibjuLm5_lcNQ" name="getCategory" method="_mdWGuVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYVq4VInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mckDkFInEeibjuLm5_lcNQ" type="_mcfLEFInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYWR8FInEeibjuLm5_lcNQ" name="Relation">
                <ownedComment xmi:id="_mdiT8lInEeibjuLm5_lcNQ">
                  <body>A grammatical relationship.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_mdAIc1InEeibjuLm5_lcNQ" name="low" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdAvglInEeibjuLm5_lcNQ" name="negated" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdAvg1InEeibjuLm5_lcNQ" value="false"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdBWkVInEeibjuLm5_lcNQ" name="integer" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdBWklInEeibjuLm5_lcNQ" value="true"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdiT81InEeibjuLm5_lcNQ" name="high" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdi7AVInEeibjuLm5_lcNQ" name="mod" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdi7BFInEeibjuLm5_lcNQ" value="1"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdWtwFInEeibjuLm5_lcNQ" name="Relation" specification="_mckDkVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdWtwVInEeibjuLm5_lcNQ" name="tokens" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdWtwlInEeibjuLm5_lcNQ" type="_mYWR8FInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>parse(tokens);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdWtw1InEeibjuLm5_lcNQ" name="Relation" specification="_mYWR8VInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdWtxFInEeibjuLm5_lcNQ" name="low">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdWtxVInEeibjuLm5_lcNQ" name="high">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdWtxlInEeibjuLm5_lcNQ" type="_mYWR8FInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>this.low = low;&#xD;
     this.high = high;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdWtx1InEeibjuLm5_lcNQ" name="setMod" specification="_mYW5BVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdWtyFInEeibjuLm5_lcNQ" name="mod">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.mod = mod;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdWtyVInEeibjuLm5_lcNQ" name="setNegated" specification="_mYW5B1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdWtylInEeibjuLm5_lcNQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.negated = value;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdXU0FInEeibjuLm5_lcNQ" name="setInteger" specification="_mYXgEFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdXU0VInEeibjuLm5_lcNQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.integer = value;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdXU0lInEeibjuLm5_lcNQ" name="matches" specification="_mYXgElInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdXU01InEeibjuLm5_lcNQ" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdXU1FInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>double value = (mod == 1) ? number : number % mod;&#xD;
     if (integer &amp;&amp; value != (int) value) {&#xD;
         return false;&#xD;
     }&#xD;
     return (low &lt;= value &amp;&amp; value &lt;= high) != negated;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdXU1VInEeibjuLm5_lcNQ" name="toString" specification="_mYXgFVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdXU1lInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuilder sb = new StringBuilder(32);&#xD;
     sb.append(&quot;n &quot;);&#xD;
     if (mod != 1) {&#xD;
         sb.append(&quot;mod &quot;).append(mod).append(&quot; &quot;);&#xD;
     }&#xD;
     if (low == high) {&#xD;
         sb.append(&quot;is &quot;);&#xD;
         if (negated) sb.append(&quot;not &quot;);&#xD;
         sb.append(low);&#xD;
     } else {&#xD;
         if (negated) sb.append(&quot;not &quot;);&#xD;
         if (!integer) sb.append(&quot;with&quot;);&#xD;
         sb.append(&quot;in &quot;).append(low).append(&quot;..&quot;).append(high);&#xD;
     }&#xD;
     return sb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdXU11InEeibjuLm5_lcNQ" name="parse" specification="_mclRsFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdXU2FInEeibjuLm5_lcNQ" name="input" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>String token = input.remove(0);&#xD;
     if (&quot;n&quot;.equals(token)) {&#xD;
         token = input.remove(0);&#xD;
     } else {&#xD;
         throw new IllegalArgumentException(&quot;Relation must start with 'n'.&quot;);&#xD;
     }&#xD;
     if (&quot;mod&quot;.equals(token)) {&#xD;
         mod = Integer.parseInt(input.remove(0));&#xD;
         token = input.remove(0);&#xD;
     }&#xD;
     if (&quot;not&quot;.equals(token)) {&#xD;
         negated = true;&#xD;
         token = input.remove(0);&#xD;
     }&#xD;
     if (&quot;is&quot;.equals(token)) {&#xD;
         token = input.remove(0);&#xD;
         if (&quot;not&quot;.equals(token)) {&#xD;
             negated = true;&#xD;
             token = input.remove(0);&#xD;
         }&#xD;
         low = high = Integer.parseInt(token);&#xD;
     } else {&#xD;
         if (&quot;within&quot;.equals(token)) {&#xD;
             integer = false;&#xD;
         }&#xD;
         low = Integer.parseInt(input.remove(0));&#xD;
         high = Integer.parseInt(input.remove(0));&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYWR8VInEeibjuLm5_lcNQ" name="Relation" method="_mdWtw1InEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_mYW5AlInEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_mYW5A1InEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_mYW5AFInEeibjuLm5_lcNQ" name="low">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYW5AVInEeibjuLm5_lcNQ" name="high">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYW5BFInEeibjuLm5_lcNQ" type="_mYWR8FInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mYW5BVInEeibjuLm5_lcNQ" name="setMod" method="_mdWtx1InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdjiEFInEeibjuLm5_lcNQ">
                    <body>Sets the divisor for a modulo operation (defaults to 1).&#xD;
     *&#xD;
     * @param mod an &lt;code>int&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYW5BlInEeibjuLm5_lcNQ" name="mod">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYW5B1InEeibjuLm5_lcNQ" name="setNegated" method="_mdWtyVInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdjiEVInEeibjuLm5_lcNQ">
                    <body>Negates the return value of the relation (defaults to false).&#xD;
     *&#xD;
     * @param value a &lt;code>boolean&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYW5CFInEeibjuLm5_lcNQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYXgEFInEeibjuLm5_lcNQ" name="setInteger" method="_mdXU0FInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdjiElInEeibjuLm5_lcNQ">
                    <body>Determines whether this relation only matches integers&#xD;
     * (defaults to true).&#xD;
     *&#xD;
     * @param value a &lt;code>boolean&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYXgEVInEeibjuLm5_lcNQ" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYXgElInEeibjuLm5_lcNQ" name="matches" method="_mdXU0lInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdjiE1InEeibjuLm5_lcNQ">
                    <body>Returns true if the given number matches this relation.&#xD;
     *&#xD;
     * @param number a &lt;code>double&lt;/code> value&#xD;
     * @return a &lt;code>boolean&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYXgE1InEeibjuLm5_lcNQ" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYXgFFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYXgFVInEeibjuLm5_lcNQ" name="toString" method="_mdXU1VInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYXgFlInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mckDkVInEeibjuLm5_lcNQ" name="Relation" method="_mdWtwFInEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_mckDk1InEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_mckDlFInEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_mckDklInEeibjuLm5_lcNQ" name="tokens" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mckDlVInEeibjuLm5_lcNQ" type="_mYWR8FInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mclRsFInEeibjuLm5_lcNQ" name="parse" visibility="private" method="_mdXU11InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdjiFFInEeibjuLm5_lcNQ">
                    <body>Parses a list of string tokens.&#xD;
     *&#xD;
     * @param input a list of string tokens</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mclRsVInEeibjuLm5_lcNQ" name="input" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYYuMFInEeibjuLm5_lcNQ" name="Rule">
                <ownedComment xmi:id="_mdjiFVInEeibjuLm5_lcNQ">
                  <body>A rule consists of any number of relations combined with &quot;and&quot; and&#xD;
&quot;or&quot; operators. The &quot;and&quot; operator binds more strongly, and there&#xD;
are no grouping features.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_mdB9oFInEeibjuLm5_lcNQ" name="conditions" visibility="private" isLeaf="true" type="_mcBRAVInEeibjuLm5_lcNQ" isOrdered="true" isReadOnly="true" association="_mdt6JFInEeibjuLm5_lcNQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdB9oVInEeibjuLm5_lcNQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdDLwVInEeibjuLm5_lcNQ" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdX74FInEeibjuLm5_lcNQ" name="Rule" specification="_mYZVQFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdX74VInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdX74lInEeibjuLm5_lcNQ" type="_mYYuMFInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>parse(input);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdX741InEeibjuLm5_lcNQ" name="add" specification="_mcl4wFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdX75FInEeibjuLm5_lcNQ" name="condition" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>conditions.add(condition);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdX75VInEeibjuLm5_lcNQ" name="matches" specification="_mYZVRVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdX75lInEeibjuLm5_lcNQ" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdX751InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return any(conditions,&#xD;
         andConditions -> all(andConditions, r -> r.matches(number)));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdX76FInEeibjuLm5_lcNQ" name="parse" specification="_mYZVSFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdX76VInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringTokenizer st = new StringTokenizer(input.toLowerCase(Locale.US), &quot; .&quot;);&#xD;
     List&lt;String> tokens = new ArrayList&lt;>();&#xD;
     while (st.hasMoreTokens()) {&#xD;
         String token = st.nextToken();&#xD;
         if (&quot;or&quot;.equals(token)) {&#xD;
             conditions.add(parseCondition(tokens));&#xD;
             tokens.clear();&#xD;
         } else {&#xD;
             tokens.add(token);&#xD;
         }&#xD;
     }&#xD;
     conditions.add(parseCondition(tokens));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdX76lInEeibjuLm5_lcNQ" name="parseCondition" specification="_mcmf0VInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdX761InEeibjuLm5_lcNQ" name="input" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdX77FInEeibjuLm5_lcNQ" type="_mYWR8FInEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdX77VInEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;String> tokens = new ArrayList&lt;>();&#xD;
     List&lt;Relation> result = new ArrayList&lt;>();&#xD;
     for (String token : input) {&#xD;
         if (&quot;and&quot;.equals(token)) {&#xD;
             result.add(new Relation(tokens));&#xD;
             tokens.clear();&#xD;
         } else {&#xD;
             tokens.add(token);&#xD;
         }&#xD;
     }&#xD;
     result.add(new Relation(tokens));&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdX77lInEeibjuLm5_lcNQ" name="toString" specification="_mYZ8UFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdX771InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final String andString = &quot; and &quot;;&#xD;
     final String orString = &quot; or &quot;;&#xD;
     StringBuilder sb = new StringBuilder(32);&#xD;
     for (List&lt;Relation> andCondition : conditions) {&#xD;
         for (Relation relation : andCondition) {&#xD;
             sb.append(relation).append(andString);&#xD;
         }&#xD;
         sb.setLength(sb.length() - andString.length());&#xD;
         sb.insert(0, orString);&#xD;
     }&#xD;
     sb.delete(0, orString.length());&#xD;
     return sb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYZVQFInEeibjuLm5_lcNQ" name="Rule" method="_mdX74FInEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_mYZVQlInEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_mYZVQ1InEeibjuLm5_lcNQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_mYZVQVInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYZVRFInEeibjuLm5_lcNQ" type="_mYYuMFInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mYZVRVInEeibjuLm5_lcNQ" name="matches" method="_mdX75VInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdjiF1InEeibjuLm5_lcNQ">
                    <body>Returns true if this rule matches the given number.&#xD;
     *&#xD;
     * The outer conditions are or-combined (using anyMatch), the&#xD;
     * inner conditions are and-combined (using allMatch).&#xD;
     *&#xD;
     * @param number The number to test.&#xD;
     * @return True if the number matches this rule.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYZVRlInEeibjuLm5_lcNQ" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYZVR1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYZVSFInEeibjuLm5_lcNQ" name="parse" isLeaf="true" method="_mdX76FInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdjiGFInEeibjuLm5_lcNQ">
                    <body>Parses a string.&#xD;
     *&#xD;
     * @param input a &lt;code>String&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYZVSVInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYZ8UFInEeibjuLm5_lcNQ" name="toString" method="_mdX77lInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYZ8UVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcl4wFInEeibjuLm5_lcNQ" name="add" method="_mdX741InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdjiFlInEeibjuLm5_lcNQ">
                    <body>Adds a list of relations combined with the &quot;and&quot; operator.&#xD;
     *&#xD;
     * @param condition a list of relations combined with the &quot;and&quot; operator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcl4wVInEeibjuLm5_lcNQ" name="condition" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcmf0VInEeibjuLm5_lcNQ" name="parseCondition" visibility="private" method="_mdX76lInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mcmf0lInEeibjuLm5_lcNQ" name="input" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcmf01InEeibjuLm5_lcNQ" type="_mYWR8FInEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mcmf1FInEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYajYFInEeibjuLm5_lcNQ" name="NameCache">
                <ownedComment xmi:id="_mdjiGVInEeibjuLm5_lcNQ">
                  <body>A cache of proper names of various types.&#xD;
 *&#xD;
Most of these collections auto-initialize when the public accessor&#xD;
is called, but the cities of Cibola are different because they are&#xD;
saved in the Game, and hence requireCitiesOfCibola has to public&#xD;
for generating a new game, and there are clear/add/get routines to&#xD;
allow the the collection to be serialized.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_mdDy0FInEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_mb6jUlInEeibjuLm5_lcNQ" isReadOnly="true" association="_mduhMVInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdDy0VInEeibjuLm5_lcNQ" value="Logger.getLogger(NameCache.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdDy0lInEeibjuLm5_lcNQ" name="DEFAULT_SEASON_IDS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdEZ4FInEeibjuLm5_lcNQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdEZ4lInEeibjuLm5_lcNQ" value="{ &quot;model.season.spring.name&quot;, &quot;model.season.autumn.name&quot; }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdEZ41InEeibjuLm5_lcNQ" name="CIBOLA_PREFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdEZ5FInEeibjuLm5_lcNQ" value="&quot;nameCache.lostCityRumour.cityName.&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdFA8VInEeibjuLm5_lcNQ" name="cibolaKeys" visibility="private" isStatic="true" isOrdered="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdFA8lInEeibjuLm5_lcNQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdFA81InEeibjuLm5_lcNQ" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdFoAVInEeibjuLm5_lcNQ" name="cibolaLock" visibility="private" isLeaf="true" isStatic="true" type="_mcnt8VInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdvIQFInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdFoAlInEeibjuLm5_lcNQ" value="new Object()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdGPEFInEeibjuLm5_lcNQ" name="mercenaryLeaders" visibility="private" isStatic="true" isOrdered="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdGPEVInEeibjuLm5_lcNQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdGPElInEeibjuLm5_lcNQ" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdG2IFInEeibjuLm5_lcNQ" name="mercenaryLock" visibility="private" isLeaf="true" isStatic="true" type="_mcnt8VInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdvIQ1InEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdG2IVInEeibjuLm5_lcNQ" value="new Object()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdG2IlInEeibjuLm5_lcNQ" name="regionNames" visibility="private" isLeaf="true" isStatic="true" type="_mcBRAVInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdvvUVInEeibjuLm5_lcNQ">
                  <qualifier xmi:id="_mdHdMlInEeibjuLm5_lcNQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </qualifier>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdHdMVInEeibjuLm5_lcNQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdIEQFInEeibjuLm5_lcNQ" name="regionNameLock" visibility="private" isLeaf="true" isStatic="true" type="_mcnt8VInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdvvVFInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdIEQVInEeibjuLm5_lcNQ" value="new Object()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdIEQlInEeibjuLm5_lcNQ" name="regionIndex" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <qualifier xmi:id="_mdIrUFInEeibjuLm5_lcNQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </qualifier>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdIEQ1InEeibjuLm5_lcNQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdIrUVInEeibjuLm5_lcNQ" name="riverNames" visibility="private" isStatic="true" isOrdered="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdIrUlInEeibjuLm5_lcNQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdIrU1InEeibjuLm5_lcNQ" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdJSYVInEeibjuLm5_lcNQ" name="riverNameLock" visibility="private" isLeaf="true" isStatic="true" type="_mcnt8VInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdwWYVInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdJSYlInEeibjuLm5_lcNQ" value="new Object()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdJSY1InEeibjuLm5_lcNQ" name="seasonNames" visibility="private" isStatic="true" isOrdered="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdJSZFInEeibjuLm5_lcNQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdJ5cFInEeibjuLm5_lcNQ" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdJ5clInEeibjuLm5_lcNQ" name="seasonNamesLock" visibility="private" isLeaf="true" isStatic="true" type="_mcnt8VInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdw9cFInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdJ5c1InEeibjuLm5_lcNQ" value="new Object()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdKggFInEeibjuLm5_lcNQ" name="seasonNumber" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdKggVInEeibjuLm5_lcNQ" value="0"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdKgg1InEeibjuLm5_lcNQ" name="capitalNames" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <qualifier xmi:id="_mdLuoVInEeibjuLm5_lcNQ" type="_mdLHkFInEeibjuLm5_lcNQ"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdKghFInEeibjuLm5_lcNQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdLuolInEeibjuLm5_lcNQ" name="settlementNames" visibility="private" isLeaf="true" isStatic="true" type="_mcBRAVInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdw9c1InEeibjuLm5_lcNQ">
                  <qualifier xmi:id="_mdM8wFInEeibjuLm5_lcNQ" type="_mdLHkFInEeibjuLm5_lcNQ"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdMVsVInEeibjuLm5_lcNQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdM8wVInEeibjuLm5_lcNQ" name="settlementNameLock" visibility="private" isLeaf="true" isStatic="true" type="_mcnt8VInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdxkgVInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdNj0FInEeibjuLm5_lcNQ" value="new Object()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdNj0VInEeibjuLm5_lcNQ" name="shipNames" visibility="private" isLeaf="true" isStatic="true" type="_mcBRAVInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdxkhFInEeibjuLm5_lcNQ">
                  <qualifier xmi:id="_mdOK4FInEeibjuLm5_lcNQ" type="_mdLHkFInEeibjuLm5_lcNQ"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdNj01InEeibjuLm5_lcNQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdOK4VInEeibjuLm5_lcNQ" name="shipNameLock" visibility="private" isLeaf="true" isStatic="true" type="_mcnt8VInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdyLkVInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdOK4lInEeibjuLm5_lcNQ" value="new Object()"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdYi8FInEeibjuLm5_lcNQ" name="collectNames" specification="_mco8EFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdYi8VInEeibjuLm5_lcNQ" name="prefix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdYi8lInEeibjuLm5_lcNQ" name="names" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>String name;&#xD;
     if (Messages.containsKey(name = prefix + &quot;0&quot;)) {&#xD;
         names.add(Messages.message(name));&#xD;
     }&#xD;
     int i = 1;&#xD;
     while (Messages.containsKey(name = prefix + Integer.toString(i))) {&#xD;
         names.add(Messages.message(name));&#xD;
         i++;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdYi81InEeibjuLm5_lcNQ" name="requireCitiesOfCibola" specification="_mcqKMFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdYi9FInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>synchronized (cibolaLock) {&#xD;
         if (cibolaKeys == null) {&#xD;
             cibolaKeys = new ArrayList&lt;>();&#xD;
             collectNames(CIBOLA_PREFIX, cibolaKeys);&#xD;
             int count = cibolaKeys.size();&#xD;
             // Actually, store the keys.&#xD;
             cibolaKeys.clear();&#xD;
             for (int i = 0; i &lt; count; i++) {&#xD;
                 cibolaKeys.add(CIBOLA_PREFIX + i);&#xD;
             }&#xD;
             randomShuffle(logger, &quot;Cibola&quot;, cibolaKeys, random);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdYi9VInEeibjuLm5_lcNQ" name="requireMercenaryLeaders" specification="_mYcYkFInEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>synchronized (mercenaryLock) {&#xD;
         if (mercenaryLeaders == null) {&#xD;
             mercenaryLeaders = new ArrayList&lt;>();&#xD;
             collectNames(&quot;nameCache.mercenaries.&quot;, mercenaryLeaders);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZKAFInEeibjuLm5_lcNQ" name="makeRegionKey" specification="_mcqKMlInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdZKAVInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdZKAlInEeibjuLm5_lcNQ" name="type" type="_mcHXoVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdZKA1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return player.getNationId() + &quot;.region.&quot;&#xD;
         + lastPart(type.getKey(), &quot;.&quot;) + &quot;.&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZKBFInEeibjuLm5_lcNQ" name="requireRegionNames" specification="_mcqxQVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdZKBVInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdZKBlInEeibjuLm5_lcNQ" name="type" type="_mcHXoVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>synchronized (regionNameLock) {&#xD;
         final String prefix = makeRegionKey(player, type);&#xD;
         List&lt;String> names = regionNames.get(prefix);&#xD;
         if (names == null) {&#xD;
             names = new ArrayList&lt;String>();&#xD;
             collectNames(prefix, names);&#xD;
             regionNames.put(prefix, names);&#xD;
         }&#xD;
         Integer index = regionIndex.get(prefix);&#xD;
         if (index == null) regionIndex.put(prefix, names.size()+1);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZKB1InEeibjuLm5_lcNQ" name="requireRiverNames" specification="_mYc_oFInEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>synchronized (riverNameLock) {&#xD;
         if (riverNames == null) {&#xD;
             riverNames = new ArrayList&lt;>();&#xD;
             collectNames(&quot;model.other.region.river.&quot;, riverNames);&#xD;
             // Does not need to use player or system PRNG&#xD;
             Collections.shuffle(riverNames);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZKCFInEeibjuLm5_lcNQ" name="requireSeasonNames" specification="_mYc_oVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdZKCVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>synchronized (seasonNamesLock) {&#xD;
         if (seasonNames == null) {&#xD;
             seasonNames = new ArrayList&lt;>();&#xD;
             collectNames(&quot;nameCache.season.&quot;, seasonNames);&#xD;
             seasonNumber = seasonNames.size();&#xD;
             if (seasonNumber &lt; 2) {&#xD;
                 seasonNames.clear();&#xD;
                 for (String s : DEFAULT_SEASON_IDS) {&#xD;
                     seasonNames.add(Messages.message(s));&#xD;
                 }&#xD;
                 seasonNumber = seasonNames.size();&#xD;
             }&#xD;
         }&#xD;
         return seasonNumber;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZKClInEeibjuLm5_lcNQ" name="getSeasonName" specification="_mYdmsVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdZKC1InEeibjuLm5_lcNQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdZKDFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>requireSeasonNames();&#xD;
     if (index >= 0 &amp;&amp; index &lt; seasonNumber) return seasonNames.get(index);&#xD;
     return Messages.message(StringTemplate&#xD;
         .template(&quot;nameCache.season.default&quot;)&#xD;
         .addAmount(&quot;%number%&quot;, index+1));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZxEFInEeibjuLm5_lcNQ" name="requireSettlementNames" specification="_mcrYUFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdZxEVInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdZxElInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>synchronized (settlementNameLock) {&#xD;
         if (settlementNames.get(player) == null) {&#xD;
             List&lt;String> names = new ArrayList&lt;>();&#xD;
             // @compat 0.10.x&#xD;
             // Try the base names&#xD;
             collectNames(player.getNationId() + &quot;.settlementName.&quot;, names);&#xD;
             // end @compat 0.10.x&#xD;
&#xD;
             // Try the spec-qualified version.&#xD;
             if (names.isEmpty()) {&#xD;
                 collectNames(player.getNationId() + &quot;.settlementName.&quot;&#xD;
                     + player.getSpecification().getId() + &quot;.&quot;, names);&#xD;
             }&#xD;
&#xD;
             // If still empty use the &quot;freecol&quot; names.&#xD;
             if (names.isEmpty()) {&#xD;
                 collectNames(player.getNationId() + &quot;.settlementName.freecol.&quot;,&#xD;
                              names);&#xD;
             }&#xD;
&#xD;
             // Indians have capitals and need randomization&#xD;
             if (player.isIndian()) {&#xD;
                 capitalNames.put(player, names.remove(0));&#xD;
                 if (random != null) {&#xD;
                     randomShuffle(logger, &quot;Settlement names&quot;, names, random);&#xD;
                 }&#xD;
             }&#xD;
             settlementNames.put(player, names);&#xD;
             logger.fine(&quot;Loaded &quot; + names.size() + &quot; settlement names for &quot;&#xD;
                 + player.getId());&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZxE1InEeibjuLm5_lcNQ" name="requireShipNames" specification="_mcrYU1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdZxFFInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdZxFVInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>synchronized (shipNameLock) {&#xD;
         List&lt;String> names = shipNames.get(player);&#xD;
         if (names == null) {&#xD;
             final String prefix = player.getNationId() + &quot;.ship.&quot;;&#xD;
             names = new ArrayList&lt;String>();&#xD;
             collectNames(prefix, names);&#xD;
             if (random != null) {&#xD;
                 randomShuffle(logger, &quot;Ship names&quot;, names, random);&#xD;
             }&#xD;
             shipNames.put(player, names);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZxFlInEeibjuLm5_lcNQ" name="getNextCityOfCibola" specification="_mYeNwFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdZxF1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>synchronized (cibolaLock) {&#xD;
         return (cibolaKeys == null || cibolaKeys.isEmpty()) ? null&#xD;
             : Messages.message(cibolaKeys.remove(0));&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZxGFInEeibjuLm5_lcNQ" name="getCitiesOfCibola" specification="_mYeNwlInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdZxGVInEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdZxGlInEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>synchronized (cibolaLock) {&#xD;
         return (cibolaKeys == null) ? Collections.&lt;String>emptyList()&#xD;
             : cibolaKeys;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZxG1InEeibjuLm5_lcNQ" name="clearCitiesOfCibola" specification="_mYe00FInEeibjuLm5_lcNQ">
                  <language>java</language>
                  <body>synchronized (cibolaLock) {&#xD;
         if (cibolaKeys != null) cibolaKeys.clear();&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdZxHFInEeibjuLm5_lcNQ" name="addCityOfCibola" specification="_mYe00VInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdZxHVInEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>synchronized (cibolaLock) {&#xD;
         if (cibolaKeys == null) cibolaKeys = new ArrayList&lt;>();&#xD;
         cibolaKeys.add(key);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdaYIFInEeibjuLm5_lcNQ" name="getMercenaryLeaderIndex" specification="_mcr_YFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdaYIVInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdaYIlInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>requireMercenaryLeaders();&#xD;
     int n;&#xD;
     synchronized (mercenaryLock) {&#xD;
         n = mercenaryLeaders.size();&#xD;
     }&#xD;
     return randomInt(logger, &quot;Mercenary leader&quot;, random, n);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdaYI1InEeibjuLm5_lcNQ" name="getMercenaryLeaderName" specification="_mYfb4FInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdaYJFInEeibjuLm5_lcNQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdaYJVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>requireMercenaryLeaders();&#xD;
     synchronized (mercenaryLock) {&#xD;
         return mercenaryLeaders.get(index);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdaYJlInEeibjuLm5_lcNQ" name="getNewLandName" specification="_mcr_Y1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdaYJ1InEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdaYKFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (player.getNewLandName() == null)&#xD;
         ? Messages.message(player.getNationId() + &quot;.newLandName&quot;)&#xD;
         : player.getNewLandName();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdaYKVInEeibjuLm5_lcNQ" name="getRegionName" specification="_mcsmcFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdaYKlInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdaYK1InEeibjuLm5_lcNQ" name="region" type="_mcGwk1InEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdaYLFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (region.hasName()) {&#xD;
         return Messages.message(region.getLabel());&#xD;
     }&#xD;
     final net.sf.freecol.common.model.Map map = player.getGame().getMap();&#xD;
     String name;&#xD;
     int index;&#xD;
&#xD;
     // Try national names first.&#xD;
     final String prefix = makeRegionKey(player, region.getType());&#xD;
     requireRegionNames(player, region.getType());&#xD;
     synchronized (regionNameLock) {&#xD;
         List&lt;String> names = regionNames.get(prefix);&#xD;
         while (!names.isEmpty()) {&#xD;
             name = names.remove(0);&#xD;
             if (map.getRegionByName(name) == null) return name;&#xD;
         }&#xD;
     }&#xD;
         &#xD;
     // There are a bunch of extra rivers not attached to a specific&#xD;
     // nation at model.other.region.river.*.&#xD;
     if (region.getType() == Region.RegionType.RIVER) {&#xD;
         requireRiverNames();&#xD;
         synchronized (riverNameLock) {&#xD;
             while (!riverNames.isEmpty()) {&#xD;
                 name = riverNames.remove(0);&#xD;
                 if (map.getRegionByName(name) == null) return name;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Fall back to generic names.&#xD;
     synchronized (regionNameLock) {&#xD;
         index = regionIndex.get(prefix);&#xD;
     }&#xD;
     StringTemplate nn = player.getNationLabel();&#xD;
     do {&#xD;
         name = Messages.message(StringTemplate.label(&quot; &quot;)&#xD;
             .addStringTemplate(nn)&#xD;
             .addNamed(region.getType())&#xD;
             .addName(String.valueOf(index)));&#xD;
         index++;&#xD;
     } while (map.getRegionByName(name) != null);&#xD;
     synchronized (regionNameLock) {&#xD;
         regionIndex.put(prefix, index);&#xD;
     }&#xD;
     return name;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdaYLVInEeibjuLm5_lcNQ" name="getFallbackSettlementName" specification="_mcsmdFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdaYLlInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdaYL1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return Messages.message((player.isEuropean())&#xD;
         ? &quot;nameCache.base.colony&quot;&#xD;
         : &quot;nameCache.base.settlement&quot;) + &quot;-&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdaYMFInEeibjuLm5_lcNQ" name="getCapitalName" specification="_mctNglInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdaYMVInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdaYMlInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdaYM1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>requireSettlementNames(player, random);&#xD;
     synchronized (settlementNameLock) {&#xD;
         return capitalNames.get(player);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mda_MFInEeibjuLm5_lcNQ" name="getSettlementName" specification="_mct0kVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mda_MVInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mda_MlInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mda_M1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>requireSettlementNames(player, random);&#xD;
     final Game game = player.getGame();&#xD;
     synchronized (settlementNameLock) {&#xD;
         List&lt;String> names = settlementNames.get(player);&#xD;
         while (!names.isEmpty()) {&#xD;
             String name = names.remove(0);&#xD;
             if (game.getSettlementByName(name) == null) return name;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Use the fallback name&#xD;
     final String base = getFallbackSettlementName(player);&#xD;
     int i = player.getSettlements().size() + 1;&#xD;
     String name = null;&#xD;
     game.getSettlementByName(name = base + i++);&#xD;
     return name;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mda_NFInEeibjuLm5_lcNQ" name="putSettlementName" specification="_mcubolInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mda_NVInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mda_NlInEeibjuLm5_lcNQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!name.startsWith(getFallbackSettlementName(player))) {&#xD;
         requireSettlementNames(player, null);&#xD;
         synchronized (settlementNameLock) {&#xD;
             List&lt;String> names = settlementNames.get(player);&#xD;
             names.add(name);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mda_N1InEeibjuLm5_lcNQ" name="getTradeRouteName" specification="_mcvCsFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mda_OFInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mda_OVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String base = Messages.message(&quot;nameCache.base.tradeRoute&quot;);&#xD;
     if (player.getTradeRouteByName(base) == null) return base;&#xD;
     String name;&#xD;
     int i = 1;&#xD;
     player.getTradeRouteByName(name = base + i++);&#xD;
     return name;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mda_OlInEeibjuLm5_lcNQ" name="getUnitName" specification="_mcvCs1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mda_O1InEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mda_PFInEeibjuLm5_lcNQ" name="type" type="_mcH-s1InEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mda_PVInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mda_PlInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!type.isNaval()) return null;&#xD;
     String name;&#xD;
&#xD;
     // Find a new name in the installed ship names if possible.&#xD;
     requireShipNames(player, random);&#xD;
     synchronized (shipNameLock) {&#xD;
         List&lt;String> names = shipNames.get(player);&#xD;
         while (!names.isEmpty()) {&#xD;
             name = names.remove(0);&#xD;
             if (player.getUnitByName(name) == null) return name;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Get a fallback ship name&#xD;
     final String base = Messages.message(&quot;nameCache.base.ship&quot;) + &quot;-&quot;;&#xD;
     int i = 1;&#xD;
     player.getUnitByName(name = base + i++);&#xD;
     return name;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYcYkFInEeibjuLm5_lcNQ" name="requireMercenaryLeaders" visibility="private" isStatic="true" method="_mdYi9VInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJIlInEeibjuLm5_lcNQ">
                    <body>Initialize the mercenary leaders collection.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_mYc_oFInEeibjuLm5_lcNQ" name="requireRiverNames" visibility="private" isStatic="true" method="_mdZKB1InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJJVInEeibjuLm5_lcNQ">
                    <body>Initialize the riverNames collection.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_mYc_oVInEeibjuLm5_lcNQ" name="requireSeasonNames" visibility="private" isStatic="true" method="_mdZKCFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJJlInEeibjuLm5_lcNQ">
                    <body>Initialize the seasonNames collection.&#xD;
     *&#xD;
     * @return The number of seasons.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYdmsFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYdmsVInEeibjuLm5_lcNQ" name="getSeasonName" isStatic="true" method="_mdZKClInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJJ1InEeibjuLm5_lcNQ">
                    <body>Get the nth season name.&#xD;
     *&#xD;
     * @param index The index to look up.&#xD;
     * @return The season name, or null on failure.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYdmslInEeibjuLm5_lcNQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYdms1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYeNwFInEeibjuLm5_lcNQ" name="getNextCityOfCibola" isStatic="true" method="_mdZxFlInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJKlInEeibjuLm5_lcNQ">
                    <body>Get the next name for a city of Cibola, removing it from the&#xD;
     * list of available names.&#xD;
     *&#xD;
     * @return A name for a city of Cibola, or null if exhausted.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYeNwVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYeNwlInEeibjuLm5_lcNQ" name="getCitiesOfCibola" isStatic="true" method="_mdZxGFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJK1InEeibjuLm5_lcNQ">
                    <body>Get the current list of available cities of Cibola keys.&#xD;
     *&#xD;
     * @return A list of city names.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYeNw1InEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mYeNxFInEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYe00FInEeibjuLm5_lcNQ" name="clearCitiesOfCibola" isStatic="true" method="_mdZxG1InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJLFInEeibjuLm5_lcNQ">
                    <body>Clear the city of Cibola cache.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_mYe00VInEeibjuLm5_lcNQ" name="addCityOfCibola" isStatic="true" method="_mdZxHFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJLVInEeibjuLm5_lcNQ">
                    <body>Add a key for a city of Cibola.&#xD;
     *&#xD;
     * @param key The key to add.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYe00lInEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYfb4FInEeibjuLm5_lcNQ" name="getMercenaryLeaderName" isStatic="true" method="_mdaYI1InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJL1InEeibjuLm5_lcNQ">
                    <body>Get a mercenary leader name by index.&#xD;
     *&#xD;
     * @param index The index to look up.&#xD;
     * @return The mercenary leader name.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYfb4VInEeibjuLm5_lcNQ" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYfb4lInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mco8EFInEeibjuLm5_lcNQ" name="collectNames" visibility="private" isStatic="true" method="_mdYi8FInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJIFInEeibjuLm5_lcNQ">
                    <body>Collects all the names with a given prefix.&#xD;
     *&#xD;
     * Note: some collections start at 0, some at 1.&#xD;
     *&#xD;
     * @param prefix The prefix to check.&#xD;
     * @param names A list to fill with the names found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mco8EVInEeibjuLm5_lcNQ" name="prefix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mco8ElInEeibjuLm5_lcNQ" name="names" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcqKMFInEeibjuLm5_lcNQ" name="requireCitiesOfCibola" isStatic="true" method="_mdYi81InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJIVInEeibjuLm5_lcNQ">
                    <body>Initialize the cities of Cibola collection.&#xD;
     *&#xD;
     * Public for FreeColServer to initialize with a new game.&#xD;
     *&#xD;
     * @param random A pseudo-random number source.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcqKMVInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcqKMlInEeibjuLm5_lcNQ" name="makeRegionKey" visibility="private" isStatic="true" method="_mdZKAFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJI1InEeibjuLm5_lcNQ">
                    <body>Make a key for a player and region type.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to install region names for.&#xD;
     * @param type The &lt;code>RegionType&lt;/code> to get names of.&#xD;
     * @return A key for the player and region type.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcqKM1InEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcqKNFInEeibjuLm5_lcNQ" name="type" type="_mcHXoVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcqxQFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcqxQVInEeibjuLm5_lcNQ" name="requireRegionNames" visibility="private" isStatic="true" method="_mdZKBFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJJFInEeibjuLm5_lcNQ">
                    <body>Initialize the region names for a player.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to install region names for.&#xD;
     * @param type The &lt;code>RegionType&lt;/code> to get names of.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcqxQlInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcqxQ1InEeibjuLm5_lcNQ" name="type" type="_mcHXoVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcrYUFInEeibjuLm5_lcNQ" name="requireSettlementNames" visibility="private" isStatic="true" method="_mdZxEFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJKFInEeibjuLm5_lcNQ">
                    <body>Initialize the settlement names for a player.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to install names for.&#xD;
     * @param random A pseudo-random number source.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcrYUVInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcrYUlInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcrYU1InEeibjuLm5_lcNQ" name="requireShipNames" visibility="private" isStatic="true" method="_mdZxE1InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJKVInEeibjuLm5_lcNQ">
                    <body>Initialize the shipNames for a player.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to install names for.&#xD;
     * @param random A pseudo-random number source.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcrYVFInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcrYVVInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcr_YFInEeibjuLm5_lcNQ" name="getMercenaryLeaderIndex" isStatic="true" method="_mdaYIFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkJLlInEeibjuLm5_lcNQ">
                    <body>Get a random mercenary leader index.&#xD;
     *&#xD;
     * @param random A pseudo-random number source.&#xD;
     * @return The index of a random mercenary leader.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcr_YVInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcr_YlInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcr_Y1InEeibjuLm5_lcNQ" name="getNewLandName" isStatic="true" method="_mdaYJlInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwMFInEeibjuLm5_lcNQ">
                    <body>Get the new land name for a player.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to query.&#xD;
     * @return The new land name of a player.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcr_ZFInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcr_ZVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcsmcFInEeibjuLm5_lcNQ" name="getRegionName" isStatic="true" method="_mdaYKVInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwMVInEeibjuLm5_lcNQ">
                    <body>Creates a unique region name for a player by fetching a new&#xD;
     * name from the list of default names if possible.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to find a region name for.&#xD;
     * @param region The &lt;code>Region&lt;/code> to name.&#xD;
     * @return A suitable name.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcsmcVInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcsmclInEeibjuLm5_lcNQ" name="region" type="_mcGwk1InEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcsmc1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcsmdFInEeibjuLm5_lcNQ" name="getFallbackSettlementName" visibility="private" isStatic="true" method="_mdaYLVInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwMlInEeibjuLm5_lcNQ">
                    <body>Get a fallback settlement name for a player.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to get a fallback&#xD;
     *     settlement name for.&#xD;
     * @return A unique fallback settlement name for the player.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mctNgFInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mctNgVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mctNglInEeibjuLm5_lcNQ" name="getCapitalName" isStatic="true" method="_mdaYMFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwM1InEeibjuLm5_lcNQ">
                    <body>Get the name of this players capital.  Only meaningful to natives.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to get a capital name for.&#xD;
     * @param random An optional pseudo-random number source.&#xD;
     * @return The name of this players capital.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mctNg1InEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mctNhFInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mct0kFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mct0kVInEeibjuLm5_lcNQ" name="getSettlementName" isStatic="true" method="_mda_MFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwNFInEeibjuLm5_lcNQ">
                    <body>Get a settlement name suitable for a player.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to get a settlement name for.&#xD;
     * @param random An optional pseudo-random number source.&#xD;
     * @return A new settlement name.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mct0klInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcuboFInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcuboVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcubolInEeibjuLm5_lcNQ" name="putSettlementName" isStatic="true" method="_mda_NFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwNVInEeibjuLm5_lcNQ">
                    <body>Puts a suggested settlement name back into the pool.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> returning the settlement name.&#xD;
     * @param name A formerly suggested settlement name.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcubo1InEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcubpFInEeibjuLm5_lcNQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcvCsFInEeibjuLm5_lcNQ" name="getTradeRouteName" isStatic="true" method="_mda_N1InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwNlInEeibjuLm5_lcNQ">
                    <body>Get a new default trade route name for a player.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to get the name for.&#xD;
     * @return A new trade route name.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcvCsVInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcvCslInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcvCs1InEeibjuLm5_lcNQ" name="getUnitName" isStatic="true" method="_mda_OlInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwN1InEeibjuLm5_lcNQ">
                    <body>Gets a new name for a unit.&#xD;
     *&#xD;
     * Currently only names naval units, not specific to type.&#xD;
     * FIXME: specific names for types.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> who will own the unit.&#xD;
     * @param type The &lt;code>UnitType&lt;/code> to choose a name for.&#xD;
     * @param random A pseudo-random number source.&#xD;
     * @return A name for the unit, or null if not available.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcvCtFInEeibjuLm5_lcNQ" name="player" type="_mcGwkVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcvCtVInEeibjuLm5_lcNQ" name="type" type="_mcH-s1InEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcvpwFInEeibjuLm5_lcNQ" name="random" type="_mcE7YlInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcvpwVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mYmJkFInEeibjuLm5_lcNQ" name="Messages">
                <ownedComment xmi:id="_mdkwOFInEeibjuLm5_lcNQ">
                  <body>Represents a collection of messages in a particular locale.&#xD;
 *&#xD;
The individual messages are read from property files in the&#xD;
&lt;code>data/strings&lt;/code> directory. The property files are called&#xD;
&quot;FreeColMessages[_LANGUAGE[_COUNTRY[_VARIANT]]].properties&quot;, where&#xD;
LANGUAGE should be an ISO 639-2 or ISO 639-3 language code, COUNTRY&#xD;
should be an ISO 3166-2 country code, and VARIANT is an arbitrary&#xD;
string. The encoding of the property files is UTF-8. Since the Java&#xD;
Properties class is unable to handle UTF-8 directly, this class&#xD;
uses its own implementation.&#xD;
 *&#xD;
The individual messages may include variables, which must be&#xD;
delimited by percent characters (e.g. &quot;%nation%&quot;), and will be&#xD;
replaced when the message is formatted. Furthermore, the messages&#xD;
may include choice formats consisting of a tag followed by a colon&#xD;
(&quot;:&quot;), a selector and one or several choices separated from the&#xD;
selector and each other by pipe characters (&quot;|&quot;). The entire choice&#xD;
format must be enclosed in double brackets (&quot;{{&quot; and &quot;}}&quot;,&#xD;
respectively).&#xD;
 *&#xD;
Each choice must consist of a key and a value separated by an&#xD;
equals character (&quot;=&quot;), unless it is a variable, in which case the&#xD;
variable must resolve to another choice format. The selector may&#xD;
also be a variable. If the selector is omitted, then one of the&#xD;
choices should use the key &quot;default&quot;. Choice formats may be&#xD;
nested.&#xD;
 *&#xD;
&lt;pre>&#xD;
  key1=%colony% tuottaa tuotetta {{tag:acc|%goods%}}.&#xD;
  key2={{plural:%amount%|one=ruoka|other=ruokaa|default={{tag:|acc=viljaa|default=Vilja}}}}&#xD;
  key3={{tag:|acc=viljaa|default={{plural:%amount%|one=ruoka|other=ruokaa|default=Ruoka}}}}&#xD;
&lt;/pre>&#xD;
 *&#xD;
This class is NOT thread-safe. (CO: I cannot find any place that&#xD;
really has a problem)</body>
                </ownedComment>
                <ownedAttribute xmi:id="_mdPZAFInEeibjuLm5_lcNQ" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_mb6jUlInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdyyoFInEeibjuLm5_lcNQ">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdPZAVInEeibjuLm5_lcNQ" value="Logger.getLogger(Messages.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdQAEFInEeibjuLm5_lcNQ" name="MESSAGE_FILE_PREFIX" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdQAEVInEeibjuLm5_lcNQ" value="&quot;FreeColMessages&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdQAElInEeibjuLm5_lcNQ" name="MOD_MESSAGE_FILE_PREFIX" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdQAE1InEeibjuLm5_lcNQ" value="&quot;ModMessages&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdQAFFInEeibjuLm5_lcNQ" name="MESSAGE_FILE_SUFFIX" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdQAFVInEeibjuLm5_lcNQ" value="&quot;.properties&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdQnIFInEeibjuLm5_lcNQ" name="DESCRIPTION_SUFFIX" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdQnIVInEeibjuLm5_lcNQ" value="&quot;.description&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdQnIlInEeibjuLm5_lcNQ" name="SHORT_DESCRIPTION_SUFFIX" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdQnI1InEeibjuLm5_lcNQ" value="&quot;.shortDescription&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdQnJFInEeibjuLm5_lcNQ" name="NAME_SUFFIX" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdQnJVInEeibjuLm5_lcNQ" value="&quot;.name&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdROMFInEeibjuLm5_lcNQ" name="RULER_SUFFIX" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdROMVInEeibjuLm5_lcNQ" value="&quot;.ruler&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdROMlInEeibjuLm5_lcNQ" name="DESCRIPTION_KEYS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdROM1InEeibjuLm5_lcNQ" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdRONVInEeibjuLm5_lcNQ" value="{&#xD;&#xA;        DESCRIPTION_SUFFIX, SHORT_DESCRIPTION_SUFFIX, NAME_SUFFIX&#xD;&#xA;    }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdR1QFInEeibjuLm5_lcNQ" name="AUTOMATIC" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdR1QVInEeibjuLm5_lcNQ" value="&quot;automatic&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdR1QlInEeibjuLm5_lcNQ" name="messageBundle" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <qualifier xmi:id="_mdR1RFInEeibjuLm5_lcNQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </qualifier>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdR1Q1InEeibjuLm5_lcNQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_mdScUFInEeibjuLm5_lcNQ" name="tagMap" isLeaf="true" isStatic="true" type="_mYOWIFInEeibjuLm5_lcNQ" isReadOnly="true" association="_mdyyo1InEeibjuLm5_lcNQ">
                  <eAnnotations xmi:id="_mdScUVInEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_mdScUlInEeibjuLm5_lcNQ" key="ConstantWithGetter"/>
                  </eAnnotations>
                  <qualifier xmi:id="_mdScVFInEeibjuLm5_lcNQ">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </qualifier>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_mdScU1InEeibjuLm5_lcNQ" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdbmQFInEeibjuLm5_lcNQ" name="getSelector" specification="_mYnXsFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdbmQVInEeibjuLm5_lcNQ" name="tag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdbmQlInEeibjuLm5_lcNQ" type="_mYOWIFInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>return tagMap.get(tag.toLowerCase(Locale.US));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdbmQ1InEeibjuLm5_lcNQ" name="setGrammaticalNumber" specification="_mcWBIVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdbmRFInEeibjuLm5_lcNQ" name="number" type="_mYO9MVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>tagMap.put(&quot;plural&quot;, number);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdbmRVInEeibjuLm5_lcNQ" name="getMessageFileNames" specification="_mcxe8FInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdbmRlInEeibjuLm5_lcNQ" name="locale" type="_mcDGMVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdbmR1InEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdbmSFInEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return FreeColDataFile.getFileNames(MESSAGE_FILE_PREFIX,&#xD;
         MESSAGE_FILE_SUFFIX, locale);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdcNUFInEeibjuLm5_lcNQ" name="getModMessageFileNames" specification="_mcyGAFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdcNUVInEeibjuLm5_lcNQ" name="locale" type="_mcDGMVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdcNUlInEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdcNU1InEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return FreeColDataFile.getFileNames(MOD_MESSAGE_FILE_PREFIX,&#xD;
         MESSAGE_FILE_SUFFIX, locale);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdcNVFInEeibjuLm5_lcNQ" name="loadMessageBundle" specification="_mcytEFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdcNVVInEeibjuLm5_lcNQ" name="locale" type="_mcDGMVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>messageBundle.clear(); // Reset the message bundle.&#xD;
&#xD;
     if (!Locale.getDefault().equals(locale)) {&#xD;
         Locale.setDefault(locale);&#xD;
     }&#xD;
&#xD;
     File i18nDirectory = FreeColDirectories.getI18nDirectory();&#xD;
     if (!NumberRules.isInitialized()) {&#xD;
         // attempt to read grammatical rules&#xD;
         File cldr = new File(i18nDirectory, &quot;plurals.xml&quot;);&#xD;
         if (cldr.exists()) {&#xD;
             try {&#xD;
                 try (FileInputStream in = new FileInputStream(cldr)) {&#xD;
                     NumberRules.load(in);&#xD;
                 }&#xD;
             } catch (IOException e) {&#xD;
                 System.err.println(&quot;Failed to read CLDR rules: &quot;&#xD;
                     + e.getMessage());&#xD;
             }&#xD;
         } else {&#xD;
             System.err.println(&quot;Could not find CLDR rules: &quot;&#xD;
                 + cldr.getPath());&#xD;
         }&#xD;
     }&#xD;
&#xD;
     Locale loc = (AUTOMATIC.equalsIgnoreCase(locale.getLanguage()))&#xD;
         ? Locale.getDefault() : locale;&#xD;
     setGrammaticalNumber(NumberRules.getNumberForLanguage(loc.getLanguage()));&#xD;
&#xD;
     for (String name : getMessageFileNames(locale)) {&#xD;
         File file = new File(i18nDirectory, name);&#xD;
         if (!file.exists()) continue; // Expected&#xD;
         try {&#xD;
             loadMessages(new FileInputStream(file));&#xD;
         } catch (IOException e) {&#xD;
             System.err.println(&quot;Failed to load messages from &quot; + name&#xD;
                 + &quot;: &quot; + e.getMessage());&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdcNVlInEeibjuLm5_lcNQ" name="loadMessages" specification="_mcytElInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdcNV1InEeibjuLm5_lcNQ" name="is" type="_mb7xcVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>InputStreamReader inputReader;&#xD;
     try {&#xD;
         inputReader = new InputStreamReader(is, &quot;UTF-8&quot;);&#xD;
     } catch (UnsupportedEncodingException uee) {&#xD;
         return; // We have big problems if UTF-8 is not supported.&#xD;
     }&#xD;
     BufferedReader in = new BufferedReader(inputReader);&#xD;
&#xD;
     String line = null;&#xD;
     while((line = in.readLine()) != null) {&#xD;
         line = line.trim();&#xD;
         int index = line.indexOf('#');&#xD;
         if (index == 0) continue;&#xD;
         index = line.indexOf('=');&#xD;
         if (index > 0) {&#xD;
             String key = line.substring(0, index).trim();&#xD;
             String value = line.substring(index + 1).trim()&#xD;
                 .replace(&quot;\\n&quot;, &quot;\n&quot;).replace(&quot;\\t&quot;, &quot;\t&quot;);&#xD;
             messageBundle.put(key, value);&#xD;
             if (key.startsWith(&quot;FileChooser.&quot;)) {&#xD;
                 UIManager.put(key, value);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdcNWFInEeibjuLm5_lcNQ" name="loadModMessageBundle" specification="_mczUIFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdcNWVInEeibjuLm5_lcNQ" name="locale" type="_mcDGMVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>List&lt;FreeColModFile> allMods = new ArrayList&lt;>();&#xD;
     allMods.addAll(Mods.getAllMods());&#xD;
     allMods.addAll(Mods.getRuleSets());&#xD;
&#xD;
     List&lt;String> filenames = getMessageFileNames(locale);&#xD;
     for (FreeColModFile fcmf : allMods) {&#xD;
         for (String name : filenames) {&#xD;
             try {&#xD;
                 loadMessages(fcmf.getInputStream(name));&#xD;
             } catch (IOException e) {} // Failures expected&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdcNWlInEeibjuLm5_lcNQ" name="loadActiveModMessageBundle" specification="_mczUIlInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdcNW1InEeibjuLm5_lcNQ" name="mods" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdcNXFInEeibjuLm5_lcNQ" name="locale" type="_mcDGMVInEeibjuLm5_lcNQ"/>
                  <language>java</language>
                  <body>for (FreeColModFile fcmf : mods) {&#xD;
         for (String name : getModMessageFileNames(locale)) {&#xD;
             try {&#xD;
                 loadMessages(fcmf.getInputStream(name));&#xD;
             } catch (IOException e) {} // Failures expected&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdcNXVInEeibjuLm5_lcNQ" name="getLocale" specification="_mYn-wFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdcNXlInEeibjuLm5_lcNQ" name="languageID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdc0YFInEeibjuLm5_lcNQ" type="_mcDGMVInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>String language, country = &quot;&quot;, variant = &quot;&quot;;&#xD;
     StringTokenizer st = new StringTokenizer(languageID, &quot;_&quot;, true);&#xD;
     language = st.nextToken();&#xD;
     if (st.hasMoreTokens()) {&#xD;
         // Skip _&#xD;
         st.nextToken();&#xD;
     }&#xD;
     if (st.hasMoreTokens()) {&#xD;
         String token = st.nextToken();&#xD;
         if (!&quot;_&quot;.equals(token)) {&#xD;
             country = token;&#xD;
         }&#xD;
         if (st.hasMoreTokens()) {&#xD;
             token = st.nextToken();&#xD;
             if (&quot;_&quot;.equals(token) &amp;&amp; st.hasMoreTokens()) {&#xD;
                 token = st.nextToken();&#xD;
             }&#xD;
             if (!&quot;_&quot;.equals(token)) {&#xD;
                 variant = token;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return new Locale(language, country, variant);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdc0YVInEeibjuLm5_lcNQ" name="nameKey" specification="_mYn-wlInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdc0YlInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdc0Y1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return id + NAME_SUFFIX;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdc0ZFInEeibjuLm5_lcNQ" name="nameKey" specification="_mcz7MlInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdc0ZVInEeibjuLm5_lcNQ" name="object" type="_mcS90VInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdc0ZlInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return nameKey(object.getId());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdc0Z1InEeibjuLm5_lcNQ" name="getName" specification="_mYn-xVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdc0aFInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdc0aVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return message(nameKey(id));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdc0alInEeibjuLm5_lcNQ" name="getName" specification="_mc0iQFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdc0a1InEeibjuLm5_lcNQ" name="named" type="_mcUzAVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdc0bFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return message(named.getNameKey());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mddbcFInEeibjuLm5_lcNQ" name="descriptionKey" specification="_mYol0VInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mddbcVInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mddbclInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return id + DESCRIPTION_SUFFIX;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mddbc1InEeibjuLm5_lcNQ" name="descriptionKey" specification="_mc0iQ1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mddbdFInEeibjuLm5_lcNQ" name="object" type="_mcS90VInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mddbdVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return descriptionKey(object.getId());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mddbdlInEeibjuLm5_lcNQ" name="getDescription" specification="_mYol1FInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mddbd1InEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mddbeFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return message(descriptionKey(id));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mddbeVInEeibjuLm5_lcNQ" name="getDescription" specification="_mc1JUVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mddbelInEeibjuLm5_lcNQ" name="object" type="_mcS90VInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mddbe1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return message(descriptionKey(object));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mddbfFInEeibjuLm5_lcNQ" name="shortDescriptionKey" specification="_mYpM4FInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mddbfVInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mddbflInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return id + SHORT_DESCRIPTION_SUFFIX;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mddbf1InEeibjuLm5_lcNQ" name="getShortDescription" specification="_mYpM41InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mddbgFInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mddbgVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return message(shortDescriptionKey(id));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mddbglInEeibjuLm5_lcNQ" name="getShortDescription" specification="_mc1JVFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mddbg1InEeibjuLm5_lcNQ" name="object" type="_mcS90VInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mddbhFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getShortDescription(object.getId());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdeCgFInEeibjuLm5_lcNQ" name="rulerKey" specification="_mYpM5lInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdeCgVInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdeCglInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return id + RULER_SUFFIX;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdeCg1InEeibjuLm5_lcNQ" name="getRulerName" specification="_mYpz8FInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdeChFInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdeChVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return message(rulerKey(id));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdeChlInEeibjuLm5_lcNQ" name="containsKey" specification="_mYpz81InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdeCh1InEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdeCiFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return messageBundle.get(key) != null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdeCiVInEeibjuLm5_lcNQ" name="getKey" specification="_mYpz9lInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdeCilInEeibjuLm5_lcNQ" name="preferredKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdeCi1InEeibjuLm5_lcNQ" name="defaultKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdeCjFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (containsKey(preferredKey)) {&#xD;
         return preferredKey;&#xD;
     } else {&#xD;
         return defaultKey;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdepkFInEeibjuLm5_lcNQ" name="getBestDescription" specification="_mc1wYVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdepkVInEeibjuLm5_lcNQ" name="object" type="_mcS90VInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdepklInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getBestDescription(object.getId());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdepk1InEeibjuLm5_lcNQ" name="getBestDescription" specification="_mYqbAFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdeplFInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdeplVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String key = find(map(DESCRIPTION_KEYS, s -> id + s),&#xD;
         k -> containsKey(k), null);&#xD;
     return (key == null) ? id : message(key);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdepllInEeibjuLm5_lcNQ" name="getBestNameAndDescription" specification="_mc2XcFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdepl1InEeibjuLm5_lcNQ" name="named" type="_mcUzAVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdepmFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdepmVInEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getBestNameAndDescription(named.getNameKey());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdepmlInEeibjuLm5_lcNQ" name="getBestNameAndDescription" specification="_mYqbA1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdepm1InEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdepnFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mdepnVInEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (id != null &amp;&amp; id.endsWith(NAME_SUFFIX)) { // Temporary hack&#xD;
         id = id.substring(0, id.length() - NAME_SUFFIX.length());&#xD;
     }&#xD;
     String name = (containsKey(nameKey(id))) ? getName(id) : null;&#xD;
     String desc = null;&#xD;
     if (name == null) {&#xD;
         name = (containsKey(id)) ? message(id) : null;&#xD;
         if (name == null) name = id;&#xD;
     } else {&#xD;
         desc = getBestDescription(id);&#xD;
         if (id.equals(desc)) desc = null;&#xD;
     }&#xD;
     return new String[] { name, desc };&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdepnlInEeibjuLm5_lcNQ" name="getUnitLabel" specification="_mc2-gFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdepn1InEeibjuLm5_lcNQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdepoFInEeibjuLm5_lcNQ" name="typeId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdepoVInEeibjuLm5_lcNQ" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdepolInEeibjuLm5_lcNQ" name="nationId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdepo1InEeibjuLm5_lcNQ" name="roleId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdeppFInEeibjuLm5_lcNQ" name="extra" type="_mcH-sVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdeppVInEeibjuLm5_lcNQ" type="_mcH-sVInEeibjuLm5_lcNQ" direction="return"/>
                  <language>java</language>
                  <body>// Check for special role-specific key, which will not have a&#xD;
     // role argument.  These exist so we can avoid mentioning&#xD;
     // the role twice, e.g. &quot;Seasoned Scout Scout&quot;.&#xD;
     StringTemplate type;&#xD;
     String roleKey;&#xD;
     String baseKey = typeId + &quot;.&quot; + Role.getRoleSuffix(roleId);&#xD;
     if (containsKey(baseKey)) {&#xD;
         type = StringTemplate.template(baseKey)&#xD;
             .addAmount(&quot;%number%&quot;, number);&#xD;
         roleKey = null;&#xD;
     } else {&#xD;
         type = StringTemplate.template(nameKey(typeId))&#xD;
             .addAmount(&quot;%number%&quot;, number);&#xD;
         roleKey = (Role.isDefaultRoleId(roleId)) ? null : roleId;&#xD;
     }&#xD;
&#xD;
     StringTemplate ret;&#xD;
     if (name == null) {&#xD;
         if (nationId == null) {&#xD;
             if (roleKey == null) {&#xD;
                 if (extra == null) {&#xD;
                     // %type% | &quot;Free Colonist&quot;&#xD;
                     ret = type;&#xD;
                 } else {&#xD;
                     // %type% (%extra%) | &quot;Treasure Train (5000 gold)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .addStringTemplate(extra)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 }&#xD;
             } else {&#xD;
                 if (extra == null) {&#xD;
                     // %role% (%type%) | &quot;Soldier (Free Colonist)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .add(nameKey(roleKey))&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 } else {&#xD;
                     // %role% (%type%/%extra%) | &quot;Soldier (Free Colonist/50 muskets)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .add(nameKey(roleKey))&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;/&quot;)&#xD;
                         .addStringTemplate(extra)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 }&#xD;
             }&#xD;
         } else {&#xD;
             if (roleKey == null) {&#xD;
                 if (extra == null) {&#xD;
                     // %nation% %type% | &quot;Dutch Free Colonist&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .add(nameKey(nationId))&#xD;
                         .addName(&quot; &quot;)&#xD;
                         .addStringTemplate(type);&#xD;
                 } else {&#xD;
                     // %nation% %type% (%extra%) | &quot;Dutch Treasure Train (5000 gold)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .add(nameKey(nationId))&#xD;
                         .addName(&quot; &quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .addStringTemplate(extra)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 }&#xD;
             } else {&#xD;
                 if (extra == null) {&#xD;
                     // %nation% %role% (%type%) | &quot;Dutch Soldier (Free Colonist)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .add(nameKey(nationId))&#xD;
                         .addName(&quot; &quot;)&#xD;
                         .add(nameKey(roleKey))&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 } else {&#xD;
                     // %nation% %role% (%type%/%extra%) | &quot;Dutch Soldier (Free Colonist/50 muskets)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .add(nameKey(nationId))&#xD;
                         .addName(&quot; &quot;)&#xD;
                         .add(nameKey(roleKey))&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;/&quot;)&#xD;
                         .addStringTemplate(extra)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     } else {&#xD;
         if (nationId == null) {&#xD;
             if (roleKey == null) {&#xD;
                 if (extra == null) {&#xD;
                     // %name% (%type%) | &quot;Bob (Free Colonist)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .addName(name)&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 } else {&#xD;
                     // %name% (%type%/%extra%) | &quot;Moolah (Treasure Train/5000 gold)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .addName(name)&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;/&quot;)&#xD;
                         .addStringTemplate(extra)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 }&#xD;
             } else {&#xD;
                 if (extra == null) {&#xD;
                     // %name% (%role%/%type%) | &quot;Bob (Soldier/Free Colonist)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .addName(name)&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .add(nameKey(roleKey))&#xD;
                         .addName(&quot;/&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 } else {&#xD;
                     // %name% (%role%/%type%/%extra%) | &quot;Bob (Soldier/Free Colonist/50 muskets)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .addName(name)&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .add(nameKey(roleKey))&#xD;
                         .addName(&quot;/&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;/&quot;)&#xD;
                         .addStringTemplate(extra)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 }&#xD;
             }&#xD;
         } else {&#xD;
             if (roleKey == null) {&#xD;
                 if (extra == null) {&#xD;
                     // %name% (%nation% %type%) | &quot;Bob (Dutch Free Colonist)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .addName(name)&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .add(nameKey(nationId))&#xD;
                         .addName(&quot; &quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 } else {&#xD;
                     // %name% (%nation% %type%/%extra%) | &quot;Moolah (Dutch Treasure Train/5000 gold)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .addName(name)&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .add(nameKey(nationId))&#xD;
                         .addName(&quot; &quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;/&quot;)&#xD;
                         .addStringTemplate(extra)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 }&#xD;
             } else {&#xD;
                 if (extra == null) {&#xD;
                     // %name% (%nation% %role%/%type%) | &quot;Bob (Dutch Soldier/Free Colonist)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .addName(name)&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .add(nameKey(nationId))&#xD;
                         .addName(&quot; &quot;)&#xD;
                         .add(nameKey(roleKey))&#xD;
                         .addName(&quot;/&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 } else {&#xD;
                     // %name% (%nation% %role%/%type%/%extra%) | &quot;Bob (Dutch Soldier/Free Colonist/50 muskets)&quot;&#xD;
                     ret = StringTemplate.label(&quot;&quot;)&#xD;
                         .addName(name)&#xD;
                         .addName(&quot; (&quot;)&#xD;
                         .add(nameKey(nationId))&#xD;
                         .addName(&quot; &quot;)&#xD;
                         .add(nameKey(roleKey))&#xD;
                         .addName(&quot;/&quot;)&#xD;
                         .addStringTemplate(type)&#xD;
                         .addName(&quot;/&quot;)&#xD;
                         .addStringTemplate(extra)&#xD;
                         .addName(&quot;)&quot;);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdfQoFInEeibjuLm5_lcNQ" name="message" specification="_mYrCEVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdfQoVInEeibjuLm5_lcNQ" name="messageId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdfQolInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>// Check that all the values are correct.&#xD;
     if (messageId == null) {&#xD;
         throw new NullPointerException(&quot;Message id must not be null!&quot;);&#xD;
     }&#xD;
&#xD;
     // return key as value if there is no mapping found&#xD;
     String message = messageBundle.get(messageId);&#xD;
     if (message == null) return messageId;&#xD;
&#xD;
     // otherwise replace variables in the text&#xD;
     message = replaceChoices(message, null);&#xD;
     return message.trim();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdfQo1InEeibjuLm5_lcNQ" name="message" specification="_mc3lkFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdfQpFInEeibjuLm5_lcNQ" name="template" type="_mcH-sVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdfQpVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (template == null) return null;&#xD;
     String result = &quot;&quot;;&#xD;
     switch (template.getTemplateType()) {&#xD;
     case LABEL:&#xD;
         List&lt;StringTemplate> replacements = template.getReplacements();&#xD;
         if (replacements.isEmpty()) {&#xD;
             result = message(template.getId());&#xD;
         } else {&#xD;
             for (StringTemplate other : replacements) {&#xD;
                 result += template.getId() + message(other);&#xD;
             }&#xD;
             if (result.length() >= template.getId().length()) {&#xD;
                 result = result.substring(template.getId().length());&#xD;
             } else {&#xD;
                 logger.warning(&quot;incorrect use of template &quot; + template);&#xD;
             }&#xD;
         }&#xD;
         break;&#xD;
     case TEMPLATE:&#xD;
         if (containsKey(template.getId())) {&#xD;
             result = messageBundle.get(template.getId());&#xD;
         } else if (template.getDefaultId() != null) {&#xD;
             result = messageBundle.get(template.getDefaultId());&#xD;
         }&#xD;
         result = replaceChoices(result, template);&#xD;
         for (String key : template.getKeys()) {&#xD;
             result = result.replace(key,&#xD;
                                     message(template.getReplacement(key)));&#xD;
         }&#xD;
         break;&#xD;
     case KEY:&#xD;
         String key = messageBundle.get(template.getId());&#xD;
         result = (key == null) ? template.getId()&#xD;
             : replaceChoices(key, null);&#xD;
         break;&#xD;
     case NAME:&#xD;
     default:&#xD;
         result = template.getId();&#xD;
         break;&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdfQplInEeibjuLm5_lcNQ" name="replaceChoices" specification="_mc3lk1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdfQp1InEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdfQqFInEeibjuLm5_lcNQ" name="template" type="_mcH-sVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mdfQqVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int openChoice = 0;&#xD;
     int closeChoice = 0;&#xD;
     int highWaterMark = 0;&#xD;
     StringBuilder result = new StringBuilder();&#xD;
     while ((openChoice = input.indexOf(&quot;{{&quot;, highWaterMark)) >= 0) {&#xD;
         result.append(input.substring(highWaterMark, openChoice));&#xD;
         closeChoice = findMatchingBracket(input, openChoice + 2);&#xD;
         if (closeChoice &lt; 0) {&#xD;
             // no closing brackets found&#xD;
             logger.warning(&quot;Mismatched brackets: &quot; + input);&#xD;
             return result.toString();&#xD;
         }&#xD;
         highWaterMark = closeChoice + 2;&#xD;
         int colonIndex = input.indexOf(':', openChoice + 2);&#xD;
         if (colonIndex &lt; 0 || colonIndex > closeChoice) {&#xD;
             logger.warning(&quot;No tag found: &quot; + input);&#xD;
             continue;&#xD;
         }&#xD;
         String tag = input.substring(openChoice + 2, colonIndex);&#xD;
         int pipeIndex = input.indexOf('|', colonIndex + 1);&#xD;
         if (pipeIndex &lt; 0 || pipeIndex > closeChoice) {&#xD;
             logger.warning(&quot;No choices found: &quot; + input);&#xD;
             continue;&#xD;
         }&#xD;
         String selector = input.substring(colonIndex + 1, pipeIndex);&#xD;
         if (selector.isEmpty()) {&#xD;
             selector = &quot;default&quot;;&#xD;
         } else if (selector.startsWith(&quot;%&quot;) &amp;&amp; selector.endsWith(&quot;%&quot;)) {&#xD;
             if (template == null) {&#xD;
                 selector = &quot;default&quot;;&#xD;
             } else {&#xD;
                 StringTemplate replacement = template.getReplacement(selector);&#xD;
                 if (replacement == null) {&#xD;
                     logger.warning(&quot;Failed to find replacement for &quot; + selector);&#xD;
                     continue;&#xD;
                 } else {&#xD;
                     selector = message(replacement);&#xD;
                     Selector taggedSelector = getSelector(tag);&#xD;
                     if (taggedSelector != null) {&#xD;
                         selector = taggedSelector.getKey(selector, input);&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         } else {&#xD;
             Selector taggedSelector = getSelector(tag);&#xD;
             if (taggedSelector != null) {&#xD;
                 selector = taggedSelector.getKey(selector, input);&#xD;
             }&#xD;
         }&#xD;
         int keyIndex = input.indexOf(selector, pipeIndex + 1);&#xD;
         if (keyIndex &lt; 0 || keyIndex > closeChoice) {&#xD;
             // key not found, choice might be a key itself&#xD;
             String otherKey = input.substring(pipeIndex + 1, closeChoice);&#xD;
             if (otherKey.startsWith(&quot;%&quot;) &amp;&amp; otherKey.endsWith(&quot;%&quot;)&#xD;
                 &amp;&amp; template != null) {&#xD;
                 StringTemplate replacement = template.getReplacement(otherKey);&#xD;
                 if (replacement == null) {&#xD;
                     logger.warning(&quot;Failed to find replacement for &quot; + otherKey);&#xD;
                     continue;&#xD;
                 } else if (replacement.getTemplateType() == TemplateType.KEY) {&#xD;
                     otherKey = messageBundle.get(replacement.getId());&#xD;
                     keyIndex = otherKey.indexOf(&quot;{{&quot;);&#xD;
                     if (keyIndex &lt; 0) {&#xD;
                         // not a choice format&#xD;
                         result.append(otherKey);&#xD;
                     } else {&#xD;
                         keyIndex = otherKey.indexOf(selector, keyIndex);&#xD;
                         if (keyIndex &lt; 0) {&#xD;
                             logger.warning(&quot;Failed to find key &quot; + selector + &quot; in replacement &quot;&#xD;
                                            + replacement.getId());&#xD;
                             continue;&#xD;
                         } else {&#xD;
                             result.append(getChoice(otherKey, selector));&#xD;
                         }&#xD;
                     }&#xD;
                 } else {&#xD;
                     logger.warning(&quot;Choice substitution attempted, but template type was &quot;&#xD;
                                    + replacement.getTemplateType());&#xD;
                     continue;&#xD;
                 }&#xD;
             } else if (containsKey(otherKey)) {&#xD;
                 otherKey = getChoice(messageBundle.get(otherKey), selector);&#xD;
                 result.append(otherKey);&#xD;
             } else {&#xD;
                 logger.warning(&quot;Unknown key or untagged choice: '&quot; + otherKey&#xD;
                                + &quot;', selector was '&quot; + selector&#xD;
                                + &quot;', trying 'default' instead&quot;);&#xD;
                 int defaultStart = otherKey.indexOf(&quot;default=&quot;);&#xD;
                 if (defaultStart >= 0) {&#xD;
                     defaultStart += 8;&#xD;
                     int defaultEnd = otherKey.indexOf('|', defaultStart);&#xD;
                     String defaultChoice;&#xD;
                     if (defaultEnd &lt; 0) {&#xD;
                         defaultChoice = otherKey.substring(defaultStart);&#xD;
                     } else {&#xD;
                         defaultChoice = otherKey.substring(defaultStart, defaultEnd);&#xD;
                     }&#xD;
                     result.append(defaultChoice);&#xD;
                 } else {&#xD;
                     logger.warning(&quot;No default choice found.&quot;);&#xD;
                     continue;&#xD;
                 }&#xD;
             }&#xD;
         } else {&#xD;
             int start = keyIndex + selector.length() + 1;&#xD;
             int replacementIndex = input.indexOf('|', start);&#xD;
             int nextOpenIndex = input.indexOf(&quot;{{&quot;, start);&#xD;
             if (nextOpenIndex >= 0 &amp;&amp; nextOpenIndex &lt; replacementIndex) {&#xD;
                 replacementIndex = input.indexOf('|',&#xD;
                     findMatchingBracket(input, nextOpenIndex + 2) + 2);&#xD;
             }&#xD;
             int end = (replacementIndex &lt; 0&#xD;
                 || replacementIndex > closeChoice) ? closeChoice&#xD;
                 : replacementIndex;&#xD;
             String replacement = input.substring(start, end);&#xD;
             if (!replacement.contains(&quot;{{&quot;)) {&#xD;
                 result.append(replacement);&#xD;
             } else {&#xD;
                 result.append(replaceChoices(replacement, template));&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     result.append(input.substring(highWaterMark));&#xD;
     return result.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdfQqlInEeibjuLm5_lcNQ" name="getChoice" specification="_mYrpIFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdfQq1InEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdfQrFInEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdfQrVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int keyIndex = input.indexOf(key);&#xD;
     if (keyIndex &lt; 0) {&#xD;
         return null;&#xD;
     } else {&#xD;
         int start = keyIndex + key.length() + 1;&#xD;
         int end = input.indexOf('|', start);&#xD;
         if (end &lt; 0) {&#xD;
             end = input.indexOf(&quot;}}&quot;, start);&#xD;
             if (end &lt; 0) {&#xD;
                 logger.warning(&quot;Failed to find end of choice for key &quot; + key&#xD;
                                + &quot; in input &quot; + input);&#xD;
                 return null;&#xD;
             }&#xD;
         }&#xD;
         return input.substring(start, end);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_mdf3sFInEeibjuLm5_lcNQ" name="findMatchingBracket" specification="_mYrpJFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mdf3sVInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdf3slInEeibjuLm5_lcNQ" name="start">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mdf3s1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>char last = 0;&#xD;
     int level = 0;&#xD;
     for (int index = start; index &lt; input.length(); index++) {&#xD;
         switch(input.charAt(index)) {&#xD;
         case '{':&#xD;
             if (last == '{') {&#xD;
                 last = 0;&#xD;
                 level++;&#xD;
             } else {&#xD;
                 last = '{';&#xD;
             }&#xD;
             break;&#xD;
         case '}':&#xD;
             if (last == '}') {&#xD;
                 if (level == 0) {&#xD;
                     return index - 1;&#xD;
                 } else {&#xD;
                     last = 0;&#xD;
                     level--;&#xD;
                 }&#xD;
             } else {&#xD;
                 last = '}';&#xD;
             }&#xD;
             break;&#xD;
         default:&#xD;
             break;&#xD;
         }&#xD;
     }&#xD;
     // found no matching bracket&#xD;
     return -1;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_mYnXsFInEeibjuLm5_lcNQ" name="getSelector" visibility="private" isStatic="true" method="_mdbmQFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwOVInEeibjuLm5_lcNQ">
                    <body>Gets the Selector with the given tag.&#xD;
     *&#xD;
     * @param tag The tag to check.&#xD;
     * @return A suitable &lt;code>Selector&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYnXsVInEeibjuLm5_lcNQ" name="tag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mcWBIFInEeibjuLm5_lcNQ" type="_mYOWIFInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mYn-wFInEeibjuLm5_lcNQ" name="getLocale" isStatic="true" method="_mdcNXVInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXQlInEeibjuLm5_lcNQ">
                    <body>Get the &lt;code>Locale&lt;/code> corresponding to a given language name.&#xD;
     *&#xD;
     * Public as this is needed for language option processing and the&#xD;
     * initial locale setting.&#xD;
     *&#xD;
     * @param languageID An underscore separated language/country/variant tuple.&#xD;
     * @return The &lt;code>Locale&lt;/code> for the specified language.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYn-wVInEeibjuLm5_lcNQ" name="languageID">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mcz7MVInEeibjuLm5_lcNQ" type="_mcDGMVInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mYn-wlInEeibjuLm5_lcNQ" name="nameKey" isStatic="true" method="_mdc0YVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYn-w1InEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYn-xFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYn-xVInEeibjuLm5_lcNQ" name="getName" isStatic="true" method="_mdc0Z1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYn-xlInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYol0FInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYol0VInEeibjuLm5_lcNQ" name="descriptionKey" isStatic="true" method="_mddbcFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYol0lInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYol01InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYol1FInEeibjuLm5_lcNQ" name="getDescription" isStatic="true" method="_mddbdlInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYol1VInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYol1lInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYpM4FInEeibjuLm5_lcNQ" name="shortDescriptionKey" isStatic="true" method="_mddbfFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYpM4VInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYpM4lInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYpM41InEeibjuLm5_lcNQ" name="getShortDescription" isStatic="true" method="_mddbf1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYpM5FInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYpM5VInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYpM5lInEeibjuLm5_lcNQ" name="rulerKey" isStatic="true" method="_mdeCgFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYpM51InEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYpM6FInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYpz8FInEeibjuLm5_lcNQ" name="getRulerName" isStatic="true" method="_mdeCg1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYpz8VInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYpz8lInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYpz81InEeibjuLm5_lcNQ" name="containsKey" isStatic="true" method="_mdeChlInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXQ1InEeibjuLm5_lcNQ">
                    <body>Does the message bundle contain the given key?&#xD;
     *&#xD;
     * @param key The key &lt;code>String&lt;/code> to check.&#xD;
     * @return True if there is a message present with the given key.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYpz9FInEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYpz9VInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYpz9lInEeibjuLm5_lcNQ" name="getKey" isStatic="true" method="_mdeCiVInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXRFInEeibjuLm5_lcNQ">
                    <body>Returns the preferred key if it is contained in the message&#xD;
     * bundle and the default key otherwise. This should be used to&#xD;
     * select the most specific message key available.&#xD;
     *&#xD;
     * @param preferredKey a &lt;code>String&lt;/code> value&#xD;
     * @param defaultKey a &lt;code>String&lt;/code> value&#xD;
     * @return a &lt;code>String&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYpz91InEeibjuLm5_lcNQ" name="preferredKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYpz-FInEeibjuLm5_lcNQ" name="defaultKey">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYpz-VInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYqbAFInEeibjuLm5_lcNQ" name="getBestDescription" isStatic="true" method="_mdepk1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mYqbAVInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYqbAlInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYqbA1InEeibjuLm5_lcNQ" name="getBestNameAndDescription" isStatic="true" method="_mdepmlInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXRlInEeibjuLm5_lcNQ">
                    <body>Get the name and best description for a given identifier.&#xD;
     *&#xD;
     * Favour the .name form, but degrade gracefully if it is not present.&#xD;
     * If .name is present, also look for a description.&#xD;
     *&#xD;
     * @param id The identifier to look up.&#xD;
     * @return A 2-element array of name and description found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYqbBFInEeibjuLm5_lcNQ" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYqbBVInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mYqbBlInEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYrCEVInEeibjuLm5_lcNQ" name="message" isStatic="true" method="_mdfQoFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXSFInEeibjuLm5_lcNQ">
                    <body>Get the text mapping for a particular identifier in the&#xD;
     * default locale message bundle.  Returns the key as the value if&#xD;
     * there is no mapping found!&#xD;
     *&#xD;
     * @param messageId The key of the message to find.&#xD;
     * @return String text mapping or the key</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYrCElInEeibjuLm5_lcNQ" name="messageId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYrCE1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYrpIFInEeibjuLm5_lcNQ" name="getChoice" visibility="private" isStatic="true" method="_mdfQqlInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXS1InEeibjuLm5_lcNQ">
                    <body>Return the choice tagged with the given key, or null, if the&#xD;
     * given input string does not contain the key.&#xD;
     *&#xD;
     * @param input a &lt;code>String&lt;/code> value&#xD;
     * @param key a &lt;code>String&lt;/code> value&#xD;
     * @return a &lt;code>String&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYrpIVInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYrpIlInEeibjuLm5_lcNQ" name="key">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYrpI1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mYrpJFInEeibjuLm5_lcNQ" name="findMatchingBracket" visibility="private" isStatic="true" method="_mdf3sFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXTFInEeibjuLm5_lcNQ">
                    <body>Return the index of the matching pair of brackets, or -1 if&#xD;
     * none is found.&#xD;
     *&#xD;
     * @param input a &lt;code>String&lt;/code> value&#xD;
     * @param start an &lt;code>int&lt;/code> value&#xD;
     * @return an &lt;code>int&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mYrpJVInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYrpJlInEeibjuLm5_lcNQ" name="start">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mYrpJ1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcWBIVInEeibjuLm5_lcNQ" name="setGrammaticalNumber" isStatic="true" method="_mdbmQ1InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwOlInEeibjuLm5_lcNQ">
                    <body>Set the grammatical number rule.&#xD;
     *&#xD;
     * @param number a &lt;code>Number&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcWBIlInEeibjuLm5_lcNQ" name="number" type="_mYO9MVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcxe8FInEeibjuLm5_lcNQ" name="getMessageFileNames" visibility="private" isStatic="true" method="_mdbmRVInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwO1InEeibjuLm5_lcNQ">
                    <body>Get a list of candidate message file names for a given locale.&#xD;
     *&#xD;
     * @param locale The &lt;code>Locale&lt;/code> to generate file names for.&#xD;
     * @return A list of message file names.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcxe8VInEeibjuLm5_lcNQ" name="locale" type="_mcDGMVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcxe8lInEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mcxe81InEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcyGAFInEeibjuLm5_lcNQ" name="getModMessageFileNames" visibility="private" isStatic="true" method="_mdcNUFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwPFInEeibjuLm5_lcNQ">
                    <body>Get a list of candidate mod message file names for a given locale.&#xD;
     *&#xD;
     * @param locale The &lt;code>Locale&lt;/code> to generate file names for.&#xD;
     * @return A list of mod message file names.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcyGAVInEeibjuLm5_lcNQ" name="locale" type="_mcDGMVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcyGAlInEeibjuLm5_lcNQ" isOrdered="true" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mcyGA1InEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mcytEFInEeibjuLm5_lcNQ" name="loadMessageBundle" isStatic="true" method="_mdcNVFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwPVInEeibjuLm5_lcNQ">
                    <body>Load the message bundle for the given locale&#xD;
     *&#xD;
     * Error messages have to go to System.err as this routine is called&#xD;
     * before logging is enabled.&#xD;
     *&#xD;
     * @param locale The &lt;code>Locale&lt;/code> to set resources for.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcytEVInEeibjuLm5_lcNQ" name="locale" type="_mcDGMVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcytElInEeibjuLm5_lcNQ" name="loadMessages" isStatic="true" method="_mdcNVlInEeibjuLm5_lcNQ" raisedException="_mcRvsVInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdkwPlInEeibjuLm5_lcNQ">
                    <body>Loads messages from a resource file into the current message bundle.&#xD;
     *&#xD;
     * Public for the test suite.&#xD;
     *&#xD;
     * @param is The &lt;code>InputStream&lt;/code> to read from.&#xD;
     * @throws IOException</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mcytE1InEeibjuLm5_lcNQ" name="is" type="_mb7xcVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mczUIFInEeibjuLm5_lcNQ" name="loadModMessageBundle" isStatic="true" method="_mdcNWFInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXQFInEeibjuLm5_lcNQ">
                    <body>Load localized messages for all mods.&#xD;
     *&#xD;
     * We can not initially load resources from mods because not all&#xD;
     * mods can be loaded until the user mod directory is initialized,&#xD;
     * which depends on the command line processing, which in turn&#xD;
     * requires at least the basic localized message resources to be&#xD;
     * loaded.  So this routine is called separately when the mods are&#xD;
     * finally loaded.&#xD;
     *&#xD;
     * @param locale The &lt;code>Locale&lt;/code> to load resources for.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mczUIVInEeibjuLm5_lcNQ" name="locale" type="_mcDGMVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mczUIlInEeibjuLm5_lcNQ" name="loadActiveModMessageBundle" isStatic="true" method="_mdcNWlInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXQVInEeibjuLm5_lcNQ">
                    <body>Load messages specific to active mods.&#xD;
     *&#xD;
     * Called when the spec is updated with the selected mods.&#xD;
     *&#xD;
     * @param mods The list of &lt;code>FreeColModFile&lt;/code> for the active mods.&#xD;
     * @param locale The &lt;code>Locale&lt;/code> to load resources for.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mczUI1InEeibjuLm5_lcNQ" name="mods" type="_mcBRAVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mczUJFInEeibjuLm5_lcNQ" name="locale" type="_mcDGMVInEeibjuLm5_lcNQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mcz7MlInEeibjuLm5_lcNQ" name="nameKey" isStatic="true" method="_mdc0ZFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mcz7M1InEeibjuLm5_lcNQ" name="object" type="_mcS90VInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mcz7NFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mc0iQFInEeibjuLm5_lcNQ" name="getName" isStatic="true" method="_mdc0alInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mc0iQVInEeibjuLm5_lcNQ" name="named" type="_mcUzAVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mc0iQlInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mc0iQ1InEeibjuLm5_lcNQ" name="descriptionKey" isStatic="true" method="_mddbc1InEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mc0iRFInEeibjuLm5_lcNQ" name="object" type="_mcS90VInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mc1JUFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mc1JUVInEeibjuLm5_lcNQ" name="getDescription" isStatic="true" method="_mddbeVInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mc1JUlInEeibjuLm5_lcNQ" name="object" type="_mcS90VInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mc1JU1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mc1JVFInEeibjuLm5_lcNQ" name="getShortDescription" isStatic="true" method="_mddbglInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mc1JVVInEeibjuLm5_lcNQ" name="object" type="_mcS90VInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mc1wYFInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mc1wYVInEeibjuLm5_lcNQ" name="getBestDescription" isStatic="true" method="_mdepkFInEeibjuLm5_lcNQ">
                  <ownedParameter xmi:id="_mc1wYlInEeibjuLm5_lcNQ" name="object" type="_mcS90VInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mc1wY1InEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mc2XcFInEeibjuLm5_lcNQ" name="getBestNameAndDescription" isStatic="true" method="_mdepllInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXRVInEeibjuLm5_lcNQ">
                    <body>Get the name and best description for a given named object.&#xD;
     *&#xD;
     * Favour the .name form, but degrade gracefully if it is not present.&#xD;
     * If .name is present, also look for a description.&#xD;
     *&#xD;
     * @param named The &lt;code>Named&lt;/code> to look up.&#xD;
     * @return A 2-element array of name and description found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mc2XcVInEeibjuLm5_lcNQ" name="named" type="_mcUzAVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mc2XclInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mc2Xc1InEeibjuLm5_lcNQ" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mc2-gFInEeibjuLm5_lcNQ" name="getUnitLabel" isStatic="true" method="_mdepnlInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXR1InEeibjuLm5_lcNQ">
                    <body>Get a label for a collection of units given a name, type,&#xD;
     * number, nation, role and extra annotation.&#xD;
     *&#xD;
     * @param name An optional unit name.&#xD;
     * @param typeId The unit type identifier.&#xD;
     * @param number The number of units.&#xD;
     * @param nationId An optional nation identifier.&#xD;
     * @param roleId The unit role identifier.&#xD;
     * @param extra An optional extra annotation.&#xD;
     * @return A &lt;code>StringTemplate&lt;/code> to describe the given unit.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mc2-gVInEeibjuLm5_lcNQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mc2-glInEeibjuLm5_lcNQ" name="typeId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mc2-g1InEeibjuLm5_lcNQ" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mc2-hFInEeibjuLm5_lcNQ" name="nationId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mc2-hVInEeibjuLm5_lcNQ" name="roleId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mc2-hlInEeibjuLm5_lcNQ" name="extra" type="_mcH-sVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mc2-h1InEeibjuLm5_lcNQ" type="_mcH-sVInEeibjuLm5_lcNQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_mc3lkFInEeibjuLm5_lcNQ" name="message" isStatic="true" method="_mdfQo1InEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXSVInEeibjuLm5_lcNQ">
                    <body>Localizes a StringTemplate.&#xD;
     *&#xD;
     * @param template The &lt;code>StringTemplate&lt;/code> to localize.&#xD;
     * @return The localized string.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mc3lkVInEeibjuLm5_lcNQ" name="template" type="_mcH-sVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mc3lklInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_mc3lk1InEeibjuLm5_lcNQ" name="replaceChoices" visibility="private" isStatic="true" method="_mdfQplInEeibjuLm5_lcNQ">
                  <ownedComment xmi:id="_mdlXSlInEeibjuLm5_lcNQ">
                    <body>Replace all choice formats in the given string, using keys and&#xD;
     * replacement values from the given template, which may be null.&#xD;
     *&#xD;
     * A choice format is enclosed in double brackets and consists of&#xD;
     * a tag, followed by a colon, followed by an optional selector,&#xD;
     * followed by a pipe character, followed by one or several&#xD;
     * choices separated by pipe characters. If there is only one&#xD;
     * choice, it must be a message identifier or a&#xD;
     * variable. Otherwise, each choice consists of a key and a value&#xD;
     * separated by an assignment character. Example:&#xD;
     * &quot;{{tag:selector|key1=val1|key2=val2}}&quot;.&#xD;
     *&#xD;
     * @param input a &lt;code>String&lt;/code> value&#xD;
     * @param template a &lt;code>StringTemplate&lt;/code> value&#xD;
     * @return a &lt;code>String&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_mc3llFInEeibjuLm5_lcNQ" name="input">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_mc3llVInEeibjuLm5_lcNQ" name="template" type="_mcH-sVInEeibjuLm5_lcNQ"/>
                  <ownedParameter xmi:id="_mc3lllInEeibjuLm5_lcNQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcfLEFInEeibjuLm5_lcNQ" name="Category"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mdLHkFInEeibjuLm5_lcNQ" name="Player"/>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdqPwFInEeibjuLm5_lcNQ" name="" memberEnd="_mdqPwVInEeibjuLm5_lcNQ _mc7P8FInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdqPwVInEeibjuLm5_lcNQ" name="" type="_mYI2kFInEeibjuLm5_lcNQ" association="_mdqPwFInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdq20VInEeibjuLm5_lcNQ" name="" memberEnd="_mdq20lInEeibjuLm5_lcNQ _mc9FIFInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdq20lInEeibjuLm5_lcNQ" name="" type="_mYO9MVInEeibjuLm5_lcNQ" association="_mdq20VInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdsE8VInEeibjuLm5_lcNQ" name="" memberEnd="_mdsE8lInEeibjuLm5_lcNQ _mc9sMFInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdsE8lInEeibjuLm5_lcNQ" name="" type="_mYQyY1InEeibjuLm5_lcNQ" association="_mdsE8VInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdssAFInEeibjuLm5_lcNQ" name="" memberEnd="_mdssAVInEeibjuLm5_lcNQ _mc9sMlInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdssAVInEeibjuLm5_lcNQ" name="" type="_mYQyY1InEeibjuLm5_lcNQ" association="_mdssAFInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdssA1InEeibjuLm5_lcNQ" name="" memberEnd="_mdssBFInEeibjuLm5_lcNQ _mc9sNFInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdssBFInEeibjuLm5_lcNQ" name="" type="_mYQyY1InEeibjuLm5_lcNQ" association="_mdssA1InEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdtTEVInEeibjuLm5_lcNQ" name="" memberEnd="_mdtTElInEeibjuLm5_lcNQ _mc-TQFInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdtTElInEeibjuLm5_lcNQ" name="" type="_mYQyY1InEeibjuLm5_lcNQ" association="_mdtTEVInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdtTFFInEeibjuLm5_lcNQ" name="" memberEnd="_mdtTFVInEeibjuLm5_lcNQ _mc-TQlInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdtTFVInEeibjuLm5_lcNQ" name="" type="_mYQyY1InEeibjuLm5_lcNQ" association="_mdtTFFInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdt6IVInEeibjuLm5_lcNQ" name="" memberEnd="_mdt6IlInEeibjuLm5_lcNQ _mc-TRFInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdt6IlInEeibjuLm5_lcNQ" name="" type="_mYQyY1InEeibjuLm5_lcNQ" association="_mdt6IVInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdt6JFInEeibjuLm5_lcNQ" name="" memberEnd="_mdt6JVInEeibjuLm5_lcNQ _mdB9oFInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdt6JVInEeibjuLm5_lcNQ" name="" type="_mYYuMFInEeibjuLm5_lcNQ" association="_mdt6JFInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mduhMVInEeibjuLm5_lcNQ" name="" memberEnd="_mduhMlInEeibjuLm5_lcNQ _mdDy0FInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mduhMlInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mduhMVInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdvIQFInEeibjuLm5_lcNQ" name="" memberEnd="_mdvIQVInEeibjuLm5_lcNQ _mdFoAVInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdvIQVInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mdvIQFInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdvIQ1InEeibjuLm5_lcNQ" name="" memberEnd="_mdvIRFInEeibjuLm5_lcNQ _mdG2IFInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdvIRFInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mdvIQ1InEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdvvUVInEeibjuLm5_lcNQ" name="" memberEnd="_mdvvUlInEeibjuLm5_lcNQ _mdG2IlInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdvvUlInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mdvvUVInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdvvVFInEeibjuLm5_lcNQ" name="" memberEnd="_mdvvVVInEeibjuLm5_lcNQ _mdIEQFInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdvvVVInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mdvvVFInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdwWYVInEeibjuLm5_lcNQ" name="" memberEnd="_mdwWYlInEeibjuLm5_lcNQ _mdJSYVInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdwWYlInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mdwWYVInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdw9cFInEeibjuLm5_lcNQ" name="" memberEnd="_mdw9cVInEeibjuLm5_lcNQ _mdJ5clInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdw9cVInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mdw9cFInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdw9c1InEeibjuLm5_lcNQ" name="" memberEnd="_mdw9dFInEeibjuLm5_lcNQ _mdLuolInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdw9dFInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mdw9c1InEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdxkgVInEeibjuLm5_lcNQ" name="" memberEnd="_mdxkglInEeibjuLm5_lcNQ _mdM8wVInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdxkglInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mdxkgVInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdxkhFInEeibjuLm5_lcNQ" name="" memberEnd="_mdxkhVInEeibjuLm5_lcNQ _mdNj0VInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdxkhVInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mdxkhFInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdyLkVInEeibjuLm5_lcNQ" name="" memberEnd="_mdyLklInEeibjuLm5_lcNQ _mdOK4VInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdyLklInEeibjuLm5_lcNQ" name="" type="_mYajYFInEeibjuLm5_lcNQ" association="_mdyLkVInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdyyoFInEeibjuLm5_lcNQ" name="" memberEnd="_mdyyoVInEeibjuLm5_lcNQ _mdPZAFInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdyyoVInEeibjuLm5_lcNQ" name="" type="_mYmJkFInEeibjuLm5_lcNQ" association="_mdyyoFInEeibjuLm5_lcNQ"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_mdyyo1InEeibjuLm5_lcNQ" name="" memberEnd="_mdyypFInEeibjuLm5_lcNQ _mdScUFInEeibjuLm5_lcNQ">
                <ownedEnd xmi:id="_mdyypFInEeibjuLm5_lcNQ" name="" type="_mYmJkFInEeibjuLm5_lcNQ" association="_mdyyo1InEeibjuLm5_lcNQ"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_mXkO1VInEeibjuLm5_lcNQ" name="io">
              <packagedElement xmi:type="uml:Class" xmi:id="_mb-NsVInEeibjuLm5_lcNQ" name="FreeColXMLReader"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcTk4VInEeibjuLm5_lcNQ" name="FreeColDirectories"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcTk41InEeibjuLm5_lcNQ" name="FreeColDataFile"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcUL8VInEeibjuLm5_lcNQ" name="FreeColModFile"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcUL81InEeibjuLm5_lcNQ" name="Mods"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_mXq8gFInEeibjuLm5_lcNQ" name="model">
              <packagedElement xmi:type="uml:Package" xmi:id="_mXq8gVInEeibjuLm5_lcNQ" name="Region">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_mcHXoVInEeibjuLm5_lcNQ" name="RegionType"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_mXyRQFInEeibjuLm5_lcNQ" name="StringTemplate">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_mcVaEVInEeibjuLm5_lcNQ" name="TemplateType"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcGJgVInEeibjuLm5_lcNQ" name="Game"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcGwkVInEeibjuLm5_lcNQ" name="Player"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcGwk1InEeibjuLm5_lcNQ" name="Region"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcH-sVInEeibjuLm5_lcNQ" name="StringTemplate"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcH-s1InEeibjuLm5_lcNQ" name="UnitType"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_mcUzAVInEeibjuLm5_lcNQ" name="Named"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_mcUzA1InEeibjuLm5_lcNQ" name="Role"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_mcS90VInEeibjuLm5_lcNQ" name="ObjectWithId"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_mXf9ZFInEeibjuLm5_lcNQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_mXf9ZVInEeibjuLm5_lcNQ" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_mXjAsFInEeibjuLm5_lcNQ" name="logging">
          <packagedElement xmi:type="uml:Class" xmi:id="_mb6jUlInEeibjuLm5_lcNQ" name="Logger"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_mb8_kVInEeibjuLm5_lcNQ" name="Level"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_mb3gAFInEeibjuLm5_lcNQ" name="EnumMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mb4HEVInEeibjuLm5_lcNQ" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mb8YgVInEeibjuLm5_lcNQ" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_mcBRAVInEeibjuLm5_lcNQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcCfIFInEeibjuLm5_lcNQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcDGMVInEeibjuLm5_lcNQ" name="Locale"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcDGM1InEeibjuLm5_lcNQ" name="StringTokenizer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcE7YFInEeibjuLm5_lcNQ" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcE7YlInEeibjuLm5_lcNQ" name="Random"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mXkO0FInEeibjuLm5_lcNQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_mb7xcVInEeibjuLm5_lcNQ" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcPTcFInEeibjuLm5_lcNQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcQhkVInEeibjuLm5_lcNQ" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcQhk1InEeibjuLm5_lcNQ" name="FileInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcRIoVInEeibjuLm5_lcNQ" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcRvsVInEeibjuLm5_lcNQ" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_mcSWwVInEeibjuLm5_lcNQ" name="UnsupportedEncodingException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mcnt8FInEeibjuLm5_lcNQ" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_mcnt8VInEeibjuLm5_lcNQ" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_mXkO0VInEeibjuLm5_lcNQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_mXkO0lInEeibjuLm5_lcNQ" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_mXkO01InEeibjuLm5_lcNQ" name="stream">
          <packagedElement xmi:type="uml:Interface" xmi:id="_mb8_k1InEeibjuLm5_lcNQ" name="XMLStreamConstants"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_mb9moVInEeibjuLm5_lcNQ" name="XMLStreamException"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_mXxDIFInEeibjuLm5_lcNQ" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_mcSWw1InEeibjuLm5_lcNQ" name="UIManager"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_l81aoFInEeibjuLm5_lcNQ">
      <eAnnotations xmi:id="_l81aoVInEeibjuLm5_lcNQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_l81aolInEeibjuLm5_lcNQ" base_Package="_k2TQYFInEeibjuLm5_lcNQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mYLS0lInEeibjuLm5_lcNQ" base_Element="_mYLS0FInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_mYLS01InEeibjuLm5_lcNQ" base_Element="_mYLS0FInEeibjuLm5_lcNQ">
    <annotations xmi:id="_mYLS1FInEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mYMg8lInEeibjuLm5_lcNQ" base_Element="_mYMg8FInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_mYNIAFInEeibjuLm5_lcNQ" base_Element="_mYMg8FInEeibjuLm5_lcNQ">
    <annotations xmi:id="_mYNIAVInEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mYNvElInEeibjuLm5_lcNQ" base_Element="_mYNvEFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_mYNvE1InEeibjuLm5_lcNQ" base_Element="_mYNvEFInEeibjuLm5_lcNQ">
    <annotations xmi:id="_mYNvFFInEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mYPkQFInEeibjuLm5_lcNQ" base_Element="_mYO9MlInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mYQLVFInEeibjuLm5_lcNQ" base_Element="_mYQLUFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_mYQLVVInEeibjuLm5_lcNQ" base_Element="_mYQLUFInEeibjuLm5_lcNQ">
    <annotations xmi:id="_mYQLVlInEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mYVD0FInEeibjuLm5_lcNQ" base_Element="_mYUcwVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_mYVD0VInEeibjuLm5_lcNQ" base_Element="_mYUcwVInEeibjuLm5_lcNQ">
    <annotations xmi:id="_mYVD0lInEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mYVq4lInEeibjuLm5_lcNQ" base_Element="_mYVq4FInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_mYVq41InEeibjuLm5_lcNQ" base_Element="_mYVq4FInEeibjuLm5_lcNQ">
    <annotations xmi:id="_mYVq5FInEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mYXgF1InEeibjuLm5_lcNQ" base_Element="_mYXgFVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_mYYHIFInEeibjuLm5_lcNQ" base_Element="_mYXgFVInEeibjuLm5_lcNQ">
    <annotations xmi:id="_mYYHIVInEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mYZ8UlInEeibjuLm5_lcNQ" base_Element="_mYZ8UFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Annotations xmi:id="_mYZ8U1InEeibjuLm5_lcNQ" base_Element="_mYZ8UFInEeibjuLm5_lcNQ">
    <annotations xmi:id="_mYZ8VFInEeibjuLm5_lcNQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_mYrCEFInEeibjuLm5_lcNQ" base_Element="_mYqbA1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb4HEFInEeibjuLm5_lcNQ" base_Element="_mb3gAFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb4uIFInEeibjuLm5_lcNQ" base_Element="_mb4HEVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb4uIlInEeibjuLm5_lcNQ" base_Element="_mb4uIVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb7KYFInEeibjuLm5_lcNQ" base_Element="_mb6jUlInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb8YgFInEeibjuLm5_lcNQ" base_Element="_mb7xcVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb8_kFInEeibjuLm5_lcNQ" base_Element="_mb8YgVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb8_klInEeibjuLm5_lcNQ" base_Element="_mb8_kVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb9moFInEeibjuLm5_lcNQ" base_Element="_mb8_k1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb9molInEeibjuLm5_lcNQ" base_Element="_mb9moVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb-NsFInEeibjuLm5_lcNQ" base_Element="_mb9mo1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mb-NslInEeibjuLm5_lcNQ" base_Element="_mb-NsVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcB4EFInEeibjuLm5_lcNQ" base_Element="_mcBRAVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcDGMFInEeibjuLm5_lcNQ" base_Element="_mcCfIFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcDGMlInEeibjuLm5_lcNQ" base_Element="_mcDGMVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcDtQFInEeibjuLm5_lcNQ" base_Element="_mcDGM1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcE7YVInEeibjuLm5_lcNQ" base_Element="_mcE7YFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcGJgFInEeibjuLm5_lcNQ" base_Element="_mcE7YlInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcGwkFInEeibjuLm5_lcNQ" base_Element="_mcGJgVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcGwklInEeibjuLm5_lcNQ" base_Element="_mcGwkVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcHXoFInEeibjuLm5_lcNQ" base_Element="_mcGwk1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcH-sFInEeibjuLm5_lcNQ" base_Element="_mcHXoVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcH-slInEeibjuLm5_lcNQ" base_Element="_mcH-sVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcIlwFInEeibjuLm5_lcNQ" base_Element="_mcH-s1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcIlwlInEeibjuLm5_lcNQ" base_Element="_mcIlwVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcJM0FInEeibjuLm5_lcNQ" base_Element="_mcIlw1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcQhkFInEeibjuLm5_lcNQ" base_Element="_mcPTcFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcQhklInEeibjuLm5_lcNQ" base_Element="_mcQhkVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcRIoFInEeibjuLm5_lcNQ" base_Element="_mcQhk1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcRvsFInEeibjuLm5_lcNQ" base_Element="_mcRIoVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcSWwFInEeibjuLm5_lcNQ" base_Element="_mcRvsVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcSWwlInEeibjuLm5_lcNQ" base_Element="_mcSWwVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcS90FInEeibjuLm5_lcNQ" base_Element="_mcSWw1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcTk4FInEeibjuLm5_lcNQ" base_Element="_mcS90VInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcTk4lInEeibjuLm5_lcNQ" base_Element="_mcTk4VInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcUL8FInEeibjuLm5_lcNQ" base_Element="_mcTk41InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcUL8lInEeibjuLm5_lcNQ" base_Element="_mcUL8VInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcUzAFInEeibjuLm5_lcNQ" base_Element="_mcUL81InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcUzAlInEeibjuLm5_lcNQ" base_Element="_mcUzAVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcVaEFInEeibjuLm5_lcNQ" base_Element="_mcUzA1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcVaElInEeibjuLm5_lcNQ" base_Element="_mcVaEVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcfyIFInEeibjuLm5_lcNQ" base_Element="_mcfLEFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mckqoFInEeibjuLm5_lcNQ" genericsValue="String" base_Element="_mckDklInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mclRslInEeibjuLm5_lcNQ" genericsValue="String" base_Element="_mclRsVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mcmf0FInEeibjuLm5_lcNQ" genericsValue="Relation" base_Element="_mcl4wVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mcnG4FInEeibjuLm5_lcNQ" genericsValue="String" base_Element="_mcmf0lInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mcoVAFInEeibjuLm5_lcNQ" base_Element="_mcnt8VInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mcpjIFInEeibjuLm5_lcNQ" genericsValue="String" base_Element="_mco8ElInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mcz7MFInEeibjuLm5_lcNQ" genericsValue="FreeColModFile" base_Element="_mczUI1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Array xmi:id="_mc2XdFInEeibjuLm5_lcNQ" base_Element="_mc2XcFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mc73AVInEeibjuLm5_lcNQ" base_Element="_mc7P8FInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mc-6UFInEeibjuLm5_lcNQ" genericsValue="String, Number" base_Element="_mc-TRFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_mdAvgFInEeibjuLm5_lcNQ" base_Property="_mdAIc1InEeibjuLm5_lcNQ" siblings="_mdiT81InEeibjuLm5_lcNQ _mdi7AVInEeibjuLm5_lcNQ" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdAvgVInEeibjuLm5_lcNQ" base_Element="_mdAIc1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdBWkFInEeibjuLm5_lcNQ" base_Element="_mdAvglInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdBWk1InEeibjuLm5_lcNQ" base_Element="_mdBWkVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mdDLwFInEeibjuLm5_lcNQ" genericsValue="Relation" base_Element="_mdB9oFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdDLwlInEeibjuLm5_lcNQ" base_Element="_mdB9oFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Array xmi:id="_mdEZ4VInEeibjuLm5_lcNQ" base_Element="_mdDy0lInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdFA8FInEeibjuLm5_lcNQ" base_Element="_mdEZ41InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdFoAFInEeibjuLm5_lcNQ" base_Element="_mdFA8VInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdGPE1InEeibjuLm5_lcNQ" base_Element="_mdGPEFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mdHdMFInEeibjuLm5_lcNQ" genericsValue="String" base_Element="_mdG2IlInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdJSYFInEeibjuLm5_lcNQ" base_Element="_mdIrUVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdJ5cVInEeibjuLm5_lcNQ" base_Element="_mdJSY1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdKgglInEeibjuLm5_lcNQ" base_Element="_mdKggFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdLuoFInEeibjuLm5_lcNQ" base_Element="_mdLHkFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mdMVsFInEeibjuLm5_lcNQ" genericsValue="String" base_Element="_mdLuolInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Generics xmi:id="_mdNj0lInEeibjuLm5_lcNQ" genericsValue="String" base_Element="_mdNj0VInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Array xmi:id="_mdRONFInEeibjuLm5_lcNQ" base_Element="_mdROMlInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_mdiT9FInEeibjuLm5_lcNQ" base_Property="_mdiT81InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdi7AFInEeibjuLm5_lcNQ" base_Element="_mdiT81InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_mdi7AlInEeibjuLm5_lcNQ" base_Property="_mdi7AVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_mdi7A1InEeibjuLm5_lcNQ" base_Element="_mdi7AVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdq20FInEeibjuLm5_lcNQ" base_Element="_mdqPwFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdsE8FInEeibjuLm5_lcNQ" base_Element="_mdq20VInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdsE81InEeibjuLm5_lcNQ" base_Element="_mdsE8VInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdssAlInEeibjuLm5_lcNQ" base_Element="_mdssAFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdtTEFInEeibjuLm5_lcNQ" base_Element="_mdssA1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdtTE1InEeibjuLm5_lcNQ" base_Element="_mdtTEVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdt6IFInEeibjuLm5_lcNQ" base_Element="_mdtTFFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdt6I1InEeibjuLm5_lcNQ" base_Element="_mdt6IVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mduhMFInEeibjuLm5_lcNQ" base_Element="_mdt6JFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mduhM1InEeibjuLm5_lcNQ" base_Element="_mduhMVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdvIQlInEeibjuLm5_lcNQ" base_Element="_mdvIQFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdvvUFInEeibjuLm5_lcNQ" base_Element="_mdvIQ1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdvvU1InEeibjuLm5_lcNQ" base_Element="_mdvvUVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdwWYFInEeibjuLm5_lcNQ" base_Element="_mdvvVFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdwWY1InEeibjuLm5_lcNQ" base_Element="_mdwWYVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdw9clInEeibjuLm5_lcNQ" base_Element="_mdw9cFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdxkgFInEeibjuLm5_lcNQ" base_Element="_mdw9c1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdxkg1InEeibjuLm5_lcNQ" base_Element="_mdxkgVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdyLkFInEeibjuLm5_lcNQ" base_Element="_mdxkhFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdyLk1InEeibjuLm5_lcNQ" base_Element="_mdyLkVInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdyyolInEeibjuLm5_lcNQ" base_Element="_mdyyoFInEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Reference xmi:id="_mdzZsFInEeibjuLm5_lcNQ" base_Element="_mdyyo1InEeibjuLm5_lcNQ"/>
  <UMLLabProfile:Patch xmi:id="_nU-SQFInEeibjuLm5_lcNQ" base_Element="_mYO9MVInEeibjuLm5_lcNQ" patchText="@@ -1213,16 +1213,19 @@&#xA;  other %7D&#xA;+;%0D%0A&#xA; %0D%0A    pr&#xA;" conflicting="false"/>
</xmi:XMI>
