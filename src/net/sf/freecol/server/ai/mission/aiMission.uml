<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_3eUNMFJPEeiyW7NaN4qWdw" name="aiMission">
    <eAnnotations xmi:id="_4MdsoFJPEeiyW7NaN4qWdw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_4MeTsFJPEeiyW7NaN4qWdw" source="codegen">
        <details xmi:id="_4MeTsVJPEeiyW7NaN4qWdw" key="codegenDirectory" value="/COSC442-FinalProject/src"/>
        <details xmi:id="_6ZF8QFJPEeiyW7NaN4qWdw" key="AssociatedSourceCode" value="/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/BuildColonyMission.java;321199099/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/CashInTreasureTrainMission.java;3166413200/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/DefendSettlementMission.java;1596654847/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/IdleAtSettlementMission.java;3626091894/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/IndianBringGiftMission.java;2187567902/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/IndianDemandMission.java;3424531775/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/Mission.java;4052079693/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/MissionaryMission.java;294320928/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/PioneeringMission.java;336537545/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/PrivateerMission.java;2193338266/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/ScoutingMission.java;3044239320/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/UnitWanderMission.java;25880941/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/UnitSeekAndDestroyMission.java;3735563990/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/UnitWanderHostileMission.java;1645108079/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/TransportMission.java;84556450/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/WishRealizationMission.java;4160725047/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/mission/WorkInsideColonyMission.java;2789940159/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_5QEesFJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_5QEesVJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_5QEeslJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_5QEes1JPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_5QEetFJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_5QEetVJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_5QEetlJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_5QEet1JPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_5QFFwFJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_5PU30FJPEeiyW7NaN4qWdw" name="net">
      <packagedElement xmi:type="uml:Package" xmi:id="_5PU30VJPEeiyW7NaN4qWdw" name="sf">
        <packagedElement xmi:type="uml:Package" xmi:id="_5PU30lJPEeiyW7NaN4qWdw" name="freecol">
          <packagedElement xmi:type="uml:Package" xmi:id="_5PU301JPEeiyW7NaN4qWdw" name="server">
            <packagedElement xmi:type="uml:Package" xmi:id="_5PU31FJPEeiyW7NaN4qWdw" name="ai">
              <packagedElement xmi:type="uml:Package" xmi:id="_5PblgFJPEeiyW7NaN4qWdw" name="mission">
                <packagedElement xmi:type="uml:Class" xmi:id="_5TfmIFJPEeiyW7NaN4qWdw" name="BuildColonyMission">
                  <ownedComment xmi:id="_5xhl8FJPEeiyW7NaN4qWdw">
                    <body>Mission for building a &lt;code>Colony&lt;/code>.&#xD;
 *&#xD;
@see net.sf.freecol.common.model.Colony Colony</body>
                  </ownedComment>
                  <generalization xmi:id="_5qOrIFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5v3ZEFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yEYgFJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v3ZEVJPEeiyW7NaN4qWdw" value="Logger.getLogger(BuildColonyMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v3ZElJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v3ZE1JPEeiyW7NaN4qWdw" value="&quot;AI colony builder&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v3ZFFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw" association="_5yE_kVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5v4nMlJPEeiyW7NaN4qWdw" name="colonyValue" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v5OQFJPEeiyW7NaN4qWdw" name="TARGET_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v5OQVJPEeiyW7NaN4qWdw" value="&quot;target&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wrRYFJPEeiyW7NaN4qWdw" name="BuildColonyMission" specification="_5tYs0FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wrRYVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wrRYlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wrRY1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wrRZFJPEeiyW7NaN4qWdw" type="_5TfmIFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, target);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wrRZVJPEeiyW7NaN4qWdw" name="BuildColonyMission" specification="_5tZT4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wrRZlJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wrRZ1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wrRaFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wrRaVJPEeiyW7NaN4qWdw" type="_5TfmIFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wrRalJPEeiyW7NaN4qWdw" name="getColonyValue" specification="_5tZT51JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wrRa1JPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wrRbFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Player owner = getAIUnit().getUnit().getOwner();&#xD;
     return owner.getColonyValue(tile);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wr4cFJPEeiyW7NaN4qWdw" name="extractTarget" specification="_5tZ68FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wr4cVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wr4clJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wr4c1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (path == null) return null;&#xD;
     final Location loc = path.getLastNode().getLocation();&#xD;
     Tile tile = loc.getTile();&#xD;
     Colony colony = loc.getColony();&#xD;
     return (invalidReason(aiUnit, tile) == null) ? tile&#xD;
         : (invalidReason(aiUnit, colony) == null) ? colony&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wr4dFJPEeiyW7NaN4qWdw" name="scorePath" specification="_5taiAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wr4dVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wr4dlJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wr4d1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Location loc;&#xD;
     if (path == null&#xD;
         || !((loc = extractTarget(aiUnit, path)) instanceof Tile)) &#xD;
         return Integer.MIN_VALUE;&#xD;
&#xD;
     final Tile tile = (Tile)loc;&#xD;
     final Player player = aiUnit.getUnit().getOwner();&#xD;
     float turns = path.getTotalTurns() + 1.0f;&#xD;
     return player.getColonyValue(tile) / turns;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wr4eFJPEeiyW7NaN4qWdw" name="getGoalDecider" specification="_5taiBFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wr4eVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5wr4elJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5wr4e1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wr4fFJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wr4fVJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>GoalDecider gd = new GoalDecider() {&#xD;
             private PathNode bestPath = null;&#xD;
             private float bestValue = 0f;&#xD;
&#xD;
             @Override&#xD;
             public PathNode getGoal() { return bestPath; }&#xD;
             @Override&#xD;
             public boolean hasSubGoals() { return true; }&#xD;
             @Override&#xD;
             public boolean check(Unit u, PathNode path) {&#xD;
                 Location loc = extractTarget(aiUnit, path);&#xD;
                 if (loc instanceof Tile) {&#xD;
                     float value = scorePath(aiUnit, path);&#xD;
                     if (bestValue &lt; value) {&#xD;
                         bestValue = value;&#xD;
                         bestPath = path;&#xD;
                         return true;&#xD;
                     }&#xD;
                 }&#xD;
                 return false;&#xD;
             }&#xD;
         };&#xD;
     return (deferOK) ? GoalDeciders.getComposedGoalDecider(false, gd,&#xD;
         GoalDeciders.getOurClosestSettlementGoalDecider())&#xD;
         : gd;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wr4flJPEeiyW7NaN4qWdw" name="findTargetPath" specification="_5tbJEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wr4f1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wr4gFJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wr4gVJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wr4glJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (invalidAIUnitReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Location start = unit.getPathStartLocation();&#xD;
     final Unit carrier = unit.getCarrier();&#xD;
     final GoalDecider gd = getGoalDecider(aiUnit, deferOK);&#xD;
     final CostDecider standardCd&#xD;
         = CostDeciders.avoidSettlementsAndBlockingUnits();&#xD;
&#xD;
     // Try for something sensible nearby.&#xD;
     return unit.search(start, gd, standardCd, range, carrier);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wr4g1JPEeiyW7NaN4qWdw" name="findTarget" specification="_5tbJFVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wr4hFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wr4hVJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wr4hlJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wr4h1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>PathNode path = findTargetPath(aiUnit, range, deferOK);&#xD;
     return (path != null) ? extractTarget(aiUnit, path)&#xD;
         : Location.upLoc(findCircleTarget(aiUnit,&#xD;
                 getGoalDecider(aiUnit, deferOK), range*3, deferOK));&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wr4iFJPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5tbwJFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wsfgFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wsfgVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (!aiUnit.getUnit().getOwner().canBuildColonies())&#xD;
         ? &quot;player-not-a-colony-founder&quot;&#xD;
         : (!aiUnit.getUnit().getType().canBuildColony())&#xD;
         ? &quot;unit-not-a-colony-founder&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wsfglJPEeiyW7NaN4qWdw" name="invalidColonyReason" specification="_5tbwJ1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wsfg1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wsfhFJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wsfhVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidTargetReason(colony, aiUnit.getUnit().getOwner());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wsfhlJPEeiyW7NaN4qWdw" name="invalidTileReason" specification="_5tcXM1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wsfh1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wsfiFJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wsfiVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Player owner = aiUnit.getUnit().getOwner();&#xD;
     Player.NoClaimReason reason&#xD;
         = owner.canClaimToFoundSettlementReason(tile);&#xD;
     switch (reason) {&#xD;
     case NONE: case NATIVES:&#xD;
         return null;&#xD;
     default:&#xD;
         break;&#xD;
     }&#xD;
     return &quot;target-&quot; + reason;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wsfilJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5tc-QVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wsfi1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wsfjFJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wsfjVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null) ? reason&#xD;
         : (loc instanceof Colony)&#xD;
         ? invalidColonyReason(aiUnit, (Colony)loc)&#xD;
         : (loc instanceof Tile) &#xD;
         ? invalidTileReason(aiUnit, (Tile)loc)&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wsfjlJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5tdlUFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wsfj1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wsfkFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidMissionReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wtGkFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5TipcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wtGkVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return NORMAL_TRANSPORT_PRIORITY + 10;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wtGklJPEeiyW7NaN4qWdw" name="findTarget" specification="_5TjQg1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wtGk1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return findTarget(getAIUnit(), 5, true);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wtGlFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5Tj3klJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wtGlVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), target);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wtGllJPEeiyW7NaN4qWdw" name="doMission" specification="_5tdlVFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wtGl1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wtGmFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     final AIMain aiMain = getAIMain();&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     final Unit unit = getUnit();&#xD;
     final Player player = unit.getOwner();&#xD;
     final EuropeanAIPlayer euaip = getEuropeanAIPlayer();&#xD;
&#xD;
     boolean retarget = false;&#xD;
     String reason = invalidReason();&#xD;
     if (isTargetReason(reason)) {&#xD;
         // Allow target invalidation by another builder succeeding, and&#xD;
         // continue on to the target as an intermediate colony.&#xD;
         Colony c;&#xD;
         if (target instanceof Tile&#xD;
             &amp;&amp; (c = target.getColony()) != null&#xD;
             &amp;&amp; player.owns(c)) {&#xD;
             // Favour improving colony center.&#xD;
             Mission m = euaip.getPioneeringMission(aiUnit, c.getTile());&#xD;
             if (m != null) return lbDrop(lb, &quot;, improving with &quot;, m);&#xD;
             // Just go to the colony.&#xD;
             setTarget(c);&#xD;
             return lbRetarget(lb);&#xD;
         }&#xD;
     } else if (reason != null) {&#xD;
         return lbFail(lb, false, reason);&#xD;
     } else { // Target valid, but has it devalued?&#xD;
         if (target instanceof Tile) {&#xD;
             int newValue = getColonyValue((Tile)target);&#xD;
             if (newValue &lt; colonyValue) {&#xD;
                 reason = &quot;target tile &quot; + target.toShortString()&#xD;
                     + &quot; value &quot; + colonyValue + &quot; -> &quot; + newValue;&#xD;
                 retarget = true;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (retarget) return retargetMission(reason, lb);&#xD;
&#xD;
     for (;;) {&#xD;
         // Go there.&#xD;
         Unit.MoveType mt = travelToTarget(getTarget(),&#xD;
             CostDeciders.avoidSettlementsAndBlockingUnits(), lb);&#xD;
         switch (mt) {&#xD;
         case MOVE: // Arrived&#xD;
             break;&#xD;
&#xD;
         case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
         case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
             return lbWait(lb);&#xD;
&#xD;
         case MOVE_NO_ACCESS_EMBARK: case MOVE_NO_TILE:&#xD;
             return this;&#xD;
&#xD;
         default:&#xD;
             return lbMove(lb, mt);&#xD;
         }&#xD;
&#xD;
         lbAt(lb);&#xD;
         if (getTarget() instanceof Colony) {&#xD;
             // If arrived at the target colony it is time to retarget&#xD;
             // another building site, unless the existing one is small&#xD;
             // or nothing is found.&#xD;
             Colony colony = (Colony)getTarget();&#xD;
&#xD;
             // Improve colony center?&#xD;
             Mission m&#xD;
                 = euaip.getPioneeringMission(aiUnit, colony.getTile());&#xD;
             if (m != null) return lbDrop(lb, &quot;, improving with &quot;, m);&#xD;
&#xD;
             // Colony too small?&#xD;
             if (colony.getUnitCount() &lt;= 1) {&#xD;
                 setTarget(colony);&#xD;
                 return lbDrop(lb, &quot;, join small colony&quot;);&#xD;
             }&#xD;
&#xD;
             // Find a real tile target?&#xD;
             Location newTarget;&#xD;
             if ((newTarget = findTarget(aiUnit, 5, false)) != null) {&#xD;
                 setTarget(newTarget);&#xD;
                 return lbRetarget(lb);&#xD;
             }&#xD;
&#xD;
             // Go to the nearest smaller colony?&#xD;
             Colony best = null;&#xD;
             int bestValue = INFINITY;&#xD;
             for (Colony c : player.getColonies()) {&#xD;
                 if (c == colony) continue;&#xD;
                 if (c.getUnitCount() &lt; colony.getUnitCount()) continue;&#xD;
                 PathNode path = unit.findPath(c);&#xD;
                 if (path != null &amp;&amp; path.getTotalTurns() &lt; bestValue) {&#xD;
                     bestValue = path.getTotalTurns();&#xD;
                     best = c;&#xD;
                 }&#xD;
             }&#xD;
             if (best != null) {&#xD;
                 lb.add(&quot;, going to smaller &quot;, best.getUnitCount(), &quot;&lt;&quot;,&#xD;
                     colony.getUnitCount(), &quot; colony&quot;);&#xD;
                 setTarget(best);&#xD;
                 return lbRetarget(lb);&#xD;
             }&#xD;
&#xD;
             // Just join up then.&#xD;
             return lbDrop(lb, &quot;, joining&quot;);&#xD;
         }&#xD;
&#xD;
         if (!(getTarget() instanceof Tile)) {&#xD;
             return lbFail(lb, false, &quot;bogus target &quot;, getTarget());&#xD;
         }&#xD;
         Tile tile = (Tile)getTarget();&#xD;
         // Check that the unit has moves left, which are required&#xD;
         // for building.&#xD;
         if (unit.getMovesLeft() &lt;= 0) {&#xD;
             return lbWait(lb, &quot;, waiting to build at &quot;, tile);&#xD;
         }&#xD;
&#xD;
         if (tile.getOwner() == null) {&#xD;
             ; // All is well&#xD;
         } else if (player.owns(tile)) { // Already ours, clear users&#xD;
             Colony colony = (Colony)tile.getOwningSettlement();&#xD;
             if (colony != null) {&#xD;
                 logger.warning(&quot;Building on colony tile: &quot; + tile);&#xD;
                 return lbFail(lb, false, &quot;building on colony tile &quot;, tile);&#xD;
             }&#xD;
         } else {&#xD;
             // Not our tile, so claim it first.  Fail if someone&#xD;
             // has claimed the tile and will not sell.  Otherwise&#xD;
             // try to buy it or steal it.&#xD;
             int price = player.getLandPrice(tile);&#xD;
             boolean fail = price &lt; 0;&#xD;
             if (price > 0 &amp;&amp; !player.checkGold(price)) {&#xD;
                 if (randomInt(logger, &quot;Land gold?&quot;, getAIRandom(), 4) == 0) {&#xD;
                     lb.add(&quot;, &quot;);&#xD;
                     euaip.cheatGold(price, lb);&#xD;
                     lb.add(&quot; to buy &quot;, tile);&#xD;
                 }&#xD;
             }&#xD;
             if (price >= 0) {&#xD;
                 fail = !AIMessage.askClaimLand(tile, aiUnit,&#xD;
                     ((price == 0) ? 0 : (player.checkGold(price)) ? price&#xD;
                         : NetworkConstants.STEAL_LAND))&#xD;
                     || !player.owns(tile);&#xD;
             }&#xD;
             if (fail) return retargetMission(&quot;tile-claim-at-&quot; + tile, lb);&#xD;
             lb.add(&quot;, claimed colony tile&quot;);&#xD;
         }&#xD;
&#xD;
         // Log the colony values so we can improve things&#xD;
         if (logger.isLoggable(Level.FINE)) {&#xD;
             LogBuilder l2 = new LogBuilder(64);&#xD;
             l2.add(tag, &quot; score-at-foundation &quot;, tile, &quot;:&quot;);&#xD;
             for (Double d : player.getAllColonyValues(tile)) {&#xD;
                 l2.add(&quot; &quot;, d);&#xD;
             }&#xD;
             l2.log(logger, Level.FINE);&#xD;
         }&#xD;
         &#xD;
         // Clear to build the colony.&#xD;
         if (AIMessage.askBuildColony(aiUnit, Player.ASSIGN_SETTLEMENT_NAME)&#xD;
             &amp;&amp; tile.getColony() != null) {&#xD;
             Colony colony = tile.getColony();&#xD;
             AIColony aiColony = aiMain.getAIColony(colony);&#xD;
             aiColony.requestRearrange();&#xD;
             Mission m = euaip.getWorkInsideColonyMission(aiUnit, aiColony);&#xD;
             return lbDone(lb, m != null, colony);&#xD;
         }&#xD;
         return lbFail(lb, false, &quot;build at &quot;, tile);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wtGmVJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5teMZFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wtGmlJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (target != null) {&#xD;
         xw.writeAttribute(TARGET_TAG, target.getId());&#xD;
&#xD;
         if (colonyValue > 0) {&#xD;
             xw.writeAttribute(VALUE_TAG, colonyValue);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wtGm1JPEeiyW7NaN4qWdw" name="readAttributes" specification="_5tfagFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wtGnFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     target = xr.getLocationAttribute(getGame(), TARGET_TAG, false);&#xD;
&#xD;
     colonyValue = xr.getAttribute(VALUE_TAG, -1);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wtGnVJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5TkeoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wtGnlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wttoFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5TlFs1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wttoVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;buildColonyMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5TipcFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5wtGkFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5TipcVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5TjQg1JPEeiyW7NaN4qWdw" name="findTarget" method="_5wtGklJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tdlU1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Tj3klJPEeiyW7NaN4qWdw" name="invalidReason" method="_5wtGlFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5Tj3k1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5TkeoFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5wtGnVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5TkeoVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5TlFs1JPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5wttoFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xi0FFJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;buildColonyMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5TlFtFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tYs0FJPEeiyW7NaN4qWdw" name="BuildColonyMission" method="_5wrRYFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5tYs1FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5tYs1VJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xhl8VJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param target The target &lt;code>Location&lt;/code> for this mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tYs0VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tYs0lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tYs01JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tYs1lJPEeiyW7NaN4qWdw" type="_5TfmIFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tZT4FJPEeiyW7NaN4qWdw" name="BuildColonyMission" method="_5wrRZVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5tZT5FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5tZT5VJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xhl8lJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>BuildColonyMission&lt;/code> and reads the given&#xD;
     * element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tZT4VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tZT4lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tZT41JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tZT5lJPEeiyW7NaN4qWdw" type="_5TfmIFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tZT51JPEeiyW7NaN4qWdw" name="getColonyValue" visibility="private" method="_5wrRalJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xhl81JPEeiyW7NaN4qWdw">
                      <body>Get the colony value for a tile.&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to test.&#xD;
     * @return The colony value for this player.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tZT6FJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tZT6VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tZ68FJPEeiyW7NaN4qWdw" name="extractTarget" isStatic="true" method="_5wr4cFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xhl9FJPEeiyW7NaN4qWdw">
                      <body>Extract a valid target for this mission from a path.&#xD;
     *&#xD;
     * @param aiUnit A &lt;code>AIUnit&lt;/code> to perform the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to extract a target from,&#xD;
     *     (uses the unit location if null).&#xD;
     * @return A target for this mission, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tZ68VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tZ68lJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tZ681JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5taiAFJPEeiyW7NaN4qWdw" name="scorePath" isStatic="true" method="_5wr4dFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xhl9VJPEeiyW7NaN4qWdw">
                      <body>Gets the value of a path to a colony building site.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to build the colony.&#xD;
     * @param path The &lt;code>PathNode&lt;/code> to check.&#xD;
     * @return A score for the target.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5taiAVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5taiAlJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5taiA1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5taiBFJPEeiyW7NaN4qWdw" name="getGoalDecider" visibility="private" isStatic="true" method="_5wr4eFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xiNAFJPEeiyW7NaN4qWdw">
                      <body>Gets a &lt;code>GoalDecider&lt;/code> for finding the best colony&#xD;
     * &lt;code>Tile&lt;/code>, optionally falling back to the nearest colony.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that is searching.&#xD;
     * @param deferOK Enable colony fallback.&#xD;
     * @return A suitable &lt;code>GoalDecider&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5taiBVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5taiCFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5taiCVJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5taiBlJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5taiB1JPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tbJEFJPEeiyW7NaN4qWdw" name="findTargetPath" isStatic="true" method="_5wr4flJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xiNAVJPEeiyW7NaN4qWdw">
                      <body>Finds a site for a new colony.  Favour closer sites.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to execute this mission.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A path to the new target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tbJEVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tbJElJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tbJE1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tbJFFJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tbJFVJPEeiyW7NaN4qWdw" name="findTarget" isStatic="true" method="_5wr4g1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xiNAlJPEeiyW7NaN4qWdw">
                      <body>Finds a site for a new colony or a backup colony to go to.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to find a colony site with.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A new target for this mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tbwIFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tbwIVJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tbwIlJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tbwI1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tbwJFJPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5wr4iFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xiNA1JPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid with the unit,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tbwJVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tbwJlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tbwJ1JPEeiyW7NaN4qWdw" name="invalidColonyReason" visibility="private" isStatic="true" method="_5wsfglJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xi0EFJPEeiyW7NaN4qWdw">
                      <body>Why is this mission invalid with a given colony target?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param colony The potential target &lt;code>Colony&lt;/code>.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tcXMFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tcXMVJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tcXMlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tcXM1JPEeiyW7NaN4qWdw" name="invalidTileReason" visibility="private" isStatic="true" method="_5wsfhlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xi0EVJPEeiyW7NaN4qWdw">
                      <body>Why is this mission invalid with a given tile target?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param tile The potential target &lt;code>Tile&lt;/code>.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tcXNFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tcXNVJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tc-QFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tc-QVJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5wsfilJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xi0ElJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tc-QlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tc-Q1JPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tc-RFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tdlUFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5wsfjlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xi0E1JPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tdlUVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tdlUlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tdlVFJPEeiyW7NaN4qWdw" name="doMission" method="_5wtGllJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tdlVVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5teMYFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5teMZFJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5wtGmVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tezcFJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tfagFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5wtGm1JPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tfagVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5TqlQFJPEeiyW7NaN4qWdw" name="CashInTreasureTrainMission">
                  <ownedComment xmi:id="_5xi0FVJPEeiyW7NaN4qWdw">
                    <body>Mission for cashing in a treasure train.&#xD;
FIXME: acquire protection&#xD;
FIXME: Better avoidance of enemy units</body>
                  </ownedComment>
                  <generalization xmi:id="_5qVY0FJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5v51UFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yFmoVJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v51UVJPEeiyW7NaN4qWdw" value="Logger.getLogger(CashInTreasureTrainMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v51UlJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v6cYFJPEeiyW7NaN4qWdw" value="&quot;AI treasureTrain&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v6cYVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw" association="_5yFmpFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5v7qgFJPEeiyW7NaN4qWdw" name="TARGET_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v7qgVJPEeiyW7NaN4qWdw" value="&quot;target&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wttplJPEeiyW7NaN4qWdw" name="CashInTreasureTrainMission" specification="_5tgooFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wttp1JPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wttqFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wttqVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wttqlJPEeiyW7NaN4qWdw" type="_5TqlQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, target);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wttq1JPEeiyW7NaN4qWdw" name="CashInTreasureTrainMission" specification="_5thPtVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wttrFJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wttrVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wttrlJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wttr1JPEeiyW7NaN4qWdw" type="_5TqlQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wuUsFJPEeiyW7NaN4qWdw" name="assignCarrier" specification="_5th2w1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wuUsVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wuUslJPEeiyW7NaN4qWdw" type="_5qMO41JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final AIUnit aiUnit = getAIUnit();&#xD;
     final Unit unit = getUnit();&#xD;
     final Player player = unit.getOwner();&#xD;
     final Europe europe = player.getEurope();&#xD;
&#xD;
     List&lt;Unit> carriers = player.getCarriersForUnit(unit);&#xD;
     if (carriers.isEmpty()) return null;&#xD;
&#xD;
     // Pick the closest carrier and queue this unit.&#xD;
     final Location here = unit.getLocation();&#xD;
     int turns = Unit.MANY_TURNS;&#xD;
     Unit closest = null;&#xD;
     for (Unit c : carriers) {&#xD;
         int t = c.getTurnsToReach(here);&#xD;
         if (turns > t) {&#xD;
             turns = t;&#xD;
             closest = c;&#xD;
         }&#xD;
     }&#xD;
     final AIMain aiMain = getAIMain();&#xD;
     TransportMission tm;&#xD;
     AIUnit aiCarrier;&#xD;
     if (closest != null&#xD;
         &amp;&amp; (aiCarrier = aiMain.getAIUnit(closest)) != null&#xD;
         &amp;&amp; (tm = aiCarrier.getMission(TransportMission.class)) != null) {&#xD;
         setTarget(europe);&#xD;
         aiUnit.changeTransport(aiCarrier);&#xD;
         if (tm.forceCollection(aiUnit, lb)) {&#xD;
             lb.add(&quot; forced collection on &quot;, aiCarrier.getUnit());&#xD;
             return aiCarrier;&#xD;
         }&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wuUs1JPEeiyW7NaN4qWdw" name="extractTarget" specification="_5tid0FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wuUtFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wuUtVJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wuUtlJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (path == null) return null;&#xD;
     final Location loc = path.getLastNode().getLocation();&#xD;
     Colony colony = loc.getColony();&#xD;
     return (loc instanceof Europe&#xD;
         &amp;&amp; invalidReason(aiUnit, loc) == null) ? loc&#xD;
         : (colony != null&#xD;
             &amp;&amp; invalidReason(aiUnit, colony) == null) ? colony&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wuUt1JPEeiyW7NaN4qWdw" name="scorePath" specification="_5tjE4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wuUuFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wuUuVJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wuUulJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Location loc;&#xD;
     if (path == null&#xD;
         || (loc = extractTarget(aiUnit, path)) == null&#xD;
         || (loc instanceof Colony&#xD;
             &amp;&amp; invalidFullColonyReason(aiUnit, loc.getColony()) != null))&#xD;
         return Integer.MIN_VALUE;&#xD;
     return aiUnit.getUnit().getTreasureAmount() / (path.getTotalTurns()+1);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wuUu1JPEeiyW7NaN4qWdw" name="getGoalDecider" specification="_5tjE5FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wuUvFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5wuUvVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5wuUvlJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wuUv1JPEeiyW7NaN4qWdw" name="deferOK">
                      <eAnnotations xmi:id="_5wuUwFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5wuUwVJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wuUwlJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>GoalDecider gd = new GoalDecider() {&#xD;
             private PathNode bestPath = null;&#xD;
             private int bestValue = Integer.MIN_VALUE;&#xD;
             &#xD;
             @Override&#xD;
             public PathNode getGoal() { return bestPath; }&#xD;
             @Override&#xD;
             public boolean hasSubGoals() { return true; }&#xD;
             @Override&#xD;
             public boolean check(Unit u, PathNode path) {&#xD;
                 Location loc = extractTarget(aiUnit, path);&#xD;
                 if ((loc instanceof Colony&#xD;
                         &amp;&amp; invalidFullColonyReason(aiUnit, (Colony)loc)&#xD;
                         == null)&#xD;
                     || loc instanceof Europe) {&#xD;
                     int value = scorePath(aiUnit, path);&#xD;
                     if (bestValue &lt; value) {&#xD;
                         bestValue = value;&#xD;
                         bestPath = path;&#xD;
                         return true;&#xD;
                     }&#xD;
                 }&#xD;
                 return false;&#xD;
             }&#xD;
         };&#xD;
     return (deferOK) ? GoalDeciders.getComposedGoalDecider(false, gd,&#xD;
         GoalDeciders.getOurClosestSettlementGoalDecider())&#xD;
         : gd;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wuUw1JPEeiyW7NaN4qWdw" name="findTargetPath" specification="_5tjr9lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wuUxFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wuUxVJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wuUxlJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wuUx1JPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (invalidAIUnitReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Location start = unit.getPathStartLocation();&#xD;
     final Player player = unit.getOwner();&#xD;
     final Europe europe = player.getEurope();&#xD;
     final Unit carrier = unit.getCarrier();&#xD;
     final CostDecider standardCd&#xD;
         = CostDeciders.avoidSettlementsAndBlockingUnits();&#xD;
     PathNode path;&#xD;
&#xD;
     if (player.getNumberOfSettlements() &lt;= 0 || start == null) {&#xD;
         // No settlements or not on the map, so go straight to&#xD;
         // Europe.  If Europe does not exist then this mission is&#xD;
         // doomed.&#xD;
         return (europe == null) ? null&#xD;
             : unit.findPath(unit.getLocation(), europe, carrier,&#xD;
                             standardCd);&#xD;
     }&#xD;
&#xD;
     // Can the unit get to a cash in site?&#xD;
     return unit.search(start, getGoalDecider(aiUnit, deferOK),&#xD;
                        standardCd, range, carrier);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wuUyFJPEeiyW7NaN4qWdw" name="findTarget" specification="_5tkTAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wuUyVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wuUylJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wuUy1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wuUzFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>PathNode path = findTargetPath(aiUnit, range, deferOK);&#xD;
     return (path != null) ? extractTarget(aiUnit, path)&#xD;
         : Location.upLoc(findCircleTarget(aiUnit,&#xD;
                 getGoalDecider(aiUnit, deferOK), range*3, deferOK));&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wu7wFJPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5tk6EFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wu7wVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wu7wlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     if (reason != null) return reason;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     return (!unit.canCarryTreasure()) ? &quot;unit-cannot-carry-treasure&quot;&#xD;
         : (unit.getTreasureAmount() &lt;= 0) ? &quot;unit-treasure-nonpositive&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wu7w1JPEeiyW7NaN4qWdw" name="invalidFullColonyReason" specification="_5tk6E1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wu7xFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wu7xVJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wu7xlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidTargetReason(colony, &#xD;
         aiUnit.getUnit().getOwner());&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (!aiUnit.getUnit().canCashInTreasureTrain(colony.getTile()))&#xD;
         ? &quot;cashin-impossible-at-location&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wu7x1JPEeiyW7NaN4qWdw" name="invalidColonyReason" specification="_5tlhIFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wu7yFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wu7yVJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wu7ylJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidTargetReason(colony, aiUnit.getUnit().getOwner());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wu7y1JPEeiyW7NaN4qWdw" name="invalidEuropeReason" specification="_5tlhJFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wu7zFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wu7zVJPEeiyW7NaN4qWdw" name="europe" type="_5qS8kVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wu7zlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidTargetReason(europe, aiUnit.getUnit().getOwner());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wu7z1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5tmIMlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wu70FJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wu70VJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wu70lJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (loc instanceof Colony)&#xD;
         ? invalidColonyReason(aiUnit, (Colony)loc)&#xD;
         : (loc instanceof Europe)&#xD;
         ? invalidEuropeReason(aiUnit, (Europe)loc)&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wvi0FJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5tmvQFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wvi0VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wvi0lJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidMissionReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wvi01JPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5TtBgFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wvi1FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getUnit().getTreasureAmount();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wvi1VJPEeiyW7NaN4qWdw" name="findTarget" specification="_5TtokVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wvi1lJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return findTarget(getAIUnit(), 20, true);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wvi11JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5TtolVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wvi2FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), target);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wvi2VJPEeiyW7NaN4qWdw" name="doMission" specification="_5tmvRFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wvi2lJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wvi21JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (isTargetReason(reason)) {&#xD;
         return retargetMission(reason, lb);&#xD;
     } else if (reason != null) {&#xD;
         return lbFail(lb, false, reason);&#xD;
     }&#xD;
&#xD;
     for (;;) {&#xD;
         // Go to the target.&#xD;
         final Unit unit = getUnit();&#xD;
         Unit.MoveType mt = travelToTarget(getTarget(),&#xD;
             CostDeciders.avoidSettlementsAndBlockingUnits(), lb);&#xD;
         switch (mt) {&#xD;
         case MOVE: // Arrived&#xD;
             break;&#xD;
&#xD;
         case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
         case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
             return lbWait(lb);&#xD;
&#xD;
         case MOVE_NO_ACCESS_EMBARK: case MOVE_NO_TILE:&#xD;
             return this;&#xD;
&#xD;
         default:&#xD;
             return lbMove(lb, mt);&#xD;
         }&#xD;
&#xD;
         // Cash in now if:&#xD;
         // - already in Europe&#xD;
         // - or can never get there&#xD;
         // - it is free to transport the treasure&#xD;
         // - or there is no potential carrier to get the treasure to there&#xD;
         // Otherwise, it is better to send to Europe.&#xD;
         lbAt(lb);&#xD;
         final AIUnit aiUnit = getAIUnit();&#xD;
         final Europe europe = getUnit().getOwner().getEurope();&#xD;
         if (unit.canCashInTreasureTrain()) {&#xD;
             AIUnit aiCarrier = null;&#xD;
             boolean cashin = unit.isInEurope()&#xD;
                 || europe == null&#xD;
                 || unit.getTransportFee() == 0;&#xD;
             if (!cashin &amp;&amp; aiUnit.getTransport() == null) {&#xD;
                 cashin = assignCarrier(lb) == null;&#xD;
             }&#xD;
             if (cashin) return (AIMessage.askCashInTreasureTrain(aiUnit))&#xD;
                             ? lbDone(lb, false, &quot;cashed in&quot;)&#xD;
                             : lbFail(lb, false, &quot;cashin&quot;);&#xD;
         }&#xD;
         return retargetMission(&quot;transport expected&quot;, lb);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wvi3FJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5tnWVFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wvi3VJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (target != null) {&#xD;
         xw.writeAttribute(TARGET_TAG, target.getId());&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wvi3lJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5tn9Y1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wvi31JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
     &#xD;
     target = xr.getLocationAttribute(getGame(), TARGET_TAG, false);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wvi4FJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5Tu2sFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wvi4VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wvi4lJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5TvdwlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wvi41JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;cashInTreasureTrainMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5TtBgFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5wvi01JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5TtBgVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5TtokVJPEeiyW7NaN4qWdw" name="findTarget" method="_5wvi1VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tmvQ1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5TtolVJPEeiyW7NaN4qWdw" name="invalidReason" method="_5wvi11JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5TuPoFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Tu2sFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5wvi4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5Tu2sVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5TvdwlJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5wvi4lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkCM1JPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;cashInTreasureTrainMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5Tvdw1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tgooFJPEeiyW7NaN4qWdw" name="CashInTreasureTrainMission" method="_5wttplJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5thPslJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5thPs1JPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xjbIFJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param target The target &lt;code>Location&lt;/code> for this mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tgooVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5thPsFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5thPsVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5thPtFJPEeiyW7NaN4qWdw" type="_5TqlQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5thPtVJPEeiyW7NaN4qWdw" name="CashInTreasureTrainMission" method="_5wttq1JPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5th2wFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5th2wVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xjbIVJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>CashInTreasureTrainMission&lt;/code> and reads&#xD;
     * the given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5thPtlJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5thPt1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5thPuFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5th2wlJPEeiyW7NaN4qWdw" type="_5TqlQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5th2w1JPEeiyW7NaN4qWdw" name="assignCarrier" visibility="private" method="_5wuUsFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xjbIlJPEeiyW7NaN4qWdw">
                      <body>Assign a carrier for this treasure.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return A suitable carrier &lt;code>AIUnit&lt;/code>, to which this unit&#xD;
     *     has been queued for transport.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5th2xFJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5th2xVJPEeiyW7NaN4qWdw" type="_5qMO41JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tid0FJPEeiyW7NaN4qWdw" name="extractTarget" isStatic="true" method="_5wuUs1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xjbI1JPEeiyW7NaN4qWdw">
                      <body>Extract a valid target for this mission from a path.&#xD;
     *&#xD;
     * @param aiUnit A &lt;code>AIUnit&lt;/code> to perform the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to extract a target from,&#xD;
     *     (uses the unit location if null).&#xD;
     * @return A target for this mission, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tid0VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tid0lJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tid01JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tjE4FJPEeiyW7NaN4qWdw" name="scorePath" isStatic="true" method="_5wuUt1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xjbJFJPEeiyW7NaN4qWdw">
                      <body>Evaluate a potential cashin mission for a given unit and&#xD;
     * path.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to do the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to take to the target.&#xD;
     * @return A score for the proposed mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tjE4VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tjE4lJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tjE41JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tjE5FJPEeiyW7NaN4qWdw" name="getGoalDecider" visibility="private" isStatic="true" method="_5wuUu1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xjbJVJPEeiyW7NaN4qWdw">
                      <body>Makes a goal decider that checks cash in sites.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to search with.&#xD;
     * @param deferOK Keep track of the nearest colonies to use as a&#xD;
     *     fallback destination.&#xD;
     * @return A suitable &lt;code>GoalDecider&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tjE5VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5tjr8lJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5tjr81JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tjr8FJPEeiyW7NaN4qWdw" name="deferOK">
                      <eAnnotations xmi:id="_5tjr9FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5tjr9VJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tjr8VJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tjr9lJPEeiyW7NaN4qWdw" name="findTargetPath" visibility="private" isStatic="true" method="_5wuUw1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xjbJlJPEeiyW7NaN4qWdw">
                      <body>Find a suitable cash in location for this unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to execute this mission.&#xD;
     * @param range The maximum number of moves to search.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A &lt;code>PathNode&lt;/code> to the target, or null if not found&#xD;
     *     which includes the case when Europe should be preferred (because&#xD;
     *     the unit can not get there by itself).</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tjr91JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tjr-FJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tjr-VJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tjr-lJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tkTAFJPEeiyW7NaN4qWdw" name="findTarget" isStatic="true" method="_5wuUyFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xjbJ1JPEeiyW7NaN4qWdw">
                      <body>Finds a suitable cashin target for the supplied unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @param range The maximum number of moves to search.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A &lt;code>PathNode&lt;/code> to the target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tkTAVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tkTAlJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tkTA1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tkTBFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tk6EFJPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5wu7wFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xjbKFJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid with the unit,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tk6EVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tk6ElJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tk6E1JPEeiyW7NaN4qWdw" name="invalidFullColonyReason" visibility="private" isStatic="true" method="_5wu7w1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xjbKVJPEeiyW7NaN4qWdw">
                      <body>Why is this mission invalid with a given colony target, given that&#xD;
     * intermediate colonies are excluded.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param colony The potential target &lt;code>Colony&lt;/code>.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tk6FFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tk6FVJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tk6FlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tlhIFJPEeiyW7NaN4qWdw" name="invalidColonyReason" visibility="private" isStatic="true" method="_5wu7x1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xjbKlJPEeiyW7NaN4qWdw">
                      <body>Why is this mission invalid with a given colony target, given that&#xD;
     * intermediate colonies are included.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param colony The potential target &lt;code>Colony&lt;/code>.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tlhIVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tlhIlJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tlhI1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tlhJFJPEeiyW7NaN4qWdw" name="invalidEuropeReason" visibility="private" isStatic="true" method="_5wu7y1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkCMFJPEeiyW7NaN4qWdw">
                      <body>Why is this mission invalid with a given Europe target?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param europe The potential target &lt;code>Europe&lt;/code>.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tlhJVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tmIMFJPEeiyW7NaN4qWdw" name="europe" type="_5qS8kVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tmIMVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tmIMlJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5wu7z1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkCMVJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tmIM1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tmINFJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tmINVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tmvQFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5wvi0FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkCMlJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tmvQVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tmvQlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tmvRFJPEeiyW7NaN4qWdw" name="doMission" method="_5wvi2VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tmvRVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tnWUFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tnWVFJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5wvi3FJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tnWVVJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tn9Y1JPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5wvi3lJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tn9ZFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5T1kYFJPEeiyW7NaN4qWdw" name="DefendSettlementMission">
                  <ownedComment xmi:id="_5xkCNFJPEeiyW7NaN4qWdw">
                    <body>Mission for defending a &lt;code>Settlement&lt;/code>.</body>
                  </ownedComment>
                  <generalization xmi:id="_5qctkFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5v8RkFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yGNsVJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v8RkVJPEeiyW7NaN4qWdw" value="Logger.getLogger(DefendSettlementMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v8RklJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v8Rk1JPEeiyW7NaN4qWdw" value="&quot;AI defender&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v84oVJPEeiyW7NaN4qWdw" name="MAX_TURNS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v84olJPEeiyW7NaN4qWdw" value="20"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v84o1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw" association="_5yG0wVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5v-GxFJPEeiyW7NaN4qWdw" name="SETTLEMENT_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v-GxVJPEeiyW7NaN4qWdw" value="&quot;settlement&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wwJ5FJPEeiyW7NaN4qWdw" name="DefendSettlementMission" specification="_5tpykFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wwJ5VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wwJ5lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wwJ51JPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wwJ6FJPEeiyW7NaN4qWdw" type="_5T1kYFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, settlement);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wwJ6VJPEeiyW7NaN4qWdw" name="DefendSettlementMission" specification="_5tqZoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wwJ6lJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wwJ61JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wwJ7FJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wwJ7VJPEeiyW7NaN4qWdw" type="_5T1kYFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5www8FJPEeiyW7NaN4qWdw" name="extractTarget" specification="_5trAsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5www8VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5www8lJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5www81JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (path == null) return null;&#xD;
     final Location loc = path.getLastNode().getLocation();&#xD;
     Settlement settlement = loc.getSettlement();&#xD;
     return (invalidReason(aiUnit, settlement) == null) ? settlement&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5www9FJPEeiyW7NaN4qWdw" name="scorePath" specification="_5trAtFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5www9VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5www9lJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5www91JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Location loc = extractTarget(aiUnit, path);&#xD;
     return (loc instanceof Settlement)&#xD;
         ? aiUnit.getAIOwner().adjustMission(aiUnit, path,&#xD;
             DefendSettlementMission.class,&#xD;
             (int)(1000 * ((Settlement)loc).getDefenceRatio()&#xD;
                 / (path.getTotalTurns() + 1)))&#xD;
         : Integer.MIN_VALUE;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5www-FJPEeiyW7NaN4qWdw" name="getGoalDecider" specification="_5trnwlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5www-VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5www-lJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5www-1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5www_FJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return new GoalDecider() {&#xD;
             private PathNode bestPath = null;&#xD;
             private int bestValue = Integer.MIN_VALUE;&#xD;
             &#xD;
             @Override&#xD;
             public PathNode getGoal() { return bestPath; }&#xD;
             @Override&#xD;
             public boolean hasSubGoals() { return true; }&#xD;
             @Override&#xD;
             public boolean check(Unit u, PathNode path) {&#xD;
                 int value = scorePath(aiUnit, path);&#xD;
                 if (bestValue &lt; value) {&#xD;
                     bestValue = value;&#xD;
                     bestPath = path;&#xD;
                     return true;&#xD;
                 }&#xD;
                 return false;&#xD;
             }&#xD;
         };&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5www_VJPEeiyW7NaN4qWdw" name="findTargetPath" specification="_5tsO0FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5www_lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5www_1JPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wwxAFJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wwxAVJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (invalidAIUnitReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Location start = unit.getPathStartLocation();&#xD;
&#xD;
     return unit.search(start, getGoalDecider(aiUnit),&#xD;
                        CostDeciders.avoidSettlementsAndBlockingUnits(),&#xD;
                        range, unit.getCarrier());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wwxAlJPEeiyW7NaN4qWdw" name="findTarget" specification="_5tsO1VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wwxA1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wwxBFJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wwxBVJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5wwxBlJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>PathNode path = findTargetPath(aiUnit, range, deferOK);&#xD;
     return (path != null) ? extractTarget(aiUnit, path) : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wwxB1JPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5ts14VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wwxCFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wwxCVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     if (reason != null) return reason;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final CombatModel cm = unit.getGame().getCombatModel();&#xD;
     return (cm.getDefencePower(null, unit) &lt;= 0.0f) ? &quot;unit-not-defender&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wwxClJPEeiyW7NaN4qWdw" name="invalidSettlementReason" specification="_5ts15FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wwxC1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wwxDFJPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wwxDVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidTargetReason(settlement, aiUnit.getUnit().getOwner());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wxYAFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5tuEAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wxYAVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wxYAlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (aiUnit.getUnit().getOwner().getNumberOfSettlements() &lt;= 0)&#xD;
         ? Mission.TARGETNOTFOUND&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wxYA1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5tuEA1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wxYBFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wxYBVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wxYBlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (loc instanceof Settlement)&#xD;
         ? invalidSettlementReason(aiUnit, (Settlement)loc)&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wxYB1JPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5T4AoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wxYCFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return (getTransportDestination() == null) ? 0&#xD;
         : NORMAL_TRANSPORT_PRIORITY + 5;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wxYCVJPEeiyW7NaN4qWdw" name="findTarget" specification="_5T4ntFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wxYClJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return findTarget(getAIUnit(), 4, true);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wxYC1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5T5Ow1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wxYDFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), getTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wxYDVJPEeiyW7NaN4qWdw" name="doMission" specification="_5turEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wxYDlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wxYD1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (isTargetReason(reason)) {&#xD;
         return retargetMission(reason, lb);&#xD;
     } else if (reason != null) {&#xD;
         return lbFail(lb, false, reason);&#xD;
     }&#xD;
&#xD;
     // Go to the target!&#xD;
     final Unit unit = getUnit();&#xD;
     Unit.MoveType mt = travelToTarget(getTarget(),&#xD;
         CostDeciders.avoidSettlementsAndBlockingUnits(), lb);&#xD;
     switch (mt) {&#xD;
     case MOVE: // Arrived&#xD;
         break;&#xD;
&#xD;
     case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
     case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
         return lbWait(lb);&#xD;
&#xD;
     case MOVE_NO_ACCESS_EMBARK: case MOVE_NO_TILE:&#xD;
         return this;&#xD;
&#xD;
     default:&#xD;
         return lbMove(lb, mt);&#xD;
     }&#xD;
&#xD;
     // Check if the mission should change?&#xD;
     // Change to supporting the settlement if the size is marginal.&#xD;
     final AIMain aiMain = getAIMain();&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     Mission m = null;&#xD;
     if (getTarget() instanceof Colony) {&#xD;
         Colony colony = (Colony)getTarget();&#xD;
         if (unit.isInColony()&#xD;
             || (unit.isPerson() &amp;&amp; colony.getUnitCount() &lt; 1)) {&#xD;
             m = getEuropeanAIPlayer().getWorkInsideColonyMission(aiUnit,&#xD;
                 aiMain.getAIColony(colony));&#xD;
             return lbDone(lb, m != null, &quot;bolster &quot;, colony);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Anything more to do?&#xD;
     switch (unit.getState()) {&#xD;
     case FORTIFIED:  return lbWait(lb, &quot;, fortified&quot;);&#xD;
     case FORTIFYING: return lbWait(lb, &quot;, fortifying&quot;);&#xD;
     default: break;&#xD;
     }&#xD;
&#xD;
     // Check if the settlement is badly defended.  If so, try to fortify.&#xD;
     Settlement settlement = (Settlement)getTarget();&#xD;
     int defenderCount = 0, fortifyCount = 0;&#xD;
     List&lt;Unit> units = settlement.getUnitList();&#xD;
     units.addAll(settlement.getTile().getUnitList());&#xD;
     for (Unit u : units) {&#xD;
         AIUnit aiu = getAIMain().getAIUnit(u);&#xD;
         if (invalidMissionReason(aiu) == null) {&#xD;
             defenderCount++;&#xD;
             switch (u.getState()) {&#xD;
             case FORTIFIED: case FORTIFYING: fortifyCount++; break;&#xD;
             default: break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (defenderCount &lt;= 2 || fortifyCount &lt;= 1) {&#xD;
         return (!unit.checkSetState(UnitState.FORTIFYING))&#xD;
             ? lbWait(lb, &quot;, waiting to fortify at &quot;, settlement)&#xD;
             : (AIMessage.askChangeState(aiUnit, UnitState.FORTIFYING)&#xD;
                 &amp;&amp; unit.getState() == UnitState.FORTIFYING)&#xD;
             ? lbWait(lb, &quot;, now fortifying at &quot;, settlement)&#xD;
             : lbFail(lb, false, &quot;, fortify failed at &quot;, settlement);&#xD;
     }&#xD;
&#xD;
     // The target is well enough defended.  See if the unit&#xD;
     // should attack a nearby hostile unit.  Remember to prevent a&#xD;
     // sole unit attacking because if it loses, the settlement&#xD;
     // will collapse (and the combat model does not handle that).&#xD;
     if (!unit.isOffensiveUnit()) {&#xD;
         return lbFail(lb, false, &quot;not-offensive-unit&quot;);&#xD;
     }&#xD;
&#xD;
     final CombatModel cm = unit.getGame().getCombatModel();&#xD;
     Unit bestTarget = null;&#xD;
     double bestDifference = Double.MIN_VALUE;&#xD;
     Direction bestDirection = null;&#xD;
     for (Direction d : Direction.getRandomDirections(&quot;defendSettlements&quot;,&#xD;
             logger, getAIRandom())) {&#xD;
         Tile t = unit.getTile().getNeighbourOrNull(d);&#xD;
         if (t == null) continue;&#xD;
         Unit defender = t.getFirstUnit();&#xD;
         if (defender != null&#xD;
             &amp;&amp; defender.getOwner().atWarWith(unit.getOwner())&#xD;
             &amp;&amp; unit.getMoveType(d).isAttack()) {&#xD;
             Unit enemyUnit = t.getDefendingUnit(unit);&#xD;
             double enemyAttack = cm.getOffencePower(enemyUnit, unit);&#xD;
             double weAttack = cm.getOffencePower(unit, enemyUnit);&#xD;
             double enemyDefend = cm.getDefencePower(unit, enemyUnit);&#xD;
             double weDefend = cm.getDefencePower(enemyUnit, unit);&#xD;
             double difference = weAttack / (weAttack + enemyDefend)&#xD;
                 - enemyAttack / (enemyAttack + weDefend);&#xD;
             if (difference > bestDifference) {&#xD;
                 if (difference > 0 || weAttack > enemyDefend) {&#xD;
                     bestDifference = difference;&#xD;
                     bestTarget = enemyUnit;&#xD;
                     bestDirection = d;&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Attack if a target is available.&#xD;
     if (bestTarget != null) {&#xD;
         AIMessage.askAttack(getAIUnit(), bestDirection);&#xD;
         return lbAttack(lb, bestTarget);&#xD;
     }&#xD;
&#xD;
     return lbWait(lb, &quot;, alert at &quot;, getTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wx_EFJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5tvSIlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wx_EVJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (target != null) {&#xD;
         xw.writeAttribute(SETTLEMENT_TAG, target.getId());&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wx_ElJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5twgQFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wx_E1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     target = xr.getAttribute(getGame(), SETTLEMENT_TAG,&#xD;
                              Settlement.class, (Settlement)null);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wx_FFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5T6c4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wx_FVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wx_FlJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5T7D8lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wx_F1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;defendSettlementMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5T4AoFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5wxYB1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5T4nsFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5T4ntFJPEeiyW7NaN4qWdw" name="findTarget" method="_5wxYCVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tuEB1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5T5Ow1JPEeiyW7NaN4qWdw" name="invalidReason" method="_5wxYC1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5T510FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5T6c4FJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5wx_FFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5T6c4VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5T7D8lJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5wx_FlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xlQUFJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;defendSettlementMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5T7D81JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tpykFJPEeiyW7NaN4qWdw" name="DefendSettlementMission" method="_5wwJ5FJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5tpylFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5tpylVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xkpQFJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission&#xD;
     *        is created for.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> to defend.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tpykVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tpyklJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tpyk1JPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tpyllJPEeiyW7NaN4qWdw" type="_5T1kYFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tqZoFJPEeiyW7NaN4qWdw" name="DefendSettlementMission" method="_5wwJ6VJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5tqZpFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5tqZpVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xkpQVJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>DefendSettlementMission&lt;/code> and reads&#xD;
     * the given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tqZoVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tqZolJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tqZo1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tqZplJPEeiyW7NaN4qWdw" type="_5T1kYFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5trAsFJPEeiyW7NaN4qWdw" name="extractTarget" isStatic="true" method="_5www8FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkpQlJPEeiyW7NaN4qWdw">
                      <body>Extract a valid target for this mission from a path.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to perform the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to extract a target from.&#xD;
     * @return A target for a &lt;code>DefendSettlementMission&lt;/code>, or null&#xD;
     *     if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5trAsVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5trAslJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5trAs1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5trAtFJPEeiyW7NaN4qWdw" name="scorePath" isStatic="true" method="_5www9FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkpQ1JPEeiyW7NaN4qWdw">
                      <body>Evaluate allocating a unit to the defence of a settlement.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that is to defend.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to take to the settlement.&#xD;
     * @return A value for such a mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5trAtVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5trnwFJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5trnwVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5trnwlJPEeiyW7NaN4qWdw" name="getGoalDecider" visibility="private" isStatic="true" method="_5www-FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkpRFJPEeiyW7NaN4qWdw">
                      <body>Gets a &lt;code>GoalDecider&lt;/code> for finding the best colony&#xD;
     * &lt;code>Tile&lt;/code>, optionally falling back to the nearest colony.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that is searching.&#xD;
     * @return A suitable &lt;code>GoalDecider&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5trnw1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5trnxVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5trnxlJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5trnxFJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tsO0FJPEeiyW7NaN4qWdw" name="findTargetPath" isStatic="true" method="_5www_VJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkpRVJPEeiyW7NaN4qWdw">
                      <body>Finds a path to the best nearby settlement to defend.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to execute this mission.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A path to the new target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tsO0VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tsO0lJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tsO01JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tsO1FJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tsO1VJPEeiyW7NaN4qWdw" name="findTarget" isStatic="true" method="_5wwxAlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkpRlJPEeiyW7NaN4qWdw">
                      <body>Finds a path to the best nearby settlement to defend.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that is searching.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Enables deferral (not implemented in this mission).&#xD;
     * @return A suitable target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tsO1lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tsO11JPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5tsO2FJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5ts14FJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ts14VJPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5wwxB1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkpR1JPEeiyW7NaN4qWdw">
                      <body>Why would a DefendSettlementMission be invalid with the given unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid with the unit,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ts14lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ts141JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ts15FJPEeiyW7NaN4qWdw" name="invalidSettlementReason" visibility="private" isStatic="true" method="_5wwxClJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkpSFJPEeiyW7NaN4qWdw">
                      <body>Why is this mission invalid with a given settlement target?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param settlement The potential target &lt;code>Settlement&lt;/code>.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ts15VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ttc8FJPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ttc8VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tuEAFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5wxYAFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkpSVJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tuEAVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tuEAlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tuEA1JPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5wxYA1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xkpSlJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tuEBFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tuEBVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tuEBlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5turEFJPEeiyW7NaN4qWdw" name="doMission" method="_5wxYDVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5turEVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5turElJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tvSIlJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5wx_EFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tvSI1JPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5twgQFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5wx_ElJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5twgQVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5UAjgFJPEeiyW7NaN4qWdw" name="IdleAtSettlementMission">
                  <ownedComment xmi:id="_5xlQUVJPEeiyW7NaN4qWdw">
                    <body>Mission for idling in a settlement.</body>
                  </ownedComment>
                  <generalization xmi:id="_5qhmEFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5v-t0FJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yHb0FJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v_U4FJPEeiyW7NaN4qWdw" value="Logger.getLogger(IdleAtSettlementMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v_U4VJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v_U4lJPEeiyW7NaN4qWdw" value="&quot;AI idler&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wymIFJPEeiyW7NaN4qWdw" name="IdleAtSettlementMission" specification="_5ty8gFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wymIVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wymIlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wymI1JPEeiyW7NaN4qWdw" type="_5UAjgFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, null);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wymJFJPEeiyW7NaN4qWdw" name="IdleAtSettlementMission" specification="_5tzjkFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wymJVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wymJlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wymJ1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wymKFJPEeiyW7NaN4qWdw" type="_5UAjgFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wymKVJPEeiyW7NaN4qWdw" name="isSafe" specification="_5UBKkFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wymKlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Unit unit = getUnit();&#xD;
     return unit.isInEurope() || !unit.hasTile()&#xD;
         || unit.getTile().hasSettlement();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wymK1JPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5UBxoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wzNMFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return MINIMUM_TRANSPORT_PRIORITY;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wzNMVJPEeiyW7NaN4qWdw" name="getTarget" specification="_5UCYslJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wzNMlJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return (isSafe()) ? null : findTarget();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wzNM1JPEeiyW7NaN4qWdw" name="findTarget" specification="_5UC_wFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wzNNFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (isSafe()) return null;&#xD;
&#xD;
     final Unit unit = getAIUnit().getUnit();&#xD;
     PathNode path = unit.findOurNearestOtherSettlement();&#xD;
     return (path == null) ? null&#xD;
         : Location.upLoc(path.getLastNode().getLocation());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wzNNVJPEeiyW7NaN4qWdw" name="isOneTime" specification="_5UDm0FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wzNNlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return true;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wzNN1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5UDm1VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wzNOFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidAIUnitReason(getAIUnit());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wzNOVJPEeiyW7NaN4qWdw" name="doMission" specification="_5t0xsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wzNOlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wzNO1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (reason != null) return lbFail(lb, false, reason);&#xD;
&#xD;
     // If safe, do nothing but do not use lbWait in case a useful&#xD;
     // mission is found.&#xD;
     if (isSafe()) {&#xD;
         lb.add(&quot;, idling&quot;);&#xD;
         return lbAt(lb);&#xD;
     }&#xD;
&#xD;
     Location target = getTarget();&#xD;
     if (target == null) {&#xD;
         // Just make a random moves if no target can be found.&#xD;
         moveRandomlyTurn(tag);&#xD;
         return lbWait(lb);&#xD;
     }&#xD;
&#xD;
     Unit.MoveType mt = travelToTarget(getTarget(), null, lb);&#xD;
     switch (mt) {&#xD;
     case MOVE: // Arrived&#xD;
         break;&#xD;
&#xD;
     case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
     case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
         return lbWait(lb);&#xD;
&#xD;
     case MOVE_NO_ACCESS_EMBARK: case MOVE_NO_TILE:&#xD;
         return this;&#xD;
&#xD;
     default:&#xD;
         return lbMove(lb, mt);&#xD;
     }&#xD;
&#xD;
     return lbAt(lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wz0QFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5UEN5FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wz0QVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wz0QlJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5UE081JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wz0Q1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;idleAtSettlementMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5UBKkFJPEeiyW7NaN4qWdw" name="isSafe" visibility="private" method="_5wymKVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xlQVFJPEeiyW7NaN4qWdw">
                      <body>Is the unit in a safe location where it can idle, or should it move?&#xD;
     *&#xD;
     * @return True if the unit is safe.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5UBKkVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UBxoFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5wymK1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5UBxoVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UCYslJPEeiyW7NaN4qWdw" name="getTarget" method="_5wzNMVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5tzjl1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UC_wFJPEeiyW7NaN4qWdw" name="findTarget" method="_5wzNM1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t0Ko1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UDm0FJPEeiyW7NaN4qWdw" name="isOneTime" method="_5wzNNVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5UDm0VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UDm1VJPEeiyW7NaN4qWdw" name="invalidReason" method="_5wzNN1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5UEN4FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UEN5FJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5wz0QFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5UEN5VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UE081JPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5wz0QlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xl3YFJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;idleAtSettlementMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5UE09FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ty8gFJPEeiyW7NaN4qWdw" name="IdleAtSettlementMission" method="_5wymIFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5ty8g1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5ty8hFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xlQUlJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ty8gVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ty8glJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ty8hVJPEeiyW7NaN4qWdw" type="_5UAjgFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tzjkFJPEeiyW7NaN4qWdw" name="IdleAtSettlementMission" method="_5wymJFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5tzjlFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5tzjlVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xlQU1JPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>IdleAtSettlementMission&lt;/code> and reads the&#xD;
     * given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5tzjkVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tzjklJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tzjk1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5tzjllJPEeiyW7NaN4qWdw" type="_5UAjgFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5tzjmFJPEeiyW7NaN4qWdw" name="setTarget">
                    <ownedParameter xmi:id="_5tzjmVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t0xsFJPEeiyW7NaN4qWdw" name="doMission" method="_5wzNOVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t0xsVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t0xslJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5UHRMFJPEeiyW7NaN4qWdw" name="IndianBringGiftMission">
                  <ownedComment xmi:id="_5xl3YVJPEeiyW7NaN4qWdw">
                    <body>Mission for bringing a gift to a specified player.&#xD;
 *&#xD;
The mission has three different tasks to perform:&#xD;
&lt;ol>&#xD;
&lt;li>Get the gift (goods) from the {@link IndianSettlement} that owns the&#xD;
unit.&#xD;
&lt;li>Transport this gift to the given {@link Colony}.&#xD;
&lt;li>Complete the mission by delivering the gift.&#xD;
&lt;/ol></body>
                  </ownedComment>
                  <generalization xmi:id="_5qlQcFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5v_U41JPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yHb01JPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v_U5FJPEeiyW7NaN4qWdw" value="Logger.getLogger(IndianBringGiftMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v_U5VJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5v_78FJPEeiyW7NaN4qWdw" value="&quot;AI native gifter&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5v_78VJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yIC4VJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5v_78lJPEeiyW7NaN4qWdw" name="collected" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wAjAFJPEeiyW7NaN4qWdw" name="COLLECTED_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wAjAVJPEeiyW7NaN4qWdw" value="&quot;collected&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wAjAlJPEeiyW7NaN4qWdw" name="COLONY_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wAjA1JPEeiyW7NaN4qWdw" value="&quot;colony&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wz0RFJPEeiyW7NaN4qWdw" name="IndianBringGiftMission" specification="_5t1_0FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wz0RVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wz0RlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wz0R1JPEeiyW7NaN4qWdw" name="target" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wz0SFJPEeiyW7NaN4qWdw" type="_5UHRMFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, target);&#xD;
&#xD;
     this.collected = hasGift();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5wz0SVJPEeiyW7NaN4qWdw" name="IndianBringGiftMission" specification="_5t2m4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5wz0SlJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wz0S1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wz0TFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5wz0TVJPEeiyW7NaN4qWdw" type="_5UHRMFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w0bUFJPEeiyW7NaN4qWdw" name="hasGift" specification="_5UIfUFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w0bUVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getUnit().hasGoodsCargo();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w0bUlJPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5t2m51JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w0bU1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w0bVFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     IndianSettlement home;&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : ((home = aiUnit.getUnit().getHomeIndianSettlement()) == null&#xD;
             || home.isDisposed())&#xD;
         ? &quot;home-destroyed&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w0bVVJPEeiyW7NaN4qWdw" name="invalidColonyReason" specification="_5t3N8VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w0bVlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w0bV1JPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w0bWFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidTargetReason(colony);&#xD;
     if (reason != null) return reason;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Player owner = unit.getOwner();&#xD;
     Player targetPlayer = colony.getOwner();&#xD;
     switch (owner.getStance(targetPlayer)) {&#xD;
     case UNCONTACTED: case WAR: case CEASE_FIRE:&#xD;
         return &quot;bad-stance&quot;;&#xD;
     case PEACE: case ALLIANCE:&#xD;
         Tension tension = unit.getHomeIndianSettlement()&#xD;
             .getAlarm(targetPlayer);&#xD;
         if (tension != null &amp;&amp; tension.getLevel()&#xD;
             .compareTo(Tension.Level.HAPPY) > 0) return &quot;unhappy&quot;;&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w0bWVJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5t31AFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w0bWlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w0bW1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidMissionReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w1CYFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5t31A1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w1CYVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w1CYlJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w1CY1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null) ? reason&#xD;
         : (loc instanceof Colony)&#xD;
         ? invalidColonyReason(aiUnit, (Colony)loc)&#xD;
         : (loc instanceof IndianSettlement)&#xD;
         ? invalidTargetReason(loc, aiUnit.getUnit().getOwner())&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w1CZFJPEeiyW7NaN4qWdw" name="getTransportDestination" specification="_5UJGYFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w1CZVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w1CZlJPEeiyW7NaN4qWdw" name="getTarget" specification="_5UJtcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w1CZ1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return (this.collected) ? this.colony&#xD;
         : getUnit().getHomeIndianSettlement();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w1pcFJPEeiyW7NaN4qWdw" name="setTarget" specification="_5t4cElJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w1pcVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>if (target instanceof Colony) {&#xD;
         this.colony = (Colony)target;&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w1pclJPEeiyW7NaN4qWdw" name="findTarget" specification="_5UJtdFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w1pc1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return getTarget();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w1pdFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5UKUg1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w1pdVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), this.colony);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w1pdlJPEeiyW7NaN4qWdw" name="doMission" specification="_5t5DJFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w1pd1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w1peFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (reason != null) return lbFail(lb, false, reason);&#xD;
&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     final Unit unit = getUnit();&#xD;
     final IndianSettlement is = unit.getHomeIndianSettlement();&#xD;
&#xD;
     while (!this.collected) {&#xD;
         Unit.MoveType mt = travelToTarget(getTarget(), null, lb);&#xD;
         switch (mt) {&#xD;
         case MOVE: // Arrived&#xD;
             break;&#xD;
&#xD;
         case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
         case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
             return lbWait(lb);&#xD;
&#xD;
         case MOVE_NO_TILE:&#xD;
             return this;&#xD;
         &#xD;
         case ATTACK_SETTLEMENT: case ATTACK_UNIT: // A blockage!&#xD;
             Location blocker = resolveBlockage(aiUnit, getTarget());&#xD;
             if (blocker != null&#xD;
                 &amp;&amp; AIMessage.askAttack(aiUnit, unit.getTile()&#xD;
                     .getDirection(blocker.getTile()))) {&#xD;
                 return lbAttack(lb, blocker);&#xD;
             }&#xD;
             moveRandomly(tag, null);&#xD;
             continue;&#xD;
&#xD;
         default:&#xD;
             return lbMove(lb, mt);&#xD;
         }&#xD;
&#xD;
         // Load the goods.&#xD;
         lbAt(lb);&#xD;
         Goods gift = is.getRandomGift(getAIRandom());&#xD;
         if (gift == null) return lbFail(lb, false, &quot;found no gift&quot;);&#xD;
         if (!AIMessage.askLoadGoods(is, gift.getType(), gift.getAmount(),&#xD;
                                     aiUnit) || !hasGift()) {&#xD;
             return lbFail(lb, false, &quot;failed to collect gift&quot;);&#xD;
         }&#xD;
         this.collected = true;&#xD;
         lb.add(&quot;, collected gift&quot;);&#xD;
         return lbRetarget(lb);&#xD;
     }&#xD;
&#xD;
     // Move to the target's colony and deliver, avoiding trouble&#xD;
     // by choice of cost decider.&#xD;
     for (;;) {&#xD;
         Unit.MoveType mt = travelToTarget(getTarget(),&#xD;
             CostDeciders.avoidSettlementsAndBlockingUnits(), lb);&#xD;
         switch (mt) {&#xD;
         case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
         case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
             return lbWait(lb);&#xD;
&#xD;
         case MOVE_NO_TILE:&#xD;
             return this;&#xD;
         &#xD;
         case MOVE: case ATTACK_SETTLEMENT: // Arrived (do not attack!)&#xD;
             break;&#xD;
&#xD;
         case ATTACK_UNIT:&#xD;
             Location blocker = resolveBlockage(aiUnit, getTarget());&#xD;
             if (blocker != null&#xD;
                 &amp;&amp; AIMessage.askAttack(aiUnit, unit.getTile()&#xD;
                     .getDirection(blocker.getTile()))) {&#xD;
                 return lbAttack(lb, blocker);&#xD;
             }&#xD;
             moveRandomly(tag, null);&#xD;
             continue;&#xD;
         &#xD;
         default:&#xD;
             return lbMove(lb, mt);&#xD;
         }&#xD;
     &#xD;
         // Deliver the goods.&#xD;
         lbAt(lb);&#xD;
         Settlement settlement = (Settlement)getTarget();&#xD;
         boolean result = false;&#xD;
         if (AIMessage.askGetTransaction(aiUnit, settlement)) {&#xD;
             result = AIMessage.askDeliverGift(aiUnit, settlement,&#xD;
                 unit.getGoodsList().get(0));&#xD;
             AIMessage.askCloseTransaction(aiUnit, settlement);&#xD;
         }&#xD;
         return (result)&#xD;
             ? lbDone(lb, false, &quot;delivered&quot;)&#xD;
             : lbFail(lb, false, &quot;delivery&quot;);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w1peVJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5t6RQFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w1pelJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     xw.writeAttribute(COLLECTED_TAG, this.collected);&#xD;
&#xD;
     if (this.colony != null) {&#xD;
         xw.writeAttribute(COLONY_TAG, this.colony.getId());&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w2QgFJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5t64UFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w2QgVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     this.collected = xr.getAttribute(COLLECTED_TAG, false);&#xD;
&#xD;
     this.colony = xr.getAttribute(getGame(), COLONY_TAG,&#xD;
                                   Colony.class, (Colony)null);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w2QglJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5ULioFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w2Qg1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w2QhFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5UMJs1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w2QhVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;indianBringGiftMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5UIfUFJPEeiyW7NaN4qWdw" name="hasGift" visibility="private" method="_5w0bUFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xl3ZFJPEeiyW7NaN4qWdw">
                      <body>Checks if the unit is carrying a gift (goods).&#xD;
     *&#xD;
     * @return True if the unit is carrying goods.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5UIfUVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UJGYFJPEeiyW7NaN4qWdw" name="getTransportDestination" method="_5w1CZFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t4cEFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UJtcFJPEeiyW7NaN4qWdw" name="getTarget" method="_5w1CZlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t4cEVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UJtdFJPEeiyW7NaN4qWdw" name="findTarget" method="_5w1pclJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t5DI1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UKUg1JPEeiyW7NaN4qWdw" name="invalidReason" method="_5w1pdFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5UK7kFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ULioFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5w2QglJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5ULioVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UMJs1JPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5w2QhFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xl3aVJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;indianBringGiftMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5UMJtFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t1_0FJPEeiyW7NaN4qWdw" name="IndianBringGiftMission" method="_5wz0RFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5t1_1FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5t1_1VJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xl3YlJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param target The &lt;code>Colony&lt;/code> receiving the gift.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t1_0VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t1_0lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t1_01JPEeiyW7NaN4qWdw" name="target" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t1_1lJPEeiyW7NaN4qWdw" type="_5UHRMFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t2m4FJPEeiyW7NaN4qWdw" name="IndianBringGiftMission" method="_5wz0SVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5t2m5FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5t2m5VJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xl3Y1JPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>IndianBringGiftMission&lt;/code> and reads the given&#xD;
     * element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t2m4VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t2m4lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t2m41JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t2m5lJPEeiyW7NaN4qWdw" type="_5UHRMFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t2m51JPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5w0bUlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xl3ZVJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid with the unit,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t2m6FJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t3N8FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t3N8VJPEeiyW7NaN4qWdw" name="invalidColonyReason" visibility="private" isStatic="true" method="_5w0bVVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xl3ZlJPEeiyW7NaN4qWdw">
                      <body>Why would an IndianBringGiftMission be invalid with the given&#xD;
     * unit and colony.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @param colony The &lt;code>Colony&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid with the unit&#xD;
     *     and colony or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t3N8lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t3N81JPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t3N9FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t31AFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5w0bWVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xl3Z1JPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t31AVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t31AlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t31A1JPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5w1CYFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xl3aFJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t31BFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t31BVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t31BlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t4cElJPEeiyW7NaN4qWdw" name="setTarget" method="_5w1pcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t4cE1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t5DJFJPEeiyW7NaN4qWdw" name="doMission" method="_5w1pdlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t5DJVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t5qMFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t6RQFJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5w1peVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t6RQVJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t64UFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5w2QgFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t64UVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5UQbIFJPEeiyW7NaN4qWdw" name="IndianDemandMission">
                  <ownedComment xmi:id="_5xl3alJPEeiyW7NaN4qWdw">
                    <body>Mission for demanding goods from a specified player.</body>
                  </ownedComment>
                  <generalization xmi:id="_5qw2oFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wBKEFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yIp8VJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wBKEVJPEeiyW7NaN4qWdw" value="Logger.getLogger(IndianDemandMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wBKElJPEeiyW7NaN4qWdw" name="GOODS_DEMAND_MIN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wBKE1JPEeiyW7NaN4qWdw" value="30"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wBKFFJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wBxIFJPEeiyW7NaN4qWdw" value="&quot;AI native demander&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wBxIVJPEeiyW7NaN4qWdw" name="colony" visibility="private" type="_5qFhMVJPEeiyW7NaN4qWdw" association="_5yJRAFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wBxI1JPEeiyW7NaN4qWdw" name="demanded" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wCYMVJPEeiyW7NaN4qWdw" name="COLONY_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wCYMlJPEeiyW7NaN4qWdw" value="&quot;colony&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wCYM1JPEeiyW7NaN4qWdw" name="DEMANDED_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wCYNFJPEeiyW7NaN4qWdw" value="&quot;demanded&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w23kFJPEeiyW7NaN4qWdw" name="IndianDemandMission" specification="_5t8GcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w23kVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w23klJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w23k1JPEeiyW7NaN4qWdw" name="target" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w23lFJPEeiyW7NaN4qWdw" type="_5UQbIFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, target);&#xD;
&#xD;
     this.demanded = false;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w23lVJPEeiyW7NaN4qWdw" name="IndianDemandMission" specification="_5t8tgFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w23llJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w23l1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w23mFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w23mVJPEeiyW7NaN4qWdw" type="_5UQbIFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w23mlJPEeiyW7NaN4qWdw" name="hasTribute" specification="_5URpQFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w23m1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return hasTribute(getAIUnit());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w23nFJPEeiyW7NaN4qWdw" name="hasTribute" specification="_5t8th1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w23nVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w23nlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return aiUnit.getUnit().hasGoodsCargo();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w23n1JPEeiyW7NaN4qWdw" name="selectGoods" specification="_5t9UkVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w23oFJPEeiyW7NaN4qWdw" name="target" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w23oVJPEeiyW7NaN4qWdw" type="_5qi0MFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final Specification spec = getSpecification();&#xD;
     Tension.Level tension = getUnit().getOwner()&#xD;
         .getTension(target.getOwner()).getLevel();&#xD;
     int dx = spec.getInteger(GameOptions.NATIVE_DEMANDS) + 1;&#xD;
     final GoodsType food = spec.getPrimaryFoodType();&#xD;
     Goods goods = null;&#xD;
     int amount = capAmount(target.getGoodsCount(food), dx);&#xD;
     if (tension.compareTo(Tension.Level.CONTENT) &lt;= 0&#xD;
         &amp;&amp; target.getGoodsCount(food) >= amount) {&#xD;
         return new Goods(getGame(), target, food, amount);&#xD;
     } else if (tension.compareTo(Tension.Level.DISPLEASED) &lt;= 0) {&#xD;
         Market market = target.getOwner().getMarket();&#xD;
         int value = 0;&#xD;
         for (Goods currentGoods : target.getCompactGoods()) {&#xD;
             int goodsValue = market.getSalePrice(currentGoods);&#xD;
             if (currentGoods.getType().isFoodType()&#xD;
                 || currentGoods.getType().isMilitaryGoods()) {&#xD;
                 continue;&#xD;
             } else if (goodsValue > value) {&#xD;
                 value = goodsValue;&#xD;
                 goods = currentGoods;&#xD;
             }&#xD;
         }&#xD;
         if (goods != null) {&#xD;
             goods.setAmount(capAmount(goods.getAmount(), dx));&#xD;
             return goods;&#xD;
         }&#xD;
     } else {&#xD;
         // Military goods&#xD;
         for (GoodsType preferred : spec.getGoodsTypeList()) {&#xD;
             if (preferred.isMilitaryGoods()) {&#xD;
                 amount = target.getGoodsCount(preferred);&#xD;
                 if (amount > 0) {&#xD;
                     return new Goods(getGame(), target, preferred,&#xD;
                                      capAmount(amount, dx));&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         // Storable building materials (what do the natives need tools for?)&#xD;
         for (GoodsType preferred : spec.getStorableGoodsTypeList()) {&#xD;
             if (preferred.isBuildingMaterial()) {&#xD;
                 amount = target.getGoodsCount(preferred);&#xD;
                 if (amount > 0) {&#xD;
                     return new Goods(getGame(), target, preferred,&#xD;
                                      capAmount(amount, dx));&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         // Trade goods&#xD;
         for (GoodsType preferred : spec.getStorableGoodsTypeList()) {&#xD;
             if (preferred.isTradeGoods()) {&#xD;
                 amount = target.getGoodsCount(preferred);&#xD;
                 if (amount > 0) {&#xD;
                     return new Goods(getGame(), target, preferred,&#xD;
                                      capAmount(amount, dx));&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         // Refined goods&#xD;
         for (GoodsType preferred : spec.getStorableGoodsTypeList()) {&#xD;
             if (preferred.isRefined()) {&#xD;
                 amount = target.getGoodsCount(preferred);&#xD;
                 if (amount > 0) {&#xD;
                     return new Goods(getGame(), target, preferred,&#xD;
                                      capAmount(amount, dx));&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Have not found what we want&#xD;
     Market market = target.getOwner().getMarket();&#xD;
     int value = 0;&#xD;
     for (Goods currentGoods : target.getCompactGoods()) {&#xD;
         int goodsValue = market.getSalePrice(currentGoods);&#xD;
         if (goodsValue > value) {&#xD;
             value = goodsValue;&#xD;
             goods = currentGoods;&#xD;
         }&#xD;
     }&#xD;
     if (goods != null) {&#xD;
         goods.setAmount(capAmount(goods.getAmount(), dx));&#xD;
     }&#xD;
     return goods;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w23olJPEeiyW7NaN4qWdw" name="capAmount" specification="_5USQUFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w23o1JPEeiyW7NaN4qWdw" name="amount">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w23pFJPEeiyW7NaN4qWdw" name="difficulty">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w23pVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return Math.min(Math.max(amount * difficulty / 6, GOODS_DEMAND_MIN),&#xD;
                     GoodsContainer.CARGO_SIZE); // One load of goods max&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w3eoFJPEeiyW7NaN4qWdw" name="getHome" specification="_5t9UlFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w3eoVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w3eolJPEeiyW7NaN4qWdw" type="_5qjbQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return aiUnit.getUnit().getHomeIndianSettlement();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w3eo1JPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5t97olJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w3epFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w3epVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     IndianSettlement home;&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : ((home = getHome(aiUnit)) == null || home.isDisposed())&#xD;
         ? &quot;home-destroyed&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w3eplJPEeiyW7NaN4qWdw" name="invalidColonyReason" specification="_5t-isFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w3ep1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w3eqFJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w3eqVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidTargetReason(colony);&#xD;
     if (reason != null) return reason;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Player owner = unit.getOwner();&#xD;
     Player targetPlayer = colony.getOwner();&#xD;
     switch (owner.getStance(targetPlayer)) {&#xD;
     case UNCONTACTED: case PEACE: case ALLIANCE:&#xD;
         return &quot;bad-stance&quot;;&#xD;
     case WAR: case CEASE_FIRE:&#xD;
         Tension tension = unit.getHomeIndianSettlement()&#xD;
             .getAlarm(targetPlayer);&#xD;
         if (tension != null &amp;&amp; tension.getLevel()&#xD;
             .compareTo(Tension.Level.CONTENT) &lt;= 0) return &quot;happy&quot;;&#xD;
         break;&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w3eqlJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5t-itFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w3eq1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w3erFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidMissionReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w3erVJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5t_JwFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w3erlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w4FsFJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w4FsVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (loc instanceof Colony)&#xD;
         ? invalidColonyReason(aiUnit, (Colony)loc)&#xD;
         : (loc instanceof IndianSettlement)&#xD;
         ? invalidTargetReason(loc, aiUnit.getUnit().getOwner())&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w4FslJPEeiyW7NaN4qWdw" name="getTransportDestination" specification="_5UTecFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w4Fs1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w4FtFJPEeiyW7NaN4qWdw" name="getTarget" specification="_5UUFglJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w4FtVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return (this.demanded) ? getUnit().getHomeIndianSettlement()&#xD;
         : this.colony;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w4FtlJPEeiyW7NaN4qWdw" name="setTarget" specification="_5t_w0FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w4Ft1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>if (target instanceof Colony) {&#xD;
         this.colony = (Colony)target;&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w4FuFJPEeiyW7NaN4qWdw" name="findTarget" specification="_5UUsk1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w4FuVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return getTarget();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w4FulJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5UVTo1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w4Fu1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), getTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w4FvFJPEeiyW7NaN4qWdw" name="doMission" specification="_5uAX4VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w4FvVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w4FvlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (reason != null) return lbFail(lb, false, reason);&#xD;
&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     final Unit unit = getUnit();&#xD;
     final IndianSettlement is = unit.getHomeIndianSettlement();&#xD;
     Direction d;&#xD;
&#xD;
     while (!this.demanded) {&#xD;
         Unit.MoveType mt = travelToTarget(getTarget(), null, lb);&#xD;
         switch (mt) {&#xD;
         case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
         case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
             return lbWait(lb);&#xD;
&#xD;
         case MOVE_NO_TILE:&#xD;
             return this;&#xD;
&#xD;
         case ATTACK_SETTLEMENT: // Arrived?&#xD;
             d = unit.getTile().getDirection(getTarget().getTile());&#xD;
             if (d != null) break; // Yes, arrived at target&#xD;
             // Fall through&#xD;
         case ATTACK_UNIT: // Something is blocking our path&#xD;
             Location blocker = resolveBlockage(aiUnit, getTarget());&#xD;
             if (blocker == null) {&#xD;
                 moveRandomly(tag, null);&#xD;
                 continue;&#xD;
             }&#xD;
             d = unit.getTile().getDirection(blocker.getTile());&#xD;
             if (AIMessage.askAttack(aiUnit, d)) {&#xD;
                 return lbAttack(lb, blocker);&#xD;
             }&#xD;
             continue;&#xD;
&#xD;
         default:&#xD;
             return lbMove(lb, mt);&#xD;
         }&#xD;
&#xD;
         // Load the goods.&#xD;
         lbAt(lb);&#xD;
         Colony colony = (Colony)getTarget();&#xD;
         Player enemy = colony.getOwner();&#xD;
         Goods goods = selectGoods(colony);&#xD;
         GoodsType type = (goods == null) ? null : goods.getType();&#xD;
         int amount = (goods == null) ? 0 : goods.getAmount();&#xD;
         if (goods == null) {&#xD;
             if (!enemy.checkGold(1)) {&#xD;
                 return lbDone(lb, false, &quot;empty handed&quot;);&#xD;
             }&#xD;
             amount = enemy.getGold() / 20;&#xD;
             if (amount == 0) amount = enemy.getGold();&#xD;
         }&#xD;
         this.demanded&#xD;
             = AIMessage.askIndianDemand(aiUnit, colony, type, amount);&#xD;
         if (this.demanded &amp;&amp; (goods == null || hasTribute())) {&#xD;
             if (goods == null) {&#xD;
                 return lbDone(lb, false, &quot;accepted tribute &quot;,&#xD;
                               amount, &quot; gold&quot;);&#xD;
             }&#xD;
             lb.add(&quot;, accepted tribute &quot;, goods);&#xD;
             return lbRetarget(lb);&#xD;
         }&#xD;
&#xD;
         // Consider attacking if not content.&#xD;
         int unitTension = (is == null) ? 0 : is.getAlarm(enemy).getValue();&#xD;
         int tension = Math.max(unitTension,&#xD;
             unit.getOwner().getTension(enemy).getValue());&#xD;
         d = unit.getTile().getDirection(colony.getTile());&#xD;
         if (tension >= Tension.Level.CONTENT.getLimit() &amp;&amp; d != null) {&#xD;
             if (AIMessage.askAttack(aiUnit, d)) lbAttack(lb, colony);&#xD;
         }&#xD;
         return lbDone(lb, false, &quot;refused at &quot;, colony);&#xD;
     }&#xD;
&#xD;
     // Take the goods home&#xD;
     for (;;) {&#xD;
         Unit.MoveType mt = travelToTarget(getTarget(),&#xD;
             CostDeciders.avoidSettlementsAndBlockingUnits(), lb);&#xD;
         switch (mt) {&#xD;
         case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
         case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
             return lbWait(lb);&#xD;
&#xD;
         case MOVE_NO_TILE:&#xD;
             return this;&#xD;
&#xD;
         case MOVE: // Arrived&#xD;
             break;&#xD;
             &#xD;
         default:&#xD;
             return lbMove(lb, mt);&#xD;
         }&#xD;
     &#xD;
         // Unload the goods&#xD;
         lbAt(lb);&#xD;
         GoodsContainer container = unit.getGoodsContainer();&#xD;
         for (Goods goods : container.getCompactGoods()) {&#xD;
             Goods tribute = container.removeGoods(goods.getType());&#xD;
             is.addGoods(tribute);&#xD;
         }&#xD;
         return lbDone(lb, false, &quot;unloaded tribute&quot;);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w4swFJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5uA-8lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w4swVJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (this.colony != null) {&#xD;
         xw.writeAttribute(COLONY_TAG, this.colony.getId());&#xD;
     }&#xD;
&#xD;
     xw.writeAttribute(DEMANDED_TAG, this.demanded);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w4swlJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5uBmAlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w4sw1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     this.colony = xr.getAttribute(getGame(), COLONY_TAG,&#xD;
                                   Colony.class, (Colony)null);&#xD;
&#xD;
     this.demanded = xr.getAttribute(DEMANDED_TAG, false);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w4sxFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5UWhwlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w4sxVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w4sxlJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5UXI01JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w4sx1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;indianDemandMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5URpQFJPEeiyW7NaN4qWdw" name="hasTribute" visibility="private" method="_5w23mlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xmeclJPEeiyW7NaN4qWdw">
                      <body>Checks if the unit is carrying a tribute (goods).&#xD;
     *&#xD;
     * @return True if the unit is carrying goods.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5URpQVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5USQUFJPEeiyW7NaN4qWdw" name="capAmount" visibility="private" method="_5w23olJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5USQUVJPEeiyW7NaN4qWdw" name="amount">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5USQUlJPEeiyW7NaN4qWdw" name="difficulty">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5US3YFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UTecFJPEeiyW7NaN4qWdw" name="getTransportDestination" method="_5w4FslJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t_JxFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UUFglJPEeiyW7NaN4qWdw" name="getTarget" method="_5w4FtFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t_JxVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UUsk1JPEeiyW7NaN4qWdw" name="findTarget" method="_5w4FuFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uAX4FJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UVTo1JPEeiyW7NaN4qWdw" name="invalidReason" method="_5w4FulJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5UV6sFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UWhwlJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5w4sxFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5UWhw1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UXI01JPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5w4sxlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xmeeVJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;indianDemandMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5UXI1FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t8GcFJPEeiyW7NaN4qWdw" name="IndianDemandMission" method="_5w23kFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5t8GdFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5t8GdVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xmecFJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param target The &lt;code>Colony&lt;/code> receiving the gift.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t8GcVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t8GclJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t8Gc1JPEeiyW7NaN4qWdw" name="target" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t8GdlJPEeiyW7NaN4qWdw" type="_5UQbIFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t8tgFJPEeiyW7NaN4qWdw" name="IndianDemandMission" method="_5w23lVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5t8thFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5t8thVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xmecVJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>IndianDemandMission&lt;/code> and reads the given&#xD;
     * element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t8tgVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t8tglJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t8tg1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t8thlJPEeiyW7NaN4qWdw" type="_5UQbIFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t8th1JPEeiyW7NaN4qWdw" name="hasTribute" visibility="private" isStatic="true" method="_5w23nFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xmec1JPEeiyW7NaN4qWdw">
                      <body>Checks if a unit is carrying a tribute.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return True if the unit is carrying goods.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t8tiFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t9UkFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t9UkVJPEeiyW7NaN4qWdw" name="selectGoods" method="_5w23n1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xmedFJPEeiyW7NaN4qWdw">
                      <body>Selects the most desirable goods from the colony.&#xD;
     *&#xD;
     * @param target The colony.&#xD;
     * @return The goods to demand.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t9UklJPEeiyW7NaN4qWdw" name="target" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t9Uk1JPEeiyW7NaN4qWdw" type="_5qi0MFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t9UlFJPEeiyW7NaN4qWdw" name="getHome" visibility="private" isStatic="true" method="_5w3eoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t97oFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t97oVJPEeiyW7NaN4qWdw" type="_5qjbQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t97olJPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5w3eo1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xmedVJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid with the unit,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t97o1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t97pFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t-isFJPEeiyW7NaN4qWdw" name="invalidColonyReason" visibility="private" isStatic="true" method="_5w3eplJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xmedlJPEeiyW7NaN4qWdw">
                      <body>Why would an IndianDemandMission be invalid with the given&#xD;
     * unit and colony.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @param colony The &lt;code>Colony&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid with the unit&#xD;
     *     and colony or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t-isVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t-islJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t-is1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t-itFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5w3eqlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xmed1JPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t-itVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t-itlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t_JwFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5w3erVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xmeeFJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5t_JwVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t_JwlJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5t_Jw1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5t_w0FJPEeiyW7NaN4qWdw" name="setTarget" method="_5w4FtlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5t_w0VJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uAX4VJPEeiyW7NaN4qWdw" name="doMission" method="_5w4FvFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uAX4lJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uAX41JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uA-8lJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5w4swFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uA-81JPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uBmAlJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5w4swlJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uBmA1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5UbaQFJPEeiyW7NaN4qWdw" name="Mission" isAbstract="true">
                  <ownedComment xmi:id="_5xmeelJPEeiyW7NaN4qWdw">
                    <body>A mission describes what a unit should do; attack, build colony,&#xD;
wander etc.  Every {@link AIUnit} should have a mission. By&#xD;
extending this class, you create different missions.</body>
                  </ownedComment>
                  <generalization xmi:id="_5uSEtVJPEeiyW7NaN4qWdw" general="_5q5ZgVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wC_QFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yJRA1JPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wDmUFJPEeiyW7NaN4qWdw" value="Logger.getLogger(Mission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wDmUVJPEeiyW7NaN4qWdw" name="MINIMUM_TRANSPORT_PRIORITY" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wDmUlJPEeiyW7NaN4qWdw" value="60"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wDmU1JPEeiyW7NaN4qWdw" name="NORMAL_TRANSPORT_PRIORITY" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wDmVFJPEeiyW7NaN4qWdw" value="100"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wDmVVJPEeiyW7NaN4qWdw" name="NO_PATH_TO_TARGET" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wDmVlJPEeiyW7NaN4qWdw" value="-2"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wENYlJPEeiyW7NaN4qWdw" name="AIUNITNULL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wE0cFJPEeiyW7NaN4qWdw" value="&quot;aiUnit-null&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wE0cVJPEeiyW7NaN4qWdw" name="TARGETNULL" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wE0clJPEeiyW7NaN4qWdw" value="&quot;target-null&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wE0c1JPEeiyW7NaN4qWdw" name="TARGETINVALID" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wE0dFJPEeiyW7NaN4qWdw" value="&quot;target-invalid&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wE0dVJPEeiyW7NaN4qWdw" name="TARGETOWNERSHIP" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wE0dlJPEeiyW7NaN4qWdw" value="&quot;target-ownership&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wFbgFJPEeiyW7NaN4qWdw" name="TARGETNOTFOUND" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wFbgVJPEeiyW7NaN4qWdw" value="&quot;target-not-found&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wFbglJPEeiyW7NaN4qWdw" name="UNITNOTAPERSON" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wFbg1JPEeiyW7NaN4qWdw" value="&quot;unit-not-a-person&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wFbhFJPEeiyW7NaN4qWdw" name="UNITNOTOFFENSIVE" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wFbhVJPEeiyW7NaN4qWdw" value="&quot;unit-not-offensive&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wGCkFJPEeiyW7NaN4qWdw" name="UNITNOTONMAP" visibility="protected" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wGCkVJPEeiyW7NaN4qWdw" value="&quot;unit-not-on-map&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wGCklJPEeiyW7NaN4qWdw" name="aiUnit" visibility="private" isLeaf="true" type="_5qMO41JPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yJ4EVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5xnFgFJPEeiyW7NaN4qWdw" name="NO_MORE_MOVES_LEFT" visibility="protected">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5xnskFJPEeiyW7NaN4qWdw" value="-1"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w5T0FJPEeiyW7NaN4qWdw" name="Mission" specification="_5uDbMFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w5T0VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w5T0lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w5T01JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain);&#xD;
&#xD;
     this.aiUnit = aiUnit;&#xD;
     this.uninitialized = aiUnit == null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w5T1FJPEeiyW7NaN4qWdw" name="Mission" specification="_5uECQFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w5T1VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w5T1lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w5T11JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w5T2FJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>this(aiMain, aiUnit);&#xD;
&#xD;
     setTarget(target);&#xD;
     if (aiUnit != null &amp;&amp; aiUnit.getMission() != this) {&#xD;
         aiUnit.changeMission(this);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w5T2VJPEeiyW7NaN4qWdw" name="getAIUnit" specification="_5UdPcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w5T2lJPEeiyW7NaN4qWdw" type="_5qMO41JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return aiUnit;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w564FJPEeiyW7NaN4qWdw" name="getUnit" specification="_5UdPcVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w564VJPEeiyW7NaN4qWdw" type="_5qH9c1JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return (aiUnit == null) ? null : aiUnit.getUnit();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w564lJPEeiyW7NaN4qWdw" name="getPlayer" specification="_5Ud2gFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w5641JPEeiyW7NaN4qWdw" type="_5qHWYVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return (getUnit() == null) ? null : getUnit().getOwner();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w565FJPEeiyW7NaN4qWdw" name="getAIPlayer" specification="_5Ud2gVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w565VJPEeiyW7NaN4qWdw" type="_5q6AkFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return getAIMain().getAIPlayer(getUnit().getOwner());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w565lJPEeiyW7NaN4qWdw" name="getEuropeanAIPlayer" specification="_5Ud2glJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w5651JPEeiyW7NaN4qWdw" type="_5qM18VJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>Player player = getUnit().getOwner();&#xD;
     if (!player.isEuropean()) {&#xD;
         throw new IllegalArgumentException(&quot;Not a European player: &quot;&#xD;
             + player);&#xD;
     }&#xD;
     return (EuropeanAIPlayer)getAIMain().getAIPlayer(player);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w6h8FJPEeiyW7NaN4qWdw" name="getAIRandom" specification="_5UedkFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w6h8VJPEeiyW7NaN4qWdw" type="_5q0hAFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return aiUnit.getAIRandom();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w6h8lJPEeiyW7NaN4qWdw" name="isValid" specification="_5UedkVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w6h81JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason() == null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w6h9FJPEeiyW7NaN4qWdw" name="isTargetReason" specification="_5UfEoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w6h9VJPEeiyW7NaN4qWdw" name="reason">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w6h9lJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return reason != null &amp;&amp; reason.startsWith(&quot;target-&quot;);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w6h91JPEeiyW7NaN4qWdw" name="invalidUnitReason" specification="_5uEpVVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w6h-FJPEeiyW7NaN4qWdw" name="unit" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w6h-VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return (unit == null) ? &quot;unit-null&quot;&#xD;
         : (unit.isUninitialized()) ? &quot;unit-uninitialized&quot;&#xD;
         : (unit.isDisposed()) ? &quot;unit-disposed&quot;&#xD;
         : (unit.isDamaged()) ? &quot;unit-under-repair&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w6h-lJPEeiyW7NaN4qWdw" name="invalidAIUnitReason" specification="_5uFQYVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w6h-1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w6h_FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason;&#xD;
     return (aiUnit == null) ? AIUNITNULL&#xD;
         : ((reason = invalidUnitReason(aiUnit.getUnit())) != null) ? reason&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w6h_VJPEeiyW7NaN4qWdw" name="invalidNewMissionReason" specification="_5uFQZFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w6h_lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w6h_1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return (aiUnit == null) ? AIUNITNULL&#xD;
         : (aiUnit.hasMission()&#xD;
             &amp;&amp; !aiUnit.getMission().isOneTime()&#xD;
             &amp;&amp; aiUnit.getMission().isValid()) ? &quot;mission-exists&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w7JAFJPEeiyW7NaN4qWdw" name="invalidTargetReason" specification="_5uF3cFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w7JAVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7JAlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return (target == null) ? Mission.TARGETNULL&#xD;
         : (((FreeColGameObject)target).isDisposed()) ? &quot;target-disposed&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w7JA1JPEeiyW7NaN4qWdw" name="invalidTargetReason" specification="_5uF3c1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w7JBFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7JBVJPEeiyW7NaN4qWdw" name="owner" type="_5qHWYVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7JBlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidTargetReason(target);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (target instanceof Europe &amp;&amp; !owner.owns((Europe)target))&#xD;
         ? Mission.TARGETOWNERSHIP&#xD;
         : (target instanceof Settlement &amp;&amp; !owner.owns((Settlement)target))&#xD;
         ? Mission.TARGETOWNERSHIP&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w7JB1JPEeiyW7NaN4qWdw" name="invalidTransportableReason" specification="_5uGegVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w7JCFJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7JCVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (t == null) return &quot;null-transportable&quot;;&#xD;
     final Locatable l = t.getTransportLocatable();&#xD;
     if (l == null) return &quot;null-locatable&quot;;&#xD;
&#xD;
     final Unit carrier = (l.getLocation() instanceof Unit)&#xD;
         ? (Unit)(l.getLocation()) : null;&#xD;
     final AIUnit transport = t.getTransport();&#xD;
     Player owner;&#xD;
     Location loc;&#xD;
     boolean checkSrc = transport == null;&#xD;
&#xD;
     if (carrier != null &amp;&amp; transport != null&#xD;
         &amp;&amp; carrier != transport.getUnit()) {&#xD;
         return &quot;transportable-on-other-carrier&quot;;&#xD;
     }&#xD;
&#xD;
     if (checkSrc) {&#xD;
         Settlement s;&#xD;
         if ((loc = t.getTransportSource()) == null) {&#xD;
             return &quot;transportable-source-missing-&quot; + t;&#xD;
         } else if (((FreeColGameObject)loc).isDisposed()) {&#xD;
             return &quot;transportable-source-disposed&quot;;&#xD;
         } else if (loc instanceof Settlement &amp;&amp; l instanceof Ownable&#xD;
             &amp;&amp; !((Ownable)l).getOwner().owns(s = (Settlement)loc)) {&#xD;
             return &quot;transportable-source-&quot; + s.getName()&#xD;
                 + &quot;-captured-by-&quot; + s.getOwner().getDebugName();&#xD;
         }&#xD;
     } else {&#xD;
         loc = t.getTransportDestination();&#xD;
         if (loc != null &amp;&amp; ((FreeColGameObject)loc).isDisposed()) {&#xD;
             return &quot;transportable-destination-disposed&quot;;&#xD;
         }&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w7JClJPEeiyW7NaN4qWdw" name="invalidAttackReason" specification="_5uGehFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w7JC1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7JDFJPEeiyW7NaN4qWdw" name="other" type="_5qHWYVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7JDVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Unit unit = aiUnit.getUnit();&#xD;
     final Player player = unit.getOwner();&#xD;
     return (player == other)&#xD;
         ? Mission.TARGETOWNERSHIP&#xD;
         : (player.isIndian()&#xD;
             &amp;&amp; player.getTension(other).getLevel()&#xD;
             .compareTo(Tension.Level.CONTENT) &lt;= 0)&#xD;
         ? &quot;target-native-tension-too-low&quot;&#xD;
         : (player.isEuropean()&#xD;
             &amp;&amp; !(player.getStance(other) == Stance.WAR&#xD;
                 || (unit.hasAbility(Ability.PIRACY)&#xD;
                     &amp;&amp; player.getStance(other) != Stance.ALLIANCE)))&#xD;
         ? &quot;target-european-war-absent&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w7wEFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5uHFklJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w7wEVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7wElJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidAIUnitReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w7wE1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5uHFlVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w7wFFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7wFVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7wFlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     return (reason != null) ? reason : invalidTargetReason(loc);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w7wF1JPEeiyW7NaN4qWdw" name="lbAt" specification="_5uHso1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w7wGFJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7wGVJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final Unit unit = getUnit();&#xD;
     lb.add(&quot;, at &quot;, Location.upLoc(unit.getLocation()));&#xD;
     return this;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w7wGlJPEeiyW7NaN4qWdw" name="lbAttack" specification="_5uITsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w7wG1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7wHFJPEeiyW7NaN4qWdw" name="what" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7wHVJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(&quot;, attacking &quot;, what);&#xD;
     return this;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w7wHlJPEeiyW7NaN4qWdw" name="lbDodge" specification="_5uITtFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w7wH1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7wIFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final Unit unit = getUnit();&#xD;
     lb.add(&quot;, dodging at &quot;, unit.getLocation());&#xD;
     unit.setMovesLeft(0);        &#xD;
     return this;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w7wIVJPEeiyW7NaN4qWdw" name="lbDone" specification="_5uJh0FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w7wIlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w7wI1JPEeiyW7NaN4qWdw" name="cont">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w7wJFJPEeiyW7NaN4qWdw" name="reasons" type="_5uI6wVJPEeiyW7NaN4qWdw">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5w7wJVJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w7wJlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(&quot;, COMPLETED: &quot;, reasons);&#xD;
     return (cont) ? aiUnit.getMission() : lbDrop(lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w8XIFJPEeiyW7NaN4qWdw" name="lbDrop" specification="_5uKI4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w8XIVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w8XIlJPEeiyW7NaN4qWdw" name="reasons" type="_5uI6wVJPEeiyW7NaN4qWdw">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5w8XI1JPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w8XJFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(&quot;, DROPPED&quot;, reasons);&#xD;
     return (aiUnit == null) ? null : aiUnit.changeMission(null);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w8XJVJPEeiyW7NaN4qWdw" name="lbFail" specification="_5uKv8VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w8XJlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w8XJ1JPEeiyW7NaN4qWdw" name="cont">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w8XKFJPEeiyW7NaN4qWdw" name="reasons" type="_5uI6wVJPEeiyW7NaN4qWdw">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5w8XKVJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w8XKlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(&quot;, FAILED: &quot;, reasons);&#xD;
     return (cont) ? aiUnit.getMission() : lbDrop(lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w8-MFJPEeiyW7NaN4qWdw" name="lbMove" specification="_5uLXAlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w8-MVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w8-MlJPEeiyW7NaN4qWdw" name="mt" type="_5q8c0FJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w8-M1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(&quot;, bad move type at &quot;, getUnit().getLocation(), &quot;: &quot;, mt);&#xD;
     return this;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w8-NFJPEeiyW7NaN4qWdw" name="lbRetarget" specification="_5uL-EFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w8-NVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w8-NlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(&quot;, retargeted &quot;, getTarget());&#xD;
     return this;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w8-N1JPEeiyW7NaN4qWdw" name="lbWait" specification="_5uL-E1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w8-OFJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w8-OVJPEeiyW7NaN4qWdw" name="reasons" type="_5uI6wVJPEeiyW7NaN4qWdw">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5w8-OlJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w8-O1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(reasons);&#xD;
     getUnit().setMovesLeft(0);&#xD;
     return this;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w8-PFJPEeiyW7NaN4qWdw" name="findCircleTarget" specification="_5uNMMFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w8-PVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5w8-PlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5w8-P1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w8-QFJPEeiyW7NaN4qWdw" name="gd" type="_5qJLk1JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5w8-QVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5w8-QlJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w8-Q1JPEeiyW7NaN4qWdw" name="radius">
                      <eAnnotations xmi:id="_5w8-RFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5w8-RVJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w8-RlJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w8-R1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final Unit unit = aiUnit.getUnit();&#xD;
     final Tile start = unit.getTile();&#xD;
     if (start == null) {&#xD;
         if (!deferOK) return null;&#xD;
         Settlement settlement = unit.getOwner().getClosestPortForEurope();&#xD;
         return (settlement == null) ? null : settlement;&#xD;
     }&#xD;
     return unit.getGame().getMap().searchCircle(start, gd, radius);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w9lQFJPEeiyW7NaN4qWdw" name="resolveBlockage" specification="_5uNzQFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w9lQVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w9lQlJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w9lQ1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final Unit unit = aiUnit.getUnit();&#xD;
     PathNode path = unit.findPath(target);&#xD;
     Direction d = null;&#xD;
     if (path != null &amp;&amp; path.next != null) {&#xD;
         Tile tile = path.next.getTile();&#xD;
         Settlement settlement = tile.getSettlement();&#xD;
         Location blocker = (settlement != null) ? settlement&#xD;
             : tile.getDefendingUnit(unit);&#xD;
         if (UnitSeekAndDestroyMission.invalidReason(aiUnit, blocker)&#xD;
             == null) return blocker;&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w9lRFJPEeiyW7NaN4qWdw" name="moveRandomly" specification="_5uNzRFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w9lRVJPEeiyW7NaN4qWdw" name="logMe">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w9lRlJPEeiyW7NaN4qWdw" name="direction" type="_5qaRUFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w9lR1JPEeiyW7NaN4qWdw" type="_5qaRUFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final Unit unit = getUnit();&#xD;
     if (unit.getMovesLeft() &lt;= 0 || !unit.hasTile()) return null;&#xD;
     if (logMe == null) logMe = &quot;moveRandomly&quot;;&#xD;
&#xD;
     Random aiRandom = getAIRandom();&#xD;
     if (direction == null) {&#xD;
         direction = Direction.getRandomDirection(logMe, logger, aiRandom);&#xD;
     }&#xD;
&#xD;
     Direction[] directions&#xD;
         = direction.getClosestDirections(logMe, logger, aiRandom);&#xD;
     for (Direction d : directions) {&#xD;
         Tile moveTo = unit.getTile().getNeighbourOrNull(d);&#xD;
         if (moveTo != null&#xD;
                 &amp;&amp; unit.getMoveType(d) == MoveType.MOVE&#xD;
                 &amp;&amp; aiUnit.move(d)) return d;&#xD;
     }&#xD;
     return null; // Stuck!&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w9lSFJPEeiyW7NaN4qWdw" name="moveRandomlyTurn" specification="_5Uhg4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w9lSVJPEeiyW7NaN4qWdw" name="logMe">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Direction direction = null;&#xD;
     direction = moveRandomly(logMe, direction);&#xD;
     getUnit().setMovesLeft(0);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w-MUFJPEeiyW7NaN4qWdw" name="getBestSettlement" specification="_5uOaUVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w-MUVJPEeiyW7NaN4qWdw" name="player" type="_5qHWYVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w-MUlJPEeiyW7NaN4qWdw" type="_5qaRUlJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>int bestValue = -1;&#xD;
     Settlement best = null;&#xD;
     for (Settlement settlement : player.getSettlements()) {&#xD;
         int value = settlement.getUnitCount()&#xD;
             + settlement.getTile().getUnitCount();&#xD;
         if (settlement instanceof Colony) {&#xD;
             Colony colony = (Colony)settlement;&#xD;
             value += ((colony.isConnectedPort()) ? 10 : 0) // Favour coastal&#xD;
                 + colony.getAvailableWorkLocations().size();&#xD;
         }&#xD;
         if (value > bestValue) {&#xD;
             bestValue = value;&#xD;
             best = settlement;&#xD;
         }&#xD;
     }&#xD;
     return (best == null) ? null : best;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w-MU1JPEeiyW7NaN4qWdw" name="travelToTarget" specification="_5uPBYFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w-MVFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w-MVVJPEeiyW7NaN4qWdw" name="costDecider" type="_5qIkgVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w-MVlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w-MV1JPEeiyW7NaN4qWdw" type="_5q4LYlJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (target == null) return MoveType.MOVE_ILLEGAL;&#xD;
     final Tile targetTile = target.getTile();&#xD;
     if (!(target instanceof Europe) &amp;&amp; targetTile == null) {&#xD;
         throw new IllegalStateException(&quot;Target neither Europe nor Tile&quot;);&#xD;
     }&#xD;
     final Unit unit = getUnit();&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     AIUnit aiCarrier = aiUnit.getTransport();&#xD;
     final Map map = unit.getGame().getMap();&#xD;
     PathNode path = null;&#xD;
     boolean useTransport = false;&#xD;
     target = Location.upLoc(target);&#xD;
&#xD;
     // Consider where the unit is starting.&#xD;
     if (unit.isAtSea()) {&#xD;
         // Wait for carrier to arrive on the map or in Europe.&#xD;
         lb.add(&quot;, at sea&quot;);&#xD;
         return MoveType.MOVE_HIGH_SEAS;&#xD;
&#xD;
     } else if (unit.isOnCarrier()) {&#xD;
         // Transport mission will disembark the unit when it&#xD;
         // arrives at the drop point.&#xD;
         lb.add(&quot;, on carrier&quot;);&#xD;
         return MoveType.MOVE_NO_ACCESS_EMBARK;&#xD;
&#xD;
     } else if (unit.isAtLocation(target)) {&#xD;
         // Arrived!&#xD;
         return MoveType.MOVE;&#xD;
&#xD;
     } else if (unit.isInEurope()) {&#xD;
         // Leave, or require transport.&#xD;
         if (!unit.getOwner().canMoveToEurope()) {&#xD;
             lb.add(&quot;, impossible move from Europe&quot;);&#xD;
             return MoveType.MOVE_ILLEGAL;&#xD;
         }&#xD;
         if (unit.getType().canMoveToHighSeas()) {&#xD;
             unit.setDestination(target);&#xD;
             if (AIMessage.askMoveTo(aiUnit, map)) {&#xD;
                 lb.add(&quot;, sailed for &quot;, target);&#xD;
                 return MoveType.MOVE_HIGH_SEAS;&#xD;
             } else {&#xD;
                 lb.add(&quot;, failed to sail for &quot;, target);&#xD;
                 return MoveType.MOVE_ILLEGAL;&#xD;
             }&#xD;
         }&#xD;
         useTransport = true;&#xD;
&#xD;
     } else if (!unit.hasTile()) {&#xD;
         // Fail!&#xD;
         return MoveType.MOVE_ILLEGAL;&#xD;
&#xD;
     } else {&#xD;
         // On map.  Either find a path or decide to use transport.&#xD;
         if (target instanceof Europe) {&#xD;
             // Going to Europe.&#xD;
             if (!unit.getOwner().canMoveToEurope()) {&#xD;
                 lb.add(&quot;, impossible move to Europe&quot;);&#xD;
                 return MoveType.MOVE_ILLEGAL;&#xD;
             }&#xD;
             if (!unit.getType().canMoveToHighSeas()&#xD;
                 || aiCarrier != null) {&#xD;
                 useTransport = true;&#xD;
             } else {&#xD;
                 path = unit.findPath(unit.getLocation(), target,&#xD;
                                      null, costDecider);&#xD;
             }&#xD;
         } else if (aiCarrier != null) {&#xD;
             // Transport already allocated.&#xD;
             useTransport = true;&#xD;
&#xD;
         } else if (!unit.getType().canMoveToHighSeas()&#xD;
             &amp;&amp; !Map.isSameContiguity(target, unit.getLocation())) {&#xD;
             // Transport necessary.&#xD;
             useTransport = true;&#xD;
&#xD;
         } else {&#xD;
             // Should not need transport within the same contiguity.&#xD;
             path = unit.findPath(unit.getLocation(), target,&#xD;
                                  null, costDecider);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (useTransport) {&#xD;
         if (aiCarrier != null) {&#xD;
             // A carrier has been assigned.  Try to go to the&#xD;
             // collection point.&#xD;
             Location pick;&#xD;
             TransportMission tm;&#xD;
             boolean waiting = false;&#xD;
             PathNode ownPath;&#xD;
             int pathTurns, ownTurns;&#xD;
&#xD;
             if ((tm = aiCarrier.getMission(TransportMission.class)) == null) {&#xD;
                 // Carrier has no transport mission?!?  Bogus.&#xD;
                 lb.add(&quot;, had bogus carrier &quot;, aiCarrier.getUnit());&#xD;
                 logger.warning(unit + &quot; has transport &quot; + aiCarrier&#xD;
                     + &quot; without transport mission&quot;);&#xD;
                 aiUnit.dropTransport();&#xD;
                 aiCarrier = null;&#xD;
&#xD;
             } else if ((pick = tm.getTransportTarget(aiUnit)) == null) {&#xD;
                 // No collection point for this unit?  Bogus.&#xD;
                 lb.add(&quot;, had bogus transport on &quot;, aiCarrier.getUnit());&#xD;
                 logger.warning(unit + &quot; has transport &quot; + aiCarrier&#xD;
                     + &quot; with transport mission but null transport target\n&quot;&#xD;
                     + tm.toFullString());&#xD;
                 aiUnit.dropTransport();&#xD;
                 aiCarrier = null;&#xD;
&#xD;
             } else if (Map.isSameLocation(pick, unit.getLocation())) {&#xD;
                 // Waiting for the carrier at the collection point.&#xD;
                 waiting = true;&#xD;
&#xD;
             } else if ((path = unit.findPath(unit.getLocation(), pick,&#xD;
                                              null, costDecider)) == null) {&#xD;
                 // No path to the collection point.&#xD;
                 lbAt(lb);&#xD;
                 lb.add(&quot;, no path to meet &quot;, aiCarrier.getUnit(),&#xD;
                        &quot; at &quot;, pick);&#xD;
                 path = unit.findPath(unit.getLocation(), target,&#xD;
                                      null, costDecider);&#xD;
                 if (path == null) {&#xD;
                     // Unable to fall back to going direct.&#xD;
                     // Return failure in the hope that it is a&#xD;
                     // transient blockage.&#xD;
                     return MoveType.MOVE_NO_TILE;&#xD;
                 }&#xD;
                 // Fall back to going direct to the target.&#xD;
                 lb.add(&quot;, dropped carrier&quot;);&#xD;
                 aiUnit.dropTransport();&#xD;
                 aiCarrier = null;&#xD;
                 useTransport = false;&#xD;
&#xD;
             } else if ((ownPath = unit.findPath(unit.getLocation(), &#xD;
                         target, null, costDecider)) == null&#xD;
                 || (ownTurns = ownPath.getTotalTurns())&#xD;
                 > (pathTurns = path.getTotalTurns())) {&#xD;
                 // Either there is no direct path to the target or&#xD;
                 // a path exists but takes longer than using the&#xD;
                 // carrier.  This confirms that it is not only&#xD;
                 // possible to travel to the collection point, it&#xD;
                 // is also the best plan.&#xD;
                 MoveType ret = followMapPath(path.next, lb);&#xD;
                 if (ret != MoveType.MOVE) return ret;&#xD;
                 waiting = true; // Arrived for collection.&#xD;
&#xD;
             } else {&#xD;
                 // It is quicker to cancel the transport and go to&#xD;
                 // the target directly.&#xD;
                 lb.add(&quot;, dropping carrier&quot;, aiCarrier.getUnit(),&#xD;
                     &quot; as it is faster (&quot;, ownTurns, &quot;&lt;&quot;, pathTurns,&#xD;
                     &quot; without it&quot;);&#xD;
                 aiUnit.dropTransport();&#xD;
                 aiCarrier = null;&#xD;
                 path = ownPath;&#xD;
                 useTransport = false;&#xD;
             }&#xD;
&#xD;
             if (waiting) {&#xD;
                 // If waiting for the carrier, signal that this&#xD;
                 // unit can be reexamined if the carrier is still&#xD;
                 // moving.&#xD;
                 lbAt(lb);&#xD;
                 lb.add(&quot;, wait for &quot;, aiCarrier.getUnit());&#xD;
                 return (aiCarrier.getUnit().getMovesLeft() > 0)&#xD;
                     ? MoveType.MOVE_NO_ACCESS_EMBARK&#xD;
                     : MoveType.MOVE_NO_MOVES;&#xD;
             }&#xD;
         }&#xD;
&#xD;
         if (useTransport &amp;&amp; aiCarrier == null) {&#xD;
             // Still interested in transport but no carrier.&#xD;
             lb.add(&quot;, needs transport to &quot;, target);&#xD;
             return MoveType.MOVE_NO_ACCESS_EMBARK;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Follow the path to the target.  If there is one.&#xD;
     if (path == null) {&#xD;
         lbAt(lb);&#xD;
         lb.add(&quot;, no path to &quot;, target);&#xD;
         return MoveType.MOVE_NO_TILE;&#xD;
     }&#xD;
     if (path.next == null) {&#xD;
         // This should not happen, the isAtLocation() test above&#xD;
         // should have succeeded.&#xD;
         throw new IllegalStateException(&quot;Trivial path found &quot;&#xD;
             + path.fullPathToString()&#xD;
             + &quot; from &quot; + unit.getLocation() + &quot; to target &quot; + target&#xD;
             + &quot; result=&quot; +  unit.isAtLocation(target));&#xD;
     }            &#xD;
     return followMapPath(path.next, lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w-MWFJPEeiyW7NaN4qWdw" name="followMapPath" specification="_5uPBZVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w-MWVJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w-MWlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w-MW1JPEeiyW7NaN4qWdw" type="_5q4LYlJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final Unit unit = getUnit();&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     final Location target = path.getLastNode().getLocation();&#xD;
&#xD;
     for (; path != null; path = path.next) {&#xD;
         // Check for immediate failure&#xD;
         if (unit.isDisposed()) {&#xD;
             lb.add(&quot;, died going to &quot;, Location.upLoc(path.getLocation()));&#xD;
             return MoveType.MOVE_NO_REPAIR;&#xD;
         } else if (unit.getMovesLeft() &lt;= 0) {&#xD;
             lbAt(lb);&#xD;
             lb.add(&quot;, en route to &quot;, Location.upLoc(target));&#xD;
             return MoveType.MOVE_NO_MOVES;&#xD;
         }&#xD;
&#xD;
         if (path.getLocation() instanceof Europe) {&#xD;
             if (AIMessage.askMoveTo(aiUnit, path.getLocation())) {&#xD;
                 lb.add(&quot;, sailed to Europe&quot;);&#xD;
                 return MoveType.MOVE_HIGH_SEAS;&#xD;
             } else {&#xD;
                 lb.add(&quot;, failed to sail for Europe&quot;);&#xD;
                 return MoveType.MOVE_ILLEGAL;&#xD;
             }&#xD;
         }&#xD;
         MoveType mt = unit.getMoveType(path.getDirection());&#xD;
         if (mt == MoveType.MOVE_NO_MOVES) {&#xD;
             unit.setMovesLeft(0);&#xD;
             lbAt(lb);&#xD;
             return MoveType.MOVE_NO_MOVES;&#xD;
         }&#xD;
         if (!mt.isProgress()) {&#xD;
             return mt; // Special handling required, no log.&#xD;
         }&#xD;
         if (!aiUnit.move(path.getDirection())) {&#xD;
             lbAt(lb);&#xD;
             lb.add(&quot;, failed to move to &quot;,&#xD;
                 Location.upLoc(path.getLocation()));&#xD;
             return MoveType.MOVE_ILLEGAL;&#xD;
         }&#xD;
     }&#xD;
     return MoveType.MOVE; // Must have completed path normally, no log.&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w-MXFJPEeiyW7NaN4qWdw" name="retargetMission" specification="_5uPocVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w-MXVJPEeiyW7NaN4qWdw" name="reason">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5w-MXlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5w-MX1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(&quot;, failing(&quot;, reason, &quot;)&quot;);&#xD;
&#xD;
     Location newTarget = findTarget();&#xD;
     if (newTarget != null) {&#xD;
         setTarget(newTarget);&#xD;
         return lbRetarget(lb);&#xD;
     }&#xD;
     lb.add(&quot;, retarget failed&quot;);&#xD;
     return lbDrop(lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w-MYFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5UivBFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w-MYVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return 0;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w-MYlJPEeiyW7NaN4qWdw" name="getTransportDestination" specification="_5UjWEVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w-MY1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>Location loc;&#xD;
     return (!isValid()) ? null&#xD;
         : ((loc = getTarget()) == null) ? null&#xD;
         : (!getUnit().shouldTakeTransportTo(loc)) ? null&#xD;
         : loc;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w-MZFJPEeiyW7NaN4qWdw" name="isOneTime" specification="_5Uj9IVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w-MZVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return false;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w-zYFJPEeiyW7NaN4qWdw" name="toXML" specification="_5uQ2kVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w-zYVJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>if (isValid()) toXML(xw, getXMLTagName());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5w-zYlJPEeiyW7NaN4qWdw" name="toString" specification="_5UkkMFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5w-zY1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>LogBuilder lb = new LogBuilder(64);&#xD;
     lb.add(lastPart(getClass().getName(), &quot;.&quot;), &quot;@&quot;, hashCode(),&#xD;
            &quot;-&quot;, aiUnit.getUnit(), &quot;->&quot;, getTarget());&#xD;
     return lb.toString();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5UdPcFJPEeiyW7NaN4qWdw" name="getAIUnit" isLeaf="true" method="_5w5T2VJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xnsk1JPEeiyW7NaN4qWdw">
                      <body>Gets the AI-unit this mission has been created for.&#xD;
     *&#xD;
     * @return The &lt;code>AIUnit&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uECR1JPEeiyW7NaN4qWdw" type="_5qMO41JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UdPcVJPEeiyW7NaN4qWdw" name="getUnit" isLeaf="true" method="_5w564FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xnslFJPEeiyW7NaN4qWdw">
                      <body>Gets the unit this mission has been created for.&#xD;
     *&#xD;
     * @return The &lt;code>Unit&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uEpUFJPEeiyW7NaN4qWdw" type="_5qH9c1JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Ud2gFJPEeiyW7NaN4qWdw" name="getPlayer" visibility="protected" isLeaf="true" method="_5w564lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xnslVJPEeiyW7NaN4qWdw">
                      <body>Convenience accessor for the owning player.&#xD;
     *&#xD;
     * @return The &lt;code>Player&lt;/code> that owns the mission unit.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uEpUVJPEeiyW7NaN4qWdw" type="_5qHWYVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Ud2gVJPEeiyW7NaN4qWdw" name="getAIPlayer" visibility="protected" isLeaf="true" method="_5w565FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xnsllJPEeiyW7NaN4qWdw">
                      <body>Convenience accessor for the owning AI player.&#xD;
     *&#xD;
     * @return The &lt;code>AIPlayer&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uEpUlJPEeiyW7NaN4qWdw" type="_5q6AkFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Ud2glJPEeiyW7NaN4qWdw" name="getEuropeanAIPlayer" visibility="protected" isLeaf="true" method="_5w565lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xnsl1JPEeiyW7NaN4qWdw">
                      <body>Convenience accessor for the owning European AI player.&#xD;
     *&#xD;
     * @return The &lt;code>EuropeanAIPlayer&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uEpU1JPEeiyW7NaN4qWdw" type="_5qM18VJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UedkFJPEeiyW7NaN4qWdw" name="getAIRandom" visibility="protected" isLeaf="true" method="_5w6h8FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xnsmFJPEeiyW7NaN4qWdw">
                      <body>Convenience accessor for the unit/player PRNG.&#xD;
     *&#xD;
     * @return A &lt;code>Random&lt;/code> to use.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uEpVFJPEeiyW7NaN4qWdw" type="_5q0hAFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UedkVJPEeiyW7NaN4qWdw" name="isValid" isLeaf="true" method="_5w6h8lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xnsmVJPEeiyW7NaN4qWdw">
                      <body>Is this mission valid?&#xD;
     *&#xD;
     * @return True if the mission is valid.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5UedklJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UfEoFJPEeiyW7NaN4qWdw" name="isTargetReason" isStatic="true" method="_5w6h9FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xnsmlJPEeiyW7NaN4qWdw">
                      <body>Is an invalidity reason due to a target failure?&#xD;
     *&#xD;
     * @return True if the reason starts with &quot;target-&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5UfEoVJPEeiyW7NaN4qWdw" name="reason">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5UfEolJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Uhg4FJPEeiyW7NaN4qWdw" name="moveRandomlyTurn" visibility="protected" method="_5w9lSFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTr1JPEeiyW7NaN4qWdw">
                      <body>Moves a unit randomly for the rest of its turn.&#xD;
     *&#xD;
     * @param logMe A string to log the random number generation with.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5Uhg4VJPEeiyW7NaN4qWdw" name="logMe">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UivAFJPEeiyW7NaN4qWdw" name="dispose"/>
                  <ownedOperation xmi:id="_5UivBFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5w-MYFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xo6s1JPEeiyW7NaN4qWdw">
                      <body>Get the base transport priority for the unit performing this mission.&#xD;
     *&#xD;
     * @return A base transport priority.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5UjWEFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UjWEVJPEeiyW7NaN4qWdw" name="getTransportDestination" method="_5w-MYlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xo6tFJPEeiyW7NaN4qWdw">
                      <body>Gets the destination of a required transport.&#xD;
     *&#xD;
     * Override this in the child mission classes if there is a useful&#xD;
     * intermediate point to deliver the unit distinct from the&#xD;
     * target.&#xD;
     *&#xD;
     * @return The mission target, or null if the mission is invalid,&#xD;
     *     otherwise lacks a target (e.g. UnitWanderHostile), or the&#xD;
     *     unit does not need transport.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uQPgFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UjWElJPEeiyW7NaN4qWdw" name="getTarget" isAbstract="true">
                    <ownedComment xmi:id="_5xo6tVJPEeiyW7NaN4qWdw">
                      <body>Gets the target of this mission, if any.&#xD;
     *&#xD;
     * @return The target of this mission, or null if none.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uQPgVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Uj9IFJPEeiyW7NaN4qWdw" name="findTarget" isAbstract="true">
                    <ownedComment xmi:id="_5xo6t1JPEeiyW7NaN4qWdw">
                      <body>Finds a new target for this mission.&#xD;
     *&#xD;
     * @return A new target for this mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uQPhFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Uj9IVJPEeiyW7NaN4qWdw" name="isOneTime" method="_5w-MZFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xo6uFJPEeiyW7NaN4qWdw">
                      <body>Should this mission be considered a mere fallback to be replaced&#xD;
     * at will?&#xD;
     *&#xD;
     * Missions are not one-time by default, true one-time missions&#xD;
     * must override this routine.&#xD;
     *&#xD;
     * @return False.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5Uj9IlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Uj9I1JPEeiyW7NaN4qWdw" name="invalidReason" isAbstract="true">
                    <ownedComment xmi:id="_5xo6uVJPEeiyW7NaN4qWdw">
                      <body>Why is this mission invalid?&#xD;
     *&#xD;
     * Mission subclasses must implement this routine, which probably&#xD;
     * should start by checking invalidAIUnitReason.&#xD;
     * &#xD;
     * A mission can be invalid for a number of subclass-specific&#xD;
     * reasons.  For example: a seek-and-destroy mission could be&#xD;
     * invalid because of a improved stance towards the targeted&#xD;
     * player.&#xD;
     *&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5Uj9JFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5UkkMFJPEeiyW7NaN4qWdw" name="toString" method="_5w-zYlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5UlLQFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uDbMFJPEeiyW7NaN4qWdw" name="Mission" visibility="protected" method="_5w5T0FJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5uDbM1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5uDbNFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xnskVJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * Note that missions are attached to their units, and thus do&#xD;
     * not need AI ids, hence the plain superclass constructor.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uDbMVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uDbMlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uDbNVJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uECQFJPEeiyW7NaN4qWdw" name="Mission" visibility="protected" method="_5w5T1FJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5uECRFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5uECRVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xnsklJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code> and target.&#xD;
     *&#xD;
     * Note that missions are attached to their units, and thus do&#xD;
     * not need AI ids, hence the plain superclass constructor.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param target The initial target &lt;code>Location&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uECQVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uECQlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uECQ1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uECRlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uEpVVJPEeiyW7NaN4qWdw" name="invalidUnitReason" isStatic="true" method="_5w6h91JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xnsm1JPEeiyW7NaN4qWdw">
                      <body>Is a unit able to perform a mission of a particular type?&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uEpVlJPEeiyW7NaN4qWdw" name="unit" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uFQYFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uFQYVJPEeiyW7NaN4qWdw" name="invalidAIUnitReason" isStatic="true" method="_5w6h-lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xnsnFJPEeiyW7NaN4qWdw">
                      <body>Is an AI unit able to perform a mission of a particular type?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uFQYlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uFQY1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uFQZFJPEeiyW7NaN4qWdw" name="invalidNewMissionReason" isStatic="true" method="_5w6h_VJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoToFJPEeiyW7NaN4qWdw">
                      <body>Is an AI unable to perform a new mission because it already has&#xD;
     * a valid, non-onetime mission?&#xD;
     *&#xD;
     * @return &quot;mission-exists&quot; if a valid mission is found, or null&#xD;
     *     if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uFQZVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uFQZlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uF3cFJPEeiyW7NaN4qWdw" name="invalidTargetReason" isStatic="true" method="_5w7JAFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoToVJPEeiyW7NaN4qWdw">
                      <body>Is a target a valid mission target?&#xD;
     *&#xD;
     * @param target The target &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for the target to be invalid, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uF3cVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uF3clJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uF3c1JPEeiyW7NaN4qWdw" name="invalidTargetReason" isStatic="true" method="_5w7JA1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTolJPEeiyW7NaN4qWdw">
                      <body>Is a target a valid mission target?&#xD;
     *&#xD;
     * @param target The target &lt;code>Location&lt;/code> to check.&#xD;
     * @param owner A &lt;code>Player&lt;/code> that should own&#xD;
     *     the target.&#xD;
     * @return A reason for the target to be invalid, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uF3dFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uF3dVJPEeiyW7NaN4qWdw" name="owner" type="_5qHWYVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uGegFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uGegVJPEeiyW7NaN4qWdw" name="invalidTransportableReason" isStatic="true" method="_5w7JB1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTo1JPEeiyW7NaN4qWdw">
                      <body>Is there a reason to invalidate mission to move a transportable?&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to check.&#xD;
     * @return A reason for the transport to be invalid, or null if&#xD;
     *     none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uGeglJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uGeg1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uGehFJPEeiyW7NaN4qWdw" name="invalidAttackReason" isStatic="true" method="_5w7JClJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTpFJPEeiyW7NaN4qWdw">
                      <body>Is another player a valid attack target?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that will attack.&#xD;
     * @param other The &lt;code>Player&lt;/code> to attack.&#xD;
     * @return A reason why the attack would be invalid, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uGehVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uHFkFJPEeiyW7NaN4qWdw" name="other" type="_5qHWYVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uHFkVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uHFklJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5w7wEFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTpVJPEeiyW7NaN4qWdw">
                      <body>Is an AI unit able to perform a different mission?&#xD;
     *&#xD;
     * AIPlayers will call FooMission.invalidReason(aiUnit) to&#xD;
     * determine whether it is valid to assign some unit to a&#xD;
     * FooMission, so `interesting' Mission subclasses with complex&#xD;
     * validity requirements must implement a routine with this&#xD;
     * signature.  Conversely, simple Missions that are always possible&#xD;
     * need not.&#xD;
     *&#xD;
     * Implementations should usually start by calling this routine&#xD;
     * (i.e. Mission.invalidReason(AIUnit)).&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uHFk1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uHFlFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uHFlVJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5w7wE1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTplJPEeiyW7NaN4qWdw">
                      <body>Is an AI unit able to perform a mission with a specified target?&#xD;
     *&#xD;
     * Specific Missions can be invalid for target-related reasons.&#xD;
     * Such Missions need to implement a routine with this signature,&#xD;
     * as it will be called by the GoalDeciders in map path find/searches&#xD;
     * to choose a Mission target.&#xD;
     *&#xD;
     * Implementations should usually start by calling either&#xD;
     * invalidAIUnitReason() or this routine if the target checking is&#xD;
     * trivial.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The target &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uHsoFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uHsoVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uHsolJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uHso1JPEeiyW7NaN4qWdw" name="lbAt" visibility="protected" method="_5w7wF1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTp1JPEeiyW7NaN4qWdw">
                      <body>State where a unit is.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return This &lt;code>Mission&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uHspFJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uHspVJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uITsFJPEeiyW7NaN4qWdw" name="lbAttack" visibility="protected" method="_5w7wGlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTqFJPEeiyW7NaN4qWdw">
                      <body>State that the unit has made an attack.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @param what What is being attacked (a &lt;code>Unit&lt;/code> or&#xD;
     *     &lt;code>Settlement&lt;/code>).&#xD;
     * @return This &lt;code>Mission&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uITsVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uITslJPEeiyW7NaN4qWdw" name="what" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uITs1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uITtFJPEeiyW7NaN4qWdw" name="lbDodge" visibility="protected" method="_5w7wHlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTqVJPEeiyW7NaN4qWdw">
                      <body>State that the unit is dodging.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return This &lt;code>Mission&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uITtVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uITtlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uJh0FJPEeiyW7NaN4qWdw" name="lbDone" visibility="protected" method="_5w7wIVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uJh0VJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uJh0lJPEeiyW7NaN4qWdw" name="cont">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uJh01JPEeiyW7NaN4qWdw" name="reasons" type="_5uI6wVJPEeiyW7NaN4qWdw">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5uJh1lJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uJh1FJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uKI4FJPEeiyW7NaN4qWdw" name="lbDrop" visibility="protected" method="_5w8XIFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uKI4VJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uKI4lJPEeiyW7NaN4qWdw" name="reasons" type="_5uI6wVJPEeiyW7NaN4qWdw">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5uKI5VJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uKI41JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uKv8VJPEeiyW7NaN4qWdw" name="lbFail" visibility="protected" method="_5w8XJVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uKv8lJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uKv81JPEeiyW7NaN4qWdw" name="cont">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uKv9FJPEeiyW7NaN4qWdw" name="reasons" type="_5uI6wVJPEeiyW7NaN4qWdw">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5uLXAFJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uKv9VJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uLXAlJPEeiyW7NaN4qWdw" name="lbMove" visibility="protected" method="_5w8-MFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTqlJPEeiyW7NaN4qWdw">
                      <body>State that a bad move has occurred.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @param mt The bad &lt;code>MoveType&lt;/code>.&#xD;
     * @return This &lt;code>Mission&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uLXA1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uLXBFJPEeiyW7NaN4qWdw" name="mt" type="_5q8c0FJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uLXBVJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uL-EFJPEeiyW7NaN4qWdw" name="lbRetarget" visibility="protected" method="_5w8-NFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTq1JPEeiyW7NaN4qWdw">
                      <body>State that the mission has been retargeted.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return This &lt;code>Mission&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uL-EVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uL-ElJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uL-E1JPEeiyW7NaN4qWdw" name="lbWait" visibility="protected" method="_5w8-N1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uL-FFJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uL-FVJPEeiyW7NaN4qWdw" name="reasons" type="_5uI6wVJPEeiyW7NaN4qWdw">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5uMlIlJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uMlIFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uNMMFJPEeiyW7NaN4qWdw" name="findCircleTarget" visibility="protected" isStatic="true" method="_5w8-PFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTrFJPEeiyW7NaN4qWdw">
                      <body>Finds a target for a unit without considering its movement&#xD;
     * abilities.  This is used by missions when the current unit&#xD;
     * can not find a target with the normal path finding routines,&#xD;
     * and thus should consider targets that may require a carrier.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that is searching.&#xD;
     * @param gd The &lt;code>GoalDecider&lt;/code> that selects targets.&#xD;
     * @param radius A maximum radius from the unit location to search within.&#xD;
     * @param deferOK If true, fall back to the nearest port to Europe.&#xD;
     * @return The best target &lt;code>Tile&lt;/code> found, or null if none.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uNMMVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5uNMNlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5uNMN1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uNMMlJPEeiyW7NaN4qWdw" name="gd" type="_5qJLk1JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5uNMOFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5uNMOVJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uNMM1JPEeiyW7NaN4qWdw" name="radius">
                      <eAnnotations xmi:id="_5uNMOlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5uNMO1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uNMNFJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uNMNVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uNzQFJPEeiyW7NaN4qWdw" name="resolveBlockage" isStatic="true" method="_5w9lQFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTrVJPEeiyW7NaN4qWdw">
                      <body>We have been blocked on the way to a target.  Is it valid to&#xD;
     * attack the blockage, or should it just be avoided?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that was blocked.&#xD;
     * @param target The target &lt;code>Location&lt;/code>.&#xD;
     * @return The blockage to attack, or null if not.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uNzQVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uNzQlJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uNzQ1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uNzRFJPEeiyW7NaN4qWdw" name="moveRandomly" visibility="protected" method="_5w9lRFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTrlJPEeiyW7NaN4qWdw">
                      <body>Moves a unit one step randomly.&#xD;
     *&#xD;
     * @param logMe A string to log the random number generation with.&#xD;
     * @param direction An optional preferred &lt;code>Direction&lt;/code>.&#xD;
     * @return The direction of the move, or null if no move was made.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uNzRVJPEeiyW7NaN4qWdw" name="logMe">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uNzRlJPEeiyW7NaN4qWdw" name="direction" type="_5qaRUFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uOaUFJPEeiyW7NaN4qWdw" type="_5qaRUFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uOaUVJPEeiyW7NaN4qWdw" name="getBestSettlement" visibility="protected" isStatic="true" method="_5w-MUFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xoTsFJPEeiyW7NaN4qWdw">
                      <body>Finds the best existing settlement to use as a target.&#xD;
     * Useful for missions where the unit might be in Europe, but should&#xD;
     * go to a safe spot in the New World and proceed from there.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> that is searching.&#xD;
     * @return A good settlement to restart a Mission from.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uOaUlJPEeiyW7NaN4qWdw" name="player" type="_5qHWYVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uOaU1JPEeiyW7NaN4qWdw" type="_5qaRUlJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uPBYFJPEeiyW7NaN4qWdw" name="travelToTarget" visibility="protected" method="_5w-MU1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xo6sFJPEeiyW7NaN4qWdw">
                      <body>Tries to move this mission's unit to a target location.&#xD;
     *&#xD;
     * First check for units in transit, that is units on a carrier that&#xD;
     * are going to but not yet in Europe, or going to but not yet at&#xD;
     * a Tile and whose path still requires the carrier.  These need to&#xD;
     * be handled by the carrier's TransportMission, not by the unit's&#xD;
     * Mission.&#xD;
     *&#xD;
     * Similarly check for units not in transit but should be, that&#xD;
     * is units not on a carrier but can not get to their target&#xD;
     * without one.  These must just wait.&#xD;
     *&#xD;
     * If there is no impediment to the unit moving towards the target,&#xD;
     * do so.  Return an indicative MoveType for the result of the travel.&#xD;
     * - MOVE if the unit has arrived at the target, although it may&#xD;
     *     have exhausted its moves&#xD;
     * - MOVE_HIGH_SEAS if the unit has set sail to/from Europe&#xD;
     * - MOVE_NO_MOVES is underway but ran out of moves&#xD;
     * - MOVE_NO_ACCESS_EMBARK if progress depends on a carrier, either&#xD;
     *     currently boarded or due to collect the unit&#xD;
     * - MOVE_NO_REPAIR if the unit died for whatever reason&#xD;
     * - MOVE_NO_TILE if there is no path (usually transitory on rivers)&#xD;
     * - MOVE_ILLEGAL if there is an error or permanent restriction&#xD;
     * - other legal results (e.g. ENTER_INDIAN_SETTLEMENT*) if that would&#xD;
     *   occur if the unit proceeded.  Such moves require special handling&#xD;
     *   and are not performed here, the calling mission code must&#xD;
     *   handle them.&#xD;
     *&#xD;
     * @param target The destination &lt;code>Location&lt;/code>.&#xD;
     * @param costDecider The &lt;code>CostDecider&lt;/code> to use in any path&#xD;
     *     finding.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return The type of move the unit stopped at.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uPBYVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uPBYlJPEeiyW7NaN4qWdw" name="costDecider" type="_5qIkgVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uPBY1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uPBZFJPEeiyW7NaN4qWdw" type="_5q4LYlJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uPBZVJPEeiyW7NaN4qWdw" name="followMapPath" visibility="private" method="_5w-MWFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xo6sVJPEeiyW7NaN4qWdw">
                      <body>Follow a path that is on the map (except perhaps the last node)&#xD;
     * and does not use a carrier.&#xD;
     *&#xD;
     * @param path The &lt;code>PathNode&lt;/code> to follow.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return The type of move the unit stopped at.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uPBZlJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uPBZ1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uPocFJPEeiyW7NaN4qWdw" type="_5q4LYlJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uPocVJPEeiyW7NaN4qWdw" name="retargetMission" method="_5w-MXFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xo6slJPEeiyW7NaN4qWdw">
                      <body>Retarget a mission because of some problem.&#xD;
     *&#xD;
     * @param reason The reason for the retarget.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return The current &lt;code>Mission&lt;/code>, which has been set to&#xD;
     *     null on failure to retarget.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uPoclJPEeiyW7NaN4qWdw" name="reason">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uPoc1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uPodFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uQPglJPEeiyW7NaN4qWdw" name="setTarget" isAbstract="true">
                    <ownedComment xmi:id="_5xo6tlJPEeiyW7NaN4qWdw">
                      <body>Sets the target of this mission, if any.&#xD;
     *&#xD;
     * @param target The new target of this mission, or null if none.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uQPg1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uQPhVJPEeiyW7NaN4qWdw" name="doMission" isAbstract="true">
                    <ownedComment xmi:id="_5xo6ulJPEeiyW7NaN4qWdw">
                      <body>Performs the mission.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return The &lt;code>Mission&lt;/code> to continue with, or null&#xD;
     *     if the current mission has completed.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uQPhlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uQ2kFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uQ2kVJPEeiyW7NaN4qWdw" name="toXML" isLeaf="true" method="_5w-zYFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uQ2klJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uRdolJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uRdo1JPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uSEsFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uSEsVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5UwxcFJPEeiyW7NaN4qWdw" name="MissionaryMission">
                  <ownedComment xmi:id="_5xphwFJPEeiyW7NaN4qWdw">
                    <body>Mission for sending a missionary to a native settlement.</body>
                  </ownedComment>
                  <generalization xmi:id="_5sUV0FJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wH3wFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yKfIVJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wH3wVJPEeiyW7NaN4qWdw" value="Logger.getLogger(MissionaryMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wH3wlJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wH3w1JPEeiyW7NaN4qWdw" value="&quot;AI missionary&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wH3xFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw" association="_5yLGMVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wJF5FJPEeiyW7NaN4qWdw" name="TARGET_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wJs8FJPEeiyW7NaN4qWdw" value="&quot;target&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xABhFJPEeiyW7NaN4qWdw" name="MissionaryMission" specification="_5uVIAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xABhVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xABhlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xABh1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xABiFJPEeiyW7NaN4qWdw" type="_5UwxcFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, target);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xABiVJPEeiyW7NaN4qWdw" name="MissionaryMission" specification="_5uVIB1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xABilJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xABi1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xABjFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xABjVJPEeiyW7NaN4qWdw" type="_5UwxcFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xABjlJPEeiyW7NaN4qWdw" name="extractTarget" specification="_5uVvFlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xABj1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xABkFJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xABkVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (path == null) return null;&#xD;
     final Location loc = path.getLastNode().getLocation();&#xD;
     Settlement settlement = (loc == null) ? null : loc.getSettlement();&#xD;
     return (settlement instanceof IndianSettlement&#xD;
         &amp;&amp; invalidIndianSettlementReason(aiUnit,&#xD;
             (IndianSettlement)settlement) == null)&#xD;
         ? (IndianSettlement)settlement&#xD;
         : (settlement instanceof Colony&#xD;
             &amp;&amp; invalidColonyReason(aiUnit, (Colony)settlement) == null)&#xD;
         ? (Colony)settlement&#xD;
         : null;        &#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xAokFJPEeiyW7NaN4qWdw" name="scorePath" specification="_5uWWIFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xAokVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xAoklJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xAok1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Location loc = extractTarget(aiUnit, path);&#xD;
     return (loc instanceof IndianSettlement)&#xD;
         ? 1000 / (path.getTotalTurns() + 1)&#xD;
         : Integer.MIN_VALUE;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xAolFJPEeiyW7NaN4qWdw" name="getGoalDecider" specification="_5uWWJFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xAolVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5xAollJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5xAol1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xAomFJPEeiyW7NaN4qWdw" name="deferOK">
                      <eAnnotations xmi:id="_5xAomVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5xAomlJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xAom1JPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>GoalDecider gd = new GoalDecider() {&#xD;
             private PathNode bestPath = null;&#xD;
             private int bestValue = Integer.MIN_VALUE;&#xD;
&#xD;
             @Override&#xD;
             public PathNode getGoal() { return bestPath; }&#xD;
             @Override&#xD;
             public boolean hasSubGoals() { return true; }&#xD;
             @Override&#xD;
             public boolean check(Unit u, PathNode path) {&#xD;
                 if (path.getLastNode().getLocation().getSettlement()&#xD;
                     instanceof IndianSettlement) {&#xD;
                     int value = scorePath(aiUnit, path);&#xD;
                     if (bestValue &lt; value) {&#xD;
                         bestValue = value;&#xD;
                         bestPath = path;&#xD;
                         return true;&#xD;
                     }&#xD;
                 }&#xD;
                 return false;&#xD;
             }&#xD;
         };&#xD;
     return (deferOK) ? GoalDeciders.getComposedGoalDecider(false, gd,&#xD;
         GoalDeciders.getOurClosestSettlementGoalDecider())&#xD;
         : gd;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xAonFJPEeiyW7NaN4qWdw" name="findTargetPath" specification="_5uW9NlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xAonVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xAonlJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xAon1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xAooFJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (invalidAIUnitReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Location start = unit.getPathStartLocation();&#xD;
     final Unit carrier = unit.getCarrier();&#xD;
     final GoalDecider gd = getGoalDecider(aiUnit, deferOK);&#xD;
     final CostDecider standardCd&#xD;
         = CostDeciders.avoidSettlementsAndBlockingUnits();&#xD;
     // Is there a valid target available from the starting tile?&#xD;
     return unit.search(start, gd, standardCd, range, carrier);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xAooVJPEeiyW7NaN4qWdw" name="findTarget" specification="_5uXkQFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xAoolJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xAoo1JPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xAopFJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xAopVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>PathNode path = findTargetPath(aiUnit, range, deferOK);&#xD;
     return (path == null) ? null : extractTarget(aiUnit, path);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xBPoFJPEeiyW7NaN4qWdw" name="prepare" specification="_5uXkRVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xBPoVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xBPolJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidReason(aiUnit);&#xD;
     if (reason == null) {&#xD;
         final Unit unit = aiUnit.getUnit();&#xD;
         if (!unit.hasAbility(Ability.ESTABLISH_MISSION)&#xD;
             &amp;&amp; (((FreeColGameObject)unit.getLocation())&#xD;
                 .hasAbility(Ability.DRESS_MISSIONARY))) {&#xD;
             aiUnit.equipForRole(unit.getSpecification().getMissionaryRole());&#xD;
         }&#xD;
         reason = (unit.hasAbility(Ability.ESTABLISH_MISSION))&#xD;
             ? null&#xD;
             : &quot;unit-can-not-establish-mission&quot;;&#xD;
     }&#xD;
     return reason;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xBPo1JPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5uYLUVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xBPpFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xBPpVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     if (reason != null) return reason;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     return (!unit.isPerson()) ? Mission.UNITNOTAPERSON&#xD;
         : (unit.getSkillLevel() >= -1&#xD;
             &amp;&amp; !unit.hasAbility(Ability.EXPERT_MISSIONARY))&#xD;
         ? &quot;unit-is-not-subskilled-or-expertMissionary&quot;&#xD;
         : (unit.isInEurope() || unit.isAtSea()) &#xD;
         ? ((unit.getOwner().getNumberOfSettlements() &lt;= 0)&#xD;
             ? &quot;unit-off-map-but-missing-initial-settlement&quot;&#xD;
             : null)&#xD;
         : (unit.isInMission()) ? &quot;unit-is-already-at-mission&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xBPplJPEeiyW7NaN4qWdw" name="invalidColonyReason" specification="_5uYLVFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xBPp1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xBPqFJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xBPqVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidTargetReason(colony, aiUnit.getUnit().getOwner());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xBPqlJPEeiyW7NaN4qWdw" name="invalidIndianSettlementReason" specification="_5uYyYlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xBPq1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xBPrFJPEeiyW7NaN4qWdw" name="is" type="_5qjbQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xBPrVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidTargetReason(is);&#xD;
     if (reason != null) return reason;&#xD;
     final Player owner = aiUnit.getUnit().getOwner();&#xD;
     return (!owner.hasContacted(is.getOwner()))&#xD;
         ? &quot;target-is-uncontacted&quot;&#xD;
         : (is.getOwner().atWarWith(owner))&#xD;
         ? &quot;target-at-war&quot;&#xD;
         : (is.hasMissionary(owner))&#xD;
         ? &quot;target-has-our-mission&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xBPrlJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5uZZcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xBPr1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xBPsFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidMissionReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xBPsVJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5uZZc1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xBPslJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xBPs1JPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xBPtFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (loc instanceof IndianSettlement)&#xD;
         ? invalidIndianSettlementReason(aiUnit, (IndianSettlement)loc)&#xD;
         : (loc instanceof Colony)&#xD;
         ? invalidColonyReason(aiUnit, (Colony)loc)&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xBPtVJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5UzNsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xBPtlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return NORMAL_TRANSPORT_PRIORITY;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xB2sFJPEeiyW7NaN4qWdw" name="findTarget" specification="_5Uz0w1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xB2sVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return findTarget(getAIUnit(), 20, true);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xB2slJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5U0b01JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xB2s1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), getTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xB2tFJPEeiyW7NaN4qWdw" name="doMission" specification="_5uaAgVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xB2tVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xB2tlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (isTargetReason(reason)) {&#xD;
         return retargetMission(reason, lb);&#xD;
     } else if (reason != null) {&#xD;
         return lbFail(lb, false, reason);&#xD;
     }&#xD;
&#xD;
     // Go to the target.&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     final Unit unit = getUnit();&#xD;
&#xD;
     Unit.MoveType mt = travelToTarget(getTarget(),&#xD;
         CostDeciders.avoidSettlementsAndBlockingUnits(), lb);&#xD;
     switch (mt) {&#xD;
     case MOVE:&#xD;
         // Reached an intermediate colony.  Retarget, but do not&#xD;
         // accept fallback targets.&#xD;
         lbAt(lb);&#xD;
         Location completed = getTarget();&#xD;
         Location newTarget = findTarget(aiUnit, 20, false);&#xD;
         if (newTarget == null || newTarget == completed) {&#xD;
             return lbFail(lb, false, &quot;retarget failed&quot;);&#xD;
         }&#xD;
         setTarget(newTarget);&#xD;
         return lbRetarget(lb);&#xD;
&#xD;
     case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
     case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
         return lbWait(lb);&#xD;
         &#xD;
     case MOVE_NO_ACCESS_EMBARK: case MOVE_NO_TILE:&#xD;
         return this;&#xD;
&#xD;
     case ENTER_INDIAN_SETTLEMENT_WITH_MISSIONARY: // Arrived&#xD;
         break;&#xD;
&#xD;
     default:&#xD;
         return lbMove(lb, mt);&#xD;
     }&#xD;
&#xD;
     // Establish the mission.&#xD;
     lbAt(lb);&#xD;
     Direction d = unit.getTile().getDirection(getTarget().getTile());&#xD;
     assert d != null;&#xD;
     IndianSettlement is = (IndianSettlement)getTarget();&#xD;
     AIMessage.askEstablishMission(aiUnit, d, is.hasMissionary());&#xD;
     return (is.hasMissionary(unit.getOwner()) &amp;&amp; unit.isInMission())&#xD;
         ? lbDone(lb, false, &quot;established&quot;)&#xD;
         : lbFail(lb, false, &quot;establish&quot;);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xB2t1JPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5uank1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xB2uFJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (target != null) {&#xD;
         xw.writeAttribute(TARGET_TAG, target.getId());&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xB2uVJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5ub1sFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xB2ulJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
     &#xD;
     target = xr.getLocationAttribute(getGame(), TARGET_TAG, false);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xB2u1JPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5U1C4lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xB2vFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xCdwFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5U1p81JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xCdwVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;missionaryMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5UzNsFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5xBPtVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5UzNsVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Uz0w1JPEeiyW7NaN4qWdw" name="findTarget" method="_5xB2sFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uaAgFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5U0b01JPEeiyW7NaN4qWdw" name="invalidReason" method="_5xB2slJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5U0b1FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5U1C4lJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5xB2u1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5U1C41JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5U1p81JPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5xCdwFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqv4VJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;missionaryMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5U1p9FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uVIAFJPEeiyW7NaN4qWdw" name="MissionaryMission" method="_5xABhFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5uVIBFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5uVIBVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xqI0FJPEeiyW7NaN4qWdw">
                      <body>Creates a missionary mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param target The target &lt;code>Location&lt;/code> for this mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uVIAVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uVIAlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uVIA1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uVIBlJPEeiyW7NaN4qWdw" type="_5UwxcFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uVIB1JPEeiyW7NaN4qWdw" name="MissionaryMission" method="_5xABiVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5uVvE1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5uVvFFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xqI0VJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>MissionaryMission&lt;/code> and reads&#xD;
     * the given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uVvEFJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uVvEVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uVvElJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uVvFVJPEeiyW7NaN4qWdw" type="_5UwxcFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uVvFlJPEeiyW7NaN4qWdw" name="extractTarget" isStatic="true" method="_5xABjlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqI0lJPEeiyW7NaN4qWdw">
                      <body>Extract a valid target for this mission from a path.&#xD;
     *&#xD;
     * @param aiUnit A &lt;code>AIUnit&lt;/code> to perform the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to extract a target from,&#xD;
     *     (uses the unit location if null).&#xD;
     * @return A target for this mission, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uVvF1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uVvGFJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uVvGVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uWWIFJPEeiyW7NaN4qWdw" name="scorePath" isStatic="true" method="_5xAokFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqI01JPEeiyW7NaN4qWdw">
                      <body>Evaluate a potential cashin mission for a given unit and&#xD;
     * path.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to do the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to take to the target.&#xD;
     * @return A score for the proposed mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uWWIVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uWWIlJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uWWI1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uWWJFJPEeiyW7NaN4qWdw" name="getGoalDecider" visibility="private" isStatic="true" method="_5xAolFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqI1FJPEeiyW7NaN4qWdw">
                      <body>Makes a goal decider that checks for potential missions.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to find a mission with.&#xD;
     * @param deferOK Enable deferring to a fallback colony.&#xD;
     * @return A suitable &lt;code>GoalDecider&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uWWJVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5uW9MlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5uW9M1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uW9MFJPEeiyW7NaN4qWdw" name="deferOK">
                      <eAnnotations xmi:id="_5uW9NFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5uW9NVJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uW9MVJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uW9NlJPEeiyW7NaN4qWdw" name="findTargetPath" visibility="private" isStatic="true" method="_5xAonFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqI1VJPEeiyW7NaN4qWdw">
                      <body>Find a suitable mission location for this unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to execute this mission.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A path to the new target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uW9N1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uW9OFJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uW9OVJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uW9OlJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uXkQFJPEeiyW7NaN4qWdw" name="findTarget" isStatic="true" method="_5xAooVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqI1lJPEeiyW7NaN4qWdw">
                      <body>Finds a suitable mission target for the supplied unit.&#xD;
     * Falls back to the best colony if a path is not found.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A new target for this mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uXkQVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uXkQlJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uXkQ1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uXkRFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uXkRVJPEeiyW7NaN4qWdw" name="prepare" isStatic="true" method="_5xBPoFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqI11JPEeiyW7NaN4qWdw">
                      <body>Prepare a unit for a Missionary mission.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to prepare.&#xD;
     * @return A reason why the unit can not perform this mission, or null&#xD;
     *     if none.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uXkRlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uYLUFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uYLUVJPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5xBPo1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqI2FJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason to not perform the mission, or null if none.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uYLUlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uYLU1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uYLVFJPEeiyW7NaN4qWdw" name="invalidColonyReason" visibility="private" isStatic="true" method="_5xBPplJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqI2VJPEeiyW7NaN4qWdw">
                      <body>Why would a MissionaryMission be invalid with the given Colony?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param colony The &lt;code>Colony&lt;/code> to check.&#xD;
     * @return A reason to not perform the mission, or null if none.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uYLVVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uYyYFJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uYyYVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uYyYlJPEeiyW7NaN4qWdw" name="invalidIndianSettlementReason" visibility="private" isStatic="true" method="_5xBPqlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqI2lJPEeiyW7NaN4qWdw">
                      <body>Why would a MissionaryMission be invalid with the given&#xD;
     * IndianSettlement?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param is The &lt;code>IndianSettlement&lt;/code> to check.&#xD;
     * @return A reason to not perform the mission, or null if none.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uYyY1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uYyZFJPEeiyW7NaN4qWdw" name="is" type="_5qjbQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uYyZVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uZZcFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xBPrlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqI21JPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uZZcVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uZZclJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uZZc1JPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xBPsVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqv4FJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uZZdFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uZZdVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uZZdlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uaAgVJPEeiyW7NaN4qWdw" name="doMission" method="_5xB2tFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uaAglJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uaAg1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uank1JPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5xB2t1JPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5ubOoFJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ub1sFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5xB2uVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5ub1sVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5U7wkFJPEeiyW7NaN4qWdw" name="PioneeringMission">
                  <ownedComment xmi:id="_5xqv4lJPEeiyW7NaN4qWdw">
                    <body>Mission for controlling a pioneer.</body>
                  </ownedComment>
                  <generalization xmi:id="_5saccFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wKUAFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yLtQFJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wKUAVJPEeiyW7NaN4qWdw" value="Logger.getLogger(PioneeringMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wK7EFJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wK7EVJPEeiyW7NaN4qWdw" value="&quot;AI pioneer&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wK7ElJPEeiyW7NaN4qWdw" name="DEFAULT_THREAT_TURNS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wK7E1JPEeiyW7NaN4qWdw" value="3"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wK7FFJPEeiyW7NaN4qWdw" name="tileImprovementPlan" type="_5sYnQVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yMUUVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wK7FVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw" association="_5yMUVFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wMwQFJPEeiyW7NaN4qWdw" name="TARGET_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wMwQVJPEeiyW7NaN4qWdw" value="&quot;target&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDE1FJPEeiyW7NaN4qWdw" name="PioneeringMission" specification="_5udq4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xDE1VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDE1lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDE11JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDE2FJPEeiyW7NaN4qWdw" type="_5U7wkFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, target);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDE2VJPEeiyW7NaN4qWdw" name="PioneeringMission" specification="_5ueR8FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xDE2lJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDE21JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDE3FJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDE3VJPEeiyW7NaN4qWdw" type="_5U7wkFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDE3lJPEeiyW7NaN4qWdw" name="getBestPlan" specification="_5ueR91JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xDE31JPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDE4FJPEeiyW7NaN4qWdw" type="_5sYnQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return getEuropeanAIPlayer().getBestPlan(tile);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDr4FJPEeiyW7NaN4qWdw" name="getBestPlan" specification="_5ue5AlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xDr4VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDr4lJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDr41JPEeiyW7NaN4qWdw" type="_5sYnQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return ((EuropeanAIPlayer)aiUnit.getAIOwner()).getBestPlan(tile);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDr5FJPEeiyW7NaN4qWdw" name="setTileImprovementPlan" specification="_5ufgEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xDr5VJPEeiyW7NaN4qWdw" name="tip" type="_5sYnQVJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>TileImprovementPlan old = tileImprovementPlan;&#xD;
     this.tileImprovementPlan = tip;&#xD;
     AIUnit aiUnit = getAIUnit();&#xD;
     if (old != tileImprovementPlan) {&#xD;
         if (old != null &amp;&amp; old.getPioneer() == aiUnit) {&#xD;
             old.setPioneer(null);&#xD;
         }&#xD;
         if (tileImprovementPlan != null) {&#xD;
             tileImprovementPlan.setPioneer(aiUnit);&#xD;
             getEuropeanAIPlayer().removeTileImprovementPlan(tip);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDr5lJPEeiyW7NaN4qWdw" name="abandonTileImprovementPlan" specification="_5U9lwFJPEeiyW7NaN4qWdw">
                    <language>java</language>
                    <body>if (tileImprovementPlan != null) {&#xD;
         if (tileImprovementPlan.getPioneer() == getAIUnit()) {&#xD;
             tileImprovementPlan.setPioneer(null);&#xD;
         }&#xD;
         setTileImprovementPlan(null);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDr51JPEeiyW7NaN4qWdw" name="dispose" specification="_5U9lwVJPEeiyW7NaN4qWdw">
                    <language>java</language>
                    <body>abandonTileImprovementPlan();&#xD;
     super.dispose();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDr6FJPEeiyW7NaN4qWdw" name="hasTools" specification="_5ufgElJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xDr6VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDr6lJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return aiUnit.getUnit().hasAbility(Ability.IMPROVE_TERRAIN);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDr61JPEeiyW7NaN4qWdw" name="hasTools" specification="_5U-M01JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xDr7FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return hasTools(getAIUnit());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDr7VJPEeiyW7NaN4qWdw" name="extractTarget" specification="_5ugHIFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xDr7lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDr71JPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDr8FJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (path == null) return null;&#xD;
     final Location loc = path.getLastNode().getLocation();&#xD;
     return (loc == null) ? null&#xD;
         : ((hasTools(aiUnit))&#xD;
             ? ((invalidReason(aiUnit, loc.getTile()) != null) ? null&#xD;
                 : loc.getTile())&#xD;
             : ((invalidReason(aiUnit, loc.getColony()) != null) ? null&#xD;
                 : loc.getColony()));&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xDr8VJPEeiyW7NaN4qWdw" name="scorePath" specification="_5uguMFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xDr8lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDr81JPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xDr9FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Location loc = extractTarget(aiUnit, path);&#xD;
     if (hasTools(aiUnit)) {&#xD;
         TileImprovementPlan tip;&#xD;
         if (loc instanceof Tile&#xD;
             &amp;&amp; (tip = getBestPlan(aiUnit, (Tile)loc)) != null) {&#xD;
             return 1000 * tip.getValue() / (path.getTotalTurns() + 1);&#xD;
         }&#xD;
     } else {&#xD;
         if (loc instanceof Colony) {&#xD;
             return 1000 / (path.getTotalTurns() + 1);&#xD;
         }&#xD;
     }&#xD;
     return Integer.MIN_VALUE;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xES8FJPEeiyW7NaN4qWdw" name="getGoalDecider" specification="_5uguNFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xES8VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5xES8lJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5xES81JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xES9FJPEeiyW7NaN4qWdw" name="deferOK">
                      <eAnnotations xmi:id="_5xES9VJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5xES9lJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xES91JPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final GoalDecider gd = new GoalDecider() {&#xD;
             private PathNode bestPath = null;&#xD;
             private int bestValue = Integer.MIN_VALUE;&#xD;
&#xD;
             @Override&#xD;
             public PathNode getGoal() { return bestPath; }&#xD;
             @Override&#xD;
             public boolean hasSubGoals() { return true; }&#xD;
             @Override&#xD;
             public boolean check(Unit u, PathNode path) {&#xD;
                 int value = scorePath(aiUnit, path);&#xD;
                 if (bestValue &lt; value) {&#xD;
                     bestValue = value;&#xD;
                     bestPath = path;&#xD;
                     return true;&#xD;
                 }&#xD;
                 return false;&#xD;
             }&#xD;
         };&#xD;
     return (deferOK) ? GoalDeciders.getComposedGoalDecider(false, gd,&#xD;
         GoalDeciders.getOurClosestSettlementGoalDecider())&#xD;
         : gd;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xES-FJPEeiyW7NaN4qWdw" name="findTargetPath" specification="_5uhVRFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xES-VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xES-lJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xES-1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xES_FJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (invalidAIUnitReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Location start = unit.getPathStartLocation();&#xD;
     final Unit carrier = unit.getCarrier();&#xD;
     final GoalDecider gd = getGoalDecider(aiUnit, deferOK);&#xD;
     final CostDecider standardCd&#xD;
         = CostDeciders.avoidSettlementsAndBlockingUnits();&#xD;
&#xD;
     // Try for something sensible nearby.&#xD;
     return unit.search(start, gd, standardCd, range, carrier);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xES_VJPEeiyW7NaN4qWdw" name="getBestPioneeringColony" specification="_5uh8UFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xES_lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xES_1JPEeiyW7NaN4qWdw" type="_5qFhMVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>EuropeanAIPlayer aiPlayer = (EuropeanAIPlayer)aiUnit.getAIOwner();&#xD;
     AIColony bestColony = null;&#xD;
     int bestValue = -1;&#xD;
     for (AIColony aic : aiPlayer.getAIColonies()) {&#xD;
         int value = aic.getTileImprovementPlans().size();&#xD;
         if (value > bestValue) {&#xD;
             bestValue = value;&#xD;
             bestColony = aic;&#xD;
         }&#xD;
     }&#xD;
     if (bestColony == null) return null;&#xD;
     Colony colony = bestColony.getColony();&#xD;
     if (colony.isConnectedPort()) return colony;&#xD;
     PathNode path = aiUnit.getUnit().findOurNearestPort();&#xD;
     return (path == null) ? colony&#xD;
         : path.getLastNode().getLocation().getColony();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xETAFJPEeiyW7NaN4qWdw" name="findTarget" specification="_5uh8U1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xETAVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xETAlJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xETA1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xETBFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>PathNode path = findTargetPath(aiUnit, range, false);&#xD;
     if (path != null) return extractTarget(aiUnit, path);&#xD;
     if (deferOK) return getBestPioneeringColony(aiUnit);&#xD;
     Location loc = findCircleTarget(aiUnit, getGoalDecider(aiUnit, false),&#xD;
                                     range*3, false);&#xD;
     return (hasTools(aiUnit)) ? loc : Location.upLoc(loc);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xETBVJPEeiyW7NaN4qWdw" name="prepare" specification="_5uijYVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xETBlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xETB1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidReason(aiUnit);&#xD;
     if (reason != null) return reason;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     if (!hasTools(aiUnit)&#xD;
         &amp;&amp; !aiUnit.equipForRole(unit.getSpecification().getPioneerRole())) {&#xD;
         return &quot;unit-could-not-equip&quot;;&#xD;
     }&#xD;
     return (hasTools(aiUnit) || unit.hasAbility(Ability.EXPERT_PIONEER))&#xD;
         ? null&#xD;
         : &quot;unit-missing-tools&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xETCFJPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5uijZFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xETCVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xETClJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     return (reason != null) ? reason&#xD;
         : (!aiUnit.getUnit().isPerson()) ? Mission.UNITNOTAPERSON&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xETC1JPEeiyW7NaN4qWdw" name="invalidColonyReason" specification="_5ujKcVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xETDFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xETDVJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xETDlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidTargetReason(colony, aiUnit.getUnit().getOwner());&#xD;
     Role role = aiUnit.getUnit().getSpecification().getRole(&quot;model.role.pioneer&quot;);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (!hasTools(aiUnit)&#xD;
            &amp;&amp; !colony.canProvideGoods(role.getRequiredGoods()))&#xD;
         ? &quot;colony-can-not-provide-equipment&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xE6AFJPEeiyW7NaN4qWdw" name="getPlan" specification="_5ujxgFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xE6AVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xE6AlJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xE6A1JPEeiyW7NaN4qWdw" type="_5sYnQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>PioneeringMission pm = aiUnit.getMission(PioneeringMission.class);&#xD;
     return (pm != null&#xD;
         &amp;&amp; pm.getTileImprovementPlan() != null&#xD;
         &amp;&amp; pm.getTileImprovementPlan().getTarget() == tile)&#xD;
         ? pm.getTileImprovementPlan()&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xE6BFJPEeiyW7NaN4qWdw" name="invalidTileReason" specification="_5ukYkFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xE6BVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xE6BlJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xE6B1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return (tile == null)&#xD;
         ? Mission.TARGETINVALID&#xD;
         : (!hasTools(aiUnit))&#xD;
         ? &quot;unit-needs-tools&quot;&#xD;
         : (getPlan(aiUnit, tile) == null&#xD;
             &amp;&amp; getBestPlan(aiUnit, tile) == null)&#xD;
         ? &quot;tile-has-no-plan&quot;&#xD;
         : (tile.getOwningSettlement() != null)&#xD;
         ? invalidTargetReason(tile.getOwningSettlement(),&#xD;
                               aiUnit.getUnit().getOwner())&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xE6CFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5ukYlFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xE6CVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xE6ClJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidMissionReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xE6C1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5uk_oVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xE6DFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xE6DVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xE6DlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (loc instanceof Tile)&#xD;
         ? invalidTileReason(aiUnit, (Tile)loc)&#xD;
         : (loc instanceof Colony)&#xD;
         ? ((aiUnit.getUnit().getLocation() instanceof Tile)&#xD;
             ? invalidColonyReason(aiUnit, (Colony)loc)&#xD;
             : invalidTargetReason(loc, aiUnit.getUnit().getOwner()))&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xFhEFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5VApEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xFhEVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return NORMAL_TRANSPORT_PRIORITY;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xFhElJPEeiyW7NaN4qWdw" name="findTarget" specification="_5VB3MlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xFhE1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return findTarget(getAIUnit(), 10, true);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xFhFFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5VCeQFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xFhFVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (tileImprovementPlan != null) {&#xD;
         if (tileImprovementPlan.isDisposed()) {&#xD;
             return &quot;target-plan-disposed&quot;;&#xD;
         }&#xD;
         if (tileImprovementPlan.isComplete()) return null;&#xD;
     }&#xD;
     return invalidReason(getAIUnit(), getTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xFhFlJPEeiyW7NaN4qWdw" name="lbFail" specification="_5ulmsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xFhF1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xFhGFJPEeiyW7NaN4qWdw" name="cont">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xFhGVJPEeiyW7NaN4qWdw" name="reasons" type="_5uI6wVJPEeiyW7NaN4qWdw">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5xFhGlJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xFhG1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (hasTools() &amp;&amp; getUnit().getColony() != null) {&#xD;
         getAIUnit().equipForRole(getSpecification().getDefaultRole());&#xD;
     }&#xD;
     return super.lbFail(lb, false, reasons);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xFhHFJPEeiyW7NaN4qWdw" name="doMission" specification="_5umNxFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xFhHVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xFhHlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
&#xD;
     // Check for completion and tileImprovement failure up front.&#xD;
     if (tileImprovementPlan != null) {&#xD;
         if (tileImprovementPlan.isComplete()) {&#xD;
             lbDone(lb, true, tileImprovementPlan.getType(),&#xD;
                    &quot; at &quot;, getTarget());&#xD;
             setTarget(null);&#xD;
         } else if (!tileImprovementPlan.validate()) {&#xD;
             lbFail(lb, true, &quot;abandoned invalid plan at &quot;,&#xD;
                    getTarget(), &quot;/&quot;, tileImprovementPlan);&#xD;
             setTarget(null);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     /*if (retarget) {&#xD;
         newTarget = findTarget(aiUnit, 10, unit.isInEurope());&#xD;
         if (newTarget == null) {&#xD;
             setTarget(null);&#xD;
             return lbFail(lb, false, &quot; found no target&quot;);&#xD;
         }&#xD;
         setTarget(newTarget);&#xD;
         lb.add(&quot;, retargeting &quot;, newTarget, &quot;/&quot;, tileImprovementPlan);&#xD;
     }*/&#xD;
&#xD;
     String reason = invalidReason();&#xD;
     if (isTargetReason(reason)) {&#xD;
         return retargetMission(reason, lb);&#xD;
     } else if (reason != null) {&#xD;
         return lbFail(lb, false, reason);&#xD;
     }&#xD;
&#xD;
     final Unit unit = getUnit();&#xD;
     final Player player = unit.getOwner();&#xD;
     final EuropeanAIPlayer aiPlayer = getEuropeanAIPlayer();&#xD;
     final CostDecider costDecider&#xD;
         = CostDeciders.avoidSettlementsAndBlockingUnits();&#xD;
     Location newTarget;&#xD;
&#xD;
     if (!hasTools()) { // Get tools first.&#xD;
         // Go there and clear target on arrival.&#xD;
         Unit.MoveType mt = travelToTarget(getTarget(), costDecider, lb);&#xD;
         switch (mt) {&#xD;
         case MOVE: // Arrived&#xD;
             break;&#xD;
&#xD;
         case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
         case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
             return lbWait(lb);&#xD;
&#xD;
         case MOVE_NO_ACCESS_EMBARK: case MOVE_NO_TILE:&#xD;
             return this;&#xD;
&#xD;
         default:&#xD;
             return lbMove(lb, mt);&#xD;
         }&#xD;
&#xD;
         // Try to equip&#xD;
         lbAt(lb);&#xD;
         if (aiUnit.equipForRole(getSpecification().getPioneerRole())&#xD;
             &amp;&amp; hasTools()) {&#xD;
             lb.add(&quot;, equips&quot;);&#xD;
             newTarget = findTarget(aiUnit, 10, false);&#xD;
             if (newTarget == null) {&#xD;
                 return lbFail(lb, false, &quot;no pioneering target&quot;);&#xD;
             }&#xD;
         } else {&#xD;
             lb.add(&quot;, fails to equip&quot;);&#xD;
             newTarget = findTarget(aiUnit, 10, false);&#xD;
             if (newTarget == null&#xD;
                 || Map.isSameLocation(newTarget, getTarget())) {&#xD;
                 return lbFail(lb, false, &quot;no tools target&quot;);&#xD;
             }&#xD;
         }&#xD;
         setTarget(newTarget);&#xD;
         return lbRetarget(lb);&#xD;
     }&#xD;
&#xD;
     // Going to an intermediate colony?&#xD;
     if (getTarget() instanceof Colony&#xD;
         &amp;&amp; invalidTargetReason(getTarget(), player) == null) {&#xD;
         Unit.MoveType mt = travelToTarget(getTarget(), costDecider, lb);&#xD;
         switch (mt) {&#xD;
         case MOVE_HIGH_SEAS: case MOVE_NO_REPAIR:&#xD;
             return lbWait(lb);&#xD;
&#xD;
         case MOVE_NO_MOVES: case MOVE_NO_TILE: case MOVE_ILLEGAL:&#xD;
             return this;&#xD;
&#xD;
         case MOVE:&#xD;
             break;&#xD;
&#xD;
         default:&#xD;
             return lbMove(lb, mt);&#xD;
         }&#xD;
&#xD;
         lbAt(lb);&#xD;
         newTarget = findTarget(aiUnit, 10, false);&#xD;
         if (newTarget == null) {&#xD;
             return lbFail(lb, false, &quot;found no pioneering target&quot;);&#xD;
         }&#xD;
         setTarget(newTarget);&#xD;
         return lbRetarget(lb);&#xD;
     }&#xD;
&#xD;
     // Check for threats.&#xD;
     // The code below is very conservative.  When enabled it&#xD;
     // reduces the number of completed improvements by a factor of&#xD;
     // 4 -- 5, which is unacceptable.  Therefore, disabled for&#xD;
     // now.  FIXME: do something better.&#xD;
     /*&#xD;
     int turnsNeeded = DEFAULT_THREAT_TURNS;&#xD;
     if (unit.getWorkImprovement() != null) {&#xD;
         turnsNeeded = Math.min(turnsNeeded, unit.getWorkLeft());&#xD;
     }&#xD;
     if (unit.isInDanger(turnsNeeded, 0.25f)) {&#xD;
         if (unit.getTile().getColony() != null) {&#xD;
             logger.finest(tag + &quot; avoiding danger: &quot; + this);&#xD;
             return lbDrop(lb);&#xD;
         }&#xD;
         PathNode safe = unit.findOurNearestSettlement(false, 1, false);&#xD;
         if (safe != null) {&#xD;
             travelToTarget(tag + &quot; (evading)&quot;,&#xD;
                            safe.getLastNode().getTile(), costDecider);&#xD;
             return lbDrop(lb);&#xD;
         }&#xD;
     }&#xD;
     */&#xD;
&#xD;
     // Going to a tile to perform an improvement.&#xD;
     Tile tile = getTarget().getTile();&#xD;
     for (;;) {&#xD;
         Unit.MoveType mt = travelToTarget(getTarget(), costDecider, lb);&#xD;
         switch (mt) {&#xD;
         case MOVE_HIGH_SEAS: case MOVE_NO_REPAIR:&#xD;
             return lbWait(lb);&#xD;
             &#xD;
         case MOVE_NO_MOVES: case MOVE_NO_TILE: case MOVE_ILLEGAL:&#xD;
             return this;&#xD;
             &#xD;
         case MOVE: // Arrived&#xD;
             break;&#xD;
             &#xD;
         case MOVE_NO_ATTACK_CIVILIAN:&#xD;
             // Might be a temporary blockage due to an occupying&#xD;
             // unit at the target.  Move randomly and retry if&#xD;
             // adjacent.&#xD;
             Direction d = unit.getTile().getDirection(tile);&#xD;
             if (d != null) moveRandomly(tag, d);&#xD;
             continue;&#xD;
&#xD;
         default:&#xD;
             return lbMove(lb, mt);&#xD;
         }&#xD;
         break;&#xD;
     }&#xD;
&#xD;
     // Take control of the land before proceeding to improve.&#xD;
     lbAt(lb);&#xD;
     if (!player.owns(tile)) {&#xD;
         // FIXME: Better choice whether to pay or steal.&#xD;
         // Currently always pay if we can, steal if we can not.&#xD;
         boolean fail = false;&#xD;
         int price = player.getLandPrice(tile);&#xD;
         if (price &lt; 0) {&#xD;
             fail = true;&#xD;
         } else {&#xD;
             if (price > 0 &amp;&amp; !player.checkGold(price)) {&#xD;
                 price = NetworkConstants.STEAL_LAND;&#xD;
             }&#xD;
             fail = !AIMessage.askClaimLand(tile, aiUnit, price)&#xD;
                 || !player.owns(tile); // Failed to claim ownership&#xD;
         }&#xD;
         if (fail) {&#xD;
             aiPlayer.removeTileImprovementPlan(tileImprovementPlan);&#xD;
             tileImprovementPlan.dispose();&#xD;
             lb.add(&quot;, land claim failed at &quot;, tile);&#xD;
             if ((newTarget = findTarget(aiUnit, 10, false)) == null) {&#xD;
                 return lbFail(lb, false, &quot;no alternate target&quot;);&#xD;
             }&#xD;
             setTarget(newTarget);&#xD;
             return lbRetarget(lb);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Work on the improvement&#xD;
     if (unit.getState() == UnitState.IMPROVING) {&#xD;
         return lbWait(lb, &quot;, improving &quot;, tileImprovementPlan);&#xD;
     } else if (unit.checkSetState(UnitState.IMPROVING)) {&#xD;
         aiPlayer.removeTileImprovementPlan(tileImprovementPlan);&#xD;
         if (AIMessage.askChangeWorkImprovementType(aiUnit,&#xD;
                 tileImprovementPlan.getType())) {&#xD;
             return lbWait(lb, &quot;, began &quot;, tileImprovementPlan);&#xD;
         } else {&#xD;
             tileImprovementPlan.dispose();&#xD;
             return lbFail(lb, false, &quot;to change work type at &quot;, tile);&#xD;
         }&#xD;
     }&#xD;
     // Probably just out of moves.&#xD;
     return lbWait(lb, &quot;, waiting to improve at &quot;, tile);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xFhH1JPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5unb4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xFhIFJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (target != null) {&#xD;
         xw.writeAttribute(TARGET_TAG, target.getId());&#xD;
&#xD;
         if (tileImprovementPlan != null) {&#xD;
             xw.writeAttribute(TileImprovementPlan.getXMLElementTagName(),&#xD;
                               tileImprovementPlan);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xGIIFJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5uoC8lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xGIIVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     final AIMain aiMain = getAIMain();&#xD;
&#xD;
     // Do not use setTarget in serialization&#xD;
     target = xr.getLocationAttribute(getGame(), TARGET_TAG, false);&#xD;
&#xD;
     tileImprovementPlan = (xr.hasAttribute(TileImprovementPlan.getXMLElementTagName()))&#xD;
         ? xr.makeAIObject(aiMain, TileImprovementPlan.getXMLElementTagName(),&#xD;
             TileImprovementPlan.class, (TileImprovementPlan)null, true)&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xGIIlJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5VDsYFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xGII1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xGIJFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5VETcVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xGIJVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;pioneeringMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5U9lwFJPEeiyW7NaN4qWdw" name="abandonTileImprovementPlan" visibility="private" method="_5xDr5lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqv6FJPEeiyW7NaN4qWdw">
                      <body>Abandons the current plan if any.</body>
                    </ownedComment>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5U9lwVJPEeiyW7NaN4qWdw" name="dispose" method="_5xDr51JPEeiyW7NaN4qWdw"/>
                  <ownedOperation xmi:id="_5U-M01JPEeiyW7NaN4qWdw" name="hasTools" visibility="private" method="_5xDr61JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW8VJPEeiyW7NaN4qWdw">
                      <body>Does this pioneer have tools?&#xD;
     *&#xD;
     * @return True if the pioneer has tools.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5U-z4FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VApEFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5xFhEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5VBQIFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VB3MlJPEeiyW7NaN4qWdw" name="findTarget" method="_5xFhElJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uk_pVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VCeQFJPEeiyW7NaN4qWdw" name="invalidReason" method="_5xFhFFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5VCeQVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VDsYFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5xGIIlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5VDsYVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VETcVJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5xGIJFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xr-BFJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;pioneeringMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5VETclJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5udq4FJPEeiyW7NaN4qWdw" name="PioneeringMission" method="_5xDE1FJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5udq5FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5udq5VJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xqv41JPEeiyW7NaN4qWdw">
                      <body>Creates a pioneering mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     * Note that PioneeringMission.isValid(aiUnit) should be called&#xD;
     * before this, to guarantee that&#xD;
     * findTileImprovementPlan/findColonyWithTools succeed.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param target The target &lt;code>Location&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5udq4VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5udq4lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5udq41JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5udq5lJPEeiyW7NaN4qWdw" type="_5U7wkFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ueR8FJPEeiyW7NaN4qWdw" name="PioneeringMission" method="_5xDE2VJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5ueR9FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5ueR9VJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xqv5FJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>PioneeringMission&lt;/code> and reads the&#xD;
     * given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ueR8VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ueR8lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ueR81JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ueR9lJPEeiyW7NaN4qWdw" type="_5U7wkFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ueR91JPEeiyW7NaN4qWdw" name="getBestPlan" visibility="private" method="_5xDE3lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqv5VJPEeiyW7NaN4qWdw">
                      <body>Get the best improvement associated with a tile.&#xD;
     *&#xD;
     * @return The &lt;code>TileImprovementPlan&lt;/code>, or null if not found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ue5AFJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ue5AVJPEeiyW7NaN4qWdw" type="_5sYnQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ue5AlJPEeiyW7NaN4qWdw" name="getBestPlan" visibility="private" isStatic="true" method="_5xDr4FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqv5lJPEeiyW7NaN4qWdw">
                      <body>Get the best improvement associated with a tile for a given unit.&#xD;
     * Take care to first check if the unit has a plan already, if so,&#xD;
     * return that.&#xD;
     *&#xD;
     * @return The &lt;code>TileImprovementPlan&lt;/code>, or null if not found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ue5A1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ue5BFJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ue5BVJPEeiyW7NaN4qWdw" type="_5sYnQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ufgEFJPEeiyW7NaN4qWdw" name="setTileImprovementPlan" method="_5xDr5FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xqv51JPEeiyW7NaN4qWdw">
                      <body>Sets the &lt;code>TileImprovementPlan&lt;/code> which should&#xD;
     * be the next target.&#xD;
     *&#xD;
     * @param tip The &lt;code>TileImprovementPlan&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ufgEVJPEeiyW7NaN4qWdw" name="tip" type="_5sYnQVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ufgElJPEeiyW7NaN4qWdw" name="hasTools" visibility="private" isStatic="true" method="_5xDr6FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW8FJPEeiyW7NaN4qWdw">
                      <body>Does a supplied unit have tools?&#xD;
     *&#xD;
     * @param aiUnit The pioneer &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return True if the pioneer has tools.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ufgE1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ufgFFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ugHIFJPEeiyW7NaN4qWdw" name="extractTarget" isStatic="true" method="_5xDr7VJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW8lJPEeiyW7NaN4qWdw">
                      <body>Extract a valid target for this mission from a path.&#xD;
     *&#xD;
     * @param aiUnit A &lt;code>AIUnit&lt;/code> to perform the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to extract a target from.&#xD;
     * @return A target for this mission, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ugHIVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ugHIlJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ugHI1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uguMFJPEeiyW7NaN4qWdw" name="scorePath" isStatic="true" method="_5xDr8VJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW81JPEeiyW7NaN4qWdw">
                      <body>Evaluate a potential pioneering mission for a given unit and&#xD;
     * path.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to do the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to take to the target.&#xD;
     * @return A score for the proposed mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uguMVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uguMlJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uguM1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uguNFJPEeiyW7NaN4qWdw" name="getGoalDecider" visibility="private" isStatic="true" method="_5xES8FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW9FJPEeiyW7NaN4qWdw">
                      <body>Makes a goal decider that checks pioneering sites.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to search with.&#xD;
     * @param deferOK Keep track of the nearest colonies to use as a&#xD;
     *     fallback destination.&#xD;
     * @return A suitable &lt;code>GoalDecider&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uguNVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5uhVQFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5uhVQVJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uguNlJPEeiyW7NaN4qWdw" name="deferOK">
                      <eAnnotations xmi:id="_5uhVQlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5uhVQ1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uguN1JPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uhVRFJPEeiyW7NaN4qWdw" name="findTargetPath" isStatic="true" method="_5xES-FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW9VJPEeiyW7NaN4qWdw">
                      <body>Finds a suitable pioneering target for the supplied unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to execute this mission.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A path to the new target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uhVRVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uhVRlJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uhVR1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uhVSFJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uh8UFJPEeiyW7NaN4qWdw" name="getBestPioneeringColony" visibility="private" isStatic="true" method="_5xES_VJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW9lJPEeiyW7NaN4qWdw">
                      <body>Gets the Colony that most needs a pioneer.&#xD;
     *&#xD;
     * @param aiUnit The pioneer &lt;code>AIUnit&lt;/code>.&#xD;
     * @return The colony with the most outstanding tile improvement plans.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uh8UVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uh8UlJPEeiyW7NaN4qWdw" type="_5qFhMVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uh8U1JPEeiyW7NaN4qWdw" name="findTarget" isStatic="true" method="_5xETAFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW91JPEeiyW7NaN4qWdw">
                      <body>Finds a suitable pioneering target for the supplied unit.&#xD;
     * Falls back to the best settlement if the unit is not on the map.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A target for this mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uh8VFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uh8VVJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uh8VlJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uijYFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uijYVJPEeiyW7NaN4qWdw" name="prepare" isStatic="true" method="_5xETBVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW-FJPEeiyW7NaN4qWdw">
                      <body>Prepare a unit for this mission.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to prepare.&#xD;
     * @return A reason why the unit can not perform this mission, or null&#xD;
     *     if none.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uijYlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uijY1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uijZFJPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5xETCFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW-VJPEeiyW7NaN4qWdw">
                      <body>Why would a PioneeringMission be invalid with the given unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason why the mission would be invalid with the unit,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uijZVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ujKcFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ujKcVJPEeiyW7NaN4qWdw" name="invalidColonyReason" visibility="private" isStatic="true" method="_5xETC1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xrW-lJPEeiyW7NaN4qWdw">
                      <body>Why would a PioneeringMission be invalid with the given unit and colony.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param colony The &lt;code>Colony&lt;/code> to check.&#xD;
     * @return A reason why the mission would be invalid, or null if&#xD;
     *     none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ujKclJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ujKc1JPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ujKdFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ujxgFJPEeiyW7NaN4qWdw" name="getPlan" visibility="private" isStatic="true" method="_5xE6AFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xr-AFJPEeiyW7NaN4qWdw">
                      <body>Gets the existing tile improvement plan for a unit and tile.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to check.&#xD;
     * @return The associated &lt;code>TileImprovementPlan&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ujxgVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ujxglJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ujxg1JPEeiyW7NaN4qWdw" type="_5sYnQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ukYkFJPEeiyW7NaN4qWdw" name="invalidTileReason" visibility="private" isStatic="true" method="_5xE6BFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xr-AVJPEeiyW7NaN4qWdw">
                      <body>Why would a PioneeringMission be invalid with the given unit and tile.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to check.&#xD;
     * @return A reason why the mission would be invalid, or null if&#xD;
     *      none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ukYkVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ukYklJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ukYk1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ukYlFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xE6CFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xr-AlJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ukYlVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uk_oFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uk_oVJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xE6C1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xr-A1JPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uk_olJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uk_o1JPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uk_pFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ulmsFJPEeiyW7NaN4qWdw" name="lbFail" visibility="protected" method="_5xFhFlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5ulmsVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ulmslJPEeiyW7NaN4qWdw" name="cont">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5ulms1JPEeiyW7NaN4qWdw" name="reasons" type="_5uI6wVJPEeiyW7NaN4qWdw">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5umNwFJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5ulmtFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5umNxFJPEeiyW7NaN4qWdw" name="doMission" method="_5xFhHFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5umNxVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5um00FJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5unb4FJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5xFhH1JPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5unb4VJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uoC8lJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5xGIIFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uoC81JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5VLoMFJPEeiyW7NaN4qWdw" name="PrivateerMission">
                  <ownedComment xmi:id="_5xslEFJPEeiyW7NaN4qWdw">
                    <body>A mission for a Privateer unit.</body>
                  </ownedComment>
                  <generalization xmi:id="_5shxMFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wN-YFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yM7YVJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wN-YVJPEeiyW7NaN4qWdw" value="Logger.getLogger(PrivateerMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wN-YlJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wN-Y1JPEeiyW7NaN4qWdw" value="&quot;AI privateer&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wOlcFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw" association="_5yNicFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wPzkFJPEeiyW7NaN4qWdw" name="TARGET_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wPzkVJPEeiyW7NaN4qWdw" value="&quot;target&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xGvM1JPEeiyW7NaN4qWdw" name="PrivateerMission" specification="_5uqfMFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xGvNFJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xGvNVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xGvNlJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xGvN1JPEeiyW7NaN4qWdw" type="_5VLoMFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, target);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xGvOFJPEeiyW7NaN4qWdw" name="PrivateerMission" specification="_5urGRVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xGvOVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xGvOlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xGvO1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xGvPFJPEeiyW7NaN4qWdw" type="_5VLoMFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xGvPVJPEeiyW7NaN4qWdw" name="getDistanceToTarget" specification="_5VM2UFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xGvPlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return (target == null || target.getTile() == null&#xD;
         || !getUnit().hasTile()) ? 1000000&#xD;
         : getUnit().getTile().getDistanceTo(target.getTile());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xGvP1JPEeiyW7NaN4qWdw" name="extractTarget" specification="_5urtU1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xGvQFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xGvQVJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xGvQlJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (path == null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Player owner = unit.getOwner();&#xD;
     final Location loc = path.getLastNode().getLocation();&#xD;
     Settlement settlement = loc.getSettlement();&#xD;
     Tile tile = loc.getTile();&#xD;
     Unit other = (tile == null) ? null : tile.getDefendingUnit(unit);&#xD;
     return (loc instanceof Europe) ? loc&#xD;
         : (other != null&#xD;
             &amp;&amp; invalidUnitReason(aiUnit, other) == null) ? other&#xD;
         : (settlement != null&#xD;
             &amp;&amp; invalidTargetReason(settlement, owner) == null) ? settlement&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xHWQFJPEeiyW7NaN4qWdw" name="scoreUnit" specification="_5usUYFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xHWQVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xHWQlJPEeiyW7NaN4qWdw" name="defender" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xHWQ1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Unit attacker = aiUnit.getUnit();&#xD;
     int value = 100;&#xD;
     // Pirates want cargo&#xD;
     value += defender.getVisibleGoodsCount() * 200;&#xD;
     // But they are wary of danger&#xD;
     if (defender.isOffensiveUnit()) {&#xD;
         CombatModel.CombatOdds co = attacker.getGame().getCombatModel()&#xD;
             .calculateCombatOdds(attacker, defender);&#xD;
         if (co != null) value += (co.win - 0.5) * 200;&#xD;
     }&#xD;
     return value;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xHWRFJPEeiyW7NaN4qWdw" name="scorePath" specification="_5usUZFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xHWRVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xHWRlJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xHWR1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Location loc = extractTarget(aiUnit, path);&#xD;
     if (loc instanceof Europe || loc instanceof Colony) {&#xD;
         return 1000 / (path.getTotalTurns() + 1);&#xD;
     } else if (loc instanceof Unit) {&#xD;
         return scoreUnit(aiUnit, (Unit)loc) / (path.getTotalTurns() + 1);&#xD;
     } else if (loc instanceof Tile) {&#xD;
         return 50 / (path.getTotalTurns() + 1);&#xD;
     } else {&#xD;
         return Integer.MIN_VALUE;&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xHWSFJPEeiyW7NaN4qWdw" name="getGoalDecider" specification="_5us7cVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xHWSVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5xHWSlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5xHWS1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xHWTFJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xHWTVJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return new GoalDecider() {&#xD;
             private PathNode bestPath = null;&#xD;
             private int bestValue = Integer.MIN_VALUE;&#xD;
&#xD;
             @Override&#xD;
             public PathNode getGoal() { return bestPath; }&#xD;
             @Override&#xD;
             public boolean hasSubGoals() { return true; }&#xD;
             @Override&#xD;
             public boolean check(Unit u, PathNode path) {&#xD;
                 int value = scorePath(aiUnit, path);&#xD;
                 if (bestValue &lt; value) {&#xD;
                     bestValue = value;&#xD;
                     bestPath = path;&#xD;
                     return true;&#xD;
                 }&#xD;
                 return false;&#xD;
             }&#xD;
         };&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xHWTlJPEeiyW7NaN4qWdw" name="findTargetPath" specification="_5utigVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xHWT1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xHWUFJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xHWUVJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xHWUlJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (invalidAIUnitReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Location start = unit.getPathStartLocation();&#xD;
&#xD;
     // Can the privateer legally reach a valid target from where&#xD;
     // it currently is?&#xD;
     return unit.search(start, getGoalDecider(aiUnit, deferOK),&#xD;
                        CostDeciders.avoidIllegal(), range, null);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xHWU1JPEeiyW7NaN4qWdw" name="findTarget" specification="_5uuJkFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xHWVFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xHWVVJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xHWVlJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xHWV1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>PathNode path = findTargetPath(aiUnit, range, deferOK);&#xD;
     return (path != null) ? extractTarget(aiUnit, path)&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xH9UFJPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5uuwoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xH9UVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xH9UlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     if (reason != null) return reason;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     return (!unit.isCarrier()) ? &quot;unit-not-a-carrier&quot;&#xD;
         : (!unit.isOffensiveUnit()) ? Mission.UNITNOTOFFENSIVE&#xD;
         : (!unit.isEmpty()&#xD;
             || !unit.getCompactGoods().isEmpty()) ? &quot;unit-has-cargo&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xH9U1JPEeiyW7NaN4qWdw" name="invalidSettlementReason" specification="_5uuwo1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xH9VFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xH9VVJPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xH9VlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return (settlement instanceof Colony)&#xD;
         ? invalidTargetReason(settlement, aiUnit.getUnit().getOwner())&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xH9V1JPEeiyW7NaN4qWdw" name="invalidUnitReason" specification="_5uvXsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xH9WFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xH9WVJPEeiyW7NaN4qWdw" name="unit" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xH9WlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Player player = aiUnit.getUnit().getOwner();&#xD;
     final boolean pirate = aiUnit.getUnit().hasAbility(Ability.PIRACY);&#xD;
     String reason;&#xD;
     return (unit == null)&#xD;
         ? Mission.TARGETINVALID&#xD;
         : (!unit.isNaval())&#xD;
         ? &quot;privateer-ignores-land-unit&quot;&#xD;
         : (player.owns(unit))&#xD;
         ? Mission.TARGETOWNERSHIP&#xD;
         : ((reason = invalidAttackReason(aiUnit, unit.getOwner())) != null)&#xD;
         ? reason&#xD;
         : (scoreUnit(aiUnit, unit) &lt;= 0)&#xD;
         ? &quot;privateer-avoids-trouble&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xH9W1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5uvXtFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xH9XFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xH9XVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidMissionReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xH9XlJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5uvXt1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xH9X1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xH9YFJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xH9YVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Player owner = aiUnit.getUnit().getOwner();&#xD;
     String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (aiUnit.getUnit().isInEurope())&#xD;
         ? null&#xD;
         : (loc == null)&#xD;
         ? null&#xD;
         : (loc instanceof Europe)&#xD;
         ? invalidTargetReason(loc, owner)&#xD;
         : (loc instanceof Settlement)&#xD;
         ? invalidSettlementReason(aiUnit, (Settlement)loc)&#xD;
         : (loc instanceof Unit)&#xD;
         ? invalidUnitReason(aiUnit, (Unit)loc)&#xD;
         : (loc instanceof Tile)&#xD;
         ? ((((Tile)loc).isExploredBy(owner)) ? &quot;tile-is-explored&quot;&#xD;
             : null)&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xIkYFJPEeiyW7NaN4qWdw" name="getTransportDestination" specification="_5VOrgFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xIkYVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xIkYlJPEeiyW7NaN4qWdw" name="findTarget" specification="_5VPSklJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xIkY1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return findTarget(getAIUnit(), 8, true);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xIkZFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5VP5olJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xIkZVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), getTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xIkZlJPEeiyW7NaN4qWdw" name="doMission" specification="_5uv-w1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xIkZ1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xIkaFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     if (aiUnit.hasCargo()) { // Deliver the goods&#xD;
         Mission m = getEuropeanAIPlayer().getTransportMission(aiUnit);&#xD;
         return lbDone(lb, m != null, &quot; transporting&quot;);&#xD;
     }&#xD;
&#xD;
     String reason = invalidReason();&#xD;
     if (isTargetReason(reason)) {&#xD;
         return retargetMission(reason, lb);&#xD;
     } else if (reason != null) {&#xD;
         return lbFail(lb, false, reason);&#xD;
     }&#xD;
&#xD;
     final Unit unit = getUnit();&#xD;
     if (unit.isInEurope()) {&#xD;
         Settlement settlement = getBestSettlement(unit.getOwner());&#xD;
         Tile tile = (settlement != null) ? settlement.getTile()&#xD;
             : unit.getFullEntryLocation();&#xD;
         unit.setDestination(tile);&#xD;
         aiUnit.moveToAmerica();&#xD;
     }&#xD;
     if (unit.isAtSea()) return lbAt(lb);&#xD;
&#xD;
     Location newTarget = findTarget(aiUnit, 1, true);&#xD;
     if (newTarget == null) {&#xD;
         moveRandomlyTurn(tag);&#xD;
         return lbAt(lb);&#xD;
     }&#xD;
&#xD;
     setTarget(newTarget);&#xD;
     Unit.MoveType mt = travelToTarget(newTarget, null, lb);&#xD;
     switch (mt) {&#xD;
     case MOVE: // Arrived at intermediate safe location&#xD;
         break;&#xD;
&#xD;
     case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
     case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
         return lbWait(lb);&#xD;
         &#xD;
     case MOVE_NO_TILE: // Can happen when another unit blocks a river&#xD;
         moveRandomly(tag, null);&#xD;
         return lbDodge(lb);&#xD;
&#xD;
     case ATTACK_UNIT: // Arrived&#xD;
         Direction direction = unit.getTile()&#xD;
             .getDirection(getTarget().getTile());&#xD;
         if (direction != null) {&#xD;
             AIMessage.askAttack(aiUnit, direction);&#xD;
             lbAttack(lb, getTarget());&#xD;
         } else { // Found something else in the way!&#xD;
             Location blocker = resolveBlockage(aiUnit, getTarget());&#xD;
             if (blocker instanceof Unit&#xD;
                 &amp;&amp; scoreUnit(aiUnit, (Unit)blocker) > 0) {&#xD;
                 AIMessage.askAttack(aiUnit,&#xD;
                     unit.getTile().getDirection(blocker.getTile()));&#xD;
                 lbAttack(lb, blocker);&#xD;
             } else { // Might be dangerous, try to confuse them:-)&#xD;
                 moveRandomlyTurn(tag);&#xD;
                 lb.add(&quot; avoiding &quot;, blocker, &quot;.&quot;);&#xD;
             }&#xD;
         }&#xD;
         return this;&#xD;
&#xD;
     case MOVE_NO_ACCESS_EMBARK: default:&#xD;
         return lbMove(lb, mt);&#xD;
     }&#xD;
&#xD;
     return lbAt(lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xJLcFJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5uxM4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xJLcVJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (target != null) {&#xD;
         xw.writeAttribute(TARGET_TAG, target.getId());&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xJLclJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5uxz8lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xJLc1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     target = xr.getLocationAttribute(getGame(), TARGET_TAG, false);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xJLdFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5VQgslJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xJLdVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xJLdlJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5VRu0lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xJLd1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;privateerMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5VM2UFJPEeiyW7NaN4qWdw" name="getDistanceToTarget" method="_5xGvPVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslE1JPEeiyW7NaN4qWdw">
                      <body>Hack to help REF planning.&#xD;
     *&#xD;
     * This should go away.  AI units should not exploit seeing the whole map.&#xD;
     *&#xD;
     * @return The distance to the target, or a large value on failure.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5VM2UVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VOrgFJPEeiyW7NaN4qWdw" name="getTransportDestination" method="_5xIkYFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uv-wVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VPSklJPEeiyW7NaN4qWdw" name="findTarget" method="_5xIkYlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uv-wlJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VP5olJPEeiyW7NaN4qWdw" name="invalidReason" method="_5xIkZFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5VP5o1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VQgslJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5xJLdFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5VRHwFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VRu0lJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5xJLdlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtMIVJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;privateerMission&quot;</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5VRu01JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uqfMFJPEeiyW7NaN4qWdw" name="PrivateerMission" method="_5xGvM1JPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5urGQlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5urGQ1JPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xslEVJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param target The target &lt;code>Location&lt;/code> for this mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uqfMVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5urGQFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5urGQVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5urGRFJPEeiyW7NaN4qWdw" type="_5VLoMFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5urGRVJPEeiyW7NaN4qWdw" name="PrivateerMission" method="_5xGvOFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5urtUFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5urtUVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xslElJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>UnitWanderHostileMission&lt;/code> and reads&#xD;
     * the given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5urGRlJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5urGR1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5urGSFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5urtUlJPEeiyW7NaN4qWdw" type="_5VLoMFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5urtU1JPEeiyW7NaN4qWdw" name="extractTarget" isStatic="true" method="_5xGvP1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslFFJPEeiyW7NaN4qWdw">
                      <body>Extract a valid target for this mission from a path.&#xD;
     *&#xD;
     * @param aiUnit A &lt;code>AIUnit&lt;/code> to perform the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to extract a target from,&#xD;
     *     (uses the unit location if null).&#xD;
     * @return A target for this mission, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5urtVFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5urtVVJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5urtVlJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5usUYFJPEeiyW7NaN4qWdw" name="scoreUnit" visibility="private" isStatic="true" method="_5xHWQFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslFVJPEeiyW7NaN4qWdw">
                      <body>Score a potential attack on a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that may attack.&#xD;
     * @param defender The &lt;code>Unit&lt;/code> to attack.&#xD;
     * @return A score for the attack.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5usUYVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5usUYlJPEeiyW7NaN4qWdw" name="defender" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5usUY1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5usUZFJPEeiyW7NaN4qWdw" name="scorePath" isStatic="true" method="_5xHWRFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslFlJPEeiyW7NaN4qWdw">
                      <body>Evaluate a potential mission for a given unit and path.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to do the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to take to the target.&#xD;
     * @return A score for the proposed mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5usUZVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5usUZlJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5us7cFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5us7cVJPEeiyW7NaN4qWdw" name="getGoalDecider" visibility="private" isStatic="true" method="_5xHWSFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslF1JPEeiyW7NaN4qWdw">
                      <body>Gets a &lt;code>GoalDecider&lt;/code> for this mission.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that is searching.&#xD;
     * @param deferOK Enable colony fallback (not implemented).&#xD;
     * @return A suitable &lt;code>GoalDecider&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5us7clJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5us7dVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5utigFJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5us7c1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5us7dFJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5utigVJPEeiyW7NaN4qWdw" name="findTargetPath" isStatic="true" method="_5xHWTlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslGFJPEeiyW7NaN4qWdw">
                      <body>Finds a suitable privateering target for the supplied unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to find a path for.&#xD;
     * @param range The maximum number of turns to seek for a target.&#xD;
     * @param deferOK Not implemented in this mission.&#xD;
     * @return A path to the new target.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5utiglJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5utig1JPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5utihFJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5utihVJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uuJkFJPEeiyW7NaN4qWdw" name="findTarget" isStatic="true" method="_5xHWU1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslGVJPEeiyW7NaN4qWdw">
                      <body>Finds a suitable privateering target for the supplied unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to find a path for.&#xD;
     * @param range The maximum number of turns to seek for a target.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A &lt;code>PathNode&lt;/code> to the target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uuJkVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uuJklJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uuJk1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5uuJlFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uuwoFJPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5xH9UFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslGlJPEeiyW7NaN4qWdw">
                      <body>Why would a PrivateeringMission be invalid with the given unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason why the mission would be invalid with the unit,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uuwoVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uuwolJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uuwo1JPEeiyW7NaN4qWdw" name="invalidSettlementReason" visibility="private" isStatic="true" method="_5xH9U1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslG1JPEeiyW7NaN4qWdw">
                      <body>Is this a valid target because it is one of our colonies.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid, or null if&#xD;
     *     none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uuwpFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uuwpVJPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uuwplJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uvXsFJPEeiyW7NaN4qWdw" name="invalidUnitReason" visibility="private" isStatic="true" method="_5xH9V1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslHFJPEeiyW7NaN4qWdw">
                      <body>Is this a valid target because it is a hostile unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid, or null if&#xD;
     *     none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uvXsVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uvXslJPEeiyW7NaN4qWdw" name="unit" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uvXs1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uvXtFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xH9W1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xslHVJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uvXtVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uvXtlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uvXt1JPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xH9XlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtMIFJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5uvXuFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uvXuVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uv-wFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uv-w1JPEeiyW7NaN4qWdw" name="doMission" method="_5xIkZlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uv-xFJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5uwl0FJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uxM4FJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5xJLcFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uxM4VJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5uxz8lJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5xJLclJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5uxz81JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5VX1cFJPEeiyW7NaN4qWdw" name="ScoutingMission">
                  <ownedComment xmi:id="_5xtzMFJPEeiyW7NaN4qWdw">
                    <body>Mission for controlling a scout.</body>
                  </ownedComment>
                  <generalization xmi:id="_5smpsFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wQaoFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yNic1JPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wQaoVJPEeiyW7NaN4qWdw" value="Logger.getLogger(ScoutingMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wRBsFJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wRBsVJPEeiyW7NaN4qWdw" value="&quot;AI scout&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wRBslJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw" association="_5yOJgVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wSP1FJPEeiyW7NaN4qWdw" name="TARGET_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wS24FJPEeiyW7NaN4qWdw" value="&quot;target&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xJyhFJPEeiyW7NaN4qWdw" name="ScoutingMission" specification="_5u0QMFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xJyhVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xJyhlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xJyh1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xJyiFJPEeiyW7NaN4qWdw" type="_5VX1cFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, target);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xJyiVJPEeiyW7NaN4qWdw" name="ScoutingMission" specification="_5u0QN1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xJyilJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xJyi1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xJyjFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xJyjVJPEeiyW7NaN4qWdw" type="_5VX1cFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xJyjlJPEeiyW7NaN4qWdw" name="canScoutNatives" specification="_5u03RlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xJyj1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xJykFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return aiUnit.getUnit()&#xD;
         .hasAbility(Ability.SPEAK_WITH_CHIEF);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xJykVJPEeiyW7NaN4qWdw" name="extractTarget" specification="_5u1eUVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xJyklJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xJyk1JPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xJylFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (path == null) return null;&#xD;
     final Location loc = path.getLastNode().getLocation();&#xD;
     return (loc == null) ? null&#xD;
         : (invalidSettlementReason(aiUnit, loc.getSettlement()) == null)&#xD;
         ? loc.getSettlement()&#xD;
         : (invalidTileReason(aiUnit, loc.getTile()) == null)&#xD;
         ? loc.getTile()&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xKZkFJPEeiyW7NaN4qWdw" name="scorePath" specification="_5u2FYVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xKZkVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xKZklJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xKZk1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Location loc = (path == null) ? null : extractTarget(aiUnit, path);&#xD;
     return (loc instanceof Colony)&#xD;
         ? 12 / (path.getTotalTurns() + 1)&#xD;
         : (loc instanceof IndianSettlement)&#xD;
         ? 2000 / (path.getTotalTurns() + 1)&#xD;
         : (loc instanceof Tile)&#xD;
         ? ((((Tile)loc).hasLostCityRumour())&#xD;
             ? 1000 / (path.getTotalTurns() + 1)&#xD;
             : 50 / (path.getTotalTurns() + 1))&#xD;
         : Integer.MIN_VALUE;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xKZlFJPEeiyW7NaN4qWdw" name="getGoalDecider" specification="_5u2scVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xKZlVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5xKZllJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5xKZl1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xKZmFJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xKZmVJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>GoalDecider gd = new GoalDecider() {&#xD;
             private PathNode bestPath = null;&#xD;
             private int bestValue = Integer.MIN_VALUE;&#xD;
&#xD;
             @Override&#xD;
             public PathNode getGoal() { return bestPath; }&#xD;
             @Override&#xD;
             public boolean hasSubGoals() { return true; }&#xD;
             @Override&#xD;
             public boolean check(Unit u, PathNode path) {&#xD;
                 Location loc = extractTarget(aiUnit, path);&#xD;
                 if (loc instanceof IndianSettlement&#xD;
                     || loc instanceof Tile) {&#xD;
                     int value = scorePath(aiUnit, path);&#xD;
                     if (bestValue &lt; value) {&#xD;
                         bestValue = value;&#xD;
                         bestPath = path;&#xD;
                         return true;&#xD;
                     }&#xD;
                 }&#xD;
                 return false;&#xD;
             }&#xD;
         };&#xD;
     return (deferOK) ? GoalDeciders.getComposedGoalDecider(false, gd,&#xD;
         GoalDeciders.getOurClosestSettlementGoalDecider())&#xD;
         : gd;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xKZmlJPEeiyW7NaN4qWdw" name="findTargetPath" specification="_5u3Tg1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xKZm1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xKZnFJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xKZnVJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xKZnlJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (invalidAIUnitReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Location start = unit.getPathStartLocation();&#xD;
     final Unit carrier = unit.getCarrier();&#xD;
     final GoalDecider gd = getGoalDecider(aiUnit, deferOK);&#xD;
     final CostDecider standardCd = CostDeciders.avoidIllegal();&#xD;
&#xD;
     // Can the scout legally reach a valid target from where it&#xD;
     // currently is?&#xD;
     return unit.search(start, gd, standardCd, range, carrier);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xKZn1JPEeiyW7NaN4qWdw" name="findTarget" specification="_5u36kVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xKZoFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xKZoVJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xKZolJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xKZo1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>PathNode path = findTargetPath(aiUnit, range, deferOK);&#xD;
     return (path != null) ? extractTarget(aiUnit, path)&#xD;
         : Location.upLoc(findCircleTarget(aiUnit,&#xD;
                 getGoalDecider(aiUnit, deferOK), range*3, deferOK));&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xKZpFJPEeiyW7NaN4qWdw" name="prepare" specification="_5u4hoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xKZpVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xKZplJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidReason(aiUnit);&#xD;
     return (reason != null) ? reason&#xD;
         : (canScoutNatives(aiUnit)&#xD;
             || aiUnit.equipForRole(aiUnit.getUnit().getSpecification()&#xD;
                 .getScoutRole())&#xD;
             || aiUnit.getUnit().hasAbility(Ability.EXPERT_SCOUT)) ? null&#xD;
         : &quot;unit-unprepared-to-SCOUT&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLAoFJPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5u4ho1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLAoVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLAolJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     return (reason != null) ? reason&#xD;
         : (!canScoutNatives(aiUnit)) ? &quot;unit-not-a-SCOUT&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLAo1JPEeiyW7NaN4qWdw" name="invalidColonyReason" specification="_5u5IsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLApFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLApVJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLAplJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidTargetReason(colony, aiUnit.getUnit().getOwner());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLAp1JPEeiyW7NaN4qWdw" name="invalidIndianSettlementReason" specification="_5u5ItFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLAqFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLAqVJPEeiyW7NaN4qWdw" name="is" type="_5qjbQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLAqlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Unit unit = aiUnit.getUnit();&#xD;
     final Player owner = unit.getOwner();&#xD;
     Tension tension;&#xD;
     String reason = invalidTargetReason(is);&#xD;
     return (reason != null) ? reason&#xD;
         : (is.hasScouted(owner))&#xD;
         ? &quot;settlement-scouted&quot;&#xD;
         : ((tension = is.getAlarm(owner)) != null&#xD;
             &amp;&amp; tension.getValue() >= Tension.Level.HATEFUL.getLimit())&#xD;
         ? &quot;settlement-hateful&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLAq1JPEeiyW7NaN4qWdw" name="invalidSettlementReason" specification="_5u5IuFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLArFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLArVJPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLArlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return (settlement instanceof Colony)&#xD;
         ? invalidColonyReason(aiUnit, (Colony)settlement)&#xD;
         : (settlement instanceof IndianSettlement)&#xD;
         ? invalidIndianSettlementReason(aiUnit, (IndianSettlement)settlement)&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLAr1JPEeiyW7NaN4qWdw" name="invalidTileReason" specification="_5u5vwlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLAsFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLAsVJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLAslJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return (tile == null) ? &quot;tile-null&quot;&#xD;
         : (tile.hasLostCityRumour()) ? null&#xD;
         : (!tile.isExploredBy(aiUnit.getUnit().getOwner())) ? null&#xD;
         : &quot;explored-tile-lacks-rumour&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLnsFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5u6W0FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLnsVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLnslJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidMissionReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLns1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5u6W01JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLntFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLntVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLntlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (loc instanceof Settlement)&#xD;
         ? invalidSettlementReason(aiUnit, (Settlement)loc)&#xD;
         : (loc instanceof Tile)&#xD;
         ? invalidTileReason(aiUnit, (Tile)loc)&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLnt1JPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5VaRsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLnuFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return NORMAL_TRANSPORT_PRIORITY;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLnuVJPEeiyW7NaN4qWdw" name="findTarget" specification="_5Va4xFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLnulJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return findTarget(getAIUnit(), 20, true);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLnu1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5Vbf01JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLnvFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), getTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLnvVJPEeiyW7NaN4qWdw" name="doMission" specification="_5u6941JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLnvlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xLnv1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (isTargetReason(reason)) {&#xD;
         return retargetMission(reason, lb);&#xD;
     } else if (reason != null) {&#xD;
         return lbFail(lb, false, reason);&#xD;
     }&#xD;
&#xD;
     // Go to the target.&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     final Unit unit = getUnit();&#xD;
     Direction d;&#xD;
     Unit.MoveType mt = travelToTarget(getTarget(),&#xD;
         CostDeciders.avoidSettlementsAndBlockingUnits(), lb);&#xD;
     switch (mt) {&#xD;
     case MOVE: // Arrived at a colony&#xD;
         break;&#xD;
&#xD;
     case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
     case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
         return lbWait(lb);&#xD;
&#xD;
     case MOVE_NO_ACCESS_EMBARK:&#xD;
         return this;&#xD;
&#xD;
     case MOVE_NO_TILE:&#xD;
         moveRandomly(tag, null);&#xD;
         return lbDodge(lb);&#xD;
&#xD;
     case ATTACK_UNIT:&#xD;
         // Could be adjacent to the destination but it is&#xD;
         // temporarily blocked by another unit.  Make a random&#xD;
         // (directed if possible) move and try again.&#xD;
         moveRandomly(tag, unit.getTile()&#xD;
             .getDirection(getTarget().getTile()));&#xD;
         return lbDodge(lb);&#xD;
&#xD;
     case ENTER_INDIAN_SETTLEMENT_WITH_SCOUT:&#xD;
         d = unit.getTile().getDirection(getTarget().getTile());&#xD;
         assert d != null;&#xD;
         if (AIMessage.askScoutSpeakToChief(aiUnit, d)) {&#xD;
             lbDone(lb, true, &quot;speak-with-chief at &quot;, getTarget());&#xD;
         } else {&#xD;
             lbFail(lb, true, &quot;unexpected failure to speak at &quot;, getTarget());&#xD;
         }&#xD;
         break;&#xD;
&#xD;
     case EXPLORE_LOST_CITY_RUMOUR:&#xD;
         d = unit.getTile().getDirection(getTarget().getTile());&#xD;
         assert d != null;&#xD;
         if (AIMessage.askMove(aiUnit, d)) {&#xD;
             lbDone(lb, true, &quot;explore at &quot;, getTarget());&#xD;
         } else {&#xD;
             lbFail(lb, true, &quot;unexpected failure at &quot;, getTarget());&#xD;
         }&#xD;
         break;&#xD;
&#xD;
     default:&#xD;
         return lbMove(lb, mt);&#xD;
     }&#xD;
     if (unit.isDisposed()) return this;&#xD;
&#xD;
     // Retarget on failure or complete, but do not retarget from&#xD;
     // one colony to another, just drop equipment and invalidate&#xD;
     // the mission.&#xD;
     lbAt(lb);&#xD;
     Location completed = getTarget();&#xD;
     Location newTarget = findTarget(aiUnit, 20, false);&#xD;
     if (newTarget == null&#xD;
         || (completed instanceof Colony &amp;&amp; newTarget == completed)) {&#xD;
         if (completed instanceof Colony &amp;&amp; canScoutNatives(aiUnit)) {&#xD;
             aiUnit.equipForRole(getSpecification().getDefaultRole());&#xD;
         }&#xD;
         return lbFail(lb, false, &quot;, found no targets&quot;);&#xD;
     }&#xD;
     setTarget(newTarget);&#xD;
     return lbRetarget(lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLnwFJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5u8MAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLnwVJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (target != null) {&#xD;
         xw.writeAttribute(TARGET_TAG, target.getId());&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xLnwlJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5u8zEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xLnw1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     target = xr.getLocationAttribute(getGame(), TARGET_TAG, false);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xMOwFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5Vct8FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xMOwVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xMOwlJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5VdVA1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xMOw1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;scoutingMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5VaRsFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5xLnt1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5Va4wFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Va4xFJPEeiyW7NaN4qWdw" name="findTarget" method="_5xLnuVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5u694lJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Vbf01JPEeiyW7NaN4qWdw" name="invalidReason" method="_5xLnu1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5VcG4FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Vct8FJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5xMOwFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5Vct8VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VdVA1JPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5xMOwlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xuaRFJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;scoutingMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5VdVBFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u0QMFJPEeiyW7NaN4qWdw" name="ScoutingMission" method="_5xJyhFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5u0QNFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5u0QNVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xtzMVJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param target The target &lt;code>Location&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u0QMVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u0QMlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u0QM1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u0QNlJPEeiyW7NaN4qWdw" type="_5VX1cFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u0QN1JPEeiyW7NaN4qWdw" name="ScoutingMission" method="_5xJyiVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5u03Q1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5u03RFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xtzMlJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>ScoutingMission&lt;/code> and reads the given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u03QFJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u03QVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u03QlJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u03RVJPEeiyW7NaN4qWdw" type="_5VX1cFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u03RlJPEeiyW7NaN4qWdw" name="canScoutNatives" visibility="private" isStatic="true" method="_5xJyjlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtzM1JPEeiyW7NaN4qWdw">
                      <body>Does a supplied unit have horses?&#xD;
     *&#xD;
     * @param aiUnit The scout &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return True if the scout has horses.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u03R1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u1eUFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u1eUVJPEeiyW7NaN4qWdw" name="extractTarget" isStatic="true" method="_5xJykVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtzNFJPEeiyW7NaN4qWdw">
                      <body>Extract a valid target for this mission from a path.&#xD;
     *&#xD;
     * @param aiUnit A &lt;code>AIUnit&lt;/code> to perform the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to extract a target from,&#xD;
     *     (uses the unit location if null).&#xD;
     * @return A target for this mission, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u1eUlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u1eU1JPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u2FYFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u2FYVJPEeiyW7NaN4qWdw" name="scorePath" isStatic="true" method="_5xKZkFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtzNVJPEeiyW7NaN4qWdw">
                      <body>Evaluate a potential scouting mission for a given unit and&#xD;
     * path.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to do the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to take to the target.&#xD;
     * @return A score for the proposed mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u2FYlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u2FY1JPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u2scFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u2scVJPEeiyW7NaN4qWdw" name="getGoalDecider" visibility="private" isStatic="true" method="_5xKZlFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtzNlJPEeiyW7NaN4qWdw">
                      <body>Gets a &lt;code>GoalDecider&lt;/code> for finding the best colony&#xD;
     * &lt;code>Tile&lt;/code>, optionally falling back to the nearest colony.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that is searching.&#xD;
     * @param deferOK Enable colony fallback.&#xD;
     * @return A suitable &lt;code>GoalDecider&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u2sclJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5u3TgVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5u3TglJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5u2sc1JPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5u3TgFJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u3Tg1JPEeiyW7NaN4qWdw" name="findTargetPath" isStatic="true" method="_5xKZmlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtzN1JPEeiyW7NaN4qWdw">
                      <body>Finds a suitable scouting target for the supplied unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to execute this mission.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A path to the new target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u3ThFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u3ThVJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5u3ThlJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5u36kFJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u36kVJPEeiyW7NaN4qWdw" name="findTarget" isStatic="true" method="_5xKZn1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtzOFJPEeiyW7NaN4qWdw">
                      <body>Finds a suitable scouting target for the supplied unit.&#xD;
     * Falls back to the best settlement if a path is not found.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Enables deferring to a fallback colony.&#xD;
     * @return A &lt;code>PathNode&lt;/code> to the target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u36klJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u36k1JPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5u36lFJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5u36lVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u4hoFJPEeiyW7NaN4qWdw" name="prepare" isStatic="true" method="_5xKZpFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtzOVJPEeiyW7NaN4qWdw">
                      <body>Prepare a unit for this mission.  Allow even experts to proceed&#xD;
     * even if not mounted.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to prepare.&#xD;
     * @return A reason why the unit can not perform this mission, or null&#xD;
     *     if none.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u4hoVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u4holJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u4ho1JPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5xLAoFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtzOlJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason why the mission would be invalid with the unit,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u4hpFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u4hpVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u5IsFJPEeiyW7NaN4qWdw" name="invalidColonyReason" visibility="private" isStatic="true" method="_5xLAo1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtzO1JPEeiyW7NaN4qWdw">
                      <body>Why is this mission invalid with a given colony target?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param colony The potential target &lt;code>Colony&lt;/code>.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u5IsVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u5IslJPEeiyW7NaN4qWdw" name="colony" type="_5qFhMVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u5Is1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u5ItFJPEeiyW7NaN4qWdw" name="invalidIndianSettlementReason" visibility="private" isStatic="true" method="_5xLAp1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xtzPFJPEeiyW7NaN4qWdw">
                      <body>Why is this mission invalid with a given native settlement target?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param is The potential target &lt;code>IndianSettlement&lt;/code>.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u5ItVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u5ItlJPEeiyW7NaN4qWdw" name="is" type="_5qjbQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u5It1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u5IuFJPEeiyW7NaN4qWdw" name="invalidSettlementReason" visibility="private" isStatic="true" method="_5xLAq1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xuaQFJPEeiyW7NaN4qWdw">
                      <body>Is this a valid scouting target because it is a suitable native&#xD;
     * settlement or an intermediate colony.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u5IuVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u5vwFJPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u5vwVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u5vwlJPEeiyW7NaN4qWdw" name="invalidTileReason" visibility="private" isStatic="true" method="_5xLAr1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xuaQVJPEeiyW7NaN4qWdw">
                      <body>Is this a valid scouting target because it is a suitable tile.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u5vw1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u5vxFJPEeiyW7NaN4qWdw" name="tile" type="_5qH9cVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u5vxVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u6W0FJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xLnsFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xuaQlJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u6W0VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u6W0lJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u6W01JPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xLns1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xuaQ1JPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u6W1FJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u694FJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u694VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u6941JPEeiyW7NaN4qWdw" name="doMission" method="_5xLnvVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5u695FJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u7k8FJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u8MAFJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5xLnwFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5u8MAVJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u8zEFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5xLnwlJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5u8zEVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5VkCsFJPEeiyW7NaN4qWdw" name="UnitWanderMission">
                  <ownedComment xmi:id="_5xuaRVJPEeiyW7NaN4qWdw">
                    <body>Mission for wandering in random directions.</body>
                  </ownedComment>
                  <generalization xmi:id="_5sriMFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wTd8FJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yOwkVJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wTd8VJPEeiyW7NaN4qWdw" value="Logger.getLogger(UnitWanderMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wUFAFJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wUFAVJPEeiyW7NaN4qWdw" value="&quot;AI wanderer&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xMOxFJPEeiyW7NaN4qWdw" name="UnitWanderMission" specification="_5u-BMFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xMOxVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xMOxlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xMOx1JPEeiyW7NaN4qWdw" type="_5VkCsFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, null);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xMOyFJPEeiyW7NaN4qWdw" name="UnitWanderMission" specification="_5u-oQlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xMOyVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xMOylJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xMOy1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xMOzFJPEeiyW7NaN4qWdw" type="_5VkCsFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xM10FJPEeiyW7NaN4qWdw" name="getTarget" specification="_5VkpwFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xM10VJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xM10lJPEeiyW7NaN4qWdw" name="findTarget" specification="_5VlQ01JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xM101JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xM11FJPEeiyW7NaN4qWdw" name="isOneTime" specification="_5Vl341JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xM11VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return true;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xM11lJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5VnGAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xM111JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidAIUnitReason(getAIUnit());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xM12FJPEeiyW7NaN4qWdw" name="doMission" specification="_5u_2ZFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xM12VJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xM12lJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (reason != null) return lbFail(lb, false, reason);&#xD;
&#xD;
     // Just move in random directions.&#xD;
     moveRandomlyTurn(tag);&#xD;
     return lbAt(lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xM121JPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5VntEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xM13FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xNc4FJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5VoUIlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xNc4VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;unitWanderMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5VkpwFJPEeiyW7NaN4qWdw" name="getTarget" method="_5xM10FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5u_PUlJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VlQ01JPEeiyW7NaN4qWdw" name="findTarget" method="_5xM10lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5u_2Y1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Vl341JPEeiyW7NaN4qWdw" name="isOneTime" method="_5xM11FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5Vme8FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VnGAFJPEeiyW7NaN4qWdw" name="invalidReason" method="_5xM11lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5VnGAVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VntEFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5xM121JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5VntEVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VoUIlJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5xNc4FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xuaSFJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;unitWanderMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5VoUI1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u-BMFJPEeiyW7NaN4qWdw" name="UnitWanderMission" method="_5xMOxFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5u-BM1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5u-oQFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xuaRlJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u-BMVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u-BMlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u-oQVJPEeiyW7NaN4qWdw" type="_5VkCsFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u-oQlJPEeiyW7NaN4qWdw" name="UnitWanderMission" method="_5xMOyFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5u-oRlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5u_PUFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xuaR1JPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>UnitWanderMission&lt;/code> and reads the&#xD;
     * given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5u-oQ1JPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u-oRFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u-oRVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5u_PUVJPEeiyW7NaN4qWdw" type="_5VkCsFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u_PU1JPEeiyW7NaN4qWdw" name="setTarget">
                    <ownedParameter xmi:id="_5u_PVFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5u_2ZFJPEeiyW7NaN4qWdw" name="doMission" method="_5xM12FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5u_2ZVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vAdcFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5VqJUFJPEeiyW7NaN4qWdw" name="UnitSeekAndDestroyMission">
                  <ownedComment xmi:id="_5xuaSVJPEeiyW7NaN4qWdw">
                    <body>Mission for attacking a specific target, be it a Unit or a Settlement.</body>
                  </ownedComment>
                  <generalization xmi:id="_5st-cFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wUsEFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yOwlFJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wUsEVJPEeiyW7NaN4qWdw" value="Logger.getLogger(UnitSeekAndDestroyMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wUsElJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wUsE1JPEeiyW7NaN4qWdw" value="&quot;AI seek+destroyer&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wUsFFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw" association="_5yPXoVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wWhQFJPEeiyW7NaN4qWdw" name="TARGET_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wWhQVJPEeiyW7NaN4qWdw" value="&quot;target&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5xvBUFJPEeiyW7NaN4qWdw" name="transportTarget" type="_5qGIQVJPEeiyW7NaN4qWdw" association="_5yTpEVJPEeiyW7NaN4qWdw"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xOD8FJPEeiyW7NaN4qWdw" name="UnitSeekAndDestroyMission" specification="_5vBrkFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xOD8VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOD8lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOD81JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOD9FJPEeiyW7NaN4qWdw" type="_5VqJUFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, target);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xOD9VJPEeiyW7NaN4qWdw" name="UnitSeekAndDestroyMission" specification="_5vCSoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xOD9lJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOD91JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOD-FJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOD-VJPEeiyW7NaN4qWdw" type="_5VqJUFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xOD-lJPEeiyW7NaN4qWdw" name="extractTarget" specification="_5vC5sFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xOD-1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOD_FJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOD_VJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final Location loc = (path == null) ? null&#xD;
         : path.getLastNode().getLocation();&#xD;
     Tile t;&#xD;
     Unit u;&#xD;
     return (loc == null || aiUnit == null || aiUnit.getUnit() == null) &#xD;
         ? null&#xD;
         : (invalidReason(aiUnit, loc.getSettlement()) == null)&#xD;
         ? loc.getSettlement()&#xD;
         : ((t = loc.getTile()) != null&#xD;
             &amp;&amp; invalidReason(aiUnit,&#xD;
                 u = t.getDefendingUnit(aiUnit.getUnit())) == null)&#xD;
         ? u&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xOD_lJPEeiyW7NaN4qWdw" name="scoreSettlementPath" specification="_5vC5tFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xOrAFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOrAVJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOrAlJPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOrA1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (invalidSettlementReason(aiUnit, settlement) != null) {&#xD;
         return Integer.MIN_VALUE;&#xD;
     }&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final CombatModel combatModel = unit.getGame().getCombatModel();&#xD;
&#xD;
     int value = 1020;&#xD;
     value -= path.getTotalTurns() * 100;&#xD;
&#xD;
     final double off = combatModel.getOffencePower(unit, settlement);&#xD;
     value += (int)Math.round(off * 50);&#xD;
&#xD;
     if (settlement instanceof Colony) {&#xD;
         // Favour high population (more loot:-).&#xD;
         Colony colony = (Colony) settlement;&#xD;
         value += 50 * colony.getUnitCount();&#xD;
         if (colony.hasStockade()) { // Avoid fortifications.&#xD;
             value -= 200 * colony.getStockade().getLevel();&#xD;
         }&#xD;
     } else if (settlement instanceof IndianSettlement) {&#xD;
         // Favour the most hostile settlements&#xD;
         IndianSettlement is = (IndianSettlement) settlement;&#xD;
         Tension tension = is.getAlarm(unit.getOwner());&#xD;
         if (tension != null) value += tension.getValue() / 2;&#xD;
     }&#xD;
     return aiUnit.getAIOwner().adjustMission(aiUnit, path, &#xD;
         UnitSeekAndDestroyMission.class, value);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xOrBFJPEeiyW7NaN4qWdw" name="scoreUnitPath" specification="_5vDgw1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xOrBVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOrBlJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOrB1JPEeiyW7NaN4qWdw" name="defender" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOrCFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (invalidUnitReason(aiUnit, defender) != null) {&#xD;
         return Integer.MIN_VALUE;&#xD;
     }&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Tile tile = path.getLastNode().getTile();&#xD;
     final int turns = path.getTotalTurns();&#xD;
     final CombatModel combatModel = unit.getGame().getCombatModel();&#xD;
     final double off = combatModel.getOffencePower(unit, defender);&#xD;
     final double def = combatModel.getDefencePower(unit, defender);&#xD;
     if (tile == null || off &lt;= 0) return Integer.MIN_VALUE;&#xD;
&#xD;
     int value = 1020 - turns * 100;&#xD;
     value += 100 * (off - def);&#xD;
&#xD;
     // Add a big bonus for treasure trains on the tile.&#xD;
     // Do not cheat and look at the value.&#xD;
     value += 1000 * tile.getUnitList().stream()&#xD;
         .filter(u -> u.canCarryTreasure() &amp;&amp; u.getTreasureAmount() > 0)&#xD;
         .count();&#xD;
&#xD;
     if (defender.isNaval()) {&#xD;
         if (tile.isLand()) value += 500; // Easy win&#xD;
     } else {&#xD;
         if (defender.hasAbility(Ability.EXPERT_SOLDIER)&#xD;
             &amp;&amp; !defender.isArmed()) value += 100;&#xD;
     }&#xD;
     return aiUnit.getAIOwner().adjustMission(aiUnit, path,&#xD;
         UnitSeekAndDestroyMission.class, value);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xOrCVJPEeiyW7NaN4qWdw" name="scorePath" specification="_5vEH0VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xOrClJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOrC1JPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xOrDFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Location loc = extractTarget(aiUnit, path);&#xD;
     return (loc instanceof Settlement)&#xD;
         ? scoreSettlementPath(aiUnit, path, (Settlement)loc)&#xD;
         : (loc instanceof Unit)&#xD;
         ? scoreUnitPath(aiUnit, path, (Unit)loc)&#xD;
         : Integer.MIN_VALUE;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xPSEFJPEeiyW7NaN4qWdw" name="getGoalDecider" specification="_5vEH1VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xPSEVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5xPSElJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5xPSE1JPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xPSFFJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xPSFVJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return new GoalDecider() {&#xD;
             private PathNode bestPath = null;&#xD;
             private int bestValue = Integer.MIN_VALUE;&#xD;
         &#xD;
             @Override&#xD;
             public PathNode getGoal() { return bestPath; }&#xD;
             @Override&#xD;
             public boolean hasSubGoals() { return true; }&#xD;
             @Override&#xD;
             public boolean check(Unit u, PathNode path) {&#xD;
                 int value = scorePath(aiUnit, path);&#xD;
                 if (bestValue &lt; value) {&#xD;
                     bestValue = value;&#xD;
                     bestPath = path;&#xD;
                     return true;&#xD;
                 }&#xD;
                 return false;&#xD;
             }&#xD;
         };&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xPSFlJPEeiyW7NaN4qWdw" name="findTargetPath" specification="_5vEu5VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xPSF1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xPSGFJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xPSGVJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xPSGlJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (invalidAIUnitReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Location start = unit.getPathStartLocation();&#xD;
&#xD;
     // Can the unit legally reach a valid target from where it&#xD;
     // currently is?&#xD;
     return unit.search(start, getGoalDecider(aiUnit, false),&#xD;
         CostDeciders.avoidIllegal(), range, unit.getCarrier());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xPSG1JPEeiyW7NaN4qWdw" name="findTarget" specification="_5vFV8lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xPSHFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xPSHVJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xPSHlJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xPSH1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>PathNode path = findTargetPath(aiUnit, range, deferOK);&#xD;
     return (path != null) ? extractTarget(aiUnit, path)&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xP5IFJPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5vF9AVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xP5IVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xP5IlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (!aiUnit.getUnit().isOffensiveUnit())&#xD;
         ? Mission.UNITNOTOFFENSIVE&#xD;
         : (aiUnit.getUnit().hasAbility(Ability.SPEAK_WITH_CHIEF))&#xD;
         ? &quot;scouts-should-not-seek-and-destroy&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xP5I1JPEeiyW7NaN4qWdw" name="invalidSettlementReason" specification="_5vF9BFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xP5JFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xP5JVJPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xP5JlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidTargetReason(settlement);&#xD;
     if (reason != null) return reason;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     return (unit.isNaval())&#xD;
         ? &quot;unit-is-naval&quot;&#xD;
         : (settlement.getOwner() == unit.getOwner())&#xD;
         ? Mission.TARGETOWNERSHIP&#xD;
         : invalidAttackReason(aiUnit, settlement.getOwner());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xP5J1JPEeiyW7NaN4qWdw" name="invalidUnitReason" specification="_5vGkE1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xP5KFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xP5KVJPEeiyW7NaN4qWdw" name="unit" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xP5KlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidTargetReason(unit);&#xD;
     if (reason != null) return reason;&#xD;
     final Tile tile = unit.getTile();&#xD;
     return (tile == null)&#xD;
         ? &quot;target-not-on-map&quot;&#xD;
         : (aiUnit.getUnit().getOwner() == unit.getOwner())&#xD;
         ? Mission.TARGETOWNERSHIP&#xD;
         : (tile.hasSettlement())&#xD;
         ? &quot;target-in-settlement&quot;&#xD;
         : (!aiUnit.getUnit().isTileAccessible(tile))&#xD;
         ? &quot;target-incompatible&quot;&#xD;
         : invalidAttackReason(aiUnit, unit.getOwner());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xP5K1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5vHLIFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xP5LFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xP5LVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidMissionReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xP5LlJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5vHyMFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xP5L1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xP5MFJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xP5MVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidMissionReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason                &#xD;
         : (loc instanceof Settlement)&#xD;
         ? invalidSettlementReason(aiUnit, (Settlement)loc)&#xD;
         : (loc instanceof Unit)&#xD;
         ? invalidUnitReason(aiUnit, (Unit)loc)&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xQgMFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5VtMoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xQgMVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return NORMAL_TRANSPORT_PRIORITY - 5;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xQgMlJPEeiyW7NaN4qWdw" name="getTransportDestination" specification="_5Vtzs1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xQgM1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (!isValid()) return null;&#xD;
     Location loc = (transportTarget != null) ? transportTarget : target;&#xD;
     return (getUnit().shouldTakeTransportTo(loc)) ? loc : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xQgNFJPEeiyW7NaN4qWdw" name="findTarget" specification="_5VuawlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xQgNVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return findTarget(getAIUnit(), 4, false);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xQgNlJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5VvB0lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xQgN1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), getTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xQgOFJPEeiyW7NaN4qWdw" name="doMission" specification="_5vIZQVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xQgOVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xQgOlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     String reason = invalidReason();&#xD;
     if (isTargetReason(reason)) {&#xD;
         Colony colony;&#xD;
         Mission m;&#xD;
         if (Mission.TARGETOWNERSHIP.equals(reason)&#xD;
             &amp;&amp; getTarget() instanceof Colony&#xD;
             &amp;&amp; (colony = (Colony)getTarget()) != null&#xD;
             &amp;&amp; getPlayer().owns(colony)&#xD;
             &amp;&amp; (m = getAIPlayer().getDefendSettlementMission(aiUnit,&#xD;
                     colony)) != null) {&#xD;
             return lbDone(lb, true, &quot; capturing colony &quot;, colony.getName());&#xD;
         }            &#xD;
         return retargetMission(reason, lb);&#xD;
     } else if (reason != null) {&#xD;
         return lbFail(lb, false, reason);&#xD;
     }&#xD;
&#xD;
     // Is there a target-of-opportunity?&#xD;
     final Unit unit = getUnit();&#xD;
     Location nearbyTarget = (unit.isOnCarrier()) ? null&#xD;
         : findTarget(aiUnit, 1, false);&#xD;
     if (nearbyTarget != null) {&#xD;
         if (getTarget() == null) {&#xD;
             setTarget(nearbyTarget);&#xD;
             return lbRetarget(lb);&#xD;
         }&#xD;
         if (nearbyTarget == getTarget()) {&#xD;
             nearbyTarget = null;&#xD;
         } else {&#xD;
             Tile now = unit.getTile();&#xD;
             Tile nearbyTile = nearbyTarget.getTile();&#xD;
             Tile targetTile = getTarget().getTile();&#xD;
             if (now != null &amp;&amp; nearbyTile != null &amp;&amp; targetTile != null&#xD;
                 &amp;&amp; (now.getDistanceTo(nearbyTile)&#xD;
                     >= now.getDistanceTo(targetTile))) {&#xD;
                 nearbyTarget = null;&#xD;
             } else {&#xD;
                 lb.add(&quot;, found target of opportunity &quot;, nearbyTarget);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Go to the target.&#xD;
     Location currentTarget = (nearbyTarget != null) ? nearbyTarget&#xD;
         : getTarget();&#xD;
     // Note avoiding other targets by choice of cost decider.&#xD;
     Unit.MoveType mt = travelToTarget(currentTarget,&#xD;
         CostDeciders.avoidSettlementsAndBlockingUnits(), lb);&#xD;
     switch (mt) {&#xD;
     case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
     case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
         return lbWait(lb);&#xD;
&#xD;
     case MOVE_NO_ACCESS_EMBARK: case MOVE_NO_TILE:&#xD;
         return this;&#xD;
&#xD;
     case ATTACK_UNIT: case ATTACK_SETTLEMENT:&#xD;
         Tile unitTile = unit.getTile();&#xD;
         Settlement settlement = unitTile.getSettlement();&#xD;
         if (settlement != null &amp;&amp; settlement.getUnitCount() &lt; 2) {&#xD;
             // Do not risk attacking out of a settlement that&#xD;
             // might collapse.  Defend instead.&#xD;
             Mission m = getAIPlayer()&#xD;
                 .getDefendSettlementMission(aiUnit, settlement);&#xD;
             return lbDone(lb, m != null, &quot; desperate defence of &quot;,&#xD;
                           settlement);&#xD;
         }&#xD;
         Direction d = unitTile.getDirection(currentTarget.getTile());&#xD;
         assert d != null;&#xD;
         AIMessage.askAttack(aiUnit, d);&#xD;
         return lbAttack(lb, currentTarget);&#xD;
&#xD;
     default:&#xD;
         return lbMove(lb, mt);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xQgO1JPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5vJAUlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xQgPFJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (target != null) {&#xD;
         xw.writeAttribute(TARGET_TAG, target.getId());&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xQgPVJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5vJnY1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xQgPlJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     target = xr.getLocationAttribute(getGame(), TARGET_TAG, false);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xRHQFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5Vvo4lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xRHQVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xRHQlJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5VwP81JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xRHQ1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;unitSeekAndDestroyMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5VtMoFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5xQgMFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5VtMoVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Vtzs1JPEeiyW7NaN4qWdw" name="getTransportDestination" method="_5xQgMlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vHyNFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VuawlJPEeiyW7NaN4qWdw" name="findTarget" method="_5xQgNFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vIZQFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VvB0lJPEeiyW7NaN4qWdw" name="invalidReason" method="_5xQgNlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5VvB01JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Vvo4lJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5xRHQFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5Vvo41JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5VwP81JPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5xRHQlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xwPclJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;unitSeekAndDestroyMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5VwP9FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vBrkFJPEeiyW7NaN4qWdw" name="UnitSeekAndDestroyMission" method="_5xOD8FJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5vBrlFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5vBrlVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xvoYFJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param target The object we are trying to destroy.  This can be&#xD;
     *     either a &lt;code>Settlement&lt;/code> or a &lt;code>Unit&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vBrkVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vBrklJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vBrk1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vBrllJPEeiyW7NaN4qWdw" type="_5VqJUFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vCSoFJPEeiyW7NaN4qWdw" name="UnitSeekAndDestroyMission" method="_5xOD9VJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5vCSpFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5vCSpVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xvoYVJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>UnitSeekAndDestroyMission&lt;/code> and reads&#xD;
     * the given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vCSoVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vCSolJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vCSo1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vCSplJPEeiyW7NaN4qWdw" type="_5VqJUFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vC5sFJPEeiyW7NaN4qWdw" name="extractTarget" isStatic="true" method="_5xOD-lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xvoYlJPEeiyW7NaN4qWdw">
                      <body>Extract a valid target for this mission from a path.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to perform the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to extract a target from.&#xD;
     * @return A target for this mission, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vC5sVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vC5slJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vC5s1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vC5tFJPEeiyW7NaN4qWdw" name="scoreSettlementPath" visibility="private" isStatic="true" method="_5xOD_lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xvoY1JPEeiyW7NaN4qWdw">
                      <body>Scores a potential attack on a settlement.&#xD;
     *&#xD;
     * Do not cheat and look inside the settlement.&#xD;
     * Just use visible facts about it.&#xD;
     *&#xD;
     * FIXME: if we are the REF and there is a significant Tory&#xD;
     * population inside, assume traitors have briefed us.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to do the mission.&#xD;
     * @param path The &lt;code>PathNode&lt;/code> to take to the settlement.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> to attack.&#xD;
     * @return A score of the desirability of the mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vC5tVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vDgwFJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vDgwVJPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vDgwlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vDgw1JPEeiyW7NaN4qWdw" name="scoreUnitPath" visibility="private" isStatic="true" method="_5xOrBFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xvoZFJPEeiyW7NaN4qWdw">
                      <body>Scores a potential attack on a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to do the mission.&#xD;
     * @param path The &lt;code>PathNode&lt;/code> to take to the settlement.&#xD;
     * @param defender The &lt;code>Unit&lt;/code> to attack.&#xD;
     * @return A score of the desirability of the mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vDgxFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vDgxVJPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vDgxlJPEeiyW7NaN4qWdw" name="defender" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vEH0FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vEH0VJPEeiyW7NaN4qWdw" name="scorePath" isStatic="true" method="_5xOrCVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xvoZVJPEeiyW7NaN4qWdw">
                      <body>Evaluate a potential seek and destroy mission for a given unit&#xD;
     * to a given tile.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to do the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to take to the target.&#xD;
     * @return A score for the proposed mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vEH0lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vEH01JPEeiyW7NaN4qWdw" name="path" type="_5qGvUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vEH1FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vEH1VJPEeiyW7NaN4qWdw" name="getGoalDecider" visibility="private" isStatic="true" method="_5xPSEFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xvoZlJPEeiyW7NaN4qWdw">
                      <body>Gets a &lt;code>GoalDecider&lt;/code> for finding the best colony&#xD;
     * &lt;code>Tile&lt;/code>, optionally falling back to the nearest colony.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> that is searching.&#xD;
     * @param deferOK Not used in this mission.&#xD;
     * @return A suitable &lt;code>GoalDecider&lt;/code>.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vEu4FJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw">
                      <eAnnotations xmi:id="_5vEu41JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                        <details xmi:id="_5vEu5FJPEeiyW7NaN4qWdw" key="final"/>
                      </eAnnotations>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5vEu4VJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5vEu4lJPEeiyW7NaN4qWdw" type="_5qJLk1JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vEu5VJPEeiyW7NaN4qWdw" name="findTargetPath" isStatic="true" method="_5xPSFlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xvoZ1JPEeiyW7NaN4qWdw">
                      <body>Finds a suitable seek-and-destroy target path for an AI unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to find a target for.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Not implemented in this mission.&#xD;
     * @return A path to the target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vEu5lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vEu51JPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5vFV8FJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5vFV8VJPEeiyW7NaN4qWdw" type="_5qGvUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vFV8lJPEeiyW7NaN4qWdw" name="findTarget" isStatic="true" method="_5xPSG1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xvoaFJPEeiyW7NaN4qWdw">
                      <body>Finds a suitable seek-and-destroy target for an AI unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to find a target for.&#xD;
     * @param range An upper bound on the number of moves.&#xD;
     * @param deferOK Not implemented in this mission.&#xD;
     * @return A suitable target, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vFV81JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vFV9FJPEeiyW7NaN4qWdw" name="range">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5vFV9VJPEeiyW7NaN4qWdw" name="deferOK">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5vF9AFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vF9AVJPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5xP5IFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xvoaVJPEeiyW7NaN4qWdw">
                      <body>Why would a UnitSeekAndDestroyMission be invalid with the given unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid, or null if&#xD;
     *     none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vF9AlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vF9A1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vF9BFJPEeiyW7NaN4qWdw" name="invalidSettlementReason" visibility="private" isStatic="true" method="_5xP5I1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xvoalJPEeiyW7NaN4qWdw">
                      <body>Why would a UnitSeekAndDestroyMission be invalid with the given unit&#xD;
     * and settlement.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to seek-and-destroy with.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid, or null if&#xD;
     *     none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vGkEFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vGkEVJPEeiyW7NaN4qWdw" name="settlement" type="_5qaRUlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vGkElJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vGkE1JPEeiyW7NaN4qWdw" name="invalidUnitReason" visibility="private" isStatic="true" method="_5xP5J1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xvoa1JPEeiyW7NaN4qWdw">
                      <body>Why would a UnitSeekAndDestroyMission be invalid with the given unit&#xD;
     * and target unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to seek-and-destroy with.&#xD;
     * @param unit The target &lt;code>Unit&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid, or null if&#xD;
     *     none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vGkFFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vGkFVJPEeiyW7NaN4qWdw" name="unit" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vGkFlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vHLIFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xP5K1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xwPcFJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vHLIVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vHLIlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vHyMFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xP5LlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xwPcVJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vHyMVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vHyMlJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vHyM1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vIZQVJPEeiyW7NaN4qWdw" name="doMission" method="_5xQgOFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vIZQlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vIZQ1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vJAUlJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5xQgO1JPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vJAU1JPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vJnY1JPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5xQgPVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vJnZFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5V2WkFJPEeiyW7NaN4qWdw" name="UnitWanderHostileMission">
                  <ownedComment xmi:id="_5xwPc1JPEeiyW7NaN4qWdw">
                    <body>Mission for wandering around, attacking targets owned by a player we &#xD;
do not like.</body>
                  </ownedComment>
                  <generalization xmi:id="_5sy28FJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wXvYFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yP-sVJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wXvYVJPEeiyW7NaN4qWdw" value="Logger.getLogger(UnitWanderHostileMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wXvYlJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wXvY1JPEeiyW7NaN4qWdw" value="&quot;AI hostile-wanderer&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xRuUFJPEeiyW7NaN4qWdw" name="UnitWanderHostileMission" specification="_5vLckFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xRuUVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xRuUlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xRuU1JPEeiyW7NaN4qWdw" type="_5V2WkFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, null);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xRuVFJPEeiyW7NaN4qWdw" name="UnitWanderHostileMission" specification="_5vLcllJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xRuVVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xRuVlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xRuV1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xRuWFJPEeiyW7NaN4qWdw" type="_5V2WkFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xRuWVJPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5vMDplJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xRuWlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xRuW1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Unit unit = aiUnit.getUnit();&#xD;
     return (!unit.isOffensiveUnit()) ? Mission.UNITNOTOFFENSIVE&#xD;
         : (!unit.hasTile()) ? Mission.UNITNOTONMAP&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xRuXFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5vMqsVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xRuXVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xRuXlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason;&#xD;
     return ((reason = Mission.invalidReason(aiUnit)) != null) ? reason&#xD;
         : ((reason = invalidMissionReason(aiUnit)) != null) ? reason&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xSVYFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5vMqtFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xSVYVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xSVYlJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xSVY1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason;&#xD;
     return ((reason = invalidAIUnitReason(aiUnit)) != null) ? reason&#xD;
         : ((reason = invalidMissionReason(aiUnit)) != null) ? reason&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xSVZFJPEeiyW7NaN4qWdw" name="getTarget" specification="_5V3ksFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xSVZVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xSVZlJPEeiyW7NaN4qWdw" name="findTarget" specification="_5V4Lw1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xSVZ1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xSVaFJPEeiyW7NaN4qWdw" name="isOneTime" specification="_5V4y01JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xSVaVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return true;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xSValJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5V5Z41JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xSVa1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), null);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xSVbFJPEeiyW7NaN4qWdw" name="doMission" specification="_5vOf41JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xSVbVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xSVblJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (reason != null) return lbFail(lb, false, reason);&#xD;
&#xD;
     // Make random moves in a reasonably consistent direction,&#xD;
     // checking for a target along the way.&#xD;
     final Unit unit = getUnit();&#xD;
     final AIUnit aiUnit = getAIUnit();&#xD;
     int check = 0, checkTurns = randomInt(logger, &quot;Hostile&quot;,&#xD;
                                           getAIRandom(), 4);&#xD;
     Direction d = Direction.getRandomDirection(tag, logger, getAIRandom());&#xD;
     while (unit.getMovesLeft() > 0) {&#xD;
         // Every checkTurns, look for a target of opportunity.&#xD;
         if (check == 0) {&#xD;
             Mission m = getAIPlayer().getSeekAndDestroyMission(aiUnit, 1);&#xD;
             if (m != null) {&#xD;
                 return lbDone(lb, true, &quot;found target &quot;, m.getTarget());&#xD;
             }&#xD;
             check = checkTurns;&#xD;
         } else check--;&#xD;
&#xD;
         if ((d = moveRandomly(tag, d)) == null) break;&#xD;
     }&#xD;
     return lbAt(lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xS8cFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5V6A81JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xS8cVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xS8clJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5V7PElJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xS8c1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;unitWanderHostileMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5V3ksFJPEeiyW7NaN4qWdw" name="getTarget" method="_5xSVZFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vN40FJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5V4Lw1JPEeiyW7NaN4qWdw" name="findTarget" method="_5xSVZlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vOf4lJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5V4y01JPEeiyW7NaN4qWdw" name="isOneTime" method="_5xSVaFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5V4y1FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5V5Z41JPEeiyW7NaN4qWdw" name="invalidReason" method="_5xSValJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5V5Z5FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5V6A81JPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5xS8cFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5V6oAFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5V7PElJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5xS8clJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xw2g1JPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;unitWanderHostileMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5V7PE1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vLckFJPEeiyW7NaN4qWdw" name="UnitWanderHostileMission" method="_5xRuUFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5vLck1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5vLclFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xwPdFJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vLckVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vLcklJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vLclVJPEeiyW7NaN4qWdw" type="_5V2WkFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vLcllJPEeiyW7NaN4qWdw" name="UnitWanderHostileMission" method="_5xRuVFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5vMDo1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5vMDpFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xwPdVJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>UnitWanderHostileMission&lt;/code> and reads&#xD;
     * the given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vMDoFJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vMDoVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vMDolJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vMDpVJPEeiyW7NaN4qWdw" type="_5V2WkFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vMDplJPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5xRuWVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xw2gFJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason why the mission would be invalid with the unit,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vMDp1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vMqsFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vMqsVJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xRuXFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xw2gVJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vMqslJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vMqs1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vMqtFJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xSVYFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vMqtVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vNRwFJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vNRwVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vN40VJPEeiyW7NaN4qWdw" name="setTarget">
                    <ownedParameter xmi:id="_5vN40lJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vOf41JPEeiyW7NaN4qWdw" name="doMission" method="_5xSVbFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vOf5FJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vOf5VJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5V9rUFJPEeiyW7NaN4qWdw" name="TransportMission">
                  <ownedComment xmi:id="_5xw2hFJPEeiyW7NaN4qWdw">
                    <body>Mission for transporting units and goods on a carrier.&#xD;
 *&#xD;
@see net.sf.freecol.common.model.Unit Unit</body>
                  </ownedComment>
                  <generalization xmi:id="_5s5koFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wYWcFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yQlwVJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wY9gFJPEeiyW7NaN4qWdw" value="Logger.getLogger(TransportMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wY9gVJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wY9glJPEeiyW7NaN4qWdw" value="&quot;AI transport&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wY9g1JPEeiyW7NaN4qWdw" name="DESTINATION_UPPER_BOUND" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wY9hFJPEeiyW7NaN4qWdw" value="4"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wZkkFJPEeiyW7NaN4qWdw" name="MINIMUM_GOLD_TO_STAY_IN_EUROPE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wZkkVJPEeiyW7NaN4qWdw" value="600"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wZkklJPEeiyW7NaN4qWdw" name="cargoes" visibility="private" isLeaf="true" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_5yQlxFJPEeiyW7NaN4qWdw">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5wZkk1JPEeiyW7NaN4qWdw" value="*"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wZklFJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5waysFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw" association="_5yRM0VJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wd2AFJPEeiyW7NaN4qWdw" name="TARGET_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wedEFJPEeiyW7NaN4qWdw" value="&quot;target&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wedEVJPEeiyW7NaN4qWdw" name="OLD_TRANSPORTABLE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wedElJPEeiyW7NaN4qWdw" value="&quot;transportable&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xTjgFJPEeiyW7NaN4qWdw" name="TransportMission" specification="_5vQVEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xTjgVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xTjglJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xTjg1JPEeiyW7NaN4qWdw" type="_5V9rUFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, aiUnit.getTrivialTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xTjhFJPEeiyW7NaN4qWdw" name="TransportMission" specification="_5vQ8IFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xTjhVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xTjhlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xTjh1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xTjiFJPEeiyW7NaN4qWdw" type="_5V9rUFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xTjiVJPEeiyW7NaN4qWdw" name="dispose" specification="_5WBVsFJPEeiyW7NaN4qWdw">
                    <language>java</language>
                    <body>logger.finest(tag + &quot; disposing (&quot; + clearCargoes() + &quot;): &quot; + this&#xD;
         //+ &quot;\n&quot; + net.sf.freecol.common.debug.FreeColDebugger.stackTraceToString()&#xD;
         );&#xD;
     super.dispose();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xTjilJPEeiyW7NaN4qWdw" name="isCarrying" specification="_5vRjNlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xTji1JPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xTjjFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return t != null &amp;&amp; t.getLocation() == getUnit();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUKkFJPEeiyW7NaN4qWdw" name="isTransporting" specification="_5vRjOVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUKkVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xUKklJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return tFind(t) != null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUKk1JPEeiyW7NaN4qWdw" name="shouldAttack" specification="_5vSxUFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUKlFJPEeiyW7NaN4qWdw" name="other" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xUKlVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (invalidAttackReason(getAIUnit(),&#xD;
                             other.getOwner()) != null) return false;&#xD;
     final Unit carrier = getUnit();&#xD;
     final CombatModel cm = getGame().getCombatModel();&#xD;
     double offence = cm.getOffencePower(carrier, other)&#xD;
         * ((carrier.hasCargo()) ? 0.3 : 0.80);&#xD;
     return offence > cm.getOffencePower(other, carrier);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUKllJPEeiyW7NaN4qWdw" name="tCopy" specification="_5WB8wlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUKl1JPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5xUKmFJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>synchronized (cargoes) {&#xD;
         return new ArrayList&lt;>(cargoes);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUKmVJPEeiyW7NaN4qWdw" name="tClear" specification="_5WCj0lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUKmlJPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5xUKm1JPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>List&lt;Cargo> old = new ArrayList&lt;>();&#xD;
     synchronized (cargoes) {&#xD;
         old.addAll(cargoes);&#xD;
         cargoes.clear();&#xD;
     }&#xD;
     return old;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUKnFJPEeiyW7NaN4qWdw" name="tSet" specification="_5vSxU1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUKnVJPEeiyW7NaN4qWdw" name="nxt" type="_5qSVgFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xUKnlJPEeiyW7NaN4qWdw" name="setSpace">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xUKn1JPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5xUKoFJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>List&lt;Cargo> old = tCopy();&#xD;
     synchronized (cargoes) {&#xD;
         cargoes.clear();&#xD;
         for (Cargo c : nxt) {&#xD;
             if (c.isValid()) cargoes.add(c);&#xD;
         }&#xD;
         if (setSpace) tSpace();&#xD;
     }&#xD;
     tRetarget();&#xD;
     return old;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUKoVJPEeiyW7NaN4qWdw" name="tSize" specification="_5WDK4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUKolJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>int size;&#xD;
     synchronized (cargoes) {&#xD;
         size = cargoes.size();&#xD;
     }&#xD;
     return size;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUxoFJPEeiyW7NaN4qWdw" name="tFind" specification="_5vTYYVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUxoVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xUxolJPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>synchronized (cargoes) {&#xD;
         return find(cargoes, c -> c.getTransportable() == t);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUxo1JPEeiyW7NaN4qWdw" name="tFirst" specification="_5WDK4lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUxpFJPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>synchronized (cargoes) {&#xD;
         return find(cargoes, Cargo::isValid);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUxpVJPEeiyW7NaN4qWdw" name="tAdd" specification="_5vTYZVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUxplJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xUxp1JPEeiyW7NaN4qWdw" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xUxqFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (!cargo.isValid()) return false;&#xD;
     if (tFind(cargo.getTransportable()) != null) return true;&#xD;
     boolean change = false;&#xD;
     synchronized (cargoes) {&#xD;
         change = cargoes.isEmpty() || index == 0;&#xD;
         if (index >= 0) {&#xD;
             cargoes.add(index, cargo); &#xD;
         } else {&#xD;
             cargoes.add(cargo);&#xD;
         }&#xD;
         tSpace();&#xD;
     }&#xD;
     if (change) tRetarget();&#xD;
     return true;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUxqVJPEeiyW7NaN4qWdw" name="tRemove" specification="_5vT_cFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUxqlJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xUxq1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>boolean result = false, change = false;&#xD;
     final TransportableAIObject t = cargo.getTransportable();&#xD;
     synchronized (cargoes) {&#xD;
         for (int i = 0; i &lt; cargoes.size(); i++) {&#xD;
             if (cargoes.get(i).getTransportable() == t) {&#xD;
                 cargoes.remove(i);&#xD;
                 tSpace();&#xD;
                 change = i == 0;&#xD;
                 result = true;&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (change) tRetarget();&#xD;
     return result;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUxrFJPEeiyW7NaN4qWdw" name="tSpace" specification="_5WDx8FJPEeiyW7NaN4qWdw">
                    <language>java</language>
                    <body>final Unit carrier = getUnit();&#xD;
     final int maxHolds = carrier.getCargoCapacity();&#xD;
     int holds = carrier.getCargoSpaceTaken();&#xD;
     for (Cargo cargo : cargoes) {&#xD;
         if (!cargo.isValid()) continue;&#xD;
         holds += cargo.getNewSpace();&#xD;
         cargo.setSpaceLeft(maxHolds - holds);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUxrVJPEeiyW7NaN4qWdw" name="tRetarget" specification="_5WDx8VJPEeiyW7NaN4qWdw">
                    <language>java</language>
                    <body>Cargo c;&#xD;
     synchronized (cargoes) {&#xD;
         c = find(cargoes, Cargo::isValid);&#xD;
     }&#xD;
     setTarget(Location.upLoc((c == null) ? getAIUnit().getTrivialTarget()&#xD;
             : c.getCarrierTarget()));&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUxrlJPEeiyW7NaN4qWdw" name="destinationCount" specification="_5WEZAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUxr1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Location now = null;&#xD;
     int ret = 0;&#xD;
     for (Cargo cargo : tCopy()) {&#xD;
         if (!Map.isSameLocation(now, cargo.getCarrierTarget())) {&#xD;
             ret++;&#xD;
             now = cargo.getCarrierTarget();&#xD;
         }&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xUxsFJPEeiyW7NaN4qWdw" name="destinationCapacity" specification="_5WEZAlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xUxsVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return DESTINATION_UPPER_BOUND - destinationCount();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xVYsFJPEeiyW7NaN4qWdw" name="dropTransportable" specification="_5vT_c1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xVYsVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>AIUnit carrier = getAIUnit();&#xD;
     if (t.getTransport() == carrier) t.setTransport(null);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xVYslJPEeiyW7NaN4qWdw" name="takeTransportable" specification="_5vUmgFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xVYs1JPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>AIUnit carrier = getAIUnit();&#xD;
     if (t.getTransport() != carrier) t.setTransport(carrier);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xVYtFJPEeiyW7NaN4qWdw" name="getTransportTarget" specification="_5vUmglJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xVYtVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xVYtlJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>if (isCarrying(t)) return null;&#xD;
     Cargo cargo = tFind(t);&#xD;
     return (cargo == null) ? null : cargo.getTransportTarget();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xVYt1JPEeiyW7NaN4qWdw" name="getTransportTurns" specification="_5vVNkFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xVYuFJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xVYuVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (isCarrying(t)) return INFINITY;&#xD;
     Cargo cargo = tFind(t);&#xD;
     return (cargo == null) ? INFINITY : cargo.getTurns();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xVYulJPEeiyW7NaN4qWdw" name="wrapCargoes" specification="_5WFAEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xVYu1JPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5xVYvFJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>List&lt;Cargo> ts = tCopy();&#xD;
     for (int i = 0; i &lt; ts.size()-1; i++) {&#xD;
         Cargo head = ts.get(i);&#xD;
         while (i+1 &lt; ts.size() &amp;&amp; head.couldWrap(ts.get(i+1))) {&#xD;
             head.wrap(ts.remove(i+1));&#xD;
         }&#xD;
     }&#xD;
     return ts;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xVYvVJPEeiyW7NaN4qWdw" name="unwrapCargoes" specification="_5vVNk1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xVYvlJPEeiyW7NaN4qWdw" name="ts" type="_5qSVgFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xVYv1JPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5xVYwFJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>for (int i = 0; i &lt; ts.size(); i++) {&#xD;
         Cargo t = ts.get(i);&#xD;
         if (t.hasWrapped()) {&#xD;
             List&lt;Cargo> tl = t.unwrap();&#xD;
             ts.addAll(i+1, tl);&#xD;
             i += tl.size();&#xD;
         }&#xD;
     }&#xD;
     return ts;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xVYwVJPEeiyW7NaN4qWdw" name="clearCargoes" specification="_5WFnIFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xVYwlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String log = &quot;cargoes cleared: &quot;;&#xD;
     for (Cargo cargo : tClear()) {&#xD;
         dropTransportable(cargo.getTransportable());&#xD;
         log += &quot; &quot; + cargo;&#xD;
     }&#xD;
     tRetarget();&#xD;
     return log;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xV_wFJPEeiyW7NaN4qWdw" name="isEmpty" specification="_5WFnIlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xV_wVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return tSize() == 0;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xV_wlJPEeiyW7NaN4qWdw" name="makeCargo" specification="_5vWbsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xV_w1JPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xV_xFJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xV_xVJPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final Unit carrier = getUnit();&#xD;
     String reason;&#xD;
     Cargo cargo = null;&#xD;
     if (t.getTransportDestination() == null) {&#xD;
         if (!isCarrying(t)) {&#xD;
             reason = &quot;null transport destination&quot;;&#xD;
         } else {&#xD;
             // Can happen with carriers with units transferred in&#xD;
             // Spanish succession.&#xD;
             PathNode path = carrier.getTrivialPath();&#xD;
             if (path == null) {&#xD;
                 reason = &quot;null transport destination&quot;;&#xD;
             } else {&#xD;
                 try {&#xD;
                     reason = null;&#xD;
                     cargo = Cargo.newCargo(t, carrier,&#xD;
                         path.getLastNode().getLocation(), true);&#xD;
                 } catch (FreeColException fce) {&#xD;
                     reason = fce.getMessage();&#xD;
                     cargo = null;&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     } else if (!isCarrying(t) &amp;&amp; !t.carriableBy(carrier)) {&#xD;
         reason = &quot;carrier &quot; + carrier.toShortString() + &quot; can not carry&quot;;&#xD;
     } else {&#xD;
         try {&#xD;
             reason = null;&#xD;
             cargo = Cargo.newCargo(t, carrier);&#xD;
         } catch (FreeColException fce) {&#xD;
             reason = fce.getMessage();&#xD;
             cargo = null;&#xD;
         }&#xD;
     }&#xD;
     if (reason == null) {&#xD;
         lb.add(&quot;, made &quot;, cargo.toShortString());&#xD;
         return cargo;&#xD;
     } else {&#xD;
         lb.add(&quot;, failed to make cargo for &quot;, t, &quot; (&quot;, reason, &quot;)&quot;);&#xD;
         return null;&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xV_xlJPEeiyW7NaN4qWdw" name="addCargo" specification="_5vXCwFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xV_x1JPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xV_yFJPEeiyW7NaN4qWdw" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xV_yVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xV_ylJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>boolean result = tAdd(cargo, index);&#xD;
     if (result) takeTransportable(cargo.getTransportable());&#xD;
&#xD;
     if (result) {&#xD;
         lb.add(&quot;, added &quot;, cargo.toShortString(),&#xD;
                &quot; at &quot;, ((index &lt; 0) ? &quot;end&quot; : Integer.toString(index)));&#xD;
     } else {&#xD;
         lb.add(&quot;, failed to add &quot;, cargo.toShortString());&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xV_y1JPEeiyW7NaN4qWdw" name="removeCargo" specification="_5vXCxVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xV_zFJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>if (!tRemove(cargo)) {&#xD;
         throw new RuntimeException(&quot;removeCargo &quot; + cargo.toShortString());&#xD;
     }&#xD;
     dropTransportable(cargo.getTransportable());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xV_zVJPEeiyW7NaN4qWdw" name="spaceAvailable" specification="_5vXp0FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xV_zlJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xV_z1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return spaceAvailable(cargo.getTransportable());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xV_0FJPEeiyW7NaN4qWdw" name="spaceAvailable" specification="_5vXp01JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xV_0VJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xV_0lJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final List&lt;Cargo> ts = tCopy();&#xD;
     final int newSpace = t.getSpaceTaken();&#xD;
&#xD;
     for (int i = ts.size()-1; i >= 0; i--) {&#xD;
         if (ts.get(i).getSpaceLeft() &lt; newSpace) return false;&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xV_01JPEeiyW7NaN4qWdw" name="queueCargo" specification="_5vYQ4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xV_1FJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xV_1VJPEeiyW7NaN4qWdw" name="requireMatch">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xV_1lJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xV_11JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Unit carrier = getUnit();&#xD;
     final int maxHolds = carrier.getCargoCapacity();&#xD;
     final List&lt;Cargo> ts = tCopy();&#xD;
     final int newSpace = cargo.getNewSpace();&#xD;
     int candidate = -1;&#xD;
&#xD;
     if (ts.isEmpty() // Trivial case&#xD;
         || (Map.isSameLocation(carrier.getLocation(), // Carrier here?&#xD;
                                cargo.getCarrierTarget())&#xD;
             &amp;&amp; cargo.canQueueAt(carrier, 0, ts))) {&#xD;
         candidate = 0;&#xD;
     }&#xD;
&#xD;
     if (candidate &lt; 0) { // Match an existing target?&#xD;
         outer: for (int i = 0; i &lt; ts.size(); i++) {&#xD;
             Cargo tr = ts.get(i);&#xD;
             if (Map.isSameLocation(tr.getCarrierTarget(),&#xD;
                                    cargo.getCarrierTarget())) {&#xD;
                 if (!cargo.canQueueAt(carrier, i, ts)) continue outer;&#xD;
                 candidate = i;&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     &#xD;
     if (candidate &lt; 0) { // Queue at end unless match required&#xD;
         if (requireMatch) return false;&#xD;
         candidate = ts.size();&#xD;
     }&#xD;
     return addCargo(cargo, candidate, lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xWm0FJPEeiyW7NaN4qWdw" name="dumpCargo" specification="_5vZfAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xWm0VJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xWm0lJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xWm01JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>TransportableAIObject t = cargo.getTransportable();&#xD;
     if (isCarrying(t)) t.leaveTransport();&#xD;
     if (!isCarrying(t) &amp;&amp; tFind(t) != null) removeCargo(cargo);&#xD;
     if (tFind(t) != null) {&#xD;
         String reason = cargo.dump();&#xD;
         if (reason != null) {&#xD;
             lb.add(&quot;, dump failed(&quot;, reason, &quot;)&quot;);&#xD;
             return false;&#xD;
         } else {&#xD;
             lb.add(&quot;, dumping&quot;);&#xD;
         }&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xWm1FJPEeiyW7NaN4qWdw" name="requeueCargo" specification="_5vZfBFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xWm1VJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xWm1lJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xWm11JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final TransportableAIObject t = cargo.getTransportable();&#xD;
     boolean ret = false;&#xD;
     assert tFind(t) == cargo;&#xD;
     String reason = cargo.update();&#xD;
     if (reason != null) {&#xD;
         lb.add(&quot; requeue/update fail(&quot;, reason, &quot;) &quot;,&#xD;
                cargo.toShortString());&#xD;
         dumpCargo(cargo, lb);&#xD;
     } else if (!tRemove(cargo)) {&#xD;
         lb.add(&quot; requeue/remove fail &quot;, cargo.toShortString());&#xD;
     } else if (!queueCargo(cargo, false, lb)) {&#xD;
         lb.add(&quot; requeue/queue fail &quot;, cargo.toShortString());&#xD;
         dropTransportable(t);&#xD;
     } else {&#xD;
         lb.add(&quot; requeued(&quot;, cargo.getTransportTarget(), &quot;) &quot;,&#xD;
                cargo.toShortString());&#xD;
         takeTransportable(t);&#xD;
         ret = true;&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xWm2FJPEeiyW7NaN4qWdw" name="checkCargoes" specification="_5vaGEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xWm2VJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>final Unit carrier = getUnit();&#xD;
     if (carrier.isAtSea()) return; // Let it emerge.&#xD;
     final AIUnit aiCarrier = getAIUnit();&#xD;
&#xD;
     List&lt;Unit> unitsPresent = carrier.getUnitList();&#xD;
     List&lt;Goods> goodsPresent = carrier.getCompactGoods();&#xD;
     List&lt;TransportableAIObject> todo = new ArrayList&lt;>();&#xD;
     List&lt;TransportableAIObject> drop = new ArrayList&lt;>();&#xD;
&#xD;
     String reason;&#xD;
     PathNode path;&#xD;
     boolean dump;&#xD;
     lb.add(&quot; [check&quot;);&#xD;
     for (Cargo cargo : tCopy()) {&#xD;
         dump = false;&#xD;
         TransportableAIObject t = cargo.getTransportable();&#xD;
         reason = invalidReason(aiCarrier, cargo.getCarrierTarget());&#xD;
         if (reason != null || (reason = cargo.check(aiCarrier)) != null) {&#xD;
             // Just remove, it is invalid&#xD;
             removeCargo(cargo);&#xD;
             lb.add(&quot;, INVALID(&quot;, reason, &quot;) &quot;, cargo.toShortString());&#xD;
         } else if (cargo.isDelivered()) {&#xD;
             removeCargo(cargo);&#xD;
             lb.add(&quot;, COMPLETED &quot;, cargo.toShortString());&#xD;
         } else if (!cargo.hasPath() &amp;&amp; !cargo.retry()) {&#xD;
             reason = &quot; no-path&quot;;&#xD;
             dump = true;&#xD;
         } else if (carrier.hasTile() &amp;&amp; (reason = cargo.update()) != null) {&#xD;
             if (reason.startsWith(&quot;invalid&quot;)) {&#xD;
                 removeCargo(cargo);&#xD;
                 lb.add(&quot;, FAIL(&quot;, reason, &quot;) &quot;, cargo.toShortString());&#xD;
             } else if (cargo.retry()) {&#xD;
                 lb.add(&quot;, retry-&quot;, cargo.getTries(), &quot;(&quot;, reason, &quot;)&quot;);&#xD;
             } else {&#xD;
                 dump = true;&#xD;
             }&#xD;
         } else if (cargo.isCollectable()) {&#xD;
             lb.add(&quot;, collect &quot;, cargo.toShortString());&#xD;
         } else if (cargo.isDeliverable()) {&#xD;
             lb.add(&quot;, deliver &quot;, cargo.toShortString());&#xD;
         } else {&#xD;
             lb.add(&quot;, ok &quot;, cargo.toShortString()); // Good&#xD;
             cargo.resetTries();&#xD;
         }&#xD;
         if (dump) {&#xD;
             if (cargo.isCarried()) {&#xD;
                 dumpCargo(cargo, lb); // FIXME: can fail&#xD;
             } else {&#xD;
                 removeCargo(cargo);&#xD;
                 lb.add(&quot;, dropped(&quot;, reason, &quot;) &quot;, cargo.toShortString());&#xD;
             }&#xD;
         }&#xD;
         if (t instanceof AIUnit) {&#xD;
             unitsPresent.remove(((AIUnit)t).getUnit());&#xD;
         } else if (t instanceof AIGoods) {&#xD;
             Goods goods = ((AIGoods)t).getGoods();&#xD;
             if (goods != null) {&#xD;
                 Iterator&lt;Goods> gi = goodsPresent.iterator();&#xD;
                 while (gi.hasNext()) {&#xD;
                     Goods g = gi.next();&#xD;
                     if (g.getType() == goods.getType()) {&#xD;
                         gi.remove();&#xD;
                         break;&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Find anything that was not on the cargoes list&#xD;
     if (!unitsPresent.isEmpty()) {&#xD;
         lb.add(&quot;, found unexpected units&quot;);&#xD;
         for (Unit u : unitsPresent) {&#xD;
             AIUnit aiu = getAIMain().getAIUnit(u);&#xD;
             if (aiu == null) throw new IllegalStateException(&quot;Bogus:&quot; + u);&#xD;
             todo.add(aiu);&#xD;
         }&#xD;
     }&#xD;
     if (!goodsPresent.isEmpty()) {&#xD;
         lb.add(&quot;, found unexpected goods&quot;);&#xD;
         for (Goods g : goodsPresent) {&#xD;
             AIGoods aig = new AIGoods(getAIMain(), carrier, g.getType(),&#xD;
                                       g.getAmount(), null);&#xD;
             todo.add(aig);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Try to queue the surprise transportables.&#xD;
     while (!todo.isEmpty()) {&#xD;
         TransportableAIObject t = todo.remove(0);&#xD;
         if (!queueTransportable(t, false, lb)) drop.add(t);&#xD;
     }&#xD;
&#xD;
     // Drop transportables on the drop list, or queue them to be&#xD;
     // dropped at the next port.&#xD;
     if (!drop.isEmpty()) {&#xD;
         path = carrier.getTrivialPath();&#xD;
         Location end = (path == null) ? null&#xD;
             : path.getLastNode().getLocation();&#xD;
         &#xD;
         while (!drop.isEmpty()) {&#xD;
             TransportableAIObject t = drop.remove(0);&#xD;
             if (t.leaveTransport()) {&#xD;
                 lb.add(&quot; &quot;, t, &quot; left&quot;);&#xD;
             } else if (end != null) {&#xD;
                 try {&#xD;
                     Cargo cargo = Cargo.newCargo(t, carrier, end, false);&#xD;
                     boolean result = queueCargo(cargo, false, lb);&#xD;
                     lb.add(&quot; to drop at &quot;, Location.upLoc(end),&#xD;
                         &quot;=&quot;, result);&#xD;
                 } catch (FreeColException fce) {&#xD;
                     lb.add(&quot; &quot;, t, &quot; drop-fail(&quot;, fce.getMessage(), &quot;)&quot;);&#xD;
                 }&#xD;
             } else {&#xD;
                 lb.add(&quot; &quot;, t, &quot; stuck&quot;);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     lb.add(&quot;]&quot;);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xWm2lJPEeiyW7NaN4qWdw" name="tryCargo" specification="_5vaGElJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xWm21JPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xWm3FJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xWm3VJPEeiyW7NaN4qWdw" type="_5V-5cFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final Unit carrier = getUnit();&#xD;
     final Location here = carrier.getLocation();&#xD;
     final TransportableAIObject t = cargo.getTransportable();&#xD;
     final Locatable l = t.getTransportLocatable();&#xD;
     if (l == null) {&#xD;
         logger.warning(&quot;Null-locatable: &quot; + cargo);&#xD;
         return CargoResult.TDONE;&#xD;
     }&#xD;
     if (!Map.isSameLocation(here, cargo.getCarrierTarget())) {&#xD;
         lb.add(&quot;, &quot;, t, &quot; unready&quot;);&#xD;
         return CargoResult.TCONTINUE;&#xD;
     }&#xD;
     Direction d = null;&#xD;
     Location tloc = here;&#xD;
&#xD;
     switch (cargo.getMode()) {&#xD;
     case PICKUP:&#xD;
         if (!t.canMove()) {&#xD;
             lb.add(&quot;, &quot;, t, &quot; out of moves&quot;);&#xD;
             return CargoResult.TCONTINUE;&#xD;
         }&#xD;
         if ((d = cargo.getJoinDirection()) == null) {&#xD;
             logger.warning(&quot;Null pickup direction&quot;&#xD;
                 + &quot; for &quot; + cargo.toShortString()&#xD;
                 + &quot; at &quot; + t.getLocation().toString()&#xD;
                 + &quot; to &quot; + carrier);&#xD;
             return CargoResult.TFAIL;&#xD;
         }                    &#xD;
         tloc = tloc.getTile().getNeighbourOrNull(d.getReverseDirection());&#xD;
         // Fall through&#xD;
     case LOAD:&#xD;
         if (!Map.isSameLocation(tloc, t.getLocation())) {&#xD;
             lb.add(&quot;, &quot;, t, &quot; at &quot;, t.getLocation(), &quot; not &quot;, tloc,&#xD;
                 &quot; # &quot;, cargo.toShortString());&#xD;
             return CargoResult.TCONTINUE;&#xD;
         }&#xD;
         switch (carrier.getNoAddReason(l)) {&#xD;
         case NONE:&#xD;
             if (!t.joinTransport(carrier, d)) {&#xD;
                 lb.add(&quot;, &quot;, t, &quot; NO-JOIN&quot;);&#xD;
                 return CargoResult.TFAIL;&#xD;
             }&#xD;
             break;&#xD;
         case ALREADY_PRESENT:&#xD;
             break;&#xD;
         case CAPACITY_EXCEEDED:&#xD;
             lb.add(&quot;, &quot;, t, &quot; NO-ROOM on &quot;, carrier);&#xD;
             return CargoResult.TFAIL;&#xD;
         default:&#xD;
             lb.add(&quot;, &quot;, t, &quot; retry-&quot;, carrier.getNoAddReason(l));&#xD;
             return CargoResult.TRETRY;&#xD;
         }&#xD;
         &#xD;
         String reason = cargo.update();&#xD;
         if (reason != null) {&#xD;
             lb.add(&quot;, &quot;, t, &quot; NO-UPDATE(&quot;, reason, &quot;)&quot;);&#xD;
             return CargoResult.TFAIL;&#xD;
         }&#xD;
         lb.add(&quot;, &quot;, t, &quot; collected&quot;);&#xD;
         return CargoResult.TNEXT;&#xD;
&#xD;
     case DROPOFF:&#xD;
         if (!t.canMove()) {&#xD;
             lb.add(&quot;, &quot;, t, &quot; about to leave&quot;);&#xD;
             return CargoResult.TCONTINUE;&#xD;
         }&#xD;
         if ((d = cargo.getLeaveDirection()) == null) {&#xD;
             Unit.MoveType mt = ((AIUnit)t).getUnit()&#xD;
                 .getSimpleMoveType(t.getLocation().getTile(),&#xD;
                                    cargo.getTransportTarget().getTile());&#xD;
             switch (mt) {&#xD;
             case ATTACK_UNIT: case MOVE_NO_ATTACK_CIVILIAN:&#xD;
                 return CargoResult.TRETRY;&#xD;
             default:&#xD;
                 PathNode path = t.getDeliveryPath(carrier,&#xD;
                     cargo.getTransportTarget());&#xD;
                 logger.warning(&quot;Null direction&quot;&#xD;
                     + &quot; for &quot; + cargo.toShortString()&#xD;
                     + &quot; at &quot; + t.getLocation().toShortString()&#xD;
                     + &quot;/&quot; + carrier.getLocation().toShortString()&#xD;
                     + &quot; to &quot; + cargo.getTransportTarget()&#xD;
                     + &quot; mov=&quot; + mt&#xD;
                     + &quot; path=&quot; + ((path == null) ? &quot;null&quot;&#xD;
                         : path.fullPathToString()));&#xD;
                 return CargoResult.TFAIL;&#xD;
             }&#xD;
         }&#xD;
         // Fall through&#xD;
     case UNLOAD:&#xD;
         if (isCarrying(t) &amp;&amp; !t.leaveTransport(d)) {&#xD;
             //lb.add(&quot;, &quot;, t, &quot; NO-LEAVE&quot;);&#xD;
             PathNode pn = t.getDeliveryPath(carrier, t.getTransportDestination());&#xD;
             lb.add(&quot;, &quot;, t, &quot; NO-LEAVE(&quot;, here, &quot;~&quot;, cargo.getLeaveDirection(), &quot;~&quot;, t.getTransportDestination(), &quot; &quot;, ((pn == null) ? &quot;no-path&quot; : pn.fullPathToString()));&#xD;
             return CargoResult.TRETRY;&#xD;
         }&#xD;
         lb.add(&quot;, &quot;, t, &quot; COMPLETED&quot;);&#xD;
         break;&#xD;
&#xD;
     case DUMP:&#xD;
         if (!t.leaveTransport()) {&#xD;
             lb.add(&quot;, &quot;, t, &quot; STUCK&quot;);&#xD;
             return CargoResult.TCONTINUE;&#xD;
         }&#xD;
         lb.add(&quot;, &quot;, t, &quot; DUMPED at &quot;, t.getLocation());&#xD;
         break;&#xD;
     }&#xD;
&#xD;
     // Check for goods completing a wish&#xD;
     Colony colony;&#xD;
     AIColony aiColony;&#xD;
     if ((colony = (t.getLocation() == null) ? null&#xD;
             : t.getLocation().getColony()) != null&#xD;
         &amp;&amp; (aiColony = getAIMain().getAIColony(colony)) != null&#xD;
         &amp;&amp; aiColony.completeWish(t, lb)) {&#xD;
         aiColony.requestRearrange();&#xD;
     }&#xD;
     return CargoResult.TDONE;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xWm3lJPEeiyW7NaN4qWdw" name="doTransport" specification="_5vatIFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xWm31JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>final Unit unit = getUnit();&#xD;
     if (tSize() > 0) {&#xD;
         // Arrived at a target.  Deliver what can be delivered.&#xD;
         // Check other deliveries, we might be in port so this is&#xD;
         // a good time to decide to fail to deliver something.&#xD;
         lbAt(lb);&#xD;
         lb.add(&quot;, delivering&quot;);&#xD;
         List&lt;Cargo> cont = new ArrayList&lt;>();&#xD;
         List&lt;Cargo> next = new ArrayList&lt;>();&#xD;
         List&lt;Cargo> curr = tClear();&#xD;
         for (Cargo cargo : curr) {&#xD;
             CargoResult result = (cargo.getMode().isCollection())&#xD;
                 ? CargoResult.TCONTINUE&#xD;
                 : tryCargo(cargo, lb);&#xD;
             switch (result) {&#xD;
             case TCONTINUE:&#xD;
                 cont.add(cargo);&#xD;
                 break;&#xD;
             case TRETRY: // will check again below&#xD;
                 if (cargo.retry()) {&#xD;
                     cont.add(cargo);&#xD;
                     break;&#xD;
                 }&#xD;
                 // Fall through&#xD;
             case TFAIL:&#xD;
                 if (cargo.isCarried()) {&#xD;
                     cargo.dump();&#xD;
                     break;&#xD;
                 }&#xD;
                 // Fall through&#xD;
             case TDONE:&#xD;
                 dropTransportable(cargo.getTransportable());&#xD;
                 cargo.clear();&#xD;
                 break;&#xD;
             case TNEXT: default:&#xD;
                 throw new IllegalStateException(&quot;Can not happen&quot;);&#xD;
             }&#xD;
         }&#xD;
         curr.clear();&#xD;
         // Rebuild the cargo list with the original members,&#xD;
         // less the transportables that were dropped.&#xD;
         tSet(cont, true);&#xD;
&#xD;
         // Now try again, this time collecting as well as&#xD;
         // delivering.&#xD;
         lb.add(&quot;, collecting&quot;);&#xD;
         cont.clear();&#xD;
         for (Cargo cargo : tClear()) {&#xD;
             CargoResult result = (cargo.getMode().isCollection())&#xD;
                 ? tryCargo(cargo, lb)&#xD;
                 : CargoResult.TCONTINUE;&#xD;
             switch (result) {&#xD;
             case TCONTINUE:&#xD;
                 cont.add(cargo);&#xD;
                 break;&#xD;
             case TNEXT:&#xD;
                 cont.add(cargo);&#xD;
                 break;&#xD;
             case TRETRY:&#xD;
                 if (cargo.retry()) { // Can not reach the target.&#xD;
                     next.add(cargo); // Try again next turn.&#xD;
                     break;&#xD;
                 }&#xD;
                 // Fall through&#xD;
             case TFAIL: case TDONE:&#xD;
                 dropTransportable(cargo.getTransportable());&#xD;
                 cargo.clear();&#xD;
                 break;&#xD;
             default:&#xD;
                 throw new IllegalStateException(&quot;Can not happen&quot;);&#xD;
             }&#xD;
         }&#xD;
&#xD;
         // Rebuild the cargo list with the original members,&#xD;
         // less the transportables that were dropped.&#xD;
         tSet(cont, true);&#xD;
&#xD;
         // Add the new and blocked cargoes incrementally with&#xD;
         // the current arrangement, which is likely to put them&#xD;
         // at the end.&#xD;
         if (!next.isEmpty()) {&#xD;
             lb.add(&quot;, requeue&quot;);&#xD;
             for (Cargo c : next) queueCargo(c, false, lb);&#xD;
         }&#xD;
&#xD;
         // Delivering might have invalidated other cargo missions.&#xD;
         // It may be rare, but there have been cases where a scout&#xD;
         // has disembarked onto an LCR, invalidating the mission&#xD;
         // of a scout further down the transport list.  Run check&#xD;
         // cargoes again to handle this.  Then optimize.&#xD;
         checkCargoes(lb);&#xD;
         optimizeCargoes(lb);&#xD;
     }&#xD;
&#xD;
     // Replenish cargoes up to available destination capacity&#xD;
     // and 50% above maximum cargoes (FIXME: longer?)&#xD;
     final EuropeanAIPlayer euaip = getEuropeanAIPlayer();&#xD;
     while (destinationCapacity() > 0&#xD;
         &amp;&amp; tSize() &lt; unit.getCargoCapacity() * 3 / 2) {&#xD;
         Cargo cargo = getBestCargo(unit);&#xD;
         if (cargo == null) break;&#xD;
         if (!queueCargo(cargo, false, lb)) break;&#xD;
         euaip.claimTransportable(cargo.getTransportable());&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xXN4FJPEeiyW7NaN4qWdw" name="scoreCargoOrder" specification="_5vatIlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xXN4VJPEeiyW7NaN4qWdw" name="initialLocation" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xXN4lJPEeiyW7NaN4qWdw" name="order" type="_5qSVgFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xXN41JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final Unit carrier = getUnit();&#xD;
     final int maxHolds = carrier.getCargoCapacity();&#xD;
     int holds = carrier.getCargoSpaceTaken();&#xD;
     Location now = initialLocation;&#xD;
     float totalHoldTurns = 0.0f;&#xD;
     float totalTurns = 0.0f;&#xD;
     float favourEarly = 1.0f;&#xD;
&#xD;
     for (Cargo cargo : order) {&#xD;
         int turns = carrier.getTurnsToReach(now, cargo.getCarrierTarget());&#xD;
         totalTurns += turns; // Might be MANY_TURNS!&#xD;
         totalHoldTurns += holds * turns * favourEarly;&#xD;
         holds += cargo.getNewSpace();&#xD;
         if (holds &lt; 0 || holds > maxHolds) return -1.0f;&#xD;
         now = cargo.getCarrierTarget();&#xD;
         favourEarly += 0.1f; // Slight preference for large loads first&#xD;
     }&#xD;
     return totalTurns + 0.001f * totalHoldTurns;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xXN5FJPEeiyW7NaN4qWdw" name="optimizeCargoes" specification="_5vbUMVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xXN5VJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>lb.add(&quot;, optimize&quot;);&#xD;
     Location oldTarget = getTarget();&#xD;
&#xD;
     // We wrap/unwrap the list to minimize the number of nodes&#xD;
     // that need consideration.&#xD;
     List&lt;Cargo> ts = wrapCargoes();&#xD;
     List&lt;Cargo> best = null;&#xD;
     if (1 &lt; ts.size() &amp;&amp; ts.size() &lt;= DESTINATION_UPPER_BOUND) {&#xD;
         // Try all the permutations of visiting order for the&#xD;
         // locations, and set the target to the first location&#xD;
         // of the best scoring route.&#xD;
         //&#xD;
         // The target may get recomputed every time a cargo change&#xD;
         // occurs, so there is no guarantee that the route chosen&#xD;
         // here is actually executed.  This seems rather&#xD;
         // inefficient, but we need to be adaptable.&#xD;
         //&#xD;
         final Location current = getUnit().getLocation();&#xD;
         float bestValue = INFINITY;&#xD;
         for (List&lt;Cargo> tl : getPermutations(ts)) {&#xD;
             float value = scoreCargoOrder(current, tl);&#xD;
             if (value > 0.0f &amp;&amp; bestValue > value) {&#xD;
                 bestValue = value;&#xD;
                 best = tl;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (best != null) {&#xD;
         tSet(unwrapCargoes(best), true);&#xD;
         if (oldTarget != getTarget()) lb.add(&quot;->&quot;, getTarget());&#xD;
     } else {&#xD;
         tSet(unwrapCargoes(ts), false);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xXN5lJPEeiyW7NaN4qWdw" name="getBestCargo" specification="_5vb7QVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xXN51JPEeiyW7NaN4qWdw" name="carrier" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xXN6FJPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>final EuropeanAIPlayer euaip = getEuropeanAIPlayer();&#xD;
     Cargo bestDirect = null, bestFallback = null;&#xD;
     float bestDirectValue = 0.0f, bestFallbackValue = 0.0f;&#xD;
     for (TransportableAIObject t : euaip.getUrgentTransportables()) {&#xD;
         if (t.isDisposed() || !t.carriableBy(carrier)) continue;&#xD;
         Location loc = t.getTransportSource();&#xD;
         Cargo cargo;&#xD;
         try {&#xD;
             cargo = Cargo.newCargo(t, carrier);&#xD;
         } catch (FreeColException fce) {&#xD;
             cargo = null;&#xD;
         }&#xD;
         if (cargo == null) continue;&#xD;
         float value = t.getTransportPriority() / (cargo.getTurns() + 1.0f);&#xD;
         if (cargo.isFallback()) {&#xD;
             if (bestFallbackValue &lt; value) {&#xD;
                 bestFallbackValue = value;&#xD;
                 bestFallback = cargo;&#xD;
             }&#xD;
         } else {&#xD;
             if (bestDirectValue &lt; value) {&#xD;
                 bestDirectValue = value;&#xD;
                 bestDirect = cargo;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return (bestDirect != null) ? bestDirect&#xD;
         : (bestFallback != null) ? bestFallback&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xXN6VJPEeiyW7NaN4qWdw" name="invalidMissionReason" specification="_5vb7RFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xXN6lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xXN61JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason = invalidAIUnitReason(aiUnit);&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (!aiUnit.getUnit().isCarrier())&#xD;
         ? &quot;unit-not-a-carrier&quot;&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xXN7FJPEeiyW7NaN4qWdw" name="invalidCargoReason" specification="_5vciUlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xXN7VJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xXN7lJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final TransportableAIObject t = cargo.getTransportable();&#xD;
     String reason;&#xD;
     return (t == null) ? &quot;null-transportable&quot;&#xD;
         : ((reason = t.invalidReason()) != null) ? &quot;cargo-&quot; + reason&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xX08FJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5vciVVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xX08VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xX08lJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xX081JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason;&#xD;
     return ((reason = invalidMissionReason(aiUnit)) != null)&#xD;
         ? reason&#xD;
         : (loc instanceof Tile)&#xD;
         ? null&#xD;
         : (loc instanceof Europe || loc instanceof Colony)&#xD;
         ? invalidTargetReason(loc, aiUnit.getUnit().getOwner())&#xD;
         : Mission.TARGETINVALID;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xX09FJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5vdJY1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xX09VJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xX09lJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidMissionReason(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xX091JPEeiyW7NaN4qWdw" name="removeTransportable" specification="_5vdwcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xX0-FJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xX0-VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Cargo cargo = tFind(t);&#xD;
     return (cargo == null) ? false : tRemove(cargo);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xX0-lJPEeiyW7NaN4qWdw" name="requeueTransportable" specification="_5veXgFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xX0-1JPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xX0_FJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xX0_VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Cargo cargo = tFind(t);&#xD;
     return (cargo == null) ? queueTransportable(t, false, lb)&#xD;
         : requeueCargo(cargo, lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xX0_lJPEeiyW7NaN4qWdw" name="queueTransportable" specification="_5veXhFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xX0_1JPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xX1AFJPEeiyW7NaN4qWdw" name="requireMatch">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5xX1AVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xX1AlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>Cargo cargo = makeCargo(t, lb);&#xD;
     return (cargo == null) ? false : queueCargo(cargo, requireMatch, lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xYcAFJPEeiyW7NaN4qWdw" name="dumpTransportable" specification="_5ve-kVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xYcAVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xYcAlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xYcA1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (t == null) return true;&#xD;
     Cargo cargo = tFind(t);&#xD;
     if (cargo == null) return true;&#xD;
     if (!isCarrying(t)) {&#xD;
         removeTransportable(t);&#xD;
         return true;&#xD;
     }&#xD;
     return dumpCargo(cargo, lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xYcBFJPEeiyW7NaN4qWdw" name="forceCollection" specification="_5vfloFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xYcBVJPEeiyW7NaN4qWdw" name="aiu" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xYcBlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xYcB1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>for (Cargo c : tCopy()) {&#xD;
         if (c.getMode().isCollection()) removeCargo(c);&#xD;
     }            &#xD;
     return queueTransportable(aiu, false, lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xYcCFJPEeiyW7NaN4qWdw" name="suppressEuropeanTrade" specification="_5vgMsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xYcCVJPEeiyW7NaN4qWdw" name="type" type="_5qtMQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xYcClJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>for (Cargo c : tCopy()) {&#xD;
         if (c.isEuropeanTrade(type)) removeCargo(c);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xYcC1JPEeiyW7NaN4qWdw" name="getTransportDestination" specification="_5WIqcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xYcDFJPEeiyW7NaN4qWdw" type="_5qH9cVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return null; // Can not transport a carrier unit.&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xYcDVJPEeiyW7NaN4qWdw" name="findTarget" specification="_5WJRglJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xYcDlJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xYcD1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_5WJ4klJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xYcEFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>final AIUnit aiUnit = getAIUnit();&#xD;
     String reason = invalidReason(aiUnit, getTarget());&#xD;
     Cargo cargo;&#xD;
     return (reason != null) ? reason&#xD;
         : ((cargo = tFirst()) == null) ? null&#xD;
         : invalidCargoReason(cargo);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xYcEVJPEeiyW7NaN4qWdw" name="doMission" specification="_5vgzwFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xYcElJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xYcE1JPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     checkCargoes(lb);&#xD;
     String reason = invalidReason();&#xD;
     if (reason != null) return lbFail(lb, false, reason);&#xD;
&#xD;
     final AIUnit aiCarrier = getAIUnit();&#xD;
     final Unit unit = getUnit();&#xD;
     final CostDecider fallBackDecider&#xD;
         = CostDeciders.avoidSettlementsAndBlockingUnits();&#xD;
     final EuropeanAIPlayer euaip = getEuropeanAIPlayer();&#xD;
     CostDecider costDecider = CostDeciders.defaultCostDeciderFor(unit);&#xD;
     for (;;) {&#xD;
         Unit.MoveType mt = travelToTarget(target, costDecider, lb);&#xD;
         switch (mt) {&#xD;
         case MOVE: // Arrived at transport target&#xD;
             doTransport(lb);&#xD;
             if (isEmpty() &amp;&amp; unit.isOffensiveUnit()) {&#xD;
                 Mission m = euaip.getPrivateerMission(aiCarrier, null);&#xD;
                 if (m != null) return lbDone(lb, false, &quot;going pirate&quot;);&#xD;
             }                    &#xD;
             if ((reason = invalidReason()) != null) {&#xD;
                 logger.warning(tag + &quot; post-stop failure(&quot; + reason&#xD;
                     + &quot;): &quot; + this.toFullString());&#xD;
                 return lbFail(lb, false, reason);&#xD;
             }&#xD;
             if (unit.isAtLocation(target)) {&#xD;
                 return lbWait(lb, &quot;, waiting at &quot;, target);&#xD;
             }&#xD;
             break;&#xD;
&#xD;
         case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
         case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
             return lbWait(lb);&#xD;
&#xD;
         case MOVE_NO_TILE: // Another unit is blocking a river?&#xD;
             moveRandomly(tag, null);&#xD;
             return lbDodge(lb);&#xD;
&#xD;
         case ATTACK_UNIT:&#xD;
             Location blocker = resolveBlockage(aiCarrier, target);&#xD;
             if (blocker instanceof Unit &amp;&amp; shouldAttack((Unit)blocker)) {&#xD;
                 AIMessage.askAttack(aiCarrier,&#xD;
                     unit.getTile().getDirection(blocker.getTile()));&#xD;
                 return lbAttack(lb, blocker);&#xD;
             }&#xD;
             // Fall through&#xD;
         case MOVE_NO_ATTACK_CIVILIAN:&#xD;
             // FIXME: See if the transportable can get around the&#xD;
             // blockage using its own path finding.&#xD;
             if (unit.getTile().isAdjacent(target.getTile())&#xD;
                 || costDecider == fallBackDecider) {&#xD;
                 moveRandomly(tag, null);&#xD;
                 return lbDodge(lb);&#xD;
             }&#xD;
             costDecider = fallBackDecider; // Retry&#xD;
             lb.add(&quot;, retry blockage at &quot;, unit.getLocation());&#xD;
             break;&#xD;
&#xD;
         case MOVE_NO_ACCESS_EMBARK: default:&#xD;
             return lbMove(lb, mt);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xZDEFJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5vha0lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xZDEVJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (target != null) {&#xD;
         xw.writeLocationAttribute(TARGET_TAG, target);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xZDElJPEeiyW7NaN4qWdw" name="writeChildren" specification="_5vio8FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xZDE1JPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>final AIUnit aiCarrier = getAIUnit();&#xD;
     for (Cargo cargo : tCopy()) {&#xD;
         // Sanity check first.  Another nation might have captured&#xD;
         // or destroyed a target colony.&#xD;
         String reason = cargo.check(aiCarrier);&#xD;
         if (reason != null) continue;&#xD;
         // Do not bother writing cargoes that will be dumped.&#xD;
         // On restore, checkCargoes will work out what to do with them.&#xD;
         if (cargo.getMode() == Cargo.CargoMode.DUMP) continue;&#xD;
         cargo.toXML(xw);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xZDFFJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5vjQAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xZDFVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     target = xr.getLocationAttribute(getGame(), TARGET_TAG, false);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xZDFlJPEeiyW7NaN4qWdw" name="readChildren" specification="_5vj3EFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xZDF1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>tClear();&#xD;
&#xD;
     super.readChildren(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xZDGFJPEeiyW7NaN4qWdw" name="readChild" specification="_5vkeIlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xZDGVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>final String tag = xr.getLocalName();&#xD;
&#xD;
     if (Cargo.getXMLElementTagName().equals(tag)) {&#xD;
         tAdd(new Cargo(getAIMain(), xr), -1);&#xD;
&#xD;
     // @compat 0.10.5&#xD;
     } else if (OLD_TRANSPORTABLE_TAG.equals(tag)) {&#xD;
         // Ignore the old format, let checkCargoes sort it out&#xD;
         xr.closeTag(OLD_TRANSPORTABLE_TAG);&#xD;
     // end @compat&#xD;
&#xD;
     } else {&#xD;
         super.readChild(xr);&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xZqIFJPEeiyW7NaN4qWdw" name="toFullString" specification="_5WLGsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xZqIVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>LogBuilder lb = new LogBuilder(64);&#xD;
     lb.add(this);&#xD;
     for (Cargo cargo : tCopy()) lb.add(&quot;\n  ->&quot;, cargo);&#xD;
     return lb.toString();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xZqIlJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5WLGslJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xZqI1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xZqJFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5WLtxFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xZqJVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;transportMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5WBVsFJPEeiyW7NaN4qWdw" name="dispose" method="_5xTjiVJPEeiyW7NaN4qWdw"/>
                  <ownedOperation xmi:id="_5WB8wlJPEeiyW7NaN4qWdw" name="tCopy" visibility="private" method="_5xUKllJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xw2ilJPEeiyW7NaN4qWdw">
                      <body>Gets the cargoes.&#xD;
     *&#xD;
     * @return A copy of the list of cargoes.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WCj0FJPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5WCj0VJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WCj0lJPEeiyW7NaN4qWdw" name="tClear" visibility="private" method="_5xUKmVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdkFJPEeiyW7NaN4qWdw">
                      <body>Clears the cargoes list.&#xD;
     *&#xD;
     * @return The old cargoes list.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WCj01JPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5WCj1FJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WDK4FJPEeiyW7NaN4qWdw" name="tSize" visibility="private" method="_5xUKoVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdklJPEeiyW7NaN4qWdw">
                      <body>Gets the size of the cargoes.&#xD;
     *&#xD;
     * @return The size of the cargoes.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WDK4VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WDK4lJPEeiyW7NaN4qWdw" name="tFirst" visibility="private" method="_5xUxo1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdlFJPEeiyW7NaN4qWdw">
                      <body>Gets the first cargo.&#xD;
     *&#xD;
     * @return The first valid cargo, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vTYZFJPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WDx8FJPEeiyW7NaN4qWdw" name="tSpace" visibility="private" method="_5xUxrFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdl1JPEeiyW7NaN4qWdw">
                      <body>Sets the spaceLeft fields in the cargoes.&#xD;
     * To be called with synchronized (cargoes).</body>
                    </ownedComment>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WDx8VJPEeiyW7NaN4qWdw" name="tRetarget" visibility="private" method="_5xUxrVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdmFJPEeiyW7NaN4qWdw">
                      <body>Reset the carrier target after a change to the first cargo.</body>
                    </ownedComment>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WEZAFJPEeiyW7NaN4qWdw" name="destinationCount" visibility="private" method="_5xUxrlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdmVJPEeiyW7NaN4qWdw">
                      <body>Count distinct non-adjacent destinations in a list of cargoes.&#xD;
     *&#xD;
     * @return The number of distinct destinations.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WEZAVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WEZAlJPEeiyW7NaN4qWdw" name="destinationCapacity" method="_5xUxsFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdmlJPEeiyW7NaN4qWdw">
                      <body>How many more destinations are desirable on the current cargoes list?&#xD;
     * Must be public!  This is checked in European AI player.&#xD;
     *&#xD;
     * @return The number of desired extra destinations.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WEZA1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WFAEFJPEeiyW7NaN4qWdw" name="wrapCargoes" visibility="private" method="_5xVYulJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdn1JPEeiyW7NaN4qWdw">
                      <body>Wrap up the compatible cargoes in a list.&#xD;
     * O(N^2) alas.&#xD;
     *&#xD;
     * @return A wrapped list of cargoes.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WFAEVJPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5WFAElJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WFnIFJPEeiyW7NaN4qWdw" name="clearCargoes" visibility="private" method="_5xVYwVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdoVJPEeiyW7NaN4qWdw">
                      <body>Clears all the cargoes.&#xD;
     *&#xD;
     * @return A message about the cargoes being cleared.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WFnIVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WFnIlJPEeiyW7NaN4qWdw" name="isEmpty" method="_5xV_wFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdolJPEeiyW7NaN4qWdw">
                      <body>Is there nothing currently queued for this carrier?&#xD;
     *&#xD;
     * @return True if there is no work allocated to this carrier.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WFnI1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WIqcFJPEeiyW7NaN4qWdw" name="getTransportDestination" method="_5xYcC1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vgMs1JPEeiyW7NaN4qWdw" type="_5qH9cVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WJRglJPEeiyW7NaN4qWdw" name="findTarget" method="_5xYcDVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vgMtFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WJ4klJPEeiyW7NaN4qWdw" name="invalidReason" method="_5xYcD1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5WJ4k1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WLGsFJPEeiyW7NaN4qWdw" name="toFullString" method="_5xZqIFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyrsVJPEeiyW7NaN4qWdw">
                      <body>More verbose version of toString().&#xD;
     *&#xD;
     * @return A summary of this mission including its transportables.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WLGsVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WLGslJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5xZqIlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5WLtwFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WLtxFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5xZqJFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyrslJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;transportMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WLtxVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vQVEFJPEeiyW7NaN4qWdw" name="TransportMission" method="_5xTjgFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5vQVE1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5vQVFFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xw2hVJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vQVEVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vQVElJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vQVFVJPEeiyW7NaN4qWdw" type="_5V9rUFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vQ8IFJPEeiyW7NaN4qWdw" name="TransportMission" method="_5xTjhFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5vRjM1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5vRjNFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xw2hlJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>TransportMission&lt;/code> and reads the given&#xD;
     * element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vRjMFJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vRjMVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vRjMlJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vRjNVJPEeiyW7NaN4qWdw" type="_5V9rUFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vRjNlJPEeiyW7NaN4qWdw" name="isCarrying" visibility="private" method="_5xTjilJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xw2h1JPEeiyW7NaN4qWdw">
                      <body>Checks if the carrier using this mission is carrying the given&#xD;
     * &lt;code>TransportableAIObject&lt;/code>.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to check.&#xD;
     * @return True if the carrier is carrying the transportable.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vRjN1JPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vRjOFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vRjOVJPEeiyW7NaN4qWdw" name="isTransporting" method="_5xUKkFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xw2iFJPEeiyW7NaN4qWdw">
                      <body>Is a transportable waiting for delivery on the cargoes list?&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to check.&#xD;
     * @return True if the transportable is queued in this mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vRjOlJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vRjO1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vSxUFJPEeiyW7NaN4qWdw" name="shouldAttack" visibility="private" method="_5xUKk1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xw2iVJPEeiyW7NaN4qWdw">
                      <body>Decide if this unit has a good chance of defeating another.&#xD;
     * If there is cargo aboard, be more conservative.&#xD;
     *&#xD;
     * FIXME: magic numbers to the spec.&#xD;
     *&#xD;
     * @param other The other &lt;code>Unit&lt;/code> to attack.&#xD;
     * @return True if the attack should proceed.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vSxUVJPEeiyW7NaN4qWdw" name="other" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vSxUlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vSxU1JPEeiyW7NaN4qWdw" name="tSet" visibility="private" method="_5xUKnFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdkVJPEeiyW7NaN4qWdw">
                      <body>Sets the cargoes to a new list.&#xD;
     *&#xD;
     * @param nxt The new cargoes list.&#xD;
     * @param setSpace If true, call tSpace to reset the space left values.&#xD;
     * @return The old cargoes list.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vSxVFJPEeiyW7NaN4qWdw" name="nxt" type="_5qSVgFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vSxVVJPEeiyW7NaN4qWdw" name="setSpace">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5vSxVlJPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5vSxV1JPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vTYYVJPEeiyW7NaN4qWdw" name="tFind" visibility="private" method="_5xUxoFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdk1JPEeiyW7NaN4qWdw">
                      <body>Find a &lt;code>Cargo&lt;/code> with the given&#xD;
     * &lt;code>TransportableAIObject&lt;/code>.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to look for.&#xD;
     * @return The &lt;code>Cargo&lt;/code> found, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vTYYlJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vTYY1JPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vTYZVJPEeiyW7NaN4qWdw" name="tAdd" visibility="private" method="_5xUxpVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdlVJPEeiyW7NaN4qWdw">
                      <body>Adds a cargo to the cargoes list.&#xD;
     *&#xD;
     * @param cargo The &lt;code>Cargo&lt;/code> to add.&#xD;
     * @param index The position to add it.&#xD;
     * @return True if the addition succeeded or the cargo was already present.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vTYZlJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vTYZ1JPEeiyW7NaN4qWdw" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5vTYaFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vT_cFJPEeiyW7NaN4qWdw" name="tRemove" visibility="private" method="_5xUxqVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdllJPEeiyW7NaN4qWdw">
                      <body>Remove a cargo from the cargoes list.&#xD;
     *&#xD;
     * @param cargo The &lt;code>Cargo&lt;/code> to remove.&#xD;
     * @return True if the remove succeeded.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vT_cVJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vT_clJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vT_c1JPEeiyW7NaN4qWdw" name="dropTransportable" visibility="private" method="_5xVYsFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdm1JPEeiyW7NaN4qWdw">
                      <body>If this carrier is the current carrier of a transportable, drop it.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to check.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vT_dFJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vUmgFJPEeiyW7NaN4qWdw" name="takeTransportable" visibility="private" method="_5xVYslJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdnFJPEeiyW7NaN4qWdw">
                      <body>If this carrier is the not the current carrier of a&#xD;
     * transportable, make it so.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to check.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vUmgVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vUmglJPEeiyW7NaN4qWdw" name="getTransportTarget" method="_5xVYtFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdnVJPEeiyW7NaN4qWdw">
                      <body>Get the collection location for an uncollected transportable.&#xD;
     *&#xD;
     * Public so that mobile transportables (units) can move to the&#xD;
     * collection point.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to collect.&#xD;
     * @return The collection &lt;code>Location&lt;code>, or null if not found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vUmg1JPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vUmhFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vVNkFJPEeiyW7NaN4qWdw" name="getTransportTurns" method="_5xVYt1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdnlJPEeiyW7NaN4qWdw">
                      <body>Get the expected turns for an uncollected transport&#xD;
     *&#xD;
     * Public so that mobile transportables (units) can renege on&#xD;
     * transport if they find themselves better able to get there&#xD;
     * themselves.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to collect.&#xD;
     * @return The expected transport turns.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vVNkVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vVNklJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vVNk1JPEeiyW7NaN4qWdw" name="unwrapCargoes" visibility="private" method="_5xVYvVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdoFJPEeiyW7NaN4qWdw">
                      <body>Unwrap a wrapped list of cargoes.&#xD;
     *&#xD;
     * @param ts The list of &lt;code>Cargo&lt;/code>s to unwrap.&#xD;
     * @return The unwrapped list of cargoes.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vV0oFJPEeiyW7NaN4qWdw" name="ts" type="_5qSVgFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vV0oVJPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_5vV0olJPEeiyW7NaN4qWdw" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vWbsFJPEeiyW7NaN4qWdw" name="makeCargo" method="_5xV_wlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdo1JPEeiyW7NaN4qWdw">
                      <body>For a given transportable, work out where the carrier has to go to&#xD;
     * advance the cargo (target), and what to do there (mode), allowing&#xD;
     * a new &lt;code>Cargo&lt;/code> to be defined.&#xD;
     *&#xD;
     * AIUnit cargo is harder than AIGoods, because AIUnits might have their&#xD;
     * own inland paths, and thus we need to consider drop nodes.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to consider.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return A new &lt;code>Cargo&lt;/code> defining the action to take&#xD;
     *     with the &lt;code>TransportableAIObject&lt;/code>, or null if impossible.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vWbsVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vWbslJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vWbs1JPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vXCwFJPEeiyW7NaN4qWdw" name="addCargo" visibility="private" method="_5xV_xlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xxdpFJPEeiyW7NaN4qWdw">
                      <body>Add the given Cargo to the cargoes list.&#xD;
     *&#xD;
     * @param cargo The &lt;code>Cargo&lt;/code> to add.&#xD;
     * @param index The index of where to add the cargo.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if the cargo was added.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vXCwVJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vXCwlJPEeiyW7NaN4qWdw" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5vXCw1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vXCxFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vXCxVJPEeiyW7NaN4qWdw" name="removeCargo" visibility="private" method="_5xV_y1JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEoFJPEeiyW7NaN4qWdw">
                      <body>Removes the given Cargo from the cargoes list.&#xD;
     *&#xD;
     * @param cargo The &lt;code>Cargo&lt;/code> to remove.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vXCxlJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vXp0FJPEeiyW7NaN4qWdw" name="spaceAvailable" method="_5xV_zVJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEoVJPEeiyW7NaN4qWdw">
                      <body>Is there space available for a new cargo?&#xD;
     *&#xD;
     * @param cargo The &lt;code>Cargo&lt;/code> to check.&#xD;
     * @return True if there is space available for this cargo.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vXp0VJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vXp0lJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vXp01JPEeiyW7NaN4qWdw" name="spaceAvailable" method="_5xV_0FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEolJPEeiyW7NaN4qWdw">
                      <body>Is there space available for a new cargo?&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to check.&#xD;
     * @return True if there is space available for this transportable.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vXp1FJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vXp1VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vYQ4FJPEeiyW7NaN4qWdw" name="queueCargo" visibility="private" method="_5xV_01JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEo1JPEeiyW7NaN4qWdw">
                      <body>Incrementally queue a cargo to the cargoes list.&#xD;
     *&#xD;
     * If the carrier is at the collection point favour immediate&#xD;
     * collection.  Otherwise try to place it with other cargoes with&#xD;
     * the same target, but do not break the space restrictions.  If&#xD;
     * this does not work, it has to go at the end.&#xD;
     *&#xD;
     * @param cargo The new &lt;code>Cargo&lt;/code> to add.&#xD;
     * @param requireMatch Fail if an existing destination is not matched.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if the cargo was queued.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vYQ4VJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vYQ4lJPEeiyW7NaN4qWdw" name="requireMatch">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5vYQ41JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vYQ5FJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vZfAFJPEeiyW7NaN4qWdw" name="dumpCargo" method="_5xWm0FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEpFJPEeiyW7NaN4qWdw">
                      <body>Dump a currently carried cargo.&#xD;
     *&#xD;
     * @param cargo The &lt;code>Cargo&lt;/code> to dump.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if the cargo is no longer on board and not on the&#xD;
     *     transport list, or is on board but is scheduled to be dumped.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vZfAVJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vZfAlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vZfA1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vZfBFJPEeiyW7NaN4qWdw" name="requeueCargo" method="_5xWm1FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEpVJPEeiyW7NaN4qWdw">
                      <body>Requeue an existing cargo.  Typically done when the target changes.&#xD;
     *&#xD;
     * @param cargo The &lt;code>Cargo&lt;/code> to requeue.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if the queuing succeeded.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vZfBVJPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vZfBlJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vZfB1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vaGEFJPEeiyW7NaN4qWdw" name="checkCargoes" visibility="private" method="_5xWm2FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEplJPEeiyW7NaN4qWdw">
                      <body>Checks for invalid cargoes, and units and goods on board but&#xD;
     * not in the cargoes list.  On exit from this routine, every&#xD;
     * cargo on board should be on the cargoes list but the list is&#xD;
     * not necessarily going to be in a sensible order.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vaGEVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vaGElJPEeiyW7NaN4qWdw" name="tryCargo" visibility="private" method="_5xWm2lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEp1JPEeiyW7NaN4qWdw">
                      <body>Check a &lt;code>Cargo&lt;/code> for continued validity and&#xD;
     * whether action is needed at the current location.&#xD;
     *&#xD;
     * @param cargo The &lt;code>Cargo&lt;/code> to check.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return TCONTINUE if the &lt;code>Cargo&lt;/code> should continue,&#xD;
     *     TDONE if it has completed,&#xD;
     *     TFAIL if it has failed,&#xD;
     *     TNEXT if it has progressed to the next stage,&#xD;
     *     TRETRY if a blockage has occurred and it should be retried,</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vaGE1JPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vaGFFJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vaGFVJPEeiyW7NaN4qWdw" type="_5V-5cFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vatIFJPEeiyW7NaN4qWdw" name="doTransport" visibility="private" method="_5xWm3lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEqFJPEeiyW7NaN4qWdw">
                      <body>Perform the transport load/unload operations on arrival at the&#xD;
     * target for the top cargo.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vatIVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vatIlJPEeiyW7NaN4qWdw" name="scoreCargoOrder" visibility="private" method="_5xXN4FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEqVJPEeiyW7NaN4qWdw">
                      <body>Calculates a score for a proposed list of&#xD;
     * &lt;code>Cargo&lt;/code>s using the current unit.  Disallows&#xD;
     * routes that would overfill the carrier.&#xD;
     *&#xD;
     * Useful for comparing proposed cargo delivery routes.  The&#xD;
     * score is based primarily on the number of turns it takes, but&#xD;
     * to break ties we also consider the hold*turn product to reduce&#xD;
     * the risk of losses due to enemy action.&#xD;
     *&#xD;
     * @param initialLocation The initial &lt;code>Location&lt;/code>.&#xD;
     * @param order An ordering of &lt;code>Cargo&lt;/code>s.&#xD;
     * @return A score for the cargo ordering.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vatI1JPEeiyW7NaN4qWdw" name="initialLocation" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vatJFJPEeiyW7NaN4qWdw" name="order" type="_5qSVgFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vatJVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vbUMVJPEeiyW7NaN4qWdw" name="optimizeCargoes" visibility="private" method="_5xXN5FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEqlJPEeiyW7NaN4qWdw">
                      <body>Sets the current target.&#xD;
     * Tries all permutations of cargoes and picks the fastest/safest one.&#xD;
     *&#xD;
     * Leaves the cargoes in the order they are expected to&#xD;
     * execute, with valid spaceLeft values.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vb7QFJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vb7QVJPEeiyW7NaN4qWdw" name="getBestCargo" visibility="private" method="_5xXN5lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEq1JPEeiyW7NaN4qWdw">
                      <body>What is the best transportable for a carrier to collect?&#xD;
     *&#xD;
     * @param carrier The carrier &lt;code>Unit&lt;/code> to consider.&#xD;
     * @return The best available new &lt;code>Cargo&lt;/code>, or null if&#xD;
     *     none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vb7QlJPEeiyW7NaN4qWdw" name="carrier" type="_5qH9c1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vb7Q1JPEeiyW7NaN4qWdw" type="_5s2hUVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vb7RFJPEeiyW7NaN4qWdw" name="invalidMissionReason" visibility="private" isStatic="true" method="_5xXN6VJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyErFJPEeiyW7NaN4qWdw">
                      <body>Why would an TransportMission be invalid with the given unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid with the unit,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vciUFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vciUVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vciUlJPEeiyW7NaN4qWdw" name="invalidCargoReason" visibility="private" isStatic="true" method="_5xXN7FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyErVJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with a given cargo?&#xD;
     * Checks the cargo locations.&#xD;
     * A location becomes invalid if:&#xD;
     *   - step is a null location&#xD;
     *   - step is disposed&#xD;
     *   - step is a captured settlement&#xD;
     *&#xD;
     * @param cargo The &lt;code>Cargo&lt;/code> to test.&#xD;
     * @return A reason why the mission would be invalid,&#xD;
     *     or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vciU1JPEeiyW7NaN4qWdw" name="cargo" type="_5s2hUVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vciVFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vciVVJPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xX08FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyErlJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vdJYFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vdJYVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vdJYlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vdJY1JPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xX09FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEr1JPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A reason for mission invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vdJZFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vdJZVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vdwcFJPEeiyW7NaN4qWdw" name="removeTransportable" method="_5xX091JPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEsFJPEeiyW7NaN4qWdw">
                      <body>Removes the given &lt;code>TransportableAIObject&lt;/code> from the&#xD;
     * cargo list.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to remove.&#xD;
     * @return True if the removal succeeded.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vdwcVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vdwclJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5veXgFJPEeiyW7NaN4qWdw" name="requeueTransportable" method="_5xX0-lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEsVJPEeiyW7NaN4qWdw">
                      <body>Retargets a transportable that should already be on board the carrier.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to retarget.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if the retargeting succeeded.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5veXgVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5veXglJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5veXg1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5veXhFJPEeiyW7NaN4qWdw" name="queueTransportable" method="_5xX0_lJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEslJPEeiyW7NaN4qWdw">
                      <body>Wrapper for queueCargo.&#xD;
     * Public for the benefit of EuropeanAIPlayer.allocateTransportables&#xD;
     * and CashInTreasureTrain.doMission.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to add.&#xD;
     * @param requireMatch Fail if an existing destination is not matched.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if the transportable was queued.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5veXhVJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5veXhlJPEeiyW7NaN4qWdw" name="requireMatch">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_5veXh1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ve-kFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5ve-kVJPEeiyW7NaN4qWdw" name="dumpTransportable" method="_5xYcAFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEs1JPEeiyW7NaN4qWdw">
                      <body>Dump a transportable.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to dump.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if the transportable is no longer on board, queued, or&#xD;
     *     was reset to be dumped at the next stop.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5ve-klJPEeiyW7NaN4qWdw" name="t" type="_5q6AklJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ve-k1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5ve-lFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vfloFJPEeiyW7NaN4qWdw" name="forceCollection" method="_5xYcBFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyEtFJPEeiyW7NaN4qWdw">
                      <body>Drop all collections so that cargo is delivered only, then&#xD;
     * collect this unit.  Useful for prioritizing treasure&#xD;
     * collection.&#xD;
     *&#xD;
     * @param aiu The &lt;code>AIUnit&lt;/code> to collect.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if the unit was queued.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vfloVJPEeiyW7NaN4qWdw" name="aiu" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vflolJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vflo1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vgMsFJPEeiyW7NaN4qWdw" name="suppressEuropeanTrade" method="_5xYcCFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xyrsFJPEeiyW7NaN4qWdw">
                      <body>Suppress European trade in a type of goods which is about to be&#xD;
     * boycotted.&#xD;
     *&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> to suppress.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vgMsVJPEeiyW7NaN4qWdw" name="type" type="_5qtMQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vgMslJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vgzwFJPEeiyW7NaN4qWdw" name="doMission" method="_5xYcEVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vgzwVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vgzwlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vha0lJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5xZDEFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5viB4FJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vio8FJPEeiyW7NaN4qWdw" name="writeChildren" visibility="protected" method="_5xZDElJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vio8VJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vjQAFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5xZDFFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vjQAVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vj3EFJPEeiyW7NaN4qWdw" name="readChildren" visibility="protected" method="_5xZDFlJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vj3EVJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vkeIlJPEeiyW7NaN4qWdw" name="readChild" visibility="protected" method="_5xZDGFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vkeI1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_5V-5cFJPEeiyW7NaN4qWdw" name="CargoResult" visibility="private">
                    <eAnnotations xmi:id="_5V_ggFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5V_ggVJPEeiyW7NaN4qWdw" key="static"/>
                    </eAnnotations>
                    <ownedLiteral xmi:id="_5V_gg1JPEeiyW7NaN4qWdw" name="TCONTINUE"/>
                    <ownedLiteral xmi:id="_5V_ghFJPEeiyW7NaN4qWdw" name="TDONE"/>
                    <ownedLiteral xmi:id="_5WAHkFJPEeiyW7NaN4qWdw" name="TFAIL"/>
                    <ownedLiteral xmi:id="_5WAHkVJPEeiyW7NaN4qWdw" name="TNEXT"/>
                    <ownedLiteral xmi:id="_5WAHklJPEeiyW7NaN4qWdw" name="TRETRY"/>
                  </nestedClassifier>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5WX7AFJPEeiyW7NaN4qWdw" name="WishRealizationMission">
                  <ownedComment xmi:id="_5xyrs1JPEeiyW7NaN4qWdw">
                    <body>Mission for realizing a &lt;code>Wish&lt;/code>.</body>
                  </ownedComment>
                  <generalization xmi:id="_5tCukFJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wg5UFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5yRz4VJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wg5UVJPEeiyW7NaN4qWdw" value="Logger.getLogger(WishRealizationMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wg5UlJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5whgYFJPEeiyW7NaN4qWdw" value="&quot;AI wisher&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5whgYVJPEeiyW7NaN4qWdw" name="wish" type="_5tA5YVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5ySa8VJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5whgYlJPEeiyW7NaN4qWdw" name="WISH_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wiHcFJPEeiyW7NaN4qWdw" value="&quot;wish&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wiHcVJPEeiyW7NaN4qWdw" name="OLD_GOODS_WISH_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wiHclJPEeiyW7NaN4qWdw" value="&quot;GoodsWish&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xaRMFJPEeiyW7NaN4qWdw" name="WishRealizationMission" specification="_5vm6YFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xaRMVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xaRMlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xaRM1JPEeiyW7NaN4qWdw" name="wish" type="_5tA5YVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xaRNFJPEeiyW7NaN4qWdw" type="_5WX7AFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, wish.getDestination());&#xD;
&#xD;
     this.wish = wish;&#xD;
     wish.setTransportable(aiUnit);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xaRNVJPEeiyW7NaN4qWdw" name="WishRealizationMission" specification="_5vnhcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xaRNlJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xaRN1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xaROFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xaROVJPEeiyW7NaN4qWdw" type="_5WX7AFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xa4QFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5vnhd1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xa4QVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xa4QlJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xa4Q1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason;&#xD;
     return ((reason = invalidAIUnitReason(aiUnit)) != null) ? reason&#xD;
         : ((reason = invalidTargetReason(loc,&#xD;
                     aiUnit.getUnit().getOwner())) != null) ? reason&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xa4RFJPEeiyW7NaN4qWdw" name="dispose" specification="_5WZJIFJPEeiyW7NaN4qWdw">
                    <language>java</language>
                    <body>if (this.wish != null) {&#xD;
         this.wish.setTransportable(null);&#xD;
         this.wish = null;&#xD;
     }&#xD;
     super.dispose();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xa4RVJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5WZwM1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xa4RlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return NORMAL_TRANSPORT_PRIORITY;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xbfUFJPEeiyW7NaN4qWdw" name="getTarget" specification="_5WaXQlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xbfUVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return (this.wish == null) ? null : this.wish.getDestination();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xbfUlJPEeiyW7NaN4qWdw" name="findTarget" specification="_5Wa-UFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xbfU1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return getTarget();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xbfVFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5Wa-VFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xbfVVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return (this.wish == null) ? &quot;wish-null&quot;&#xD;
         : invalidReason(getAIUnit(), getTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xbfVlJPEeiyW7NaN4qWdw" name="doMission" specification="_5vpWoFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xbfV1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xbfWFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (reason != null) return lbFail(lb, false, reason);&#xD;
&#xD;
     // Move towards the target.&#xD;
     final Unit unit = getUnit();&#xD;
     Location target = getTarget();&#xD;
     Unit.MoveType mt = travelToTarget(target,&#xD;
         CostDeciders.avoidSettlementsAndBlockingUnits(), lb);&#xD;
     switch (mt) {&#xD;
     case MOVE: // Arrived&#xD;
         break;&#xD;
&#xD;
     case MOVE_HIGH_SEAS: case MOVE_NO_MOVES:&#xD;
     case MOVE_NO_REPAIR: case MOVE_ILLEGAL:&#xD;
         return lbWait(lb);&#xD;
&#xD;
     case MOVE_NO_ACCESS_EMBARK: case MOVE_NO_TILE:&#xD;
         return this;&#xD;
&#xD;
     default:&#xD;
         return lbMove(lb, mt);&#xD;
     }&#xD;
&#xD;
     lbAt(lb);&#xD;
     if (target instanceof Colony) {&#xD;
         final AIMain aiMain = getAIMain();&#xD;
         final Colony colony = (Colony)target;&#xD;
         final AIUnit aiUnit = getAIUnit();&#xD;
         final AIColony aiColony = aiMain.getAIColony(colony);&#xD;
         final EuropeanAIPlayer owner = getEuropeanAIPlayer();&#xD;
         aiColony.completeWish(wish, unit.toShortString(), lb);&#xD;
         // Replace the mission, with a defensive one if this is a&#xD;
         // military unit or a simple working one if not.&#xD;
         if (unit.getType().isOffensive()) {&#xD;
             if (owner.getDefendSettlementMission(aiUnit, colony) != null) {&#xD;
                 lbDone(lb, true, &quot;ready to defend, &quot;, colony);&#xD;
             } else {&#xD;
                 lbFail(lb, true, &quot;unable to defend&quot;);&#xD;
             }&#xD;
         } else {                &#xD;
             aiColony.requestRearrange();&#xD;
             if (owner.getWorkInsideColonyMission(aiUnit, aiColony)!=null) {&#xD;
                 lbDone(lb, true, &quot;ready to work &quot;, colony);&#xD;
             } else {&#xD;
                 lbFail(lb, true, &quot;unable to work&quot;);&#xD;
             }&#xD;
         }&#xD;
     } else {&#xD;
         lbFail(lb, true, &quot;broken wish &quot;, wish);&#xD;
     }&#xD;
&#xD;
     this.wish = null; // completeWish disposes&#xD;
     return lbDrop(lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xbfWVJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5vp9slJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xbfWlJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     xw.writeAttribute(WISH_TAG, wish);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xbfW1JPEeiyW7NaN4qWdw" name="readAttributes" specification="_5vqkw1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xbfXFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     final AIMain aiMain = getAIMain();&#xD;
&#xD;
     final String wid = xr.getAttribute(WISH_TAG, (String)null);&#xD;
     wish = xr.getAttribute(aiMain, WISH_TAG, Wish.class, (Wish)null);&#xD;
     if (wish == null) {&#xD;
         if (wid.startsWith(GoodsWish.getXMLElementTagName())&#xD;
             // @compat 0.10.3&#xD;
             || wid.startsWith(OLD_GOODS_WISH_TAG)&#xD;
             // end @compat&#xD;
             ) {&#xD;
             wish = new GoodsWish(aiMain, wid);&#xD;
&#xD;
         } else if (wid.startsWith(WorkerWish.getXMLElementTagName())) {&#xD;
             wish = new WorkerWish(aiMain, wid);&#xD;
&#xD;
         } else {&#xD;
             throw new XMLStreamException(&quot;Unknown wish tag: &quot; + wid);&#xD;
         }&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xcGYFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5WcMcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xcGYVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xcGYlJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5WczgFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xcGY1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;wishRealizationMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5WZJIFJPEeiyW7NaN4qWdw" name="dispose" method="_5xa4RFJPEeiyW7NaN4qWdw"/>
                  <ownedOperation xmi:id="_5WZwM1JPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5xa4RVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5WZwNFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WaXQlJPEeiyW7NaN4qWdw" name="getTarget" method="_5xbfUFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5voIgVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Wa-UFJPEeiyW7NaN4qWdw" name="findTarget" method="_5xbfUlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vovk1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Wa-VFJPEeiyW7NaN4qWdw" name="invalidReason" method="_5xbfVFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5Wa-VVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WcMcFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5xcGYFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5WcMcVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WczgFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5xcGYlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xzSwlJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return The &lt;code>String&lt;/code> &quot;wishRealizationMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WczgVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vm6YFJPEeiyW7NaN4qWdw" name="WishRealizationMission" method="_5xaRMFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5vm6ZFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5vm6ZVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xyrtFJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param wish The &lt;code>Wish&lt;/code> which will be realized by&#xD;
     *     the unit and this mission.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vm6YVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vm6YlJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vm6Y1JPEeiyW7NaN4qWdw" name="wish" type="_5tA5YVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vm6ZlJPEeiyW7NaN4qWdw" type="_5WX7AFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vnhcFJPEeiyW7NaN4qWdw" name="WishRealizationMission" method="_5xaRNVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5vnhdFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5vnhdVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xzSwFJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>WishRealizationMission&lt;/code> and reads the&#xD;
     * given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vnhcVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vnhclJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vnhc1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vnhdlJPEeiyW7NaN4qWdw" type="_5WX7AFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vnhd1JPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xa4QFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xzSwVJPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vnheFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vnheVJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5voIgFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5voIglJPEeiyW7NaN4qWdw" name="setTarget">
                    <ownedParameter xmi:id="_5voIg1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vpWoFJPEeiyW7NaN4qWdw" name="doMission" method="_5xbfVlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vpWoVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vpWolJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vp9slJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5xbfWVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vp9s1JPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vqkw1JPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5xbfW1JPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vqkxFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_5WfPwFJPEeiyW7NaN4qWdw" name="WorkInsideColonyMission">
                  <ownedComment xmi:id="_5xzSw1JPEeiyW7NaN4qWdw">
                    <body>Mission for working inside an AI colony.</body>
                  </ownedComment>
                  <generalization xmi:id="_5tFK0FJPEeiyW7NaN4qWdw" general="_5UbaQFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wiugFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_5qDsAFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_5ySa9FJPEeiyW7NaN4qWdw">
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wiugVJPEeiyW7NaN4qWdw" value="Logger.getLogger(WorkInsideColonyMission.class.getName())"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wjVkFJPEeiyW7NaN4qWdw" name="tag" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wjVkVJPEeiyW7NaN4qWdw" value="&quot;AI worker&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_5wjVklJPEeiyW7NaN4qWdw" name="colony" visibility="private" type="_5qFhMVJPEeiyW7NaN4qWdw" association="_5yTCAVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_5wkjsFJPEeiyW7NaN4qWdw" name="COLONY_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_5wkjsVJPEeiyW7NaN4qWdw" value="&quot;colony&quot;"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xctcFJPEeiyW7NaN4qWdw" name="WorkInsideColonyMission" specification="_5vsZ8FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xctcVJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xctclJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xctc1JPEeiyW7NaN4qWdw" name="aiColony" type="_5qLAw1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xctdFJPEeiyW7NaN4qWdw" type="_5WfPwFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit, aiColony.getColony());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xctdVJPEeiyW7NaN4qWdw" name="WorkInsideColonyMission" specification="_5vtBA1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xctdlJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xctd1JPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xcteFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xcteVJPEeiyW7NaN4qWdw" type="_5WfPwFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>super(aiMain, aiUnit);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xctelJPEeiyW7NaN4qWdw" name="getAIColony" specification="_5Wgd4FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xcte1JPEeiyW7NaN4qWdw" type="_5qLAw1JPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return getAIMain().getAIColony(colony);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xctfFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5vtoE1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xctfVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xctflJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xctf1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String reason;&#xD;
     return ((reason = invalidAIUnitReason(aiUnit)) != null) ? reason&#xD;
         : (!aiUnit.getUnit().isPerson()) ? Mission.UNITNOTAPERSON&#xD;
         : ((reason = invalidTargetReason(loc, aiUnit.getUnit().getOwner()))&#xD;
             != null) ? reason&#xD;
         : null;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xdUgFJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" specification="_5WhE8FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xdUgVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return NORMAL_TRANSPORT_PRIORITY;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xdUglJPEeiyW7NaN4qWdw" name="getTarget" specification="_5WhsAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xdUg1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return colony;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xdUhFJPEeiyW7NaN4qWdw" name="setTarget" specification="_5vuPI1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xdUhVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>if (target instanceof Colony) {&#xD;
         this.colony = (Colony)target;&#xD;
     }&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xdUhlJPEeiyW7NaN4qWdw" name="findTarget" specification="_5WhsBFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xdUh1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return getTarget();&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xdUiFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_5WiTE1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xdUiVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return invalidReason(getAIUnit(), getTarget());&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xdUilJPEeiyW7NaN4qWdw" name="doMission" specification="_5vvdQFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xdUi1JPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5xdUjFJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>lb.add(tag);&#xD;
     String reason = invalidReason();&#xD;
     if (reason != null) return lbFail(lb, false, reason);&#xD;
&#xD;
     final Unit unit = getUnit();&#xD;
     Unit.MoveType mt = travelToTarget(getTarget(),&#xD;
         CostDeciders.avoidSettlementsAndBlockingUnits(), lb);&#xD;
     switch (mt) {&#xD;
     case MOVE: // Arrived&#xD;
         break;&#xD;
&#xD;
     case MOVE_HIGH_SEAS: case MOVE_NO_REPAIR:&#xD;
     case MOVE_NO_MOVES: case MOVE_ILLEGAL:&#xD;
         return lbWait(lb);&#xD;
&#xD;
     case MOVE_NO_ACCESS_EMBARK: case MOVE_NO_TILE:&#xD;
         return this;&#xD;
&#xD;
     default:&#xD;
         return lbMove(lb, mt);&#xD;
     }&#xD;
&#xD;
     lbAt(lb);&#xD;
     if (unit.isInColony()) lb.add(&quot;, working&quot;);&#xD;
     return lbWait(lb);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xd7kFJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_5vwEUlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xd7kVJPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.writeAttributes(xw);&#xD;
&#xD;
     xw.writeAttribute(COLONY_TAG, colony);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xd7klJPEeiyW7NaN4qWdw" name="readAttributes" specification="_5vwrY1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xd7k1JPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <language>java</language>
                    <body>super.readAttributes(xr);&#xD;
&#xD;
     colony = xr.getAttribute(getGame(), COLONY_TAG,&#xD;
                              Colony.class, (Colony)null);&#xD;
 </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xd7lFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_5Wi6I1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xd7lVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return getXMLElementTagName(); </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_5xd7llJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_5WjhM1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5xd7l1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;workInsideColonyMission&quot;;&#xD;
 </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_5Wgd4FJPEeiyW7NaN4qWdw" name="getAIColony" method="_5xctelJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xzSxlJPEeiyW7NaN4qWdw">
                      <body>Convenience accessor for the colony to work in.&#xD;
     *&#xD;
     * @return The &lt;code>AIColony&lt;/code> to work in.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vtoElJPEeiyW7NaN4qWdw" type="_5qLAw1JPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WhE8FJPEeiyW7NaN4qWdw" name="getBaseTransportPriority" method="_5xdUgFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5WhE8VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WhsAFJPEeiyW7NaN4qWdw" name="getTarget" method="_5xdUglJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vuPIlJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WhsBFJPEeiyW7NaN4qWdw" name="findTarget" method="_5xdUhlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vu2NFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WiTE1JPEeiyW7NaN4qWdw" name="invalidReason" method="_5xdUiFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5WiTFFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5Wi6I1JPEeiyW7NaN4qWdw" name="getXMLTagName" method="_5xd7lFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5Wi6JFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5WjhM1JPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_5xd7llJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xzSyFJPEeiyW7NaN4qWdw">
                      <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;workInsideColonyMission&quot;.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5WkIQFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vsZ8FJPEeiyW7NaN4qWdw" name="WorkInsideColonyMission" method="_5xctcFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5vtBAFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5vtBAVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xzSxFJPEeiyW7NaN4qWdw">
                      <body>Creates a mission for the given &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param aiColony The &lt;code>AIColony&lt;/code> the unit should be&#xD;
     *     working in.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vsZ8VJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vsZ8lJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vsZ81JPEeiyW7NaN4qWdw" name="aiColony" type="_5qLAw1JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vtBAlJPEeiyW7NaN4qWdw" type="_5WfPwFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vtBA1JPEeiyW7NaN4qWdw" name="WorkInsideColonyMission" method="_5xctdVJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_5vtBB1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_5vtoEFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_5xzSxVJPEeiyW7NaN4qWdw">
                      <body>Creates a new &lt;code>WorkInsideColonyMission&lt;/code> and reads&#xD;
     * the given element.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> this mission is created for.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.&#xD;
     * @see net.sf.freecol.server.ai.AIObject#readFromXML</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vtBBFJPEeiyW7NaN4qWdw" name="aiMain" type="_5qLn0VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vtBBVJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vtBBlJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vtoEVJPEeiyW7NaN4qWdw" type="_5WfPwFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vtoE1JPEeiyW7NaN4qWdw" name="invalidReason" isStatic="true" method="_5xctfFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_5xzSx1JPEeiyW7NaN4qWdw">
                      <body>Why would this mission be invalid with the given AI unit and location?&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The &lt;code>Location&lt;/code> to check.&#xD;
     * @return A reason for invalidity, or null if none found.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_5vtoFFJPEeiyW7NaN4qWdw" name="aiUnit" type="_5qMO41JPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vuPIFJPEeiyW7NaN4qWdw" name="loc" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vuPIVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vuPI1JPEeiyW7NaN4qWdw" name="setTarget" method="_5xdUhFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vu2MFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vvdQFJPEeiyW7NaN4qWdw" name="doMission" method="_5xdUilJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vvdQVJPEeiyW7NaN4qWdw" name="lb" type="_5qKZsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_5vvdQlJPEeiyW7NaN4qWdw" type="_5UbaQFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vwEUlJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_5xd7kFJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vwEU1JPEeiyW7NaN4qWdw" name="xw" type="_5qE6IlJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_5vwrY1JPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_5xd7klJPEeiyW7NaN4qWdw" raisedException="_5qETEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_5vwrZFJPEeiyW7NaN4qWdw" name="xr" type="_5qE6IFJPEeiyW7NaN4qWdw"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yEYgFJPEeiyW7NaN4qWdw" name="" memberEnd="_5yEYgVJPEeiyW7NaN4qWdw _5v3ZEFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yEYgVJPEeiyW7NaN4qWdw" name="" type="_5TfmIFJPEeiyW7NaN4qWdw" association="_5yEYgFJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yE_kVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yE_klJPEeiyW7NaN4qWdw _5v3ZFFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yE_klJPEeiyW7NaN4qWdw" name="" type="_5TfmIFJPEeiyW7NaN4qWdw" association="_5yE_kVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yFmoVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yFmolJPEeiyW7NaN4qWdw _5v51UFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yFmolJPEeiyW7NaN4qWdw" name="" type="_5TqlQFJPEeiyW7NaN4qWdw" association="_5yFmoVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yFmpFJPEeiyW7NaN4qWdw" name="" memberEnd="_5yFmpVJPEeiyW7NaN4qWdw _5v6cYVJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yFmpVJPEeiyW7NaN4qWdw" name="" type="_5TqlQFJPEeiyW7NaN4qWdw" association="_5yFmpFJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yGNsVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yGNslJPEeiyW7NaN4qWdw _5v8RkFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yGNslJPEeiyW7NaN4qWdw" name="" type="_5T1kYFJPEeiyW7NaN4qWdw" association="_5yGNsVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yG0wVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yG0wlJPEeiyW7NaN4qWdw _5v84o1JPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yG0wlJPEeiyW7NaN4qWdw" name="" type="_5T1kYFJPEeiyW7NaN4qWdw" association="_5yG0wVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yHb0FJPEeiyW7NaN4qWdw" name="" memberEnd="_5yHb0VJPEeiyW7NaN4qWdw _5v-t0FJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yHb0VJPEeiyW7NaN4qWdw" name="" type="_5UAjgFJPEeiyW7NaN4qWdw" association="_5yHb0FJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yHb01JPEeiyW7NaN4qWdw" name="" memberEnd="_5yHb1FJPEeiyW7NaN4qWdw _5v_U41JPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yHb1FJPEeiyW7NaN4qWdw" name="" type="_5UHRMFJPEeiyW7NaN4qWdw" association="_5yHb01JPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yIC4VJPEeiyW7NaN4qWdw" name="" memberEnd="_5yIC4lJPEeiyW7NaN4qWdw _5v_78VJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yIC4lJPEeiyW7NaN4qWdw" name="" type="_5UHRMFJPEeiyW7NaN4qWdw" association="_5yIC4VJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yIp8VJPEeiyW7NaN4qWdw" name="" memberEnd="_5yIp8lJPEeiyW7NaN4qWdw _5wBKEFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yIp8lJPEeiyW7NaN4qWdw" name="" type="_5UQbIFJPEeiyW7NaN4qWdw" association="_5yIp8VJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yJRAFJPEeiyW7NaN4qWdw" name="" memberEnd="_5yJRAVJPEeiyW7NaN4qWdw _5wBxIVJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yJRAVJPEeiyW7NaN4qWdw" name="" type="_5UQbIFJPEeiyW7NaN4qWdw" association="_5yJRAFJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yJRA1JPEeiyW7NaN4qWdw" name="" memberEnd="_5yJRBFJPEeiyW7NaN4qWdw _5wC_QFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yJRBFJPEeiyW7NaN4qWdw" name="" type="_5UbaQFJPEeiyW7NaN4qWdw" association="_5yJRA1JPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yJ4EVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yJ4ElJPEeiyW7NaN4qWdw _5wGCklJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yJ4ElJPEeiyW7NaN4qWdw" name="" type="_5UbaQFJPEeiyW7NaN4qWdw" association="_5yJ4EVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yKfIVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yKfIlJPEeiyW7NaN4qWdw _5wH3wFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yKfIlJPEeiyW7NaN4qWdw" name="" type="_5UwxcFJPEeiyW7NaN4qWdw" association="_5yKfIVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yLGMVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yLGMlJPEeiyW7NaN4qWdw _5wH3xFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yLGMlJPEeiyW7NaN4qWdw" name="" type="_5UwxcFJPEeiyW7NaN4qWdw" association="_5yLGMVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yLtQFJPEeiyW7NaN4qWdw" name="" memberEnd="_5yLtQVJPEeiyW7NaN4qWdw _5wKUAFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yLtQVJPEeiyW7NaN4qWdw" name="" type="_5U7wkFJPEeiyW7NaN4qWdw" association="_5yLtQFJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yMUUVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yMUUlJPEeiyW7NaN4qWdw _5wK7FFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yMUUlJPEeiyW7NaN4qWdw" name="" type="_5U7wkFJPEeiyW7NaN4qWdw" association="_5yMUUVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yMUVFJPEeiyW7NaN4qWdw" name="" memberEnd="_5yMUVVJPEeiyW7NaN4qWdw _5wK7FVJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yMUVVJPEeiyW7NaN4qWdw" name="" type="_5U7wkFJPEeiyW7NaN4qWdw" association="_5yMUVFJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yM7YVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yM7YlJPEeiyW7NaN4qWdw _5wN-YFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yM7YlJPEeiyW7NaN4qWdw" name="" type="_5VLoMFJPEeiyW7NaN4qWdw" association="_5yM7YVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yNicFJPEeiyW7NaN4qWdw" name="" memberEnd="_5yNicVJPEeiyW7NaN4qWdw _5wOlcFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yNicVJPEeiyW7NaN4qWdw" name="" type="_5VLoMFJPEeiyW7NaN4qWdw" association="_5yNicFJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yNic1JPEeiyW7NaN4qWdw" name="" memberEnd="_5yNidFJPEeiyW7NaN4qWdw _5wQaoFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yNidFJPEeiyW7NaN4qWdw" name="" type="_5VX1cFJPEeiyW7NaN4qWdw" association="_5yNic1JPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yOJgVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yOJglJPEeiyW7NaN4qWdw _5wRBslJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yOJglJPEeiyW7NaN4qWdw" name="" type="_5VX1cFJPEeiyW7NaN4qWdw" association="_5yOJgVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yOwkVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yOwklJPEeiyW7NaN4qWdw _5wTd8FJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yOwklJPEeiyW7NaN4qWdw" name="" type="_5VkCsFJPEeiyW7NaN4qWdw" association="_5yOwkVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yOwlFJPEeiyW7NaN4qWdw" name="" memberEnd="_5yOwlVJPEeiyW7NaN4qWdw _5wUsEFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yOwlVJPEeiyW7NaN4qWdw" name="" type="_5VqJUFJPEeiyW7NaN4qWdw" association="_5yOwlFJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yPXoVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yPXolJPEeiyW7NaN4qWdw _5wUsFFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yPXolJPEeiyW7NaN4qWdw" name="" type="_5VqJUFJPEeiyW7NaN4qWdw" association="_5yPXoVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yP-sVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yP-slJPEeiyW7NaN4qWdw _5wXvYFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yP-slJPEeiyW7NaN4qWdw" name="" type="_5V2WkFJPEeiyW7NaN4qWdw" association="_5yP-sVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yQlwVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yQlwlJPEeiyW7NaN4qWdw _5wYWcFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yQlwlJPEeiyW7NaN4qWdw" name="" type="_5V9rUFJPEeiyW7NaN4qWdw" association="_5yQlwVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yQlxFJPEeiyW7NaN4qWdw" name="" memberEnd="_5yQlxVJPEeiyW7NaN4qWdw _5wZkklJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yQlxVJPEeiyW7NaN4qWdw" name="" type="_5V9rUFJPEeiyW7NaN4qWdw" association="_5yQlxFJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yRM0VJPEeiyW7NaN4qWdw" name="" memberEnd="_5yRM0lJPEeiyW7NaN4qWdw _5waysFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yRM0lJPEeiyW7NaN4qWdw" name="" type="_5V9rUFJPEeiyW7NaN4qWdw" association="_5yRM0VJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yRz4VJPEeiyW7NaN4qWdw" name="" memberEnd="_5yRz4lJPEeiyW7NaN4qWdw _5wg5UFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yRz4lJPEeiyW7NaN4qWdw" name="" type="_5WX7AFJPEeiyW7NaN4qWdw" association="_5yRz4VJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5ySa8VJPEeiyW7NaN4qWdw" name="" memberEnd="_5ySa8lJPEeiyW7NaN4qWdw _5whgYVJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5ySa8lJPEeiyW7NaN4qWdw" name="" type="_5WX7AFJPEeiyW7NaN4qWdw" association="_5ySa8VJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5ySa9FJPEeiyW7NaN4qWdw" name="" memberEnd="_5ySa9VJPEeiyW7NaN4qWdw _5wiugFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5ySa9VJPEeiyW7NaN4qWdw" name="" type="_5WfPwFJPEeiyW7NaN4qWdw" association="_5ySa9FJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yTCAVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yTCAlJPEeiyW7NaN4qWdw _5wjVklJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yTCAlJPEeiyW7NaN4qWdw" name="" type="_5WfPwFJPEeiyW7NaN4qWdw" association="_5yTCAVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_5yTpEVJPEeiyW7NaN4qWdw" name="" memberEnd="_5yTpElJPEeiyW7NaN4qWdw _5xvBUFJPEeiyW7NaN4qWdw">
                  <ownedEnd xmi:id="_5yTpElJPEeiyW7NaN4qWdw" name="" type="_5VqJUFJPEeiyW7NaN4qWdw" association="_5yTpEVJPEeiyW7NaN4qWdw"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qLAw1JPEeiyW7NaN4qWdw" name="AIColony"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qLn0VJPEeiyW7NaN4qWdw" name="AIMain"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qMO4VJPEeiyW7NaN4qWdw" name="AIMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qMO41JPEeiyW7NaN4qWdw" name="AIUnit"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qM18VJPEeiyW7NaN4qWdw" name="EuropeanAIPlayer"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5q5ZgVJPEeiyW7NaN4qWdw" name="AIObject"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5q6AkFJPEeiyW7NaN4qWdw" name="AIPlayer"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5q6AklJPEeiyW7NaN4qWdw" name="TransportableAIObject"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5sYnQVJPEeiyW7NaN4qWdw" name="TileImprovementPlan"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5s16Q1JPEeiyW7NaN4qWdw" name="AIGoods"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5s2hUVJPEeiyW7NaN4qWdw" name="Cargo"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5tASUFJPEeiyW7NaN4qWdw" name="GoodsWish"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5tA5YVJPEeiyW7NaN4qWdw" name="Wish"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5tBgcVJPEeiyW7NaN4qWdw" name="WorkerWish"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_5PVe5lJPEeiyW7NaN4qWdw" name="common">
            <packagedElement xmi:type="uml:Package" xmi:id="_5PVe51JPEeiyW7NaN4qWdw" name="io">
              <packagedElement xmi:type="uml:Class" xmi:id="_5qE6IFJPEeiyW7NaN4qWdw" name="FreeColXMLReader"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qE6IlJPEeiyW7NaN4qWdw" name="FreeColXMLWriter"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_5PVe6FJPEeiyW7NaN4qWdw" name="model">
              <packagedElement xmi:type="uml:Package" xmi:id="_5PVe6VJPEeiyW7NaN4qWdw" name="pathfinding">
                <packagedElement xmi:type="uml:Interface" xmi:id="_5qIkgVJPEeiyW7NaN4qWdw" name="CostDecider"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_5qJLkVJPEeiyW7NaN4qWdw" name="CostDeciders"/>
                <packagedElement xmi:type="uml:Interface" xmi:id="_5qJLk1JPEeiyW7NaN4qWdw" name="GoalDecider"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_5qJyoVJPEeiyW7NaN4qWdw" name="GoalDeciders"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_5PnLsFJPEeiyW7NaN4qWdw" name="Unit">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_5qa4YVJPEeiyW7NaN4qWdw" name="UnitState"/>
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_5q4LYlJPEeiyW7NaN4qWdw" name="MoveType"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qFhMVJPEeiyW7NaN4qWdw" name="Colony"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qGIQVJPEeiyW7NaN4qWdw" name="Location"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qGvUVJPEeiyW7NaN4qWdw" name="PathNode"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qHWYVJPEeiyW7NaN4qWdw" name="Player"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qH9cVJPEeiyW7NaN4qWdw" name="Tile"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qH9c1JPEeiyW7NaN4qWdw" name="Unit"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qS8kVJPEeiyW7NaN4qWdw" name="Europe"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qZqQFJPEeiyW7NaN4qWdw" name="CombatModel"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_5qaRUFJPEeiyW7NaN4qWdw" name="Direction"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qaRUlJPEeiyW7NaN4qWdw" name="Settlement"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qi0MFJPEeiyW7NaN4qWdw" name="Goods"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qjbQVJPEeiyW7NaN4qWdw" name="IndianSettlement"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qjbQ1JPEeiyW7NaN4qWdw" name="Tension"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qr-IFJPEeiyW7NaN4qWdw" name="GameOptions"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qslMVJPEeiyW7NaN4qWdw" name="GoodsContainer"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qtMQVJPEeiyW7NaN4qWdw" name="GoodsType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qtzUVJPEeiyW7NaN4qWdw" name="Market"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5quaYVJPEeiyW7NaN4qWdw" name="Specification"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5q1IEVJPEeiyW7NaN4qWdw" name="Ability"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5q1vIVJPEeiyW7NaN4qWdw" name="FreeColGameObject"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_5q2WMVJPEeiyW7NaN4qWdw" name="Locatable"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5q29QFJPEeiyW7NaN4qWdw" name="Map"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_5q3kUFJPEeiyW7NaN4qWdw" name="Ownable"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_5q4LYFJPEeiyW7NaN4qWdw" name="Stance"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5sYAMFJPEeiyW7NaN4qWdw" name="Role"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_5PWF8FJPEeiyW7NaN4qWdw" name="networking">
              <packagedElement xmi:type="uml:Interface" xmi:id="_5qJyo1JPEeiyW7NaN4qWdw" name="NetworkConstants"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_5PWF8VJPEeiyW7NaN4qWdw" name="util">
              <packagedElement xmi:type="uml:Class" xmi:id="_5qKZsVJPEeiyW7NaN4qWdw" name="LogBuilder"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5qLAwVJPEeiyW7NaN4qWdw" name="RandomUtils"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5q4ycVJPEeiyW7NaN4qWdw" name="StringUtils"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5s16QVJPEeiyW7NaN4qWdw" name="CollectionUtils"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_5s1TM1JPEeiyW7NaN4qWdw" name="FreeColException"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5PVe4FJPEeiyW7NaN4qWdw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_5PVe4VJPEeiyW7NaN4qWdw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_5PVe4lJPEeiyW7NaN4qWdw" name="logging">
          <packagedElement xmi:type="uml:Class" xmi:id="_5qDE8FJPEeiyW7NaN4qWdw" name="Level"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_5qDsAFJPEeiyW7NaN4qWdw" name="Logger"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5qSVgFJPEeiyW7NaN4qWdw" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5q0hAFJPEeiyW7NaN4qWdw" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5s0sIFJPEeiyW7NaN4qWdw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5s1TMVJPEeiyW7NaN4qWdw" name="Iterator"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_5uI6wFJPEeiyW7NaN4qWdw" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_5uI6wVJPEeiyW7NaN4qWdw" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5PVe41JPEeiyW7NaN4qWdw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_5PVe5FJPEeiyW7NaN4qWdw" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_5PVe5VJPEeiyW7NaN4qWdw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_5qETEFJPEeiyW7NaN4qWdw" name="XMLStreamException"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_5QFFwVJPEeiyW7NaN4qWdw" name="Unit">
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_5q8c0FJPEeiyW7NaN4qWdw" name="MoveType"/>
    </packagedElement>
    <profileApplication xmi:id="_4SgDMFJPEeiyW7NaN4qWdw">
      <eAnnotations xmi:id="_4SgqQFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_4SgqQVJPEeiyW7NaN4qWdw" base_Package="_3eUNMFJPEeiyW7NaN4qWdw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5TjQgFJPEeiyW7NaN4qWdw" base_Element="_5TipcFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5TjQgVJPEeiyW7NaN4qWdw" base_Element="_5TipcFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5TjQglJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5TjQhFJPEeiyW7NaN4qWdw" base_Element="_5TjQg1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Tj3kFJPEeiyW7NaN4qWdw" base_Element="_5TjQg1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5Tj3kVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Tj3lFJPEeiyW7NaN4qWdw" base_Element="_5Tj3klJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Tj3lVJPEeiyW7NaN4qWdw" base_Element="_5Tj3klJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5Tj3llJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5TlFsFJPEeiyW7NaN4qWdw" base_Element="_5TkeoFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5TlFsVJPEeiyW7NaN4qWdw" base_Element="_5TkeoFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5TlFslJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5TtBglJPEeiyW7NaN4qWdw" base_Element="_5TtBgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5TtBg1JPEeiyW7NaN4qWdw" base_Element="_5TtBgFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5TtokFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5TtoklJPEeiyW7NaN4qWdw" base_Element="_5TtokVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Ttok1JPEeiyW7NaN4qWdw" base_Element="_5TtokVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5TtolFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5TuPoVJPEeiyW7NaN4qWdw" base_Element="_5TtolVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5TuPolJPEeiyW7NaN4qWdw" base_Element="_5TtolVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5TuPo1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Tu2slJPEeiyW7NaN4qWdw" base_Element="_5Tu2sFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5TvdwFJPEeiyW7NaN4qWdw" base_Element="_5Tu2sFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5TvdwVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5T4nsVJPEeiyW7NaN4qWdw" base_Element="_5T4AoFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5T4nslJPEeiyW7NaN4qWdw" base_Element="_5T4AoFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5T4ns1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5T5OwFJPEeiyW7NaN4qWdw" base_Element="_5T4ntFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5T5OwVJPEeiyW7NaN4qWdw" base_Element="_5T4ntFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5T5OwlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5T510VJPEeiyW7NaN4qWdw" base_Element="_5T5Ow1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5T510lJPEeiyW7NaN4qWdw" base_Element="_5T5Ow1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5T5101JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5T6c4lJPEeiyW7NaN4qWdw" base_Element="_5T6c4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5T7D8FJPEeiyW7NaN4qWdw" base_Element="_5T6c4FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5T7D8VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UBxolJPEeiyW7NaN4qWdw" base_Element="_5UBxoFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UCYsFJPEeiyW7NaN4qWdw" base_Element="_5UBxoFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UCYsVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UCYs1JPEeiyW7NaN4qWdw" base_Element="_5UCYslJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UCYtFJPEeiyW7NaN4qWdw" base_Element="_5UCYslJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UCYtVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UC_wVJPEeiyW7NaN4qWdw" base_Element="_5UC_wFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UC_wlJPEeiyW7NaN4qWdw" base_Element="_5UC_wFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UC_w1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UDm0lJPEeiyW7NaN4qWdw" base_Element="_5UDm0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UDm01JPEeiyW7NaN4qWdw" base_Element="_5UDm0FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UDm1FJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UEN4VJPEeiyW7NaN4qWdw" base_Element="_5UDm1VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UEN4lJPEeiyW7NaN4qWdw" base_Element="_5UDm1VJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UEN41JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UE08FJPEeiyW7NaN4qWdw" base_Element="_5UEN5FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UE08VJPEeiyW7NaN4qWdw" base_Element="_5UEN5FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UE08lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UJGYVJPEeiyW7NaN4qWdw" base_Element="_5UJGYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UJGYlJPEeiyW7NaN4qWdw" base_Element="_5UJGYFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UJGY1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UJtcVJPEeiyW7NaN4qWdw" base_Element="_5UJtcFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UJtclJPEeiyW7NaN4qWdw" base_Element="_5UJtcFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UJtc1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UKUgFJPEeiyW7NaN4qWdw" base_Element="_5UJtdFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UKUgVJPEeiyW7NaN4qWdw" base_Element="_5UJtdFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UKUglJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UK7kVJPEeiyW7NaN4qWdw" base_Element="_5UKUg1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UK7klJPEeiyW7NaN4qWdw" base_Element="_5UKUg1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UK7k1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UMJsFJPEeiyW7NaN4qWdw" base_Element="_5ULioFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UMJsVJPEeiyW7NaN4qWdw" base_Element="_5ULioFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UMJslJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UTecVJPEeiyW7NaN4qWdw" base_Element="_5UTecFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UUFgFJPEeiyW7NaN4qWdw" base_Element="_5UTecFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UUFgVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UUskFJPEeiyW7NaN4qWdw" base_Element="_5UUFglJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UUskVJPEeiyW7NaN4qWdw" base_Element="_5UUFglJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UUsklJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UVToFJPEeiyW7NaN4qWdw" base_Element="_5UUsk1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UVToVJPEeiyW7NaN4qWdw" base_Element="_5UUsk1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UVTolJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UV6sVJPEeiyW7NaN4qWdw" base_Element="_5UVTo1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UWhwFJPEeiyW7NaN4qWdw" base_Element="_5UVTo1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UWhwVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UXI0FJPEeiyW7NaN4qWdw" base_Element="_5UWhwlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UXI0VJPEeiyW7NaN4qWdw" base_Element="_5UWhwlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UXI0lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UivAVJPEeiyW7NaN4qWdw" base_Element="_5UivAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UivAlJPEeiyW7NaN4qWdw" base_Element="_5UivAFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UivA1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5UlLQVJPEeiyW7NaN4qWdw" base_Element="_5UkkMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5UlLQlJPEeiyW7NaN4qWdw" base_Element="_5UkkMFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5UlLQ1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Uz0wFJPEeiyW7NaN4qWdw" base_Element="_5UzNsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Uz0wVJPEeiyW7NaN4qWdw" base_Element="_5UzNsFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5Uz0wlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5U0b0FJPEeiyW7NaN4qWdw" base_Element="_5Uz0w1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5U0b0VJPEeiyW7NaN4qWdw" base_Element="_5Uz0w1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5U0b0lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5U0b1VJPEeiyW7NaN4qWdw" base_Element="_5U0b01JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5U1C4FJPEeiyW7NaN4qWdw" base_Element="_5U0b01JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5U1C4VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5U1p8FJPEeiyW7NaN4qWdw" base_Element="_5U1C4lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5U1p8VJPEeiyW7NaN4qWdw" base_Element="_5U1C4lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5U1p8lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5U-M0FJPEeiyW7NaN4qWdw" base_Element="_5U9lwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5U-M0VJPEeiyW7NaN4qWdw" base_Element="_5U9lwVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5U-M0lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VBQIVJPEeiyW7NaN4qWdw" base_Element="_5VApEFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VB3MFJPEeiyW7NaN4qWdw" base_Element="_5VApEFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VB3MVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VB3M1JPEeiyW7NaN4qWdw" base_Element="_5VB3MlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VB3NFJPEeiyW7NaN4qWdw" base_Element="_5VB3MlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VB3NVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VCeQlJPEeiyW7NaN4qWdw" base_Element="_5VCeQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VDFUFJPEeiyW7NaN4qWdw" base_Element="_5VCeQFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VDFUVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VDsYlJPEeiyW7NaN4qWdw" base_Element="_5VDsYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VDsY1JPEeiyW7NaN4qWdw" base_Element="_5VDsYFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VETcFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VOrgVJPEeiyW7NaN4qWdw" base_Element="_5VOrgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VPSkFJPEeiyW7NaN4qWdw" base_Element="_5VOrgFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VPSkVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VPSk1JPEeiyW7NaN4qWdw" base_Element="_5VPSklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VP5oFJPEeiyW7NaN4qWdw" base_Element="_5VPSklJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VP5oVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VP5pFJPEeiyW7NaN4qWdw" base_Element="_5VP5olJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VQgsFJPEeiyW7NaN4qWdw" base_Element="_5VP5olJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VQgsVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VRHwVJPEeiyW7NaN4qWdw" base_Element="_5VQgslJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VRu0FJPEeiyW7NaN4qWdw" base_Element="_5VQgslJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VRu0VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Va4wVJPEeiyW7NaN4qWdw" base_Element="_5VaRsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Va4wlJPEeiyW7NaN4qWdw" base_Element="_5VaRsFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5Va4w1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Vbf0FJPEeiyW7NaN4qWdw" base_Element="_5Va4xFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Vbf0VJPEeiyW7NaN4qWdw" base_Element="_5Va4xFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5Vbf0lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VcG4VJPEeiyW7NaN4qWdw" base_Element="_5Vbf01JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VcG4lJPEeiyW7NaN4qWdw" base_Element="_5Vbf01JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VcG41JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VdVAFJPEeiyW7NaN4qWdw" base_Element="_5Vct8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VdVAVJPEeiyW7NaN4qWdw" base_Element="_5Vct8FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VdVAlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VlQ0FJPEeiyW7NaN4qWdw" base_Element="_5VkpwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VlQ0VJPEeiyW7NaN4qWdw" base_Element="_5VkpwFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VlQ0lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Vl34FJPEeiyW7NaN4qWdw" base_Element="_5VlQ01JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Vl34VJPEeiyW7NaN4qWdw" base_Element="_5VlQ01JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5Vl34lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Vme8VJPEeiyW7NaN4qWdw" base_Element="_5Vl341JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Vme8lJPEeiyW7NaN4qWdw" base_Element="_5Vl341JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5Vme81JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VnGAlJPEeiyW7NaN4qWdw" base_Element="_5VnGAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VnGA1JPEeiyW7NaN4qWdw" base_Element="_5VnGAFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VnGBFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VntElJPEeiyW7NaN4qWdw" base_Element="_5VntEFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VoUIFJPEeiyW7NaN4qWdw" base_Element="_5VntEFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VoUIVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VtzsFJPEeiyW7NaN4qWdw" base_Element="_5VtMoFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VtzsVJPEeiyW7NaN4qWdw" base_Element="_5VtMoFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VtzslJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VtztFJPEeiyW7NaN4qWdw" base_Element="_5Vtzs1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VuawFJPEeiyW7NaN4qWdw" base_Element="_5Vtzs1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VuawVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Vuaw1JPEeiyW7NaN4qWdw" base_Element="_5VuawlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VvB0FJPEeiyW7NaN4qWdw" base_Element="_5VuawlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VvB0VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VvB1FJPEeiyW7NaN4qWdw" base_Element="_5VvB0lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Vvo4FJPEeiyW7NaN4qWdw" base_Element="_5VvB0lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5Vvo4VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5VwP8FJPEeiyW7NaN4qWdw" base_Element="_5Vvo4lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5VwP8VJPEeiyW7NaN4qWdw" base_Element="_5Vvo4lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5VwP8lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5V4LwFJPEeiyW7NaN4qWdw" base_Element="_5V3ksFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5V4LwVJPEeiyW7NaN4qWdw" base_Element="_5V3ksFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5V4LwlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5V4y0FJPEeiyW7NaN4qWdw" base_Element="_5V4Lw1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5V4y0VJPEeiyW7NaN4qWdw" base_Element="_5V4Lw1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5V4y0lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5V5Z4FJPEeiyW7NaN4qWdw" base_Element="_5V4y01JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5V5Z4VJPEeiyW7NaN4qWdw" base_Element="_5V4y01JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5V5Z4lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5V6A8FJPEeiyW7NaN4qWdw" base_Element="_5V5Z41JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5V6A8VJPEeiyW7NaN4qWdw" base_Element="_5V5Z41JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5V6A8lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5V6oAVJPEeiyW7NaN4qWdw" base_Element="_5V6A81JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5V7PEFJPEeiyW7NaN4qWdw" base_Element="_5V6A81JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5V7PEVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5V_gglJPEeiyW7NaN4qWdw" base_Element="_5V-5cFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WBVsVJPEeiyW7NaN4qWdw" base_Element="_5WBVsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WB8wFJPEeiyW7NaN4qWdw" base_Element="_5WBVsFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WB8wVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WIqcVJPEeiyW7NaN4qWdw" base_Element="_5WIqcFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WJRgFJPEeiyW7NaN4qWdw" base_Element="_5WIqcFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WJRgVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WJRg1JPEeiyW7NaN4qWdw" base_Element="_5WJRglJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WJ4kFJPEeiyW7NaN4qWdw" base_Element="_5WJRglJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WJ4kVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WKfoFJPEeiyW7NaN4qWdw" base_Element="_5WJ4klJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WKfoVJPEeiyW7NaN4qWdw" base_Element="_5WJ4klJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WKfolJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WLtwVJPEeiyW7NaN4qWdw" base_Element="_5WLGslJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WLtwlJPEeiyW7NaN4qWdw" base_Element="_5WLGslJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WLtw1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WZwMFJPEeiyW7NaN4qWdw" base_Element="_5WZJIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WZwMVJPEeiyW7NaN4qWdw" base_Element="_5WZJIFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WZwMlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WZwNVJPEeiyW7NaN4qWdw" base_Element="_5WZwM1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WaXQFJPEeiyW7NaN4qWdw" base_Element="_5WZwM1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WaXQVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WaXQ1JPEeiyW7NaN4qWdw" base_Element="_5WaXQlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WaXRFJPEeiyW7NaN4qWdw" base_Element="_5WaXQlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WaXRVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Wa-UVJPEeiyW7NaN4qWdw" base_Element="_5Wa-UFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Wa-UlJPEeiyW7NaN4qWdw" base_Element="_5Wa-UFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5Wa-U1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WblYFJPEeiyW7NaN4qWdw" base_Element="_5Wa-VFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WblYVJPEeiyW7NaN4qWdw" base_Element="_5Wa-VFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WblYlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WcMclJPEeiyW7NaN4qWdw" base_Element="_5WcMcFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WcMc1JPEeiyW7NaN4qWdw" base_Element="_5WcMcFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WcMdFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WhE8lJPEeiyW7NaN4qWdw" base_Element="_5WhE8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WhE81JPEeiyW7NaN4qWdw" base_Element="_5WhE8FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WhE9FJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WhsAVJPEeiyW7NaN4qWdw" base_Element="_5WhsAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WhsAlJPEeiyW7NaN4qWdw" base_Element="_5WhsAFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WhsA1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WiTEFJPEeiyW7NaN4qWdw" base_Element="_5WhsBFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WiTEVJPEeiyW7NaN4qWdw" base_Element="_5WhsBFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WiTElJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5Wi6IFJPEeiyW7NaN4qWdw" base_Element="_5WiTE1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5Wi6IVJPEeiyW7NaN4qWdw" base_Element="_5WiTE1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5Wi6IlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5WjhMFJPEeiyW7NaN4qWdw" base_Element="_5Wi6I1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5WjhMVJPEeiyW7NaN4qWdw" base_Element="_5Wi6I1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5WjhMlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5qDE8VJPEeiyW7NaN4qWdw" base_Element="_5qDE8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qDsAVJPEeiyW7NaN4qWdw" base_Element="_5qDsAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qETEVJPEeiyW7NaN4qWdw" base_Element="_5qETEFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qE6IVJPEeiyW7NaN4qWdw" base_Element="_5qE6IFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qFhMFJPEeiyW7NaN4qWdw" base_Element="_5qE6IlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qGIQFJPEeiyW7NaN4qWdw" base_Element="_5qFhMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qGvUFJPEeiyW7NaN4qWdw" base_Element="_5qGIQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qHWYFJPEeiyW7NaN4qWdw" base_Element="_5qGvUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qH9cFJPEeiyW7NaN4qWdw" base_Element="_5qHWYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qH9clJPEeiyW7NaN4qWdw" base_Element="_5qH9cVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qIkgFJPEeiyW7NaN4qWdw" base_Element="_5qH9c1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qJLkFJPEeiyW7NaN4qWdw" base_Element="_5qIkgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qJLklJPEeiyW7NaN4qWdw" base_Element="_5qJLkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qJyoFJPEeiyW7NaN4qWdw" base_Element="_5qJLk1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qJyolJPEeiyW7NaN4qWdw" base_Element="_5qJyoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qKZsFJPEeiyW7NaN4qWdw" base_Element="_5qJyo1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qLAwFJPEeiyW7NaN4qWdw" base_Element="_5qKZsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qLAwlJPEeiyW7NaN4qWdw" base_Element="_5qLAwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qLn0FJPEeiyW7NaN4qWdw" base_Element="_5qLAw1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qMO4FJPEeiyW7NaN4qWdw" base_Element="_5qLn0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qMO4lJPEeiyW7NaN4qWdw" base_Element="_5qMO4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qM18FJPEeiyW7NaN4qWdw" base_Element="_5qMO41JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qM18lJPEeiyW7NaN4qWdw" base_Element="_5qM18VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qS8kFJPEeiyW7NaN4qWdw" base_Element="_5qSVgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qTjoFJPEeiyW7NaN4qWdw" base_Element="_5qS8kVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qZqQVJPEeiyW7NaN4qWdw" base_Element="_5qZqQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qaRUVJPEeiyW7NaN4qWdw" base_Element="_5qaRUFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qa4YFJPEeiyW7NaN4qWdw" base_Element="_5qaRUlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qbfcFJPEeiyW7NaN4qWdw" base_Element="_5qa4YVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qjbQFJPEeiyW7NaN4qWdw" base_Element="_5qi0MFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qjbQlJPEeiyW7NaN4qWdw" base_Element="_5qjbQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qkCUFJPEeiyW7NaN4qWdw" base_Element="_5qjbQ1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qslMFJPEeiyW7NaN4qWdw" base_Element="_5qr-IFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qtMQFJPEeiyW7NaN4qWdw" base_Element="_5qslMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qtzUFJPEeiyW7NaN4qWdw" base_Element="_5qtMQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5quaYFJPEeiyW7NaN4qWdw" base_Element="_5qtzUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5qvBcFJPEeiyW7NaN4qWdw" base_Element="_5quaYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q1IEFJPEeiyW7NaN4qWdw" base_Element="_5q0hAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q1vIFJPEeiyW7NaN4qWdw" base_Element="_5q1IEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q2WMFJPEeiyW7NaN4qWdw" base_Element="_5q1vIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q2WMlJPEeiyW7NaN4qWdw" base_Element="_5q2WMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q29QVJPEeiyW7NaN4qWdw" base_Element="_5q29QFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q3kUVJPEeiyW7NaN4qWdw" base_Element="_5q3kUFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q4LYVJPEeiyW7NaN4qWdw" base_Element="_5q4LYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q4ycFJPEeiyW7NaN4qWdw" base_Element="_5q4LYlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q5ZgFJPEeiyW7NaN4qWdw" base_Element="_5q4ycVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q5ZglJPEeiyW7NaN4qWdw" base_Element="_5q5ZgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q6AkVJPEeiyW7NaN4qWdw" base_Element="_5q6AkFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q6noFJPEeiyW7NaN4qWdw" base_Element="_5q6AklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5q8c0VJPEeiyW7NaN4qWdw" base_Element="_5q8c0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5sYnQFJPEeiyW7NaN4qWdw" base_Element="_5sYAMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5sZOUFJPEeiyW7NaN4qWdw" base_Element="_5sYnQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5s1TMFJPEeiyW7NaN4qWdw" base_Element="_5s0sIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5s1TMlJPEeiyW7NaN4qWdw" base_Element="_5s1TMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5s16QFJPEeiyW7NaN4qWdw" base_Element="_5s1TM1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5s16QlJPEeiyW7NaN4qWdw" base_Element="_5s16QVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5s2hUFJPEeiyW7NaN4qWdw" base_Element="_5s16Q1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5s2hUlJPEeiyW7NaN4qWdw" base_Element="_5s2hUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5tA5YFJPEeiyW7NaN4qWdw" base_Element="_5tASUFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5tBgcFJPEeiyW7NaN4qWdw" base_Element="_5tA5YVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5tBgclJPEeiyW7NaN4qWdw" base_Element="_5tBgcVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5teMYVJPEeiyW7NaN4qWdw" base_Element="_5tdlVFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5teMYlJPEeiyW7NaN4qWdw" base_Element="_5tdlVFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5teMY1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tezcVJPEeiyW7NaN4qWdw" base_Element="_5teMZFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5tezclJPEeiyW7NaN4qWdw" base_Element="_5teMZFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5tezc1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tfaglJPEeiyW7NaN4qWdw" base_Element="_5tfagFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5tfag1JPEeiyW7NaN4qWdw" base_Element="_5tfagFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5tfahFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tnWUVJPEeiyW7NaN4qWdw" base_Element="_5tmvRFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5tnWUlJPEeiyW7NaN4qWdw" base_Element="_5tmvRFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5tnWU1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tn9YFJPEeiyW7NaN4qWdw" base_Element="_5tnWVFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5tn9YVJPEeiyW7NaN4qWdw" base_Element="_5tnWVFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5tn9YlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tokcFJPEeiyW7NaN4qWdw" base_Element="_5tn9Y1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5tokcVJPEeiyW7NaN4qWdw" base_Element="_5tn9Y1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5tokclJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5turE1JPEeiyW7NaN4qWdw" base_Element="_5turEFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5tvSIFJPEeiyW7NaN4qWdw" base_Element="_5turEFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5tvSIVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5tv5MFJPEeiyW7NaN4qWdw" base_Element="_5tvSIlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5tv5MVJPEeiyW7NaN4qWdw" base_Element="_5tvSIlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5tv5MlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5twgQlJPEeiyW7NaN4qWdw" base_Element="_5twgQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5txuYFJPEeiyW7NaN4qWdw" base_Element="_5twgQFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5txuYVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t0KoFJPEeiyW7NaN4qWdw" base_Element="_5tzjmFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5t0KoVJPEeiyW7NaN4qWdw" base_Element="_5tzjmFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5t0KolJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t0xs1JPEeiyW7NaN4qWdw" base_Element="_5t0xsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5t1YwFJPEeiyW7NaN4qWdw" base_Element="_5t0xsFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5t1YwVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t5DIFJPEeiyW7NaN4qWdw" base_Element="_5t4cElJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5t5DIVJPEeiyW7NaN4qWdw" base_Element="_5t4cElJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5t5DIlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t5qMVJPEeiyW7NaN4qWdw" base_Element="_5t5DJFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5t5qMlJPEeiyW7NaN4qWdw" base_Element="_5t5DJFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5t5qM1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t6RQlJPEeiyW7NaN4qWdw" base_Element="_5t6RQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5t6RQ1JPEeiyW7NaN4qWdw" base_Element="_5t6RQFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5t6RRFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t64UlJPEeiyW7NaN4qWdw" base_Element="_5t64UFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5t64U1JPEeiyW7NaN4qWdw" base_Element="_5t64UFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5t64VFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5t_w0lJPEeiyW7NaN4qWdw" base_Element="_5t_w0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5t_w01JPEeiyW7NaN4qWdw" base_Element="_5t_w0FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5t_w1FJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uAX5FJPEeiyW7NaN4qWdw" base_Element="_5uAX4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uA-8FJPEeiyW7NaN4qWdw" base_Element="_5uAX4VJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uA-8VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uA-9FJPEeiyW7NaN4qWdw" base_Element="_5uA-8lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uBmAFJPEeiyW7NaN4qWdw" base_Element="_5uA-8lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uBmAVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uBmBFJPEeiyW7NaN4qWdw" base_Element="_5uBmAlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uCNEFJPEeiyW7NaN4qWdw" base_Element="_5uBmAlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uCNEVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_5uI6wlJPEeiyW7NaN4qWdw" base_Element="_5uI6wVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uJh1VJPEeiyW7NaN4qWdw" base_Element="_5uJh0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_5uJh11JPEeiyW7NaN4qWdw" base_Element="_5uJh01JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uKI5FJPEeiyW7NaN4qWdw" base_Element="_5uKI4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_5uKv8FJPEeiyW7NaN4qWdw" base_Element="_5uKI4lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uKv9lJPEeiyW7NaN4qWdw" base_Element="_5uKv8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_5uLXAVJPEeiyW7NaN4qWdw" base_Element="_5uKv9FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uMlIVJPEeiyW7NaN4qWdw" base_Element="_5uL-E1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_5uMlI1JPEeiyW7NaN4qWdw" base_Element="_5uL-FVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uQ2k1JPEeiyW7NaN4qWdw" base_Element="_5uQ2kVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uRdoFJPEeiyW7NaN4qWdw" base_Element="_5uQ2kVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uRdoVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uRdpFJPEeiyW7NaN4qWdw" base_Element="_5uRdolJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uRdpVJPEeiyW7NaN4qWdw" base_Element="_5uRdolJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uRdplJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uSEslJPEeiyW7NaN4qWdw" base_Element="_5uSEsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uSEs1JPEeiyW7NaN4qWdw" base_Element="_5uSEsFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uSEtFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uankFJPEeiyW7NaN4qWdw" base_Element="_5uaAgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uankVJPEeiyW7NaN4qWdw" base_Element="_5uaAgVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uanklJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ubOoVJPEeiyW7NaN4qWdw" base_Element="_5uank1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5ubOolJPEeiyW7NaN4qWdw" base_Element="_5uank1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5ubOo1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ub1slJPEeiyW7NaN4qWdw" base_Element="_5ub1sFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5ub1s1JPEeiyW7NaN4qWdw" base_Element="_5ub1sFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5ub1tFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5ulmtVJPEeiyW7NaN4qWdw" base_Element="_5ulmsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_5umNwVJPEeiyW7NaN4qWdw" base_Element="_5ulms1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5umNwlJPEeiyW7NaN4qWdw" base_Element="_5ulmsFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5umNw1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5um00VJPEeiyW7NaN4qWdw" base_Element="_5umNxFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5um00lJPEeiyW7NaN4qWdw" base_Element="_5umNxFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5um001JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5unb4lJPEeiyW7NaN4qWdw" base_Element="_5unb4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uoC8FJPEeiyW7NaN4qWdw" base_Element="_5unb4FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uoC8VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uoqAFJPEeiyW7NaN4qWdw" base_Element="_5uoC8lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uoqAVJPEeiyW7NaN4qWdw" base_Element="_5uoC8lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uoqAlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uwl0VJPEeiyW7NaN4qWdw" base_Element="_5uv-w1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uwl0lJPEeiyW7NaN4qWdw" base_Element="_5uv-w1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uwl01JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uxM4lJPEeiyW7NaN4qWdw" base_Element="_5uxM4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uxz8FJPEeiyW7NaN4qWdw" base_Element="_5uxM4FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uxz8VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5uybAFJPEeiyW7NaN4qWdw" base_Element="_5uxz8lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5uybAVJPEeiyW7NaN4qWdw" base_Element="_5uxz8lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5uybAlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5u7k8VJPEeiyW7NaN4qWdw" base_Element="_5u6941JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5u7k8lJPEeiyW7NaN4qWdw" base_Element="_5u6941JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5u7k81JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5u8MAlJPEeiyW7NaN4qWdw" base_Element="_5u8MAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5u8MA1JPEeiyW7NaN4qWdw" base_Element="_5u8MAFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5u8MBFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5u8zElJPEeiyW7NaN4qWdw" base_Element="_5u8zEFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5u8zE1JPEeiyW7NaN4qWdw" base_Element="_5u8zEFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5u9aIFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5u_2YFJPEeiyW7NaN4qWdw" base_Element="_5u_PU1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5u_2YVJPEeiyW7NaN4qWdw" base_Element="_5u_PU1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5u_2YlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vAdcVJPEeiyW7NaN4qWdw" base_Element="_5u_2ZFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vAdclJPEeiyW7NaN4qWdw" base_Element="_5u_2ZFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vAdc1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vIZRFJPEeiyW7NaN4qWdw" base_Element="_5vIZQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vJAUFJPEeiyW7NaN4qWdw" base_Element="_5vIZQVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vJAUVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vJnYFJPEeiyW7NaN4qWdw" base_Element="_5vJAUlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vJnYVJPEeiyW7NaN4qWdw" base_Element="_5vJAUlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vJnYlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vKOcFJPEeiyW7NaN4qWdw" base_Element="_5vJnY1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vKOcVJPEeiyW7NaN4qWdw" base_Element="_5vJnY1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vKOclJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vNRwlJPEeiyW7NaN4qWdw" base_Element="_5vMqtFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vNRw1JPEeiyW7NaN4qWdw" base_Element="_5vNRwFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vNRxFJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_5vNRxVJPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_5xw2glJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vN401JPEeiyW7NaN4qWdw" base_Element="_5vN40VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vOf4FJPEeiyW7NaN4qWdw" base_Element="_5vN40VJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vOf4VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vPG8FJPEeiyW7NaN4qWdw" base_Element="_5vOf41JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vPuAFJPEeiyW7NaN4qWdw" base_Element="_5vOf41JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vPuAVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_5vTYYFJPEeiyW7NaN4qWdw" genericsValue="Cargo" base_Element="_5vSxVFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_5vV0o1JPEeiyW7NaN4qWdw" genericsValue="Cargo" base_Element="_5vV0oFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_5vbUMFJPEeiyW7NaN4qWdw" genericsValue="Cargo" base_Element="_5vatJFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vgzw1JPEeiyW7NaN4qWdw" base_Element="_5vgzwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vha0FJPEeiyW7NaN4qWdw" base_Element="_5vgzwFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vha0VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5viB4VJPEeiyW7NaN4qWdw" base_Element="_5vha0lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5viB4lJPEeiyW7NaN4qWdw" base_Element="_5vha0lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5viB41JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vio8lJPEeiyW7NaN4qWdw" base_Element="_5vio8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vio81JPEeiyW7NaN4qWdw" base_Element="_5vio8FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vio9FJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vjQAlJPEeiyW7NaN4qWdw" base_Element="_5vjQAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vjQA1JPEeiyW7NaN4qWdw" base_Element="_5vjQAFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vjQBFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vj3ElJPEeiyW7NaN4qWdw" base_Element="_5vj3EFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vkeIFJPEeiyW7NaN4qWdw" base_Element="_5vj3EFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vkeIVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vkeJFJPEeiyW7NaN4qWdw" base_Element="_5vkeIlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vlFMFJPEeiyW7NaN4qWdw" base_Element="_5vkeIlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vlFMVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vovkFJPEeiyW7NaN4qWdw" base_Element="_5voIglJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vovkVJPEeiyW7NaN4qWdw" base_Element="_5voIglJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vovklJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vpWo1JPEeiyW7NaN4qWdw" base_Element="_5vpWoFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vp9sFJPEeiyW7NaN4qWdw" base_Element="_5vpWoFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vp9sVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vqkwFJPEeiyW7NaN4qWdw" base_Element="_5vp9slJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vqkwVJPEeiyW7NaN4qWdw" base_Element="_5vp9slJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vqkwlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vrL0FJPEeiyW7NaN4qWdw" base_Element="_5vqkw1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vrL0VJPEeiyW7NaN4qWdw" base_Element="_5vqkw1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vrL0lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vu2MVJPEeiyW7NaN4qWdw" base_Element="_5vuPI1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vu2MlJPEeiyW7NaN4qWdw" base_Element="_5vuPI1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vu2M1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vvdQ1JPEeiyW7NaN4qWdw" base_Element="_5vvdQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vwEUFJPEeiyW7NaN4qWdw" base_Element="_5vvdQFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vwEUVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vwrYFJPEeiyW7NaN4qWdw" base_Element="_5vwEUlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vwrYVJPEeiyW7NaN4qWdw" base_Element="_5vwEUlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vwrYlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5vxScFJPEeiyW7NaN4qWdw" base_Element="_5vwrY1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_5vxScVJPEeiyW7NaN4qWdw" base_Element="_5vwrY1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5vxSclJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5v3ZFVJPEeiyW7NaN4qWdw" base_Element="_5v3ZFFJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5v4AIFJPEeiyW7NaN4qWdw" name="getTarget" method="_5wqqUFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5v4AI1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_5v4AIVJPEeiyW7NaN4qWdw" name="setTarget" method="_5wqqUlJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5v4AIlJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_5v4AJFJPEeiyW7NaN4qWdw" base_Element="_5v4AIFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5v4AJVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_5v4nMFJPEeiyW7NaN4qWdw" base_Element="_5v4AIVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5v4nMVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5v4nM1JPEeiyW7NaN4qWdw" base_Element="_5v4nMlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5v6cYlJPEeiyW7NaN4qWdw" base_Element="_5v6cYVJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5v6cY1JPEeiyW7NaN4qWdw" name="getTarget" method="_5wttolJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5v7DcFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_5v6cZFJPEeiyW7NaN4qWdw" name="setTarget" method="_5wttpFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5v6cZVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_5v7DcVJPEeiyW7NaN4qWdw" base_Element="_5v6cY1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5v7DclJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_5v7Dc1JPEeiyW7NaN4qWdw" base_Element="_5v6cZFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5v7DdFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5v84oFJPEeiyW7NaN4qWdw" base_Element="_5v8RklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5v84pFJPEeiyW7NaN4qWdw" base_Element="_5v84o1JPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5v9fsFJPEeiyW7NaN4qWdw" name="getTarget" method="_5wwJ4FJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5v9fs1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_5v9fsVJPEeiyW7NaN4qWdw" name="setTarget" method="_5wwJ4lJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5v9fslJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_5v-GwFJPEeiyW7NaN4qWdw" base_Element="_5v9fsFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5v-GwVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_5v-GwlJPEeiyW7NaN4qWdw" base_Element="_5v9fsVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5v-Gw1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5v_781JPEeiyW7NaN4qWdw" base_Element="_5v_78lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5wBxIlJPEeiyW7NaN4qWdw" base_Element="_5wBxIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5wCYMFJPEeiyW7NaN4qWdw" base_Element="_5wBxI1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_5wENYFJPEeiyW7NaN4qWdw" base_Property="_5wDmVVJPEeiyW7NaN4qWdw" siblings="_5xnFgFJPEeiyW7NaN4qWdw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5wENYVJPEeiyW7NaN4qWdw" base_Element="_5wDmVVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5wGCk1JPEeiyW7NaN4qWdw" base_Element="_5wGCklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5wH3xVJPEeiyW7NaN4qWdw" base_Element="_5wH3xFJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wIe0FJPEeiyW7NaN4qWdw" name="getTarget" method="_5xABgFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wIe01JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wIe0VJPEeiyW7NaN4qWdw" name="setTarget" method="_5xABglJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wIe0lJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_5wJF4FJPEeiyW7NaN4qWdw" base_Element="_5wIe0FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wJF4VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_5wJF4lJPEeiyW7NaN4qWdw" base_Element="_5wIe0VJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wJF41JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5wLiIFJPEeiyW7NaN4qWdw" base_Element="_5wK7FVJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wLiIVJPEeiyW7NaN4qWdw" name="getTarget" method="_5xDE0FJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wLiJFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wLiIlJPEeiyW7NaN4qWdw" name="setTarget" method="_5xDE0lJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wLiI1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_5wMJMFJPEeiyW7NaN4qWdw" base_Element="_5wLiIVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wMJMVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_5wMJMlJPEeiyW7NaN4qWdw" base_Element="_5wLiIlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wMJM1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5wOlcVJPEeiyW7NaN4qWdw" base_Element="_5wOlcFJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wOlclJPEeiyW7NaN4qWdw" name="getTarget" method="_5xGIJlJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wOldVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wOlc1JPEeiyW7NaN4qWdw" name="setTarget" method="_5xGvMVJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wOldFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_5wPMgFJPEeiyW7NaN4qWdw" base_Element="_5wOlclJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wPMgVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_5wPMglJPEeiyW7NaN4qWdw" base_Element="_5wOlc1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wPMg1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5wRBs1JPEeiyW7NaN4qWdw" base_Element="_5wRBslJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wRowFJPEeiyW7NaN4qWdw" name="getTarget" method="_5xJygFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wRow1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wRowVJPEeiyW7NaN4qWdw" name="setTarget" method="_5xJyglJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wRowlJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_5wSP0FJPEeiyW7NaN4qWdw" base_Element="_5wRowFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wSP0VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_5wSP0lJPEeiyW7NaN4qWdw" base_Element="_5wRowVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wSP01JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5wVTIFJPEeiyW7NaN4qWdw" base_Element="_5wUsFFJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wVTIlJPEeiyW7NaN4qWdw" name="getTarget" method="_5xNc4lJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wV6MFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wVTI1JPEeiyW7NaN4qWdw" name="setTarget" method="_5xNc5FJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wVTJFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_5wVTIVJPEeiyW7NaN4qWdw" base_Property="_5wUsFFJPEeiyW7NaN4qWdw" siblings="_5xvBUFJPEeiyW7NaN4qWdw" root="true"/>
  <UMLLabProfile:Annotations xmi:id="_5wV6MVJPEeiyW7NaN4qWdw" base_Element="_5wVTIlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wV6MlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_5wV6M1JPEeiyW7NaN4qWdw" base_Element="_5wVTI1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wV6NFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5waLoFJPEeiyW7NaN4qWdw" base_Element="_5wZkklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5waysVJPEeiyW7NaN4qWdw" base_Element="_5waysFJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_5wayslJPEeiyW7NaN4qWdw" name="getTarget" method="_5xS8dFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5wbZwFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_5ways1JPEeiyW7NaN4qWdw" name="setTarget" method="_5xS8dlJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_5waytFJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_5wbZwVJPEeiyW7NaN4qWdw" base_Element="_5wayslJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wbZwlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_5wbZw1JPEeiyW7NaN4qWdw" base_Element="_5ways1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_5wbZxFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5wj8oFJPEeiyW7NaN4qWdw" base_Element="_5wjVklJPEeiyW7NaN4qWdw"/>
  <uml:OpaqueBehavior xmi:id="_5wqqUFJPEeiyW7NaN4qWdw" name="getTarget" specification="_5v4AIFJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5wqqUVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return target;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5wqqUlJPEeiyW7NaN4qWdw" name="setTarget" specification="_5v4AIVJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5wqqU1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    <language>java</language>
    <body>if (target == null&#xD;
         || target instanceof Colony || target instanceof Tile) {&#xD;
         this.target = target;&#xD;
         this.colonyValue = (target instanceof Tile)&#xD;
             ? getColonyValue((Tile)target)&#xD;
             : -1;&#xD;
     }&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5wttolJPEeiyW7NaN4qWdw" name="getTarget" specification="_5v6cY1JPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5wtto1JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return target;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5wttpFJPEeiyW7NaN4qWdw" name="setTarget" specification="_5v6cZFJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5wttpVJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    <language>java</language>
    <body>if (target == null&#xD;
         || target instanceof Europe || target instanceof Colony) {&#xD;
         this.target = target;&#xD;
     }&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5wwJ4FJPEeiyW7NaN4qWdw" name="getTarget" specification="_5v9fsFJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5wwJ4VJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return target;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5wwJ4lJPEeiyW7NaN4qWdw" name="setTarget" specification="_5v9fsVJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5wwJ41JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    <language>java</language>
    <body>if (target == null || target instanceof Settlement) {&#xD;
         this.target = target;&#xD;
     }&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xABgFJPEeiyW7NaN4qWdw" name="getTarget" specification="_5wIe0FJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xABgVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return target;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xABglJPEeiyW7NaN4qWdw" name="setTarget" specification="_5wIe0VJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xABg1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    <language>java</language>
    <body>if (target == null || target instanceof Settlement) {&#xD;
         this.target = target;&#xD;
     }&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xDE0FJPEeiyW7NaN4qWdw" name="getTarget" specification="_5wLiIVJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xDE0VJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return target;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xDE0lJPEeiyW7NaN4qWdw" name="setTarget" specification="_5wLiIlJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xDE01JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    <language>java</language>
    <body>if (target == null&#xD;
         || target instanceof Colony || target instanceof Tile) {&#xD;
         this.target = target;&#xD;
         setTileImprovementPlan((target instanceof Tile)&#xD;
             ? getBestPlan((Tile)target)&#xD;
             : null);&#xD;
     }&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xGIJlJPEeiyW7NaN4qWdw" name="getTarget" specification="_5wOlclJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xGvMFJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return target;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xGvMVJPEeiyW7NaN4qWdw" name="setTarget" specification="_5wOlc1JPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xGvMlJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    <language>java</language>
    <body>if (target == null&#xD;
         || target instanceof Colony || target instanceof Europe&#xD;
         || target instanceof Unit) {&#xD;
         this.target = target;&#xD;
     }&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xJygFJPEeiyW7NaN4qWdw" name="getTarget" specification="_5wRowFJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xJygVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return this.target;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xJyglJPEeiyW7NaN4qWdw" name="setTarget" specification="_5wRowVJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xJyg1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    <language>java</language>
    <body>if (target == null&#xD;
         || target instanceof Settlement || target instanceof Tile) {&#xD;
         this.target = target;&#xD;
     }&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xNc4lJPEeiyW7NaN4qWdw" name="getTarget" specification="_5wVTIlJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xNc41JPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return target;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xNc5FJPEeiyW7NaN4qWdw" name="setTarget" specification="_5wVTI1JPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xNc5VJPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    <language>java</language>
    <body>if (target == null&#xD;
         || target instanceof Unit || target instanceof Settlement) {&#xD;
         this.target = target;&#xD;
         Unit unit = getUnit();&#xD;
         transportTarget = null;&#xD;
         if (unit.shouldTakeTransportTo(target)&#xD;
             &amp;&amp; (target instanceof Settlement)) {&#xD;
             Settlement settlement = (Settlement)target;&#xD;
             if (settlement.isConnectedPort()) {&#xD;
                 transportTarget = settlement.getTile()&#xD;
                     .getBestDisembarkTile(unit.getOwner());&#xD;
                 logger.finest(tag + &quot; chose dropoff &quot; + transportTarget&#xD;
                     + &quot; for attack on &quot;&#xD;
                     + ((settlement.canBombardEnemyShip()) ? &quot;hazardous&quot;&#xD;
                         : &quot;normal&quot;)&#xD;
                     + &quot; settlement &quot; + settlement.getName()&#xD;
                     + &quot;: &quot; + this);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xS8dFJPEeiyW7NaN4qWdw" name="getTarget" specification="_5wayslJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xS8dVJPEeiyW7NaN4qWdw" type="_5qGIQVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return target;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_5xS8dlJPEeiyW7NaN4qWdw" name="setTarget" specification="_5ways1JPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_5xS8d1JPEeiyW7NaN4qWdw" name="target" type="_5qGIQVJPEeiyW7NaN4qWdw"/>
    <language>java</language>
    <body>this.target = target;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_5xnFgVJPEeiyW7NaN4qWdw" base_Property="_5xnFgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5xnFglJPEeiyW7NaN4qWdw" base_Element="_5xnFgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_5xvBUVJPEeiyW7NaN4qWdw" base_Property="_5xvBUFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_5xvBUlJPEeiyW7NaN4qWdw" base_Element="_5xvBUFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yE_kFJPEeiyW7NaN4qWdw" base_Element="_5yEYgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yFmoFJPEeiyW7NaN4qWdw" base_Element="_5yE_kVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yFmo1JPEeiyW7NaN4qWdw" base_Element="_5yFmoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yGNsFJPEeiyW7NaN4qWdw" base_Element="_5yFmpFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yG0wFJPEeiyW7NaN4qWdw" base_Element="_5yGNsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yG0w1JPEeiyW7NaN4qWdw" base_Element="_5yG0wVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yHb0lJPEeiyW7NaN4qWdw" base_Element="_5yHb0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yIC4FJPEeiyW7NaN4qWdw" base_Element="_5yHb01JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yIp8FJPEeiyW7NaN4qWdw" base_Element="_5yIC4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yIp81JPEeiyW7NaN4qWdw" base_Element="_5yIp8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yJRAlJPEeiyW7NaN4qWdw" base_Element="_5yJRAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yJ4EFJPEeiyW7NaN4qWdw" base_Element="_5yJRA1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yKfIFJPEeiyW7NaN4qWdw" base_Element="_5yJ4EVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yLGMFJPEeiyW7NaN4qWdw" base_Element="_5yKfIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yLGM1JPEeiyW7NaN4qWdw" base_Element="_5yLGMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yMUUFJPEeiyW7NaN4qWdw" base_Element="_5yLtQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yMUU1JPEeiyW7NaN4qWdw" base_Element="_5yMUUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yM7YFJPEeiyW7NaN4qWdw" base_Element="_5yMUVFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yM7Y1JPEeiyW7NaN4qWdw" base_Element="_5yM7YVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yNiclJPEeiyW7NaN4qWdw" base_Element="_5yNicFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yOJgFJPEeiyW7NaN4qWdw" base_Element="_5yNic1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yOwkFJPEeiyW7NaN4qWdw" base_Element="_5yOJgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yOwk1JPEeiyW7NaN4qWdw" base_Element="_5yOwkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yPXoFJPEeiyW7NaN4qWdw" base_Element="_5yOwlFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yP-sFJPEeiyW7NaN4qWdw" base_Element="_5yPXoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yQlwFJPEeiyW7NaN4qWdw" base_Element="_5yP-sVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yQlw1JPEeiyW7NaN4qWdw" base_Element="_5yQlwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yRM0FJPEeiyW7NaN4qWdw" base_Element="_5yQlxFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yRz4FJPEeiyW7NaN4qWdw" base_Element="_5yRM0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5ySa8FJPEeiyW7NaN4qWdw" base_Element="_5yRz4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5ySa81JPEeiyW7NaN4qWdw" base_Element="_5ySa8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yTCAFJPEeiyW7NaN4qWdw" base_Element="_5ySa9FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yTpEFJPEeiyW7NaN4qWdw" base_Element="_5yTCAVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_5yUQIFJPEeiyW7NaN4qWdw" base_Element="_5yTpEVJPEeiyW7NaN4qWdw"/>
</xmi:XMI>
