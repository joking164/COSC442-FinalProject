<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_K_0TYFJPEeiyW7NaN4qWdw" name="serverAI">
    <eAnnotations xmi:id="_Lh5FsFJPEeiyW7NaN4qWdw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_Lh5FsVJPEeiyW7NaN4qWdw" source="codegen">
        <details xmi:id="_Lh5FslJPEeiyW7NaN4qWdw" key="codegenDirectory" value="/COSC442-FinalProject/src"/>
        <details xmi:id="_U8nTsFJPEeiyW7NaN4qWdw" key="AssociatedSourceCode" value="/COSC442-FinalProject/src/net/sf/freecol/server/ai/AIColony.java;4221197715/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/AIGoods.java;385561360/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/AIInGameInputHandler.java;3365527159/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/AIMain.java;1545225875/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/AIMessage.java;825118895/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/AIObject.java;3582764842/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/AIPlayer.java;338073286/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/AIUnit.java;1008625864/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/CacheEntryComparator.java;1918658314/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/Cargo.java;3610596937/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/ColonyPlan.java;2166781284/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/EuropeanAIPlayer.java;892480380/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/GoodsWish.java;791675274/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/NativeAIPlayer.java;1773436206/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/ProductionCache.java;2448965504/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/REFAIPlayer.java;4156958418/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/TileImprovementPlan.java;1282164215/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/TransportableAIObject.java;2963943612/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/ValuedAIObject.java;2971946810/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/Wish.java;2592453348/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/WorkLocationPlan.java;1589051221/1;/COSC442-FinalProject/src/net/sf/freecol/server/ai/WorkerWish.java;422666602/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_NMEvkFJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_NMEvkVJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_NMEvklJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_NMEvk1JPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_NMEvlFJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_NMEvlVJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_NMEvllJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_NMFWoFJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_NMFWoVJPEeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_NKYtgFJPEeiyW7NaN4qWdw" name="net">
      <packagedElement xmi:type="uml:Package" xmi:id="_NKYtgVJPEeiyW7NaN4qWdw" name="sf">
        <packagedElement xmi:type="uml:Package" xmi:id="_NKYtglJPEeiyW7NaN4qWdw" name="freecol">
          <packagedElement xmi:type="uml:Package" xmi:id="_NKYtg1JPEeiyW7NaN4qWdw" name="server">
            <packagedElement xmi:type="uml:Package" xmi:id="_NKaislJPEeiyW7NaN4qWdw" name="ai">
              <packagedElement xmi:type="uml:Package" xmi:id="_NKais1JPEeiyW7NaN4qWdw" name="mission">
                <packagedElement xmi:type="uml:Class" xmi:id="_OAeoAVJPEeiyW7NaN4qWdw" name="BuildColonyMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OAeoA1JPEeiyW7NaN4qWdw" name="DefendSettlementMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OAfPEVJPEeiyW7NaN4qWdw" name="IdleAtSettlementMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OAf2IVJPEeiyW7NaN4qWdw" name="Mission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OAgdMVJPEeiyW7NaN4qWdw" name="MissionaryMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OAhEQFJPEeiyW7NaN4qWdw" name="PioneeringMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OAhEQlJPEeiyW7NaN4qWdw" name="ScoutingMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OAhrUVJPEeiyW7NaN4qWdw" name="TransportMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OAiSYVJPEeiyW7NaN4qWdw" name="UnitSeekAndDestroyMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OAi5cVJPEeiyW7NaN4qWdw" name="WorkInsideColonyMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OAjggFJPEeiyW7NaN4qWdw" name="WishRealizationMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OCG_s1JPEeiyW7NaN4qWdw" name="UnitWanderHostileMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OCTM8VJPEeiyW7NaN4qWdw" name="CashInTreasureTrainMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OCT0AVJPEeiyW7NaN4qWdw" name="IndianBringGiftMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OCUbEVJPEeiyW7NaN4qWdw" name="IndianDemandMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OCUbE1JPEeiyW7NaN4qWdw" name="PrivateerMission"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_OCVCIVJPEeiyW7NaN4qWdw" name="UnitWanderMission"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_NL3UMFJPEeiyW7NaN4qWdw" name="goal">
                <packagedElement xmi:type="uml:Class" xmi:id="_OCSl4VJPEeiyW7NaN4qWdw" name="Goal"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NQeHYFJPEeiyW7NaN4qWdw" name="AIColony">
                <ownedComment xmi:id="_OLaFoFJPEeiyW7NaN4qWdw">
                  <body>Objects of this class contains AI-information for a single {@link Colony}.</body>
                </ownedComment>
                <generalization xmi:id="_OAvtwFJPEeiyW7NaN4qWdw" general="_NR_xYFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OI4WEFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMGCIFJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI4WEVJPEeiyW7NaN4qWdw" value="Logger.getLogger(AIColony.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI4WElJPEeiyW7NaN4qWdw" name="LIST_ELEMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI4WE1JPEeiyW7NaN4qWdw" value="&quot;ListElement&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI4WFFJPEeiyW7NaN4qWdw" name="FOREST_MINIMUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI49IFJPEeiyW7NaN4qWdw" value="1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI49IVJPEeiyW7NaN4qWdw" name="EXPORT_MINIMUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI49IlJPEeiyW7NaN4qWdw" value="10"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI49I1JPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMHQQFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OI5kMlJPEeiyW7NaN4qWdw" name="colonyPlan" visibility="private" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMH3UVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI5kM1JPEeiyW7NaN4qWdw" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI6LQFJPEeiyW7NaN4qWdw" name="exportGoods" isLeaf="true" type="_NQ4XEFJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMIeYVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI6LQlJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI6LQ1JPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI6yUFJPEeiyW7NaN4qWdw" name="wishes" isLeaf="true" type="_NWKfsFJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMJFcVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI6yUlJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI7ZYFJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI7ZZFJPEeiyW7NaN4qWdw" name="tileImprovementPlans" isLeaf="true" type="_NVvB4FJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMJFdFJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI8AcFJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI8AcVJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI8AdVJPEeiyW7NaN4qWdw" name="rearrangeTurn" visibility="private" type="_OAZvg1JPEeiyW7NaN4qWdw" association="_OMJsgVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI8AdlJPEeiyW7NaN4qWdw" value="new Turn(0)"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI8ngVJPEeiyW7NaN4qWdw" name="fullExport" visibility="private" isLeaf="true" isStatic="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMKTkVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI8nglJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI8ng1JPEeiyW7NaN4qWdw" value="new HashSet&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI8nhFJPEeiyW7NaN4qWdw" name="partExport" isLeaf="true" isStatic="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMK6oVJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OI9OkFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OI9OkVJPEeiyW7NaN4qWdw" key="ConstantWithGetter"/>
                  </eAnnotations>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI9OklJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI9Ok1JPEeiyW7NaN4qWdw" value="new HashSet&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI9OlFJPEeiyW7NaN4qWdw" name="pioneerComparator" visibility="private" isLeaf="true" isStatic="true" type="_OAKe8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMK6pFJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI91oFJPEeiyW7NaN4qWdw" value="new Comparator&lt;Unit>() {&#xD;&#xA;            private int score(Unit unit) {&#xD;&#xA;                return (unit == null) ? -1000 : unit.getPioneerScore();&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            @Override&#xD;&#xA;            public int compare(Unit u1, Unit u2) {&#xD;&#xA;                return score(u2) - score(u1);&#xD;&#xA;            }&#xD;&#xA;        }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI91oVJPEeiyW7NaN4qWdw" name="scoutComparator" visibility="private" isLeaf="true" isStatic="true" type="_OAKe8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMLhsVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI-csVJPEeiyW7NaN4qWdw" value="new Comparator&lt;Unit>() {&#xD;&#xA;            private int score(Unit unit) {&#xD;&#xA;                return (unit == null) ? -1000 : unit.getScoutScore();&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            @Override&#xD;&#xA;            public int compare(Unit u1, Unit u2) {&#xD;&#xA;                return score(u2) - score(u1);&#xD;&#xA;            }&#xD;&#xA;        }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI-cslJPEeiyW7NaN4qWdw" name="AI_GOODS_LIST_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI-cs1JPEeiyW7NaN4qWdw" value="AIGoods.getXMLElementTagName() + LIST_ELEMENT"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI_DwFJPEeiyW7NaN4qWdw" name="GOODS_WISH_LIST_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI_DwVJPEeiyW7NaN4qWdw" value="GoodsWish.getXMLElementTagName() + LIST_ELEMENT"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI_DwlJPEeiyW7NaN4qWdw" name="TILE_IMPROVEMENT_PLAN_LIST_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI_Dw1JPEeiyW7NaN4qWdw" value="TileImprovementPlan.getXMLElementTagName() + LIST_ELEMENT"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI_DxFJPEeiyW7NaN4qWdw" name="WORKER_WISH_LIST_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI_DxVJPEeiyW7NaN4qWdw" value="WorkerWish.getXMLElementTagName() + LIST_ELEMENT"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI_DxlJPEeiyW7NaN4qWdw" name="OLD_GOODS_WISH_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI_Dx1JPEeiyW7NaN4qWdw" value="GoodsWish.getXMLElementTagName() + &quot;Wish&quot; + LIST_ELEMENT"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI_q0FJPEeiyW7NaN4qWdw" name="OLD_TILE_IMPROVEMENT_PLAN_LIST_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI_q0VJPEeiyW7NaN4qWdw" value="&quot;tileimprovementplan&quot; + LIST_ELEMENT"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OI_q0lJPEeiyW7NaN4qWdw" name="OLD_WORKER_WISH_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OI_q01JPEeiyW7NaN4qWdw" value="WorkerWish.getXMLElementTagName() + &quot;Wish&quot; + LIST_ELEMENT"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_OELcQFJPEeiyW7NaN4qWdw" client="_NQeHYFJPEeiyW7NaN4qWdw" supplier="_OAICsVJPEeiyW7NaN4qWdw" contract="_OAICsVJPEeiyW7NaN4qWdw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKWVs1JPEeiyW7NaN4qWdw" name="AIColony" specification="_OAlVsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKWVtFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKWVtVJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKWVtlJPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, id);&#xD;
&#xD;
     this.colony = null;&#xD;
     this.colonyPlan = null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKWVt1JPEeiyW7NaN4qWdw" name="AIColony" specification="_OEMqYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKWVuFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKWVuVJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKWVulJPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(aiMain, colony.getId());&#xD;
&#xD;
     this.colony = colony;&#xD;
     colony.addPropertyChangeListener(Colony.REARRANGE_WORKERS, this);&#xD;
&#xD;
     uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKW8wFJPEeiyW7NaN4qWdw" name="AIColony" specification="_OEMqZlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKW8wVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKW8wlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKW8w1JPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(aiMain, (String)null);&#xD;
&#xD;
     readFromXMLElement(element);&#xD;
     addAIObjectWithId();&#xD;
&#xD;
     uninitialized = getColony() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKW8xFJPEeiyW7NaN4qWdw" name="AIColony" specification="_OENRc1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKW8xVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKW8xlJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKW8x1JPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(aiMain, (String)null);&#xD;
&#xD;
     readFromXML(xr);&#xD;
     addAIObjectWithId();&#xD;
&#xD;
     uninitialized = getColony() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKW8yFJPEeiyW7NaN4qWdw" name="getAIUnit" specification="_OEN4gFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKW8yVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKW8ylJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getAIMain().getAIUnit(unit);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKW8y1JPEeiyW7NaN4qWdw" name="getAIOwner" specification="_NQhxwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKW8zFJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getAIMain().getAIPlayer(colony.getOwner());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKW8zVJPEeiyW7NaN4qWdw" name="isBadlyDefended" specification="_NQhxwVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKW8zlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return colony.isBadlyDefended();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKW8z1JPEeiyW7NaN4qWdw" name="update" specification="_OEN4g1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKW80FJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>lb.add(&quot;\n  &quot;, colony.getName());&#xD;
     resetExports();&#xD;
     updateExportGoods(lb);&#xD;
     updateTileImprovementPlans(lb);&#xD;
     updateWishes(lb);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKXj0FJPEeiyW7NaN4qWdw" name="rearrangeWorkers" specification="_OEOfkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKXj0VJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKXj0lJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKXj01JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final AIMain aiMain = getAIMain();&#xD;
     Set&lt;AIUnit> result = new HashSet&lt;>();&#xD;
&#xD;
     // First check if it is collapsing.&#xD;
     if (colony.getUnitCount() &lt;= 0) {&#xD;
         if (!avertAutoDestruction()) return result;&#xD;
     }&#xD;
&#xD;
     // Skip this colony if it does not yet need rearranging.&#xD;
     final int turn = getGame().getTurn().getNumber();&#xD;
     if (rearrangeTurn.getNumber() > turn) {&#xD;
         if (colony.getCurrentlyBuilding() == null&#xD;
             &amp;&amp; colonyPlan != null&#xD;
             &amp;&amp; colonyPlan.getBestBuildableType() != null) {&#xD;
             logger.warning(colony.getName() + &quot; could be building but&quot;&#xD;
                 + &quot; is asleep until turn: &quot; + rearrangeTurn.getNumber()&#xD;
                 + &quot;( > &quot; + turn + &quot;)&quot;);&#xD;
         } else {&#xD;
             return result;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     final Tile tile = colony.getTile();&#xD;
     final Player player = colony.getOwner();&#xD;
     final Specification spec = getSpecification();&#xD;
     lb.add(&quot;\n  &quot;, colony.getName());&#xD;
&#xD;
     // For now, cap the rearrangement horizon, because confidence&#xD;
     // that we are triggering on all relevant changes is low.&#xD;
     int nextRearrange = 15;&#xD;
&#xD;
     // See if there are neighbouring LCRs to explore, or tiles&#xD;
     // to steal, or just unclaimed tiles (a neighbouring settlement&#xD;
     // might have disappeared or relinquished a tile).&#xD;
     // This needs to be done early so that new tiles can be&#xD;
     // included in any new colony plan.&#xD;
     exploreLCRs();&#xD;
     stealTiles(lb);&#xD;
     for (Tile t : tile.getSurroundingTiles(1)) {&#xD;
         if (!player.owns(t) &amp;&amp; player.canClaimForSettlement(t)) {&#xD;
             AIMessage.askClaimLand(t, this, 0);&#xD;
             if (player.owns(t)) lb.add(&quot;, claimed tile &quot;, t);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Update the colony plan.&#xD;
     if (colonyPlan == null) colonyPlan = new ColonyPlan(aiMain, colony);&#xD;
     colonyPlan.update();&#xD;
&#xD;
     // Now that we know what raw materials are available in the&#xD;
     // colony plan, set the current buildable, first backing out&#xD;
     // of anything currently being built that is now impossible.&#xD;
     // If a buildable is chosen, refine the worker allocation in&#xD;
     // the colony plan in case the required building materials&#xD;
     // have changed.&#xD;
     BuildableType oldBuild = colony.getCurrentlyBuilding();&#xD;
     BuildableType build = colonyPlan.getBestBuildableType();&#xD;
     if (build != oldBuild) {&#xD;
         List&lt;BuildableType> queue = new ArrayList&lt;>();&#xD;
         if (build != null) queue.add(build);&#xD;
         AIMessage.askSetBuildQueue(this, queue);&#xD;
         build = colony.getCurrentlyBuilding();&#xD;
     }&#xD;
     colonyPlan.refine(build, lb);&#xD;
&#xD;
     // Collect all potential workers from the colony and from the tile,&#xD;
     // being careful not to disturb existing non-colony missions.&#xD;
     // Note the special case of a unit aiming to build a colony on this&#xD;
     // tile, which happens regularly with the initial AI colony.&#xD;
     // Remember where the units came from.&#xD;
     List&lt;Unit> workers = colony.getUnitList();&#xD;
     List&lt;UnitWas> was = new ArrayList&lt;>();&#xD;
     for (Unit u : workers) {&#xD;
         Location loc = u.getLocation();&#xD;
         was.add(new UnitWas(u));&#xD;
     }&#xD;
     for (Unit u : tile.getUnitList()) {&#xD;
         if (!u.isPerson() || u.hasAbility(Ability.REF_UNIT)&#xD;
             || getAIUnit(u) == null) continue;&#xD;
         Mission m = getAIUnit(u).getMission();&#xD;
         if (m == null&#xD;
             || (m instanceof BuildColonyMission&#xD;
                 &amp;&amp; (Map.isSameLocation(m.getTarget(), tile)&#xD;
                     || colony.getUnitCount() &lt;= 1))&#xD;
             // FIXME: drop this when the AI stops building excessive armies&#xD;
             || m instanceof DefendSettlementMission&#xD;
             || m instanceof IdleAtSettlementMission&#xD;
             || m instanceof WorkInsideColonyMission&#xD;
             ) {&#xD;
             workers.add(u);&#xD;
             was.add(new UnitWas(u));&#xD;
         }&#xD;
     }&#xD;
     // Assign the workers according to the colony plan.&#xD;
     // ATM we just accept this assignment unless it failed, in&#xD;
     // which case restore original state.&#xD;
     EuropeanAIPlayer aiPlayer = (EuropeanAIPlayer)getAIOwner();&#xD;
     LogBuilder aw = new LogBuilder(256);&#xD;
     boolean preferScouts = aiPlayer.scoutsNeeded() > 0;&#xD;
     Colony scratch = colonyPlan.assignWorkers(new ArrayList&lt;>(workers),&#xD;
                                               preferScouts, aw);&#xD;
     if (scratch == null) {&#xD;
         lb.add(&quot;, failed to assign workers.&quot;);&#xD;
         rearrangeTurn = new Turn(turn + 1);&#xD;
         return result;&#xD;
     } else {&#xD;
         lb.add(&quot;, assigned &quot;, workers.size(), &quot; workers&quot;);&#xD;
     }&#xD;
&#xD;
     // Apply the arrangement, and give suitable missions to all units.&#xD;
     AIMessage.askRearrangeColony(this, workers, scratch);&#xD;
&#xD;
     // Emergency recovery if something broke and the colony is empty.&#xD;
     if (colony.getUnitCount() &lt;= 0) {&#xD;
         lb.add(&quot;, autodestruct detected&quot;);&#xD;
         String destruct = &quot;Autodestruct at &quot; + colony.getName()&#xD;
             + &quot; in &quot; + turn + &quot;:&quot;;&#xD;
         for (UnitWas uw : was) destruct += &quot;\n&quot; + uw;&#xD;
         logger.warning(destruct);&#xD;
         if (!avertAutoDestruction()) return result;&#xD;
     }&#xD;
&#xD;
     // Argh.  We may have chosen to build something we can no&#xD;
     // longer build due to some limitation.  Try to find a&#xD;
     // replacement, but do not re-refine as that process is&#xD;
     // sufficiently complex that we can not be confident that this&#xD;
     // will not loop indefinitely.  The compromise is to just&#xD;
     // rearrange next turn until we get out of this state.&#xD;
     if (build != null &amp;&amp; !colony.canBuild(build)) {&#xD;
         BuildableType newBuild = colonyPlan.getBestBuildableType();&#xD;
         lb.add(&quot;, reneged building &quot;, build.getSuffix(),&#xD;
                &quot; (&quot;, colony.getNoBuildReason(build, null), &quot;)&quot;);&#xD;
         List&lt;BuildableType> queue = new ArrayList&lt;>();&#xD;
         if (newBuild != null) queue.add(newBuild);&#xD;
         AIMessage.askSetBuildQueue(this, queue);&#xD;
         nextRearrange = 1;&#xD;
     }&#xD;
&#xD;
     // Now that all production has been stabilized, plan to&#xD;
     // rearrange when the warehouse hits a limit.&#xD;
     if (colony.getNetProductionOf(spec.getPrimaryFoodType()) &lt; 0) {&#xD;
         int net = colony.getNetProductionOf(spec.getPrimaryFoodType());&#xD;
         int when = colony.getGoodsCount(spec.getPrimaryFoodType()) / -net;&#xD;
         nextRearrange = Math.max(0, Math.min(nextRearrange, when-1));&#xD;
     }&#xD;
     int warehouse = colony.getWarehouseCapacity();&#xD;
     for (GoodsType g : spec.getStorableGoodsTypeList()) {&#xD;
         if (g.isFoodType()) continue;&#xD;
         int have = colony.getGoodsCount(g);&#xD;
         int net = colony.getAdjustedNetProductionOf(g);&#xD;
         if (net >= 0 &amp;&amp; (have >= warehouse || g.limitIgnored())) continue;&#xD;
         int when = (net &lt; 0) ? (have / -net - 1)&#xD;
             : (net > 0) ? ((warehouse - have) / net - 1)&#xD;
             : Integer.MAX_VALUE;&#xD;
         nextRearrange = Math.max(1, Math.min(nextRearrange, when));&#xD;
     }&#xD;
&#xD;
     // Return any units with the wrong mission&#xD;
     for (Unit u : colony.getUnitList()) {&#xD;
         final AIUnit aiu = getAIUnit(u);&#xD;
         WorkInsideColonyMission wic&#xD;
             = aiu.getMission(WorkInsideColonyMission.class);&#xD;
         if (wic == null) {&#xD;
             if (aiPlayer.getWorkInsideColonyMission(aiu, this) == null) {&#xD;
                 result.add(aiu); &#xD;
             } else {&#xD;
                 lb.add(&quot;, &quot;, aiu.getMission());&#xD;
                 aiu.dropTransport();&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Allocate pioneers if possible.&#xD;
     int tipSize = tileImprovementPlans.size();&#xD;
     if (tipSize > 0) {&#xD;
         List&lt;Unit> pioneers = new ArrayList&lt;>();&#xD;
         for (Unit u : tile.getUnitList()) {&#xD;
             if (u.getPioneerScore() >= 0) pioneers.add(u);&#xD;
         }&#xD;
         Collections.sort(pioneers, pioneerComparator);&#xD;
         for (Unit u : pioneers) {&#xD;
             final AIUnit aiu = getAIUnit(u);&#xD;
             Mission m = aiu.getMission();&#xD;
             Location oldTarget = (m == null) ? null : m.getTarget();&#xD;
&#xD;
             if ((m = aiPlayer.getPioneeringMission(aiu, null)) != null) {&#xD;
                 lb.add(&quot;, &quot;, aiu.getMission());&#xD;
                 aiPlayer.updateTransport(aiu, oldTarget, lb);&#xD;
                 if (--tipSize &lt;= 0) break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
             &#xD;
     for (Unit u : tile.getUnitList()) {&#xD;
         final AIUnit aiu = getAIUnit(u);&#xD;
         Mission m = aiu.getMission();&#xD;
         if (m instanceof BuildColonyMission&#xD;
             || m instanceof DefendSettlementMission&#xD;
             || m instanceof MissionaryMission&#xD;
             || m instanceof PioneeringMission&#xD;
             || m instanceof ScoutingMission&#xD;
             || m instanceof UnitSeekAndDestroyMission) continue;&#xD;
         Location oldTarget = (m == null) ? null : m.getTarget();&#xD;
&#xD;
         if (u.hasAbility(Ability.SPEAK_WITH_CHIEF)&#xD;
             &amp;&amp; (m = aiPlayer.getScoutingMission(aiu)) != null) {&#xD;
             lb.add(&quot;, &quot;, m);&#xD;
             aiPlayer.updateTransport(aiu, oldTarget, lb);&#xD;
             continue;&#xD;
         } else if (u.isDefensiveUnit()&#xD;
             &amp;&amp; (m = aiPlayer.getDefendSettlementMission(aiu, colony)) != null) {&#xD;
             lb.add(&quot;, &quot;, m);&#xD;
             aiPlayer.updateTransport(aiu, oldTarget, lb);&#xD;
             continue;&#xD;
         } else if (u.hasAbility(Ability.ESTABLISH_MISSION)&#xD;
             &amp;&amp; (m = aiPlayer.getMissionaryMission(aiu)) != null) {&#xD;
             lb.add(&quot;, &quot;, m);&#xD;
             aiPlayer.updateTransport(aiu, oldTarget, lb);&#xD;
             continue;&#xD;
         }&#xD;
         result.add(aiu);&#xD;
     }&#xD;
&#xD;
     // Log the changes.&#xD;
     build = colony.getCurrentlyBuilding();&#xD;
     String buildStr = (build != null) ? build.toString()&#xD;
         : ((build = colonyPlan.getBestBuildableType()) != null)&#xD;
         ? &quot;unexpected-null(&quot; + build + &quot;)&quot;&#xD;
         : &quot;expected-null&quot;;&#xD;
     lb.add(&quot;, building &quot;, buildStr, &quot;, population &quot;, colony.getUnitCount(),&#xD;
         &quot;, rearrange &quot;, nextRearrange, &quot;.\n&quot;);&#xD;
     lb.add(aw.toString());&#xD;
     lb.shrink(&quot;\n&quot;);&#xD;
     for (UnitWas uw : was) lb.add(&quot;\n  &quot;, uw);&#xD;
&#xD;
     // Set the next rearrangement turn.&#xD;
     rearrangeTurn = new Turn(turn + nextRearrange);&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKXj1FJPEeiyW7NaN4qWdw" name="resetExports" specification="_NQiY0VJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>final Specification spec = getSpecification();&#xD;
     final Player player = colony.getOwner();&#xD;
&#xD;
     fullExport.clear();&#xD;
     partExport.clear();&#xD;
     // Initialize the exportable sets.&#xD;
     // Luxury goods, non-raw materials (silver), and raw materials&#xD;
     // we do not produce (might have been gifted) should always be&#xD;
     // fully exported.  Other raw and manufactured goods should be&#xD;
     // exported only to the extent of not filling the warehouse.&#xD;
     for (GoodsType g : spec.getStorableGoodsTypeList()) {&#xD;
         if (!g.isFoodType()&#xD;
             &amp;&amp; !g.isBuildingMaterial()&#xD;
             &amp;&amp; !g.isMilitaryGoods()&#xD;
             &amp;&amp; !g.isTradeGoods()) {&#xD;
             if (g.isRawMaterial()) {&#xD;
                 partExport.add(g);&#xD;
             } else {&#xD;
                 fullExport.add(g);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     for (Role role : spec.getRoles()) {&#xD;
         if (role.isAvailableTo(player, spec.getDefaultUnitType(player))) {&#xD;
             for (AbstractGoods ag : role.getRequiredGoods()) {&#xD;
                 if (fullExport.contains(ag.getType())) {&#xD;
                     fullExport.remove(ag.getType());&#xD;
                     partExport.add(ag.getType());&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (colony.getOwner().getMarket() == null) {&#xD;
         // Do not export when there is no market!&#xD;
         for (GoodsType g : spec.getGoodsTypeList()) {&#xD;
             colony.getExportData(g).setExported(false);&#xD;
         }&#xD;
     } else {&#xD;
         int exportLevel = 4 * colony.getWarehouseCapacity() / 5;&#xD;
         for (GoodsType g : spec.getGoodsTypeList()) {&#xD;
             if (fullExport.contains(g)) {&#xD;
                 colony.getExportData(g).setExportLevel(0);&#xD;
                 colony.getExportData(g).setExported(true);&#xD;
             } else if (partExport.contains(g)) {&#xD;
                 colony.getExportData(g).setExportLevel(exportLevel);&#xD;
                 colony.getExportData(g).setExported(true);&#xD;
             } else {&#xD;
                 colony.getExportData(g).setExported(false);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKXj1VJPEeiyW7NaN4qWdw" name="exploreLCRs" specification="_NQiY0lJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>final Tile tile = colony.getTile();&#xD;
     List&lt;Unit> explorers = tile.getUnitList().stream()&#xD;
         .filter(u -> u.isPerson() &amp;&amp; (u.getType().getSkill() &lt;= 0&#xD;
                     || u.hasAbility(Ability.EXPERT_SCOUT)))&#xD;
         .sorted(scoutComparator).collect(Collectors.toList());&#xD;
     for (Tile t : tile.getSurroundingTiles(1)) {&#xD;
         if (t.hasLostCityRumour()) {&#xD;
             Direction direction = tile.getDirection(t);&#xD;
             for (;;) {&#xD;
                 if (explorers.isEmpty()) return;&#xD;
                 Unit u = explorers.remove(0);&#xD;
                 if (!u.getMoveType(t).isProgress()) continue;&#xD;
                 if (getAIUnit(u).move(direction)&#xD;
                     &amp;&amp; !t.hasLostCityRumour()) {&#xD;
                     u.setDestination(tile);&#xD;
                     break;&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKXj1lJPEeiyW7NaN4qWdw" name="stealTiles" specification="_OEOfllJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKXj11JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Specification spec = getSpecification();&#xD;
     final Tile tile = colony.getTile();&#xD;
     final Player player = colony.getOwner();&#xD;
     boolean hasDefender = any(tile.getUnitList(),&#xD;
         u -> u.isDefensiveUnit()&#xD;
             &amp;&amp; getAIUnit(u).getMission(DefendSettlementMission.class) != null);&#xD;
     if (!hasDefender) return;&#xD;
&#xD;
     // What goods are really needed?&#xD;
     List&lt;GoodsType> needed = spec.getRawBuildingGoodsTypeList().stream()&#xD;
         .filter(gt -> colony.getTotalProductionOf(gt) &lt;= 0)&#xD;
         .collect(Collectors.toList());&#xD;
&#xD;
     // If a tile can be stolen, do so if already at war with the&#xD;
     // owner or if it is the best one available.&#xD;
     UnitType unitType = spec.getDefaultUnitType(player);&#xD;
     Tile steal = null;&#xD;
     double score = 1.0;&#xD;
     for (Tile t : tile.getSurroundingTiles(1)) {&#xD;
         Player owner = t.getOwner();&#xD;
         if (owner == null || owner == player&#xD;
             || owner.isEuropean()&#xD;
             || !player.canClaimForSettlement(t)) continue;&#xD;
         if (owner.atWarWith(player)) {&#xD;
             if (AIMessage.askClaimLand(t, this, NetworkConstants.STEAL_LAND)&#xD;
                 &amp;&amp; player.owns(t)) {&#xD;
                 lb.add(&quot;, stole tile &quot;, t,&#xD;
                       &quot; from hostile &quot;, owner.getName());&#xD;
             }&#xD;
         } else {&#xD;
             // Pick the best tile to steal, considering mainly the&#xD;
             // building goods needed, but including food at a lower&#xD;
             // weight.&#xD;
             double s = needed.stream()&#xD;
                     .mapToInt(gt -> t.getPotentialProduction(gt, unitType)).sum()&#xD;
                 + spec.getFoodGoodsTypeList().stream()&#xD;
                     .mapToDouble(ft -> 0.1 * t.getPotentialProduction(ft, unitType)).sum();&#xD;
             if (s > score) {&#xD;
                 score = s;&#xD;
                 steal = t;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (steal != null) {&#xD;
         Player owner = steal.getOwner();&#xD;
         if (AIMessage.askClaimLand(steal, this, NetworkConstants.STEAL_LAND)&#xD;
             &amp;&amp; player.owns(steal)) {&#xD;
             lb.add(&quot;, stole tile &quot;, steal, &quot; (score = &quot;, score,&#xD;
                   &quot;) from &quot;, owner.getName());&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKXj2FJPEeiyW7NaN4qWdw" name="avertAutoDestruction" specification="_NQi_4FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKXj2VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>LogBuilder lb = new LogBuilder(64);&#xD;
     lb.add(&quot;Colony &quot;, colony.getName(), &quot; rearrangement leaves no units, &quot;,&#xD;
         colony.getTile().getUnitCount(), &quot; available:&quot;);&#xD;
     for (Unit u : colony.getTile().getUnitList()) lb.add(&quot; &quot;, u);&#xD;
     List&lt;GoodsType> libertyGoods = getSpecification()&#xD;
         .getLibertyGoodsTypeList();&#xD;
     out: for (Unit u : colony.getTile().getUnitList()) {&#xD;
         if (!u.isPerson()) continue;&#xD;
         for (WorkLocation wl : colony.getAvailableWorkLocations()) {&#xD;
             if (!wl.canAdd(u)) continue;&#xD;
             for (GoodsType type : libertyGoods) {&#xD;
                 if (wl.getPotentialProduction(type, u.getType()) > 0&#xD;
                     &amp;&amp; AIMessage.askWork(getAIUnit(u), wl)&#xD;
                     &amp;&amp; u.getLocation() == wl) {&#xD;
                     AIMessage.askChangeWorkType(getAIUnit(u), type);&#xD;
                     lb.add(&quot;, averts destruction with &quot;, u);&#xD;
                     break out;&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     lb.log(logger, Level.WARNING);&#xD;
     return colony.getUnitCount() > 0;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKXj2lJPEeiyW7NaN4qWdw" name="stopUsing" specification="_OEPGoFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKXj21JPEeiyW7NaN4qWdw" name="wl" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>for (Unit u : wl.getUnitList()) {&#xD;
         AIMessage.askPutOutsideColony(getAIUnit(u));&#xD;
     }&#xD;
     if (colony.getUnitCount() &lt;= 0) avertAutoDestruction();&#xD;
     rearrangeTurn = new Turn(getGame().getTurn().getNumber());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKXj3FJPEeiyW7NaN4qWdw" name="clearExportGoods" specification="_NQi_4lJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>synchronized (exportGoods) {&#xD;
         exportGoods.clear();&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKXj3VJPEeiyW7NaN4qWdw" name="addExportGoods" specification="_OAq1QFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKXj3lJPEeiyW7NaN4qWdw" name="aiGoods" type="_NQ4XEFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>synchronized (exportGoods) {&#xD;
         exportGoods.add(aiGoods);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKXj31JPEeiyW7NaN4qWdw" name="setExportGoods" specification="_OEPGolJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKXj4FJPEeiyW7NaN4qWdw" name="aiGoods" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>clearExportGoods();&#xD;
     synchronized (exportGoods) {&#xD;
         exportGoods.addAll(aiGoods);&#xD;
     }&#xD;
     sortExportGoods();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYK4FJPEeiyW7NaN4qWdw" name="sortExportGoods" specification="_NQjm8FJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>synchronized (exportGoods) {&#xD;
         Collections.sort(exportGoods);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYK4VJPEeiyW7NaN4qWdw" name="removeExportGoods" specification="_OAq1QlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYK4lJPEeiyW7NaN4qWdw" name="ag" type="_NQ4XEFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>synchronized (exportGoods) {&#xD;
         while (exportGoods.remove(ag)) {} /* Do nothing here */&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYK41JPEeiyW7NaN4qWdw" name="dropExportGoods" specification="_OArcUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYK5FJPEeiyW7NaN4qWdw" name="ag" type="_NQ4XEFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>TransportMission tm;&#xD;
     if (ag.getTransport() != null&#xD;
         &amp;&amp; (tm = ag.getTransport().getMission(TransportMission.class)) != null) {&#xD;
         tm.removeTransportable(ag);&#xD;
     }&#xD;
     removeExportGoods(ag);&#xD;
     ag.dispose();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYK5VJPEeiyW7NaN4qWdw" name="goodsLog" specification="_OEPtsVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYK5lJPEeiyW7NaN4qWdw" name="ag" type="_NQ4XEFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKYK51JPEeiyW7NaN4qWdw" name="action">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKYK6FJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>Goods goods = (ag == null) ? null : ag.getGoods();&#xD;
     int amount = (goods == null) ? -1 : goods.getAmount();&#xD;
     String type = (goods == null) ? &quot;(null)&quot;&#xD;
         : ag.getGoods().getType().getSuffix();&#xD;
     lb.add(&quot;, &quot;, action, &quot; &quot;, ((ag == null) ? &quot;(null)&quot; : ag.getId()),&#xD;
         &quot; &quot;, ((amount >= GoodsContainer.CARGO_SIZE) ? &quot;full &quot;&#xD;
             : Integer.toString(amount) + &quot; &quot;), type);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYK6VJPEeiyW7NaN4qWdw" name="updateExportGoods" specification="_OEQUwVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYK6lJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>if (colony.hasAbility(Ability.EXPORT)) {&#xD;
         for (AIGoods aig : getExportGoods()) {&#xD;
             goodsLog(aig, &quot;customizes&quot;, lb);&#xD;
             dropExportGoods(aig);&#xD;
         }&#xD;
&#xD;
     } else { // does not have a customs house&#xD;
         for (AIGoods aig : getExportGoods()) {&#xD;
             if (aig == null) {&#xD;
                 removeExportGoods(aig);&#xD;
             } else if (aig.checkIntegrity(false) &lt; 0) {&#xD;
                 goodsLog(aig, &quot;reaps&quot;, lb);&#xD;
                 dropExportGoods(aig);&#xD;
             } else if (aig.getGoods().getLocation() != colony) {&#xD;
                 // On its way, no longer of interest here, but do&#xD;
                 // not dispose as that will happen when delivered.&#xD;
                 goodsLog(aig, &quot;sends&quot;, lb);&#xD;
                 removeExportGoods(aig);&#xD;
             } else if (colony.getAdjustedNetProductionOf(aig.getGoods()&#xD;
                     .getType()) &lt; 0) {&#xD;
                 goodsLog(aig, &quot;needs&quot;, lb);&#xD;
                 dropExportGoods(aig);&#xD;
             }&#xD;
         }&#xD;
&#xD;
         // Create a new batch of exported goods.&#xD;
         final Europe europe = colony.getOwner().getEurope();&#xD;
         final int capacity = colony.getWarehouseCapacity();&#xD;
         List&lt;AIGoods> newAIGoods = new ArrayList&lt;>();&#xD;
         outer: for (GoodsType gt : getSpecification().getGoodsTypeList()) {&#xD;
             if (colony.getAdjustedNetProductionOf(gt) &lt; 0) continue;&#xD;
             int count = colony.getGoodsCount(gt);&#xD;
             int exportAmount = (fullExport.contains(gt))&#xD;
                 ? count&#xD;
                 : (partExport.contains(gt))&#xD;
                 ? count - colony.getExportData(gt).getExportLevel()&#xD;
                 : -1;&#xD;
             if (exportAmount &lt;= 0) continue;&#xD;
             int priority = (exportAmount >= capacity)&#xD;
                 ? TransportableAIObject.IMPORTANT_DELIVERY&#xD;
                 : (exportAmount >= GoodsContainer.CARGO_SIZE)&#xD;
                 ? TransportableAIObject.FULL_DELIVERY&#xD;
                 : 0;&#xD;
&#xD;
             // Find all existing AI goods of type gt, update&#xD;
             // amount of goods to export to that present in the&#xD;
             // colony, and drop exports of trivial amounts.  If&#xD;
             // existing goods are found we do not continue with&#xD;
             // this goods type but add the updated goods to the&#xD;
             // new goods batch.&#xD;
             for (AIGoods aig : getExportGoods()) {&#xD;
                 Goods goods = aig.getGoods();&#xD;
                 if (goods.getType() == gt) {&#xD;
                     int amount = goods.getAmount();&#xD;
                     if (amount &lt;= exportAmount) {&#xD;
                         goods.setAmount(exportAmount);&#xD;
                         goodsLog(aig, &quot;updates&quot;, lb);&#xD;
                         newAIGoods.add(aig);&#xD;
                     } else {&#xD;
                         if (exportAmount >= EXPORT_MINIMUM) {&#xD;
                             goods.setAmount(exportAmount);&#xD;
                             goodsLog(aig, &quot;clamps&quot;, lb);&#xD;
                             newAIGoods.add(aig);&#xD;
                         } else {&#xD;
                             goodsLog(aig, &quot;unexports&quot;, lb);&#xD;
                             dropExportGoods(aig);&#xD;
                         }&#xD;
                     }&#xD;
                     continue outer;&#xD;
                 }&#xD;
             }&#xD;
             // Export new goods, to Europe if possible.&#xD;
             Location destination = (colony.getOwner().canTrade(gt))&#xD;
                 ? europe : null;&#xD;
             if (exportAmount >= EXPORT_MINIMUM) {&#xD;
                 AIGoods newGoods = new AIGoods(getAIMain(), colony, gt,&#xD;
                                                exportAmount, destination);&#xD;
                 newGoods.setTransportPriority(priority);&#xD;
                 newAIGoods.add(newGoods);&#xD;
                 goodsLog(newGoods, &quot;makes&quot;, lb);&#xD;
             }&#xD;
         }&#xD;
         setExportGoods(newAIGoods);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYK61JPEeiyW7NaN4qWdw" name="addWish" specification="_OAsqcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYK7FJPEeiyW7NaN4qWdw" name="wish" type="_NWKfsFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>wishes.add(wish);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYx8FJPEeiyW7NaN4qWdw" name="completeWish" specification="_OEQUw1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYx8VJPEeiyW7NaN4qWdw" name="wish" type="_NWKfsFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKYx8lJPEeiyW7NaN4qWdw" name="reason">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKYx81JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKYx9FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!wishes.remove(wish)) {&#xD;
         lb.add(&quot;, &quot;, reason, &quot; not wished for at &quot;, colony.getName());&#xD;
         return false;&#xD;
     }&#xD;
     ((EuropeanAIPlayer)getAIOwner()).completeWish(wish);&#xD;
     lb.add(&quot;, &quot;, reason, &quot; fulfills at &quot;, colony.getName());&#xD;
     wish.dispose();&#xD;
     requestRearrange();&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYx9VJPEeiyW7NaN4qWdw" name="completeWish" specification="_OEQ70VJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYx9lJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKYx91JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKYx-FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>boolean ret = false;&#xD;
     int i = 0;&#xD;
     while (i &lt; wishes.size()) {&#xD;
         if (wishes.get(i) instanceof GoodsWish) {&#xD;
             GoodsWish gw = (GoodsWish)wishes.get(i);&#xD;
             if (gw.satisfiedBy(goods)&#xD;
                 &amp;&amp; completeWish(gw, goods.toString(), lb)) {&#xD;
                 ret = true;&#xD;
                 continue;&#xD;
             }&#xD;
         }&#xD;
         i++;&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYx-VJPEeiyW7NaN4qWdw" name="completeWish" specification="_OERi4FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYx-lJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKYx-1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKYx_FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>boolean ret = false;&#xD;
     int i = 0;&#xD;
     while (i &lt; wishes.size()) {&#xD;
         if (wishes.get(i) instanceof WorkerWish) {&#xD;
             WorkerWish ww = (WorkerWish)wishes.get(i);&#xD;
             if (ww.satisfiedBy(unit)&#xD;
                 &amp;&amp; completeWish(ww, unit.toShortString(), lb)) {&#xD;
                 ret = true;&#xD;
                 continue;&#xD;
             }&#xD;
         }&#xD;
         i++;&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYx_VJPEeiyW7NaN4qWdw" name="completeWish" specification="_OERi5FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYx_lJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKYx_1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKYyAFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (t instanceof AIGoods) {&#xD;
         return completeWish((Goods)t.getTransportLocatable(), lb);&#xD;
     } else if (t instanceof AIUnit) {&#xD;
         AIUnit aiUnit = (AIUnit)t;&#xD;
         WishRealizationMission wm&#xD;
             = aiUnit.getMission(WishRealizationMission.class);&#xD;
         if (wm != null &amp;&amp; Map.isSameLocation(wm.getTarget(), colony)) {&#xD;
             lb.add(&quot;, at wish-target&quot;);&#xD;
             completeWish(aiUnit.getUnit(), lb);&#xD;
             aiUnit.changeMission(null);&#xD;
             return true;&#xD;
         }&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYyAVJPEeiyW7NaN4qWdw" name="getGoodsWishes" specification="_NQk1EFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYyAlJPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKYyA1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;GoodsWish> result = new ArrayList&lt;>();&#xD;
     for (Wish wish : wishes) {&#xD;
         if (wish instanceof GoodsWish) {&#xD;
             result.add((GoodsWish) wish);&#xD;
         }&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKYyBFJPEeiyW7NaN4qWdw" name="getWorkerWishes" specification="_NQlcIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKYyBVJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKYyBlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;WorkerWish> result = new ArrayList&lt;>();&#xD;
     for (Wish wish : wishes) {&#xD;
         if (wish instanceof WorkerWish) {&#xD;
             result.add((WorkerWish) wish);&#xD;
         }&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKZZAFJPEeiyW7NaN4qWdw" name="requireGoodsWish" specification="_OESJ8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKZZAVJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKZZAlJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKZZA1JPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKZZBFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>GoodsWish gw = (GoodsWish)find(wishes, w -> w instanceof GoodsWish&#xD;
         &amp;&amp; ((GoodsWish)w).getGoodsType() == type);&#xD;
     if (gw != null) {&#xD;
         gw.update(type, amount, gw.getValue() + 1);&#xD;
         lb.add(&quot;, update &quot;, gw);&#xD;
     } else {&#xD;
         gw = new GoodsWish(getAIMain(), colony, value, amount, type);&#xD;
         wishes.add(gw);&#xD;
         lb.add(&quot;, add &quot;, gw);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKZZBVJPEeiyW7NaN4qWdw" name="requireWorkerWish" specification="_OESxAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKZZBlJPEeiyW7NaN4qWdw" name="type" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKZZB1JPEeiyW7NaN4qWdw" name="expertNeeded">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKZZCFJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKZZCVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>WorkerWish ww = (WorkerWish)find(wishes, w -> w instanceof WorkerWish&#xD;
         &amp;&amp; ((WorkerWish)w).getUnitType() == type);&#xD;
     if (ww != null) {&#xD;
         ww.update(type, expertNeeded, ww.getValue() + 1);&#xD;
         lb.add(&quot;, update &quot;, ww);&#xD;
     } else {&#xD;
         ww = new WorkerWish(getAIMain(), colony, value, type, expertNeeded);&#xD;
         wishes.add(ww);&#xD;
         lb.add(&quot;, add &quot;, ww);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKZZClJPEeiyW7NaN4qWdw" name="updateWishes" specification="_OESxBVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKZZC1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>updateWorkerWishes(lb);&#xD;
     updateGoodsWishes(lb);&#xD;
     Collections.sort(wishes);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKZZDFJPEeiyW7NaN4qWdw" name="updateWorkerWishes" specification="_OETYEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKZZDVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Specification spec = getSpecification();&#xD;
     final int baseValue = 25;&#xD;
     final int priorityMax = 50;&#xD;
     final int priorityDecay = 5;&#xD;
     final int multipleBonus = 5;&#xD;
     final int multipleMax = 5;&#xD;
&#xD;
     // For every non-expert, request expert replacement.&#xD;
     // Prioritize by lowest net production among the goods that are&#xD;
     // being produced by units (note that we have to traverse the work&#xD;
     // locations/unit-lists, rather than just check for non-zero&#xD;
     // production because it could be in balance).&#xD;
     // Add some weight when multiple cases of the same expert are&#xD;
     // needed, rather than generating heaps of wishes.&#xD;
     List&lt;GoodsType> producing = new ArrayList&lt;>();&#xD;
     for (WorkLocation wl : colony.getAvailableWorkLocations()) {&#xD;
         for (Unit u : wl.getUnitList()) {&#xD;
             GoodsType work = u.getWorkType();&#xD;
             if (work != null) {&#xD;
                 work = work.getStoredAs();&#xD;
                 if (!producing.contains(work)) producing.add(work);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     Collections.sort(producing, new Comparator&lt;GoodsType>() {&#xD;
             @Override&#xD;
             public int compare(GoodsType g1, GoodsType g2) {&#xD;
                 return colony.getAdjustedNetProductionOf(g1)&#xD;
                     - colony.getAdjustedNetProductionOf(g2);&#xD;
             }&#xD;
         });&#xD;
     TypeCountMap&lt;UnitType> experts = new TypeCountMap&lt;>();&#xD;
     for (Unit unit : colony.getUnitList()) {&#xD;
         GoodsType goods = unit.getWorkType();&#xD;
         UnitType expert = (goods == null&#xD;
             || goods == unit.getType().getExpertProduction()) ? null&#xD;
             : spec.getExpertForProducing(goods);&#xD;
         if (expert != null) {&#xD;
             experts.incrementCount(expert, 1);&#xD;
         }&#xD;
     }&#xD;
     for (UnitType expert : experts.keySet()) {&#xD;
         GoodsType goods = expert.getExpertProduction();&#xD;
         int value = baseValue&#xD;
             + Math.max(0, priorityMax&#xD;
                 - priorityDecay * producing.indexOf(goods))&#xD;
             + (Math.min(multipleMax, experts.getCount(expert) - 1)&#xD;
                 * multipleBonus);&#xD;
         requireWorkerWish(expert, true, value, lb);&#xD;
     }&#xD;
&#xD;
     // Request population increase if no worker wishes and the bonus&#xD;
     // can take it.&#xD;
     if (colonyPlan != null&#xD;
         &amp;&amp; experts.isEmpty()&#xD;
         &amp;&amp; colony.governmentChange(colony.getUnitCount() + 1) >= 0) {&#xD;
         boolean needFood = colony.getFoodProduction()&#xD;
             &lt;= colony.getFoodConsumption()&#xD;
             + colony.getOwner().getMaximumFoodConsumption();&#xD;
         // Choose expert for best work location plan&#xD;
         final Player owner = colony.getOwner();&#xD;
         UnitType expert = spec.getDefaultUnitType(owner);&#xD;
         for (WorkLocationPlan plan : (needFood) ? colonyPlan.getFoodPlans()&#xD;
                  : colonyPlan.getWorkPlans()) {&#xD;
             WorkLocation location = plan.getWorkLocation();&#xD;
             if (!location.canBeWorked()) continue;&#xD;
             expert = spec.getExpertForProducing(plan.getGoodsType());&#xD;
             break;&#xD;
         }&#xD;
         requireWorkerWish(expert, false, 50, lb);&#xD;
     }&#xD;
&#xD;
     // FIXME: check for students&#xD;
     // FIXME: add missionaries&#xD;
&#xD;
     // Improve defence.&#xD;
     if (isBadlyDefended()) {&#xD;
         UnitType bestDefender = colony.getBestDefenderType();&#xD;
         if (bestDefender != null) {&#xD;
             requireWorkerWish(bestDefender, true, 100, lb);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKZZDlJPEeiyW7NaN4qWdw" name="updateGoodsWishes" specification="_OETYElJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKZZD1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Specification spec = getSpecification();&#xD;
     int goodsWishValue = 50;&#xD;
&#xD;
     // Request goods.&#xD;
     // FIXME: improve heuristics&#xD;
     TypeCountMap&lt;GoodsType> required = new TypeCountMap&lt;>();&#xD;
&#xD;
     // Add building materials.&#xD;
     if (colony.getCurrentlyBuilding() != null) {&#xD;
         for (AbstractGoods ag : colony.getCurrentlyBuilding()&#xD;
                  .getRequiredGoods()) {&#xD;
             if (colony.getAdjustedNetProductionOf(ag.getType()) &lt;= 0) {&#xD;
                 required.incrementCount(ag.getType(), ag.getAmount());&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Add materials required to improve tiles.&#xD;
     for (TileImprovementPlan plan : tileImprovementPlans) {&#xD;
         Role role = plan.getType().getRequiredRole();&#xD;
         if (role == null) continue;&#xD;
         for (AbstractGoods ag : role.getRequiredGoods()) {&#xD;
             required.incrementCount(ag.getType(), ag.getAmount());&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Add raw materials for buildings.&#xD;
     for (WorkLocation workLocation : colony.getCurrentWorkLocations()) {&#xD;
         if (workLocation instanceof Building) {&#xD;
             Building building = (Building) workLocation;&#xD;
             List&lt;AbstractGoods> inputs = building.getInputs();&#xD;
             if (!inputs.isEmpty()) {&#xD;
                 ProductionInfo info = colony.getProductionInfo(building);&#xD;
                 if (!info.hasMaximumProduction()) {&#xD;
                     for (AbstractGoods goods : inputs) {&#xD;
                         // FIXME: find better heuristics&#xD;
                         required.incrementCount(goods.getType(), 100);&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Add breedable goods&#xD;
     for (GoodsType g : spec.getGoodsTypeList()) {&#xD;
         if (g.isBreedable()&#xD;
             &amp;&amp; colony.getGoodsCount(g) &lt; g.getBreedingNumber()) {&#xD;
             required.incrementCount(g, g.getBreedingNumber());&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Add materials required to build military equipment,&#xD;
     // but make sure there is a unit present that can use it.&#xD;
     if (isBadlyDefended()) {&#xD;
         Role role = spec.getMilitaryRoles().get(0);&#xD;
         Player owner = colony.getOwner();&#xD;
         for (Unit unit : colony.getTile().getUnitList()) {&#xD;
             if (!unit.roleIsAvailable(role)&#xD;
                 || (!unit.hasDefaultRole()&#xD;
                     &amp;&amp; !Role.isCompatibleWith(role, unit.getRole())))&#xD;
                 continue;&#xD;
             for (AbstractGoods ag : role.getRequiredGoods()) {&#xD;
                 required.incrementCount(ag.getType(), ag.getAmount());&#xD;
             }&#xD;
             break;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Drop wishes that are no longer needed.&#xD;
     int i = 0;&#xD;
     while (i &lt; wishes.size()) {&#xD;
         if (wishes.get(i) instanceof GoodsWish) {&#xD;
             GoodsWish g = (GoodsWish)wishes.get(i);&#xD;
             GoodsType t = g.getGoodsType();&#xD;
             if (required.getCount(t) &lt; colony.getGoodsCount(t)) {&#xD;
                 completeWish(g, &quot;redundant&quot;, lb);&#xD;
                 continue;&#xD;
             }&#xD;
         }&#xD;
         i++;&#xD;
     }&#xD;
&#xD;
     // Require wishes for what is missing.&#xD;
     for (GoodsType type : required.keySet()) {&#xD;
         GoodsType requiredType = type;&#xD;
         while (requiredType != null) {&#xD;
             if (requiredType.isStorable()) break;&#xD;
             requiredType = requiredType.getInputType();&#xD;
         }&#xD;
         if (requiredType == null) continue;&#xD;
         int amount = Math.min(colony.getWarehouseCapacity(),&#xD;
             (required.getCount(type)&#xD;
                 - colony.getGoodsCount(requiredType)));&#xD;
         if (amount > 0) {&#xD;
             int value = goodsWishValue;&#xD;
             if (colony.canProduce(requiredType)) value /= 10;&#xD;
             requireGoodsWish(requiredType, amount, value, lb);&#xD;
         }&#xD;
     }&#xD;
&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKZZEFJPEeiyW7NaN4qWdw" name="removeTileImprovementPlan" specification="_OAt4kFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKZZEVJPEeiyW7NaN4qWdw" name="plan" type="_NVvB4FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKZZElJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return tileImprovementPlans.remove(plan);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKaAEFJPEeiyW7NaN4qWdw" name="getPlanFor" specification="_OET_IFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKaAEVJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKaAElJPEeiyW7NaN4qWdw" name="plans" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKaAE1JPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return find(plans, tip -> tip.getTarget() == tile);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKaAFFJPEeiyW7NaN4qWdw" name="updateTileImprovementPlans" specification="_OEUmMVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKaAFVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>List&lt;TileImprovementPlan> newPlans = new ArrayList&lt;>();&#xD;
     for (WorkLocation wl : colony.getAvailableWorkLocations()) {&#xD;
         if (!(wl instanceof ColonyTile)) continue;&#xD;
         ColonyTile colonyTile = (ColonyTile) wl;&#xD;
         Tile workTile = colonyTile.getWorkTile();&#xD;
         if (workTile.getOwningSettlement() != colony&#xD;
             || getPlanFor(workTile, newPlans) != null) continue;&#xD;
&#xD;
         // Require food for the center tile, but otherwise insist&#xD;
         // the tile is being used, and try to improve the&#xD;
         // production that is underway.&#xD;
         GoodsType goodsType = null;&#xD;
         if (colonyTile.isColonyCenterTile()) {&#xD;
             for (AbstractGoods ag : colonyTile.getProduction()) {&#xD;
                 if (ag.getType().isFoodType()) {&#xD;
                     goodsType = ag.getType();&#xD;
                     break;&#xD;
                 }&#xD;
             }&#xD;
         } else {&#xD;
             if (colonyTile.isEmpty()) continue;&#xD;
             goodsType = colonyTile.getCurrentWorkType();&#xD;
         }&#xD;
         if (goodsType == null) continue;&#xD;
&#xD;
         TileImprovementPlan plan = getPlanFor(workTile,&#xD;
                                               tileImprovementPlans);&#xD;
         if (plan == null) {&#xD;
             TileImprovementType type = TileImprovementPlan&#xD;
                 .getBestTileImprovementType(workTile, goodsType);&#xD;
             if (type != null) {&#xD;
                 plan = new TileImprovementPlan(getAIMain(), workTile,&#xD;
                     type, type.getImprovementValue(workTile, goodsType));&#xD;
             }&#xD;
         } else {&#xD;
             if (!plan.update(goodsType)) plan = null;&#xD;
         }&#xD;
         if (plan == null) continue;&#xD;
&#xD;
         // Defend against clearing the last forested tile.&#xD;
         TileType change = plan.getType().getChange(workTile.getType());&#xD;
         if (change != null&#xD;
             &amp;&amp; !change.isForested()&#xD;
             &amp;&amp; !colonyTile.isColonyCenterTile()&#xD;
             &amp;&amp; colony.getAvailableWorkLocations().stream()&#xD;
                 .filter(ct -> ct instanceof ColonyTile&#xD;
                     &amp;&amp; !((ColonyTile)ct).isColonyCenterTile()&#xD;
                     &amp;&amp; ((ColonyTile)ct).getWorkTile().isForested())&#xD;
                 .count() &lt;= FOREST_MINIMUM) continue;&#xD;
&#xD;
         newPlans.add(plan); // Otherwise add the plan.&#xD;
     }&#xD;
     tileImprovementPlans.clear();&#xD;
     tileImprovementPlans.addAll(newPlans);&#xD;
     Collections.sort(tileImprovementPlans);&#xD;
     if (!tileImprovementPlans.isEmpty()) {&#xD;
         lb.add(&quot;, improve:&quot;);&#xD;
         for (TileImprovementPlan tip : tileImprovementPlans) {&#xD;
             lb.add(&quot; &quot;, tip.getTarget(), &quot;-&quot;, tip.getType().getSuffix());&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKaAFlJPEeiyW7NaN4qWdw" name="getPlannedBuildableTypes" specification="_NQmqQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKaAF1JPEeiyW7NaN4qWdw" type="_OAQlkVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKaAGFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (colonyPlan == null) ? Collections.&lt;BuildableType>emptyList()&#xD;
         : colonyPlan.getBuildableTypes();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKaAGVJPEeiyW7NaN4qWdw" name="planToString" specification="_NQmqQ1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKaAGlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (colonyPlan == null) return &quot;No plan.&quot;;&#xD;
&#xD;
     LogBuilder lb = new LogBuilder(256);&#xD;
     lb.add(colonyPlan, &quot;\n\nTILE IMPROVEMENTS:\n&quot;);&#xD;
     for (TileImprovementPlan tip : getTileImprovementPlans()) {&#xD;
         lb.add(tip, &quot;\n&quot;);&#xD;
     }&#xD;
     lb.add(&quot;\n\nWISHES:\n&quot;);&#xD;
     for (Wish w : getWishes()) lb.add(w, &quot;\n&quot;);&#xD;
     lb.add(&quot;\n\nEXPORT GOODS:\n&quot;);&#xD;
     for (AIGoods aig : getExportGoods()) lb.add(aig, &quot;\n&quot;);&#xD;
     return lb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKaAG1JPEeiyW7NaN4qWdw" name="propertyChange" specification="_OEVNQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKaAHFJPEeiyW7NaN4qWdw" name="event" type="_OAHboFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>logger.finest(&quot;Property change REARRANGE_WORKERS fired.&quot;);&#xD;
     requestRearrange();&#xD;
&#xD;
     // Check for goods party!&#xD;
     if (event != null &#xD;
         &amp;&amp; event.getOldValue() instanceof GoodsType) {&#xD;
         GoodsType goodsType = (GoodsType)event.getOldValue();&#xD;
         int left = colony.getGoodsCount(goodsType);&#xD;
         for (AIGoods aig : getExportGoods()) {&#xD;
             boolean remove = false;&#xD;
             if (aig.isDisposed()) {&#xD;
                 remove = true;&#xD;
             } else if (aig.getGoods() == null) {&#xD;
                 aig.changeTransport(null);&#xD;
                 remove = true;&#xD;
             } else if (aig.getGoodsType() == goodsType) {&#xD;
                 if (left > 0) {&#xD;
                     aig.getGoods().setAmount(left);&#xD;
                 } else {&#xD;
                     aig.changeTransport(null);&#xD;
                     remove = true;&#xD;
                 }&#xD;
             }&#xD;
             if (remove) {&#xD;
                 removeExportGoods(aig);&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKaAHVJPEeiyW7NaN4qWdw" name="requestRearrange" specification="_NQnRUFJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>rearrangeTurn = new Turn(0);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKaAHlJPEeiyW7NaN4qWdw" name="dispose" specification="_NQnRUVJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>List&lt;AIObject> objects = getExportGoods().stream()&#xD;
         .filter(ag -> !ag.isDisposed() &amp;&amp; ag.getGoods() != null&#xD;
             &amp;&amp; ag.getGoods().getLocation() == colony)&#xD;
         .collect(Collectors.toList());&#xD;
     objects.addAll(wishes);&#xD;
     wishes.clear();&#xD;
     objects.addAll(tileImprovementPlans);&#xD;
     tileImprovementPlans.clear();&#xD;
     for (AIObject o : objects) o.dispose();&#xD;
     colonyPlan = null;&#xD;
     // Do not clear this.colony, the identifier is still required.&#xD;
     super.dispose();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKaAH1JPEeiyW7NaN4qWdw" name="checkIntegrity" specification="_NQn4YlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKaAIFJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKaAIVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = super.checkIntegrity(fix);&#xD;
     if (colony == null || colony.isDisposed()) result = -1;&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKaAIlJPEeiyW7NaN4qWdw" name="writeChildren" specification="_OEV0UFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKaAI1JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeChildren(xw);&#xD;
&#xD;
     for (AIGoods ag : getExportGoods()) {&#xD;
         if (ag.checkIntegrity(true) &lt; 0) continue;&#xD;
         xw.writeStartElement(AI_GOODS_LIST_TAG);&#xD;
&#xD;
         xw.writeAttribute(ID_ATTRIBUTE_TAG, ag);&#xD;
&#xD;
         xw.writeEndElement();&#xD;
     }&#xD;
&#xD;
     for (TileImprovementPlan tip : tileImprovementPlans) {&#xD;
         if (tip.checkIntegrity(true) &lt; 0) continue;&#xD;
&#xD;
         xw.writeStartElement(TILE_IMPROVEMENT_PLAN_LIST_TAG);&#xD;
&#xD;
         xw.writeAttribute(ID_ATTRIBUTE_TAG, tip);&#xD;
&#xD;
         xw.writeEndElement();&#xD;
     }&#xD;
&#xD;
     for (Wish w : wishes) {&#xD;
         String tag = (w instanceof GoodsWish) ? GOODS_WISH_LIST_TAG&#xD;
             : (w instanceof WorkerWish) ? WORKER_WISH_LIST_TAG&#xD;
             : null;&#xD;
         if (w.checkIntegrity(true) &lt; 0 || !w.shouldBeStored()&#xD;
             || tag == null) continue;&#xD;
&#xD;
         xw.writeStartElement(tag);&#xD;
&#xD;
         xw.writeAttribute(ID_ATTRIBUTE_TAG, w);&#xD;
&#xD;
         xw.writeEndElement();&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKanIFJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OEXCclJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKanIVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readAttributes(xr);&#xD;
&#xD;
     final AIMain aiMain = getAIMain();&#xD;
&#xD;
     colony = xr.getAttribute(aiMain.getGame(), ID_ATTRIBUTE_TAG,&#xD;
                              Colony.class, (Colony)null);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKanIlJPEeiyW7NaN4qWdw" name="readChildren" specification="_OEXpg1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKanI1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>clearExportGoods();&#xD;
     tileImprovementPlans.clear();&#xD;
     wishes.clear();&#xD;
&#xD;
     super.readChildren(xr);&#xD;
     sortExportGoods();&#xD;
     &#xD;
     if (getColony() != null) uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKanJFJPEeiyW7NaN4qWdw" name="readChild" specification="_OEY3oFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKanJVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final AIMain aiMain = getAIMain();&#xD;
     final String tag = xr.getLocalName();&#xD;
&#xD;
     if (AI_GOODS_LIST_TAG.equals(tag)) {&#xD;
         addExportGoods(xr.makeAIObject(aiMain, ID_ATTRIBUTE_TAG,&#xD;
                                        AIGoods.class, (AIGoods)null, true));&#xD;
         xr.closeTag(AI_GOODS_LIST_TAG);&#xD;
&#xD;
     } else if (GOODS_WISH_LIST_TAG.equals(tag)&#xD;
         // @compat 0.10.3&#xD;
         || OLD_GOODS_WISH_TAG.equals(tag)&#xD;
         // end @compat&#xD;
                ) {&#xD;
         wishes.add(xr.makeAIObject(aiMain, ID_ATTRIBUTE_TAG,&#xD;
                                    GoodsWish.class, (GoodsWish)null, true));&#xD;
         xr.closeTag(tag);// FIXME: tag -> GOODS_WISH_LIST_TAG&#xD;
&#xD;
     } else if (TILE_IMPROVEMENT_PLAN_LIST_TAG.equals(tag)&#xD;
         // @compat 0.10.3&#xD;
         || OLD_TILE_IMPROVEMENT_PLAN_LIST_TAG.equals(tag)&#xD;
         // end @compat&#xD;
                ) {&#xD;
         tileImprovementPlans.add(xr.makeAIObject(aiMain, ID_ATTRIBUTE_TAG,&#xD;
                 TileImprovementPlan.class, (TileImprovementPlan)null, true));&#xD;
         xr.closeTag(tag);// FIXME: tag -> TILE_IMPROVEMENT_PLAN_LIST_TAG&#xD;
&#xD;
     } else if (WORKER_WISH_LIST_TAG.equals(tag)&#xD;
         // @compat 0.10.3&#xD;
         || OLD_WORKER_WISH_TAG.equals(tag)&#xD;
         // end @compat&#xD;
                ) {&#xD;
         wishes.add(xr.makeAIObject(aiMain, ID_ATTRIBUTE_TAG,&#xD;
                                    WorkerWish.class, (WorkerWish)null, true));&#xD;
         xr.closeTag(tag);// FIXME: tag -> WORKER_WISH_LIST_TAG&#xD;
&#xD;
     } else {&#xD;
         super.readChild(xr);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKanJlJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_NQptkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKanJ1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getXMLElementTagName(); </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKanKFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_NQqUolJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKanKVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return &quot;aiColony&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NQhxwFJPEeiyW7NaN4qWdw" name="getAIOwner" visibility="protected" method="_OKW8y1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OAoZAFJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NQhxwVJPEeiyW7NaN4qWdw" name="isBadlyDefended" method="_OKW8zVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLastFJPEeiyW7NaN4qWdw">
                    <body>Is this AI colony badly defended?&#xD;
     *&#xD;
     * @return True if this colony needs more defenders.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NQiY0FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NQiY0VJPEeiyW7NaN4qWdw" name="resetExports" visibility="private" method="_OKXj1FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLast1JPEeiyW7NaN4qWdw">
                    <body>Reset the export settings.&#xD;
     * This is always needed even when there is no customs house, because&#xD;
     * updateExportGoods needs to know what to export by transport.&#xD;
     *&#xD;
     * FIXME: consider market prices?</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NQiY0lJPEeiyW7NaN4qWdw" name="exploreLCRs" visibility="private" method="_OKXj1VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLasuFJPEeiyW7NaN4qWdw">
                    <body>Explores any neighbouring LCRs.&#xD;
     * Choose non-expert persons for the exploration.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NQi_4FJPEeiyW7NaN4qWdw" name="avertAutoDestruction" visibility="private" method="_OKXj2FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLasulJPEeiyW7NaN4qWdw">
                    <body>Something bad happened, there is no remaining unit working in&#xD;
     * the colony.&#xD;
     *&#xD;
     * Throwing an exception stalls the AI and wrecks the colony in a&#xD;
     * weird way.  Try to recover by hopefully finding a unit outside&#xD;
     * the colony and stuffing it into the town hall.&#xD;
     *&#xD;
     * @return True if autodestruction has been averted.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NQi_4VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NQi_4lJPEeiyW7NaN4qWdw" name="clearExportGoods" visibility="private" method="_OKXj3FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLasvFJPEeiyW7NaN4qWdw">
                    <body>Clear the export goods.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NQjm8FJPEeiyW7NaN4qWdw" name="sortExportGoods" visibility="private" method="_OKYK4FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLasv1JPEeiyW7NaN4qWdw">
                    <body>Sort the export goods.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NQk1EFJPEeiyW7NaN4qWdw" name="getGoodsWishes" method="_OKYyAVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTxlJPEeiyW7NaN4qWdw">
                    <body>Gets the goods wishes this colony has.&#xD;
     *&#xD;
     * @return A copy of the wishes list with non-goods wishes removed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NQk1EVJPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NQk1ElJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NQlcIFJPEeiyW7NaN4qWdw" name="getWorkerWishes" method="_OKYyBFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTx1JPEeiyW7NaN4qWdw">
                    <body>Gets the worker wishes this colony has.&#xD;
     *&#xD;
     * @return A copy of the wishes list with non-worker wishes removed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NQlcIVJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NQlcIlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NQmqQFJPEeiyW7NaN4qWdw" name="getPlannedBuildableTypes" method="_OKaAFlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbT0FJPEeiyW7NaN4qWdw">
                    <body>Get the list of buildables in the colony plan.&#xD;
     *&#xD;
     * Public for the test suite.&#xD;
     *&#xD;
     * @return A list of planned &lt;code>BuildableType&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NQmqQVJPEeiyW7NaN4qWdw" type="_OAQlkVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NQmqQlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NQmqQ1JPEeiyW7NaN4qWdw" name="planToString" method="_OKaAGVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbT0VJPEeiyW7NaN4qWdw">
                    <body>Summarize the colony plan as a string.&#xD;
     *&#xD;
     * @return A summary of the colony plan.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NQmqRFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NQnRUFJPEeiyW7NaN4qWdw" name="requestRearrange" method="_OKaAHVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbT0lJPEeiyW7NaN4qWdw">
                    <body>Sets the rearrangeTurn variable such that rearrangeWorkers will&#xD;
     * run fully next time it is invoked.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NQnRUVJPEeiyW7NaN4qWdw" name="dispose" method="_OKaAHlJPEeiyW7NaN4qWdw"/>
                <ownedOperation xmi:id="_NQn4YlJPEeiyW7NaN4qWdw" name="checkIntegrity" method="_OKaAH1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NQofcFJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NQofcVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NQptkFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_OKanJlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NQptkVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NQqUolJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_OKanKFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLb60FJPEeiyW7NaN4qWdw">
                    <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;aiColony&quot;</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NQqUo1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OAlVsFJPEeiyW7NaN4qWdw" name="AIColony" method="_OKWVs1JPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OAl8wVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OAl8wlJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLassFJPEeiyW7NaN4qWdw">
                    <body>Creates a new uninitialized &lt;code>AIColony&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param id The object identifier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OAlVsVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OAl8wFJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OAl8w1JPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OAq1QFJPEeiyW7NaN4qWdw" name="addExportGoods" visibility="private" method="_OKXj3VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLasvVJPEeiyW7NaN4qWdw">
                    <body>Add to the export goods list, and resort.&#xD;
     *&#xD;
     * @param aiGoods The &lt;code>AIGoods&lt;/code> to add.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OAq1QVJPEeiyW7NaN4qWdw" name="aiGoods" type="_NQ4XEFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OAq1QlJPEeiyW7NaN4qWdw" name="removeExportGoods" method="_OKYK4VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLaswFJPEeiyW7NaN4qWdw">
                    <body>Removes the given &lt;code>AIGoods&lt;/code> from the export goods&#xD;
     * for this colony.  The &lt;code>AIGoods&lt;/code>-object is not&#xD;
     * disposed as part of this operation.  Use dropExportGoods&#xD;
     * instead to remove the object completely (this method would then&#xD;
     * be called indirectly).&#xD;
     *&#xD;
     * @param ag The &lt;code>AIGoods&lt;/code> to be removed.&#xD;
     * @see AIGoods#dispose()</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OAq1Q1JPEeiyW7NaN4qWdw" name="ag" type="_NQ4XEFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OArcUFJPEeiyW7NaN4qWdw" name="dropExportGoods" visibility="private" method="_OKYK41JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLaswVJPEeiyW7NaN4qWdw">
                    <body>Drops some goods from the goods list, and cancels any transport.&#xD;
     *&#xD;
     * @param ag The &lt;code>AIGoods&lt;/code> to drop.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OAsDYFJPEeiyW7NaN4qWdw" name="ag" type="_NQ4XEFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OAsqcFJPEeiyW7NaN4qWdw" name="addWish" method="_OKYK61JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTwVJPEeiyW7NaN4qWdw">
                    <body>Adds a &lt;code>Wish&lt;/code> to the wishes list.&#xD;
     *&#xD;
     * @param wish The &lt;code>Wish&lt;/code> to be added.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OAsqcVJPEeiyW7NaN4qWdw" name="wish" type="_NWKfsFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OAt4kFJPEeiyW7NaN4qWdw" name="removeTileImprovementPlan" method="_OKZZEFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTzVJPEeiyW7NaN4qWdw">
                    <body>Removes a &lt;code>TileImprovementPlan&lt;/code> from the list&#xD;
     *&#xD;
     * @return True if it was successfully deleted, false otherwise</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OAt4kVJPEeiyW7NaN4qWdw" name="plan" type="_NVvB4FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OAufoFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OEMqYFJPEeiyW7NaN4qWdw" name="AIColony" method="_OKWVt1JPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OEMqY1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OEMqZFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLassVJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIColony&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param colony The colony to make an {@link AIObject} for.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEMqYVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEMqYlJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEMqZVJPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEMqZlJPEeiyW7NaN4qWdw" name="AIColony" method="_OKW8wFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OENRcFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OENRcVJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLasslJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIColony&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param element The root element for the XML-representation&#xD;
     *       of a &lt;code>Wish&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEMqZ1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEMqaFJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OENRclJPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OENRc1JPEeiyW7NaN4qWdw" name="AIColony" method="_OKW8xFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OENRdlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OENRd1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLass1JPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIColony&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @exception XMLStreamException if a problem was encountered&#xD;
     *     during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OENRdFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OENRdVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OENReFJPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEN4gFJPEeiyW7NaN4qWdw" name="getAIUnit" visibility="protected" method="_OKW8yFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEN4gVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEN4glJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEN4g1JPEeiyW7NaN4qWdw" name="update" method="_OKW8z1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLastVJPEeiyW7NaN4qWdw">
                    <body>Update any relatively static properties of the colony:&#xD;
     *   - export state&#xD;
     *   - disposition of export goods in this colony&#xD;
     *   - tile improvements (might ignore freshly grabbed tiles)&#xD;
     *   - wishes&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEN4hFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEOfkFJPEeiyW7NaN4qWdw" name="rearrangeWorkers" method="_OKXj0FJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OEOflFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OEOflVJPEeiyW7NaN4qWdw" key="generic_container"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLastlJPEeiyW7NaN4qWdw">
                    <body>Rearranges the workers within this colony using the {@link ColonyPlan}.&#xD;
     *&#xD;
     * FIXME: Detect military threats and boost defence.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return A collection of worker &lt;code>AIUnit&lt;/code>s that now need&#xD;
     *     a &lt;code>WorkInsideColonyMission&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEOfkVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEOfklJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OEOfk1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OEOfllJPEeiyW7NaN4qWdw" name="stealTiles" visibility="private" method="_OKXj1lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLasuVJPEeiyW7NaN4qWdw">
                    <body>Steals neighbouring tiles but only if the colony has some&#xD;
     * defence.  Grab everything if at war with the owner, otherwise&#xD;
     * just take the tile that best helps with the currently required&#xD;
     * raw building materials, with a lesser interest in food.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEOfl1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEPGoFJPEeiyW7NaN4qWdw" name="stopUsing" method="_OKXj2lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLasu1JPEeiyW7NaN4qWdw">
                    <body>Stop using a work location.&#xD;
     *&#xD;
     * Called from BuildColonyMission to clear a colony tile that is about&#xD;
     * to have a colony built on it.&#xD;
     *&#xD;
     * @param wl The &lt;code>WorkLocation&lt;/code> to stop using.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEPGoVJPEeiyW7NaN4qWdw" name="wl" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEPGolJPEeiyW7NaN4qWdw" name="setExportGoods" visibility="private" method="_OKXj31JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLasvlJPEeiyW7NaN4qWdw">
                    <body>Set the export goods list.&#xD;
     *&#xD;
     * @param aiGoods The new list of &lt;code>AIGoods&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEPGo1JPEeiyW7NaN4qWdw" name="aiGoods" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEPtsVJPEeiyW7NaN4qWdw" name="goodsLog" visibility="private" method="_OKYK5VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLaswlJPEeiyW7NaN4qWdw">
                    <body>Emits a standard message regarding the state of AIGoods.&#xD;
     *&#xD;
     * @param ag The &lt;code>AIGoods&lt;/code> to log.&#xD;
     * @param action The state of the goods.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEPtslJPEeiyW7NaN4qWdw" name="ag" type="_NQ4XEFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEPts1JPEeiyW7NaN4qWdw" name="action">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OEQUwFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEQUwVJPEeiyW7NaN4qWdw" name="updateExportGoods" visibility="private" method="_OKYK6VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTwFJPEeiyW7NaN4qWdw">
                    <body>Creates a list of the goods which should be shipped out of this colony.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEQUwlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEQUw1JPEeiyW7NaN4qWdw" name="completeWish" method="_OKYx8FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTwlJPEeiyW7NaN4qWdw">
                    <body>Tries to complete a supplied wish.&#xD;
     *&#xD;
     * @param wish The &lt;code>Wish&lt;/code> to complete.&#xD;
     * @param reason A reason for wish completion.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if this wish was successfully completed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEQUxFJPEeiyW7NaN4qWdw" name="wish" type="_NWKfsFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEQUxVJPEeiyW7NaN4qWdw" name="reason">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OEQUxlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEQ70FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OEQ70VJPEeiyW7NaN4qWdw" name="completeWish" method="_OKYx9VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTw1JPEeiyW7NaN4qWdw">
                    <body>Tries to complete any wishes for some goods that have just arrived.&#xD;
     *&#xD;
     * @param goods Some &lt;code>Goods&lt;/code> that are arriving in this colony.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if a wish was successfully completed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEQ70lJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEQ701JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEQ71FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OERi4FJPEeiyW7NaN4qWdw" name="completeWish" method="_OKYx-VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTxFJPEeiyW7NaN4qWdw">
                    <body>Tries to complete any wishes for a unit that has just arrived.&#xD;
     *&#xD;
     * @param unit A &lt;code>Unit&lt;/code> that is arriving in this colony.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if a wish was successfully completed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OERi4VJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OERi4lJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OERi41JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OERi5FJPEeiyW7NaN4qWdw" name="completeWish" method="_OKYx_VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTxVJPEeiyW7NaN4qWdw">
                    <body>Tries to complete any wishes for a transportable that has just arrived.&#xD;
     *&#xD;
     * @param t The arriving &lt;code>TransportableAIObject&lt;/code>.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return True if a wish was successfully completed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OERi5VJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OERi5lJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OERi51JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OESJ8FJPEeiyW7NaN4qWdw" name="requireGoodsWish" method="_OKZZAFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTyFJPEeiyW7NaN4qWdw">
                    <body>Requires a goods wish for a specified goods type be present at this&#xD;
     * AI colony.  If one is already present, the amount specified here&#xD;
     * takes precedence as it is more likely to be up to date.  The value&#xD;
     * is treated as a minimum requirement.&#xD;
     *&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> to wish for.&#xD;
     * @param amount The amount of goods wished for.&#xD;
     * @param value The urgency of the wish.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OESJ8VJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OESJ8lJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OESJ81JPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OESJ9FJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OESxAFJPEeiyW7NaN4qWdw" name="requireWorkerWish" method="_OKZZBVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTyVJPEeiyW7NaN4qWdw">
                    <body>Requires a worker wish for a unit type to be provided to this AIColony.&#xD;
     * If a suitable wish is already present, the expert and value parameters&#xD;
     * take precedence as they are more likely to be up to date.&#xD;
     *&#xD;
     * @param type The &lt;code>UnitType&lt;/code> to wish for.&#xD;
     * @param expertNeeded Is an expert unit required?&#xD;
     * @param value The urgency of the wish.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OESxAVJPEeiyW7NaN4qWdw" name="type" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OESxAlJPEeiyW7NaN4qWdw" name="expertNeeded">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OESxA1JPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OESxBFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OESxBVJPEeiyW7NaN4qWdw" name="updateWishes" visibility="private" method="_OKZZClJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTylJPEeiyW7NaN4qWdw">
                    <body>Updates the wishes for the &lt;code>Colony&lt;/code>.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OESxBlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OETYEFJPEeiyW7NaN4qWdw" name="updateWorkerWishes" visibility="private" method="_OKZZDFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTy1JPEeiyW7NaN4qWdw">
                    <body>Updates the worker wishes.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OETYEVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OETYElJPEeiyW7NaN4qWdw" name="updateGoodsWishes" visibility="private" method="_OKZZDlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTzFJPEeiyW7NaN4qWdw">
                    <body>Updates the goods wishes.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OETYE1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OET_IFJPEeiyW7NaN4qWdw" name="getPlanFor" visibility="private" method="_OKaAEFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTzlJPEeiyW7NaN4qWdw">
                    <body>Gets the first plan for a specified tile from a list of tile&#xD;
     * improvement plans.&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to look for.&#xD;
     * @param plans A list of &lt;code>TileImprovementPlan&lt;/code>s to search.&#xD;
     * @return A matching plan, or null if not found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OET_IVJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OET_IlJPEeiyW7NaN4qWdw" name="plans" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OET_I1JPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEUmMVJPEeiyW7NaN4qWdw" name="updateTileImprovementPlans" method="_OKaAFFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLbTz1JPEeiyW7NaN4qWdw">
                    <body>Creates a list of the &lt;code>Tile&lt;/code>-improvements which will&#xD;
     * increase the production by this &lt;code>Colony&lt;/code>.&#xD;
     *&#xD;
     * @see TileImprovementPlan&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEUmMlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEVNQFJPEeiyW7NaN4qWdw" name="propertyChange" method="_OKaAG1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEVNQVJPEeiyW7NaN4qWdw" name="event" type="_OAHboFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEV0UFJPEeiyW7NaN4qWdw" name="writeChildren" visibility="protected" method="_OKaAIlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEV0UVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEXCclJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OKanIFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEXCc1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEXpg1JPEeiyW7NaN4qWdw" name="readChildren" visibility="protected" method="_OKanIlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEXphFJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEY3oFJPEeiyW7NaN4qWdw" name="readChild" visibility="protected" method="_OKanJFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEY3oVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NQ4XEFJPEeiyW7NaN4qWdw" name="AIGoods">
                <ownedComment xmi:id="_OLb60VJPEeiyW7NaN4qWdw">
                  <body>Objects of this class contains AI-information for a single {@link Goods}.</body>
                </ownedComment>
                <generalization xmi:id="_OBCBoFJPEeiyW7NaN4qWdw" general="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJA48FJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMMIwVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJA48VJPEeiyW7NaN4qWdw" value="Logger.getLogger(AIGoods.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJBgAFJPEeiyW7NaN4qWdw" name="goods" isLeaf="true" type="_OATB0VJPEeiyW7NaN4qWdw" association="_OMMv0VJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJBgAVJPEeiyW7NaN4qWdw" name="destination" visibility="private" type="_OAU3AVJPEeiyW7NaN4qWdw" association="_OMMv1FJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJCHEFJPEeiyW7NaN4qWdw" name="DESTINATION_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJCHEVJPEeiyW7NaN4qWdw" value="&quot;destination&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKbOMFJPEeiyW7NaN4qWdw" name="AIGoods" specification="_OBAMcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKbOMVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKbOMlJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKbOM1JPEeiyW7NaN4qWdw" type="_NQ4XEFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, id);&#xD;
&#xD;
     this.goods = null;&#xD;
     this.destination = null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKb1QFJPEeiyW7NaN4qWdw" name="AIGoods" specification="_OEciAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKb1QVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKb1QlJPEeiyW7NaN4qWdw" name="location" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKb1Q1JPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKb1RFJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKb1RVJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKb1RlJPEeiyW7NaN4qWdw" type="_NQ4XEFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(aiMain, getXMLElementTagName() + &quot;:&quot; + aiMain.getNextId());&#xD;
&#xD;
     this.goods = new Goods(aiMain.getGame(), location, type, amount);&#xD;
     this.destination = destination;&#xD;
&#xD;
     uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKb1R1JPEeiyW7NaN4qWdw" name="AIGoods" specification="_OEdJEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKb1SFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKb1SVJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKb1SlJPEeiyW7NaN4qWdw" type="_NQ4XEFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, element);&#xD;
&#xD;
     uninitialized = getGoods() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKb1S1JPEeiyW7NaN4qWdw" name="AIGoods" specification="_OEdJFlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKb1TFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKb1TVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKb1TlJPEeiyW7NaN4qWdw" type="_NQ4XEFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
&#xD;
     uninitialized = getGoods() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKb1T1JPEeiyW7NaN4qWdw" name="getGoodsType" specification="_NRIOsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKb1UFJPEeiyW7NaN4qWdw" type="_OAUP8VJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return goods.getType();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKccUFJPEeiyW7NaN4qWdw" name="getGoodsAmount" specification="_NRIOsVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKccUVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return goods.getAmount();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKccUlJPEeiyW7NaN4qWdw" name="setGoodsAmount" specification="_NRI1wFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKccU1JPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>goods.setAmount(amount);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKccVFJPEeiyW7NaN4qWdw" name="leaveTransport" specification="_NRJc0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKccVVJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKccVlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!(goods.getLocation() instanceof Unit)) return false;&#xD;
     final Unit carrier = (Unit)goods.getLocation();&#xD;
     final GoodsType type = goods.getType();&#xD;
     if (carrier.getGoodsCount(type) &lt; amount) return false;&#xD;
&#xD;
     final AIUnit aiCarrier = getAIMain().getAIUnit(carrier);&#xD;
     int oldAmount = carrier.getGoodsCount(type);&#xD;
     boolean result = AIMessage.askUnloadGoods(type, amount, aiCarrier);&#xD;
     if (result) {&#xD;
         int newAmount = carrier.getGoodsCount(type);&#xD;
         if (oldAmount - newAmount != amount) {&#xD;
             // FIXME: sort this out.&#xD;
             // For now, do not tolerate partial unloads.&#xD;
             logger.warning(&quot;Partial goods unload, expected: &quot; + amount&#xD;
                 + &quot;, got: &quot; + (oldAmount - newAmount));&#xD;
             result = false;&#xD;
         }&#xD;
         logger.fine(&quot;Unloaded &quot; + amount + &quot; &quot; + type&#xD;
             + &quot; from &quot; + oldAmount + &quot; leaving &quot; + newAmount&#xD;
             + &quot; off of &quot; + carrier + &quot; at &quot; + carrier.getLocation());&#xD;
     }   &#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKccV1JPEeiyW7NaN4qWdw" name="getTransportLocatable" specification="_NRJc01JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKccWFJPEeiyW7NaN4qWdw" type="_OA-XQVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getGoods();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKccWVJPEeiyW7NaN4qWdw" name="getTransportSource" specification="_NRKq8lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKccWlJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (goods == null) ? null : goods.getLocation();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKccW1JPEeiyW7NaN4qWdw" name="getTransportDestination" specification="_NRLSAlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKccXFJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return this.destination;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKccXVJPEeiyW7NaN4qWdw" name="setTransportDestination" specification="_OEeXMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKccXlJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>this.destination = destination;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKccX1JPEeiyW7NaN4qWdw" name="getDeliveryPath" specification="_OEe-QFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKccYFJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKccYVJPEeiyW7NaN4qWdw" name="dst" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKccYlJPEeiyW7NaN4qWdw" type="_OA--UVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (dst == null) dst = Location.upLoc(getTransportDestination());&#xD;
&#xD;
     PathNode path = (goods.getLocation() == carrier) ? carrier.findPath(dst)&#xD;
         : (goods.getLocation() instanceof Unit) ? null&#xD;
         : carrier.findPath(goods.getLocation(), dst, null, null);&#xD;
     if (path != null) path.convertToGoodsDeliveryPath();&#xD;
     return path;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdDYFJPEeiyW7NaN4qWdw" name="getIntermediatePath" specification="_OEflUVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdDYVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKdDYlJPEeiyW7NaN4qWdw" name="dst" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKdDY1JPEeiyW7NaN4qWdw" type="_OA--UVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return null; // NYI&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdDZFJPEeiyW7NaN4qWdw" name="carriableBy" specification="_OEgMY1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdDZVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKdDZlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return carrier.couldCarry(getGoods());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdDZ1JPEeiyW7NaN4qWdw" name="canMove" specification="_NRMgIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdDaFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdDaVJPEeiyW7NaN4qWdw" name="leaveTransport" specification="_NRNuQVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdDalJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return leaveTransport(null);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdDa1JPEeiyW7NaN4qWdw" name="leaveTransport" specification="_OEgzdFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdDbFJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKdDbVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (direction != null) return false;&#xD;
     return leaveTransport(goods.getAmount());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdDblJPEeiyW7NaN4qWdw" name="joinTransport" specification="_OEhag1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdDb1JPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKdDcFJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKdDcVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (direction != null) return false;&#xD;
     final AIUnit aiCarrier = getAIMain().getAIUnit(carrier);&#xD;
     if (aiCarrier == null) return false;&#xD;
&#xD;
     final GoodsType type = goods.getType();&#xD;
     boolean failed = false;&#xD;
     int oldAmount = carrier.getGoodsCount(type),&#xD;
         goodsAmount = goods.getAmount(),&#xD;
         amount = Math.min(goodsAmount, carrier.getLoadableAmount(type));&#xD;
     if (AIMessage.askLoadGoods(goods.getLocation(), type, amount,&#xD;
                                aiCarrier)) {&#xD;
         setGoods(new Goods(getGame(), carrier, type, amount));&#xD;
         final Colony colony = carrier.getColony();&#xD;
         if (colony != null) {&#xD;
             getAIMain().getAIColony(colony).removeExportGoods(this);&#xD;
         }&#xD;
     }&#xD;
     logger.fine(&quot;Loaded &quot; + amount + &quot; &quot; + type.getSuffix()&#xD;
         + &quot; over &quot; + oldAmount + &quot; leaving &quot; + (goodsAmount - amount)&#xD;
         + &quot; onto &quot; + carrier + &quot; at &quot; + carrier.getLocation());&#xD;
     return !failed;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdqcFJPEeiyW7NaN4qWdw" name="invalidReason" specification="_NROVUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdqcVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String reason = Mission.invalidTransportableReason(this);&#xD;
     Settlement s;&#xD;
     return (reason != null)&#xD;
         ? reason&#xD;
         : (goods.getLocation() instanceof Unit&#xD;
             &amp;&amp; destination instanceof Settlement&#xD;
             &amp;&amp; !((Unit)goods.getLocation())&#xD;
                 .getOwner().owns(s = (Settlement)destination))&#xD;
         ? &quot;transportableDestination-&quot; + s.getName() + &quot;-captured-by-&quot;&#xD;
             + s.getOwner().getDebugName()&#xD;
         : null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdqclJPEeiyW7NaN4qWdw" name="dispose" specification="_NRO8Y1JPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>dropTransport();&#xD;
     if (destination != null) {&#xD;
         if (destination instanceof Colony) {&#xD;
             AIColony aic = getAIMain().getAIColony((Colony)destination);&#xD;
             if (aic != null) aic.removeExportGoods(this);&#xD;
         } else if (destination instanceof Europe) {&#xD;
             // Nothing to remove.&#xD;
         } else {&#xD;
             logger.warning(&quot;Unknown type of destination: &quot; + destination);&#xD;
         }&#xD;
         destination = null;&#xD;
     }&#xD;
     goods = null;&#xD;
     super.dispose();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdqc1JPEeiyW7NaN4qWdw" name="checkIntegrity" specification="_NRPjclJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdqdFJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKdqdVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = super.checkIntegrity(fix);&#xD;
     String why = (result &lt; 0) ? &quot;super&quot;&#xD;
         : (goods == null) ? &quot;null-goods&quot;&#xD;
         : (goods.getType() == null) ? &quot;null-goods-type&quot;&#xD;
         : (goods.getAmount() &lt;= 0) ? &quot;non-positive-goods-amount&quot;&#xD;
         : (goods.getLocation() == null) ? &quot;null-location&quot;&#xD;
         : (((FreeColGameObject)goods.getLocation()).isDisposed()) ? &quot;disposed-location&quot;&#xD;
         : null;&#xD;
     if (destination != null&#xD;
         &amp;&amp; ((FreeColGameObject)destination).isDisposed()) {&#xD;
         if (fix) {&#xD;
             logger.warning(&quot;Fixing disposed destination for &quot; + this);&#xD;
             destination = null;&#xD;
             if (result > 0) result = 0;&#xD;
         } else {&#xD;
             why = &quot;disposed-destination&quot;;&#xD;
         }&#xD;
     }&#xD;
     if (why != null) {&#xD;
         logger.finest(&quot;checkIntegrity(&quot; + this + &quot;) = &quot; + why);&#xD;
         result = -1;&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdqdlJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_OEiooFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdqd1JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (destination != null) {&#xD;
         xw.writeAttribute(DESTINATION_TAG, destination.getId());&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdqeFJPEeiyW7NaN4qWdw" name="writeChildren" specification="_OEj2wFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdqeVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeChildren(xw);&#xD;
&#xD;
     if (goods != null) goods.toXML(xw);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdqelJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OElE4FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdqe1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readAttributes(xr);&#xD;
&#xD;
     final Game game = getAIMain().getGame();&#xD;
&#xD;
     destination = xr.getLocationAttribute(game, DESTINATION_TAG, false);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdqfFJPEeiyW7NaN4qWdw" name="readChildren" specification="_OElr8lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdqfVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readChildren(xr);&#xD;
&#xD;
     if (getGoods() != null) uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKdqflJPEeiyW7NaN4qWdw" name="readChild" specification="_OEmTA1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKdqf1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final String tag = xr.getLocalName();&#xD;
&#xD;
     if (Goods.getXMLElementTagName().equals(tag)) {&#xD;
         if (goods != null) {&#xD;
             goods.readFromXML(xr);&#xD;
         } else {&#xD;
             goods = new Goods(getAIMain().getGame(), xr);&#xD;
         }&#xD;
&#xD;
     } else {&#xD;
         super.readChild(xr);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKeRgFJPEeiyW7NaN4qWdw" name="toString" specification="_NRQxkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKeRgVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>LogBuilder lb = new LogBuilder(64);&#xD;
     lb.add(&quot;[&quot;, getId(), &quot; &quot;, goods);&#xD;
     if (goods != null) lb.add(&quot; at &quot;, goods.getLocation());&#xD;
     lb.add(&quot; -> &quot;, destination);&#xD;
     AIUnit transport = getTransport();&#xD;
     if (transport != null) lb.add(&quot; using &quot;, transport.getUnit());&#xD;
     lb.add(&quot;/&quot;, getTransportPriority(), &quot;]&quot;);&#xD;
     return lb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKe4kFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_NRRYo1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKe4kVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getXMLElementTagName(); </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKe4klJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_NRR_s1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKe4k1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return &quot;aiGoods&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NRIOsFJPEeiyW7NaN4qWdw" name="getGoodsType" isLeaf="true" method="_OKb1T1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLb61lJPEeiyW7NaN4qWdw">
                    <body>Gets the type of goods this &lt;code>AIGoods&lt;/code> is controlling.&#xD;
     *&#xD;
     * @return The &lt;code>GoodsType&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEdwJFJPEeiyW7NaN4qWdw" type="_OAUP8VJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NRIOsVJPEeiyW7NaN4qWdw" name="getGoodsAmount" isLeaf="true" method="_OKccUFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLb611JPEeiyW7NaN4qWdw">
                    <body>Gets the amount of goods this &lt;code>AIGoods&lt;/code> is controlling.&#xD;
     *&#xD;
     * @return The amount of goods.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRIOslJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRI1wFJPEeiyW7NaN4qWdw" name="setGoodsAmount" isLeaf="true" method="_OKccUlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLb62FJPEeiyW7NaN4qWdw">
                    <body>Sets the amount of goods this &lt;code>AIGoods&lt;/code> is controlling.&#xD;
     *&#xD;
     * @param amount The new amount of goods.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRI1wVJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRJc0FJPEeiyW7NaN4qWdw" name="leaveTransport" visibility="private" method="_OKccVFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLb62VJPEeiyW7NaN4qWdw">
                    <body>Goods leaves a ship.&#xD;
     *&#xD;
     * @param amount The amount of goods to unload.&#xD;
     * @return True if the unload succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRJc0VJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NRJc0lJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRJc01JPEeiyW7NaN4qWdw" name="getTransportLocatable" method="_OKccV1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEdwJVJPEeiyW7NaN4qWdw" type="_OA-XQVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NRKq8lJPEeiyW7NaN4qWdw" name="getTransportSource" method="_OKccWVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEdwJlJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NRLSAlJPEeiyW7NaN4qWdw" name="getTransportDestination" method="_OKccW1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEdwJ1JPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NRMgIFJPEeiyW7NaN4qWdw" name="canMove" method="_OKdDZ1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NRNHMFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRNuQVJPEeiyW7NaN4qWdw" name="leaveTransport" method="_OKdDaVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NRNuQlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NROVUFJPEeiyW7NaN4qWdw" name="invalidReason" method="_OKdqcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NROVUVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRO8Y1JPEeiyW7NaN4qWdw" name="dispose" method="_OKdqclJPEeiyW7NaN4qWdw"/>
                <ownedOperation xmi:id="_NRPjclJPEeiyW7NaN4qWdw" name="checkIntegrity" method="_OKdqc1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NRPjc1JPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NRPjdFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRQxkFJPEeiyW7NaN4qWdw" name="toString" method="_OKeRgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NRQxkVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRRYo1JPEeiyW7NaN4qWdw" name="getXMLTagName" method="_OKe4kFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NRRYpFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRR_s1JPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_OKe4klJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLb62lJPEeiyW7NaN4qWdw">
                    <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;aiGoods&quot;</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRR_tFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OBAMcFJPEeiyW7NaN4qWdw" name="AIGoods" method="_OKbOMFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OBAzgFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OBAzgVJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLb60lJPEeiyW7NaN4qWdw">
                    <body>Creates a new uninitialized &lt;code>AIGoods&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param id The object identifier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OBAMcVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OBAMclJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OBAzglJPEeiyW7NaN4qWdw" type="_NQ4XEFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEciAFJPEeiyW7NaN4qWdw" name="AIGoods" method="_OKb1QFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OEciBlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OEciB1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLb601JPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIGoods&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param location The location of the goods.&#xD;
     * @param type The type of goods.&#xD;
     * @param amount The amount of goods.&#xD;
     * @param destination The destination of the goods. This is the&#xD;
     *      &lt;code>Location&lt;/code> to which the goods should be transported.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEciAVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEciAlJPEeiyW7NaN4qWdw" name="location" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEciA1JPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEciBFJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OEciBVJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEciCFJPEeiyW7NaN4qWdw" type="_NQ4XEFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEdJEFJPEeiyW7NaN4qWdw" name="AIGoods" method="_OKb1R1JPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OEdJE1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OEdJFFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLb61FJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIGoods&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param element The root element for the XML-representation &#xD;
     *       of a &lt;code>Wish&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEdJEVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEdJElJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEdJFVJPEeiyW7NaN4qWdw" type="_NQ4XEFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEdJFlJPEeiyW7NaN4qWdw" name="AIGoods" method="_OKb1S1JPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OEdwIVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OEdwIlJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLb61VJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIGoods&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @exception XMLStreamException if a problem was encountered&#xD;
     *      during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEdJF1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEdwIFJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEdwI1JPEeiyW7NaN4qWdw" type="_NQ4XEFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEeXMFJPEeiyW7NaN4qWdw" name="setTransportDestination" method="_OKccXVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEeXMVJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEe-QFJPEeiyW7NaN4qWdw" name="getDeliveryPath" method="_OKccX1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEe-QVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEe-QlJPEeiyW7NaN4qWdw" name="dst" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEe-Q1JPEeiyW7NaN4qWdw" type="_OA--UVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEflUVJPEeiyW7NaN4qWdw" name="getIntermediatePath" method="_OKdDYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEflUlJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEflU1JPEeiyW7NaN4qWdw" name="dst" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEflVFJPEeiyW7NaN4qWdw" type="_OA--UVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEgMY1JPEeiyW7NaN4qWdw" name="carriableBy" method="_OKdDZFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEgMZFJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEgzcFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OEgzdFJPEeiyW7NaN4qWdw" name="leaveTransport" method="_OKdDa1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEgzdVJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEgzdlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OEhag1JPEeiyW7NaN4qWdw" name="joinTransport" method="_OKdDblJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEhahFJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEhahVJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEiBkFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OEiooFJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_OKdqdlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEiooVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEj2wFJPEeiyW7NaN4qWdw" name="writeChildren" visibility="protected" method="_OKdqeFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEj2wVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OElE4FJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OKdqelJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OElE4VJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OElr8lJPEeiyW7NaN4qWdw" name="readChildren" visibility="protected" method="_OKdqfFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OElr81JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEmTA1JPEeiyW7NaN4qWdw" name="readChild" visibility="protected" method="_OKdqflJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEmTBFJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NRYtYFJPEeiyW7NaN4qWdw" name="AIInGameInputHandler" isLeaf="true">
                <ownedComment xmi:id="_OLb621JPEeiyW7NaN4qWdw">
                  <body>Handles the network messages that arrives while in the game.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_OJCuIFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMNW4VJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJCuIVJPEeiyW7NaN4qWdw" value="Logger.getLogger(AIInGameInputHandler.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJCuIlJPEeiyW7NaN4qWdw" name="serverPlayer" visibility="private" isLeaf="true" type="_OBOO4lJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMN98VJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJCuJFJPEeiyW7NaN4qWdw" name="freeColServer" visibility="private" isLeaf="true" type="_OBOO4FJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMOlAFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJCuJlJPEeiyW7NaN4qWdw" name="aiMain" visibility="private" isLeaf="true" type="_NRhQQFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMOlA1JPEeiyW7NaN4qWdw"/>
                <interfaceRealization xmi:id="_OEoIMFJPEeiyW7NaN4qWdw" client="_NRYtYFJPEeiyW7NaN4qWdw" supplier="_OBMZsFJPEeiyW7NaN4qWdw" contract="_OBMZsFJPEeiyW7NaN4qWdw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKe4lFJPEeiyW7NaN4qWdw" name="AIInGameInputHandler" specification="_OEovQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKffoFJPEeiyW7NaN4qWdw" name="freeColServer" type="_OBOO4FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKffoVJPEeiyW7NaN4qWdw" name="me" type="_OBOO4lJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKffolJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKffo1JPEeiyW7NaN4qWdw" type="_NRYtYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (freeColServer == null) {&#xD;
         throw new NullPointerException(&quot;freeColServer == null&quot;);&#xD;
     } else if (me == null) {&#xD;
         throw new NullPointerException(&quot;me == null&quot;);&#xD;
     } else if (!me.isAI()) {&#xD;
         throw new RuntimeException(&quot;Applying AIInGameInputHandler to a non-AI player!&quot;);&#xD;
     } else if (aiMain == null) {&#xD;
         throw new NullPointerException(&quot;aiMain == null&quot;);&#xD;
     }&#xD;
&#xD;
     this.freeColServer = freeColServer;&#xD;
     this.serverPlayer = me;&#xD;
     this.aiMain = aiMain;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKffpFJPEeiyW7NaN4qWdw" name="getAIPlayer" specification="_NRZ7gFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKffpVJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return aiMain.getAIPlayer(serverPlayer);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKffplJPEeiyW7NaN4qWdw" name="getAIUnit" specification="_OEpWU1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKffp1JPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKffqFJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return aiMain.getAIUnit(unit);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKffqVJPEeiyW7NaN4qWdw" name="handle" specification="_OEp9YlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKffqlJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKffq1JPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKffrFJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (element == null) return null;&#xD;
     final String tag = element.getTagName();&#xD;
     Element reply = null;&#xD;
     try {&#xD;
         switch (tag) {&#xD;
         case &quot;reconnect&quot;:&#xD;
             logger.warning(&quot;Reconnect on illegal operation, refer to any previous error message.&quot;); break;&#xD;
         case &quot;chooseFoundingFather&quot;:&#xD;
             reply = chooseFoundingFather(connection, element); break;&#xD;
         case &quot;diplomacy&quot;:&#xD;
             reply = diplomacy(connection, element); break;&#xD;
         case &quot;firstContact&quot;:&#xD;
             reply = firstContact(connection, element); break;&#xD;
         case &quot;fountainOfYouth&quot;:&#xD;
             reply = fountainOfYouth(connection, element); break;&#xD;
         case &quot;indianDemand&quot;:&#xD;
             reply = indianDemand(connection, element); break;&#xD;
         case &quot;lootCargo&quot;:&#xD;
             reply = lootCargo(connection, element); break;&#xD;
         case &quot;monarchAction&quot;:&#xD;
             reply = monarchAction(connection, element); break;&#xD;
         case &quot;multiple&quot;:&#xD;
             reply = multiple(connection, element); break;&#xD;
         case &quot;newLandName&quot;:&#xD;
             reply = newLandName(connection, element); break;&#xD;
         case &quot;newRegionName&quot;:&#xD;
             reply = newRegionName(connection, element); break;&#xD;
         case &quot;setCurrentPlayer&quot;:&#xD;
             reply = setCurrentPlayer(connection, element); break;&#xD;
             &#xD;
         // Since we're the server, we can see everything.&#xD;
         // Therefore most of these messages are useless.  This&#xD;
         // may change one day.&#xD;
         case &quot;addObject&quot;: case &quot;addPlayer&quot;: case &quot;animateMove&quot;:&#xD;
         case &quot;animateAttack&quot;: case &quot;chat&quot;: case &quot;disconnect&quot;:&#xD;
         case &quot;error&quot;: case &quot;featureChange&quot;: case &quot;gameEnded&quot;:&#xD;
         case &quot;logout&quot;: case &quot;newTurn&quot;: case &quot;remove&quot;:&#xD;
         case &quot;removeGoods&quot;: case &quot;setAI&quot;: case &quot;setDead&quot;:&#xD;
         case &quot;setStance&quot;: case &quot;startGame&quot;: case &quot;update&quot;:&#xD;
         case &quot;updateGame&quot;:&#xD;
             break;&#xD;
         default:&#xD;
             logger.warning(&quot;Unknown message type: &quot; + tag);&#xD;
             break;&#xD;
         }&#xD;
     } catch (Exception e) {&#xD;
         logger.log(Level.WARNING, &quot;AI input handler for &quot; + serverPlayer&#xD;
             + &quot; caught error handling &quot; + tag, e);&#xD;
     }&#xD;
     return reply;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKffrVJPEeiyW7NaN4qWdw" name="chooseFoundingFather" specification="_OErykFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKffrlJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKffr1JPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKffsFJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Game game = aiMain.getGame();&#xD;
     final AIPlayer aiPlayer = getAIPlayer();&#xD;
&#xD;
     ChooseFoundingFatherMessage message&#xD;
         = new ChooseFoundingFatherMessage(game, element);&#xD;
     FoundingFather ff = aiPlayer.selectFoundingFather(message.getFathers());&#xD;
     logger.finest(aiPlayer.getId() + &quot; chose founding father: &quot; + ff);&#xD;
     if (ff != null) message.setFather(ff);&#xD;
     return message.toXMLElement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKffsVJPEeiyW7NaN4qWdw" name="diplomacy" specification="_OEtAsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKffslJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKffs1JPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKfftFJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Game game = freeColServer.getGame();&#xD;
     final DiplomacyMessage message = new DiplomacyMessage(game, element);&#xD;
     final DiplomaticTrade agreement = message.getAgreement();&#xD;
&#xD;
     StringBuilder sb = new StringBuilder(256);&#xD;
     sb.append(&quot;AI Diplomacy: &quot;).append(agreement);&#xD;
     TradeStatus status = getAIPlayer().acceptDiplomaticTrade(agreement);&#xD;
     agreement.setStatus(status);&#xD;
     sb.append(&quot; -> &quot;).append(agreement);&#xD;
     logger.fine(sb.toString());&#xD;
&#xD;
     return new DiplomacyMessage(message.getOurFCGO(game),&#xD;
                                 message.getOtherFCGO(game), agreement)&#xD;
         .toXMLElement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKfftVJPEeiyW7NaN4qWdw" name="firstContact" specification="_OEuO0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKfftlJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKfft1JPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKffuFJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Game game = freeColServer.getGame();&#xD;
&#xD;
     return new FirstContactMessage(game, element).setResult(true)&#xD;
         .toXMLElement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKgGsFJPEeiyW7NaN4qWdw" name="fountainOfYouth" specification="_OEu141JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKgGsVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGslJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGs1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final AIPlayer aiPlayer = getAIPlayer();&#xD;
&#xD;
     String migrants = element.getAttribute(&quot;migrants&quot;);&#xD;
     int n;&#xD;
     try {&#xD;
         n = Integer.parseInt(migrants);&#xD;
     } catch (NumberFormatException e) {&#xD;
         n = -1;&#xD;
     }&#xD;
     for (int i = 0; i &lt; n; i++) AIMessage.askEmigrate(aiPlayer, 0);&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKgGtFJPEeiyW7NaN4qWdw" name="indianDemand" specification="_OEx5MFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKgGtVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGtlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGt1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Game game = aiMain.getGame();&#xD;
     final AIPlayer aiPlayer = getAIPlayer();&#xD;
&#xD;
     IndianDemandMessage message = new IndianDemandMessage(game, element);&#xD;
     Unit unit = message.getUnit(game);&#xD;
     Colony colony = message.getColony(game);&#xD;
     GoodsType type = message.getType(game);&#xD;
     int amount = message.getAmount();&#xD;
     boolean accept = aiPlayer.indianDemand(unit, colony, type, amount);&#xD;
     message.setResult(accept);&#xD;
     logger.finest(&quot;AI handling native demand by &quot; + unit&#xD;
         + &quot; at &quot; + colony.getName() + &quot; result: &quot; + accept);&#xD;
     return message.toXMLElement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKgGuFJPEeiyW7NaN4qWdw" name="lootCargo" specification="_OEzHUVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKgGuVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGulJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGu1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Game game = freeColServer.getGame();&#xD;
     final Market market = serverPlayer.getMarket();&#xD;
&#xD;
     LootCargoMessage message = new LootCargoMessage(game, element);&#xD;
     Unit unit = message.getUnit(game);&#xD;
     List&lt;Goods> goods = message.getGoods();&#xD;
     Collections.sort(goods, new Comparator&lt;Goods>() {&#xD;
             @Override&#xD;
             public int compare(Goods g1, Goods g2) {&#xD;
                 int p1 = market.getPaidForSale(g1.getType())&#xD;
                     * g1.getAmount();&#xD;
                 int p2 = market.getPaidForSale(g2.getType())&#xD;
                     * g2.getAmount();&#xD;
                 return p2 - p1;&#xD;
             }&#xD;
         });&#xD;
     List&lt;Goods> loot = new ArrayList&lt;>();&#xD;
     int space = unit.getSpaceLeft();&#xD;
     while (!goods.isEmpty()) {&#xD;
         Goods g = goods.remove(0);&#xD;
         if (g.getSpaceTaken() > space) continue; // Approximate&#xD;
         loot.add(g);&#xD;
         space -= g.getSpaceTaken();&#xD;
     }&#xD;
     AIMessage.askLoot(getAIUnit(unit), message.getDefenderId(), loot);&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKgGvFJPEeiyW7NaN4qWdw" name="monarchAction" specification="_OE08gFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKgGvVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGvlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGv1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Game game = aiMain.getGame();&#xD;
&#xD;
     MonarchActionMessage message = new MonarchActionMessage(game, element);&#xD;
     MonarchAction action = message.getAction();&#xD;
     boolean accept;&#xD;
     switch (action) {&#xD;
     case RAISE_TAX_WAR: case RAISE_TAX_ACT:&#xD;
         accept = getAIPlayer().acceptTax(message.getTax());&#xD;
         message.setResult(accept);&#xD;
         logger.finest(&quot;AI player monarch action &quot; + action&#xD;
                       + &quot; = &quot; + accept);&#xD;
         break;&#xD;
&#xD;
     case MONARCH_MERCENARIES: case HESSIAN_MERCENARIES:&#xD;
         accept = getAIPlayer().acceptMercenaries();&#xD;
         message.setResult(accept);&#xD;
         logger.finest(&quot;AI player monarch action &quot; + action&#xD;
                       + &quot; = &quot; + accept);&#xD;
         break;&#xD;
&#xD;
     default:&#xD;
         logger.finest(&quot;AI player ignoring monarch action &quot; + action);&#xD;
         return null;&#xD;
     }&#xD;
     return message.toXMLElement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKgGwFJPEeiyW7NaN4qWdw" name="multiple" specification="_OE1jk1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKgGwVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGwlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGw1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>NodeList nodes = element.getChildNodes();&#xD;
     List&lt;Element> results = new ArrayList&lt;>();&#xD;
&#xD;
     for (int i = 0; i &lt; nodes.getLength(); i++) {&#xD;
         try {&#xD;
             Element reply = handle(connection, (Element) nodes.item(i));&#xD;
             if (reply != null) results.add(reply);&#xD;
         } catch (Exception e) {&#xD;
             logger.log(Level.WARNING, &quot;Caught crash in multiple item &quot; + i&#xD;
                 + &quot;, continuing.&quot;, e);&#xD;
         }&#xD;
     }&#xD;
     return DOMMessage.collapseElements(results);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKgGxFJPEeiyW7NaN4qWdw" name="newLandName" specification="_OE2KoVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKgGxVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGxlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgGx1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return new NewLandNameMessage(freeColServer.getGame(), element)&#xD;
         .toXMLElement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKgtwFJPEeiyW7NaN4qWdw" name="newRegionName" specification="_OE3YwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKgtwVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgtwlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgtw1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return new NewRegionNameMessage(freeColServer.getGame(), element)&#xD;
         .toXMLElement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKgtxFJPEeiyW7NaN4qWdw" name="setCurrentPlayer" specification="_OE4m4FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKgtxVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKgtxlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_OKgtx1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_OKgtyFJPEeiyW7NaN4qWdw" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKgtyVJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Game game = freeColServer.getGame();&#xD;
&#xD;
     String str = element.getAttribute(&quot;player&quot;);&#xD;
     final Player currentPlayer = game.getFreeColGameObject(str, Player.class);&#xD;
&#xD;
     if (currentPlayer != null&#xD;
         &amp;&amp; serverPlayer.getId().equals(currentPlayer.getId())) {&#xD;
         logger.finest(&quot;Starting new Thread for &quot; + serverPlayer.getName());&#xD;
         String nam = FreeCol.SERVER_THREAD + &quot;AIPlayer (&quot;&#xD;
             + serverPlayer.getName() + &quot;)&quot;;&#xD;
         new Thread(nam) {&#xD;
             @Override&#xD;
             public void run() {&#xD;
                 try {&#xD;
                     getAIPlayer().startWorking();&#xD;
                 } catch (Exception e) {&#xD;
                     logger.log(Level.SEVERE, &quot;AI player failed while working!&quot;, e);&#xD;
                 }&#xD;
                 AIMessage.askEndTurn(getAIPlayer());&#xD;
             }&#xD;
         }.start();&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NRZ7gFJPEeiyW7NaN4qWdw" name="getAIPlayer" visibility="private" method="_OKffpFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLb63VJPEeiyW7NaN4qWdw">
                    <body>Get the AI player using this &lt;code>AIInGameInputHandler&lt;/code>.&#xD;
     *&#xD;
     * @return The &lt;code>AIPlayer&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OBPdAFJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEovQFJPEeiyW7NaN4qWdw" name="AIInGameInputHandler" method="_OKe4lFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OEpWUFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OEpWUVJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLb63FJPEeiyW7NaN4qWdw">
                    <body>The constructor to use.&#xD;
     *&#xD;
     * @param freeColServer The main server.&#xD;
     * @param me The AI &lt;code>ServerPlayer&lt;/code> that is being&#xD;
     *     managed by this AIInGameInputHandler.&#xD;
     * @param aiMain The main AI-object.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEovQVJPEeiyW7NaN4qWdw" name="freeColServer" type="_OBOO4FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEovQlJPEeiyW7NaN4qWdw" name="me" type="_OBOO4lJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEovQ1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEpWUlJPEeiyW7NaN4qWdw" type="_NRYtYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEpWU1JPEeiyW7NaN4qWdw" name="getAIUnit" visibility="private" method="_OKffplJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLb63lJPEeiyW7NaN4qWdw">
                    <body>Gets the AI unit corresponding to a given unit, if any.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to look up.&#xD;
     * @return The corresponding AI unit or null if not found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OEp9YFJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEp9YVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEp9YlJPEeiyW7NaN4qWdw" name="handle" method="_OKffqVJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OEqkclJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OEqkc1JPEeiyW7NaN4qWdw" key="synchronized"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_OEqkcFJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEqkcVJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEqkdFJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OErykFJPEeiyW7NaN4qWdw" name="chooseFoundingFather" visibility="private" method="_OKffrVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OErykVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEryklJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEryk1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEtAsFJPEeiyW7NaN4qWdw" name="diplomacy" visibility="private" method="_OKffsVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEtAsVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEtAslJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEtAs1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEuO0FJPEeiyW7NaN4qWdw" name="firstContact" visibility="private" method="_OKfftVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEuO0VJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEuO0lJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEuO01JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEu141JPEeiyW7NaN4qWdw" name="fountainOfYouth" visibility="private" method="_OKgGsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEu15FJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEu15VJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEu15lJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEx5MFJPEeiyW7NaN4qWdw" name="indianDemand" visibility="private" method="_OKgGtFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEx5MVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEx5MlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEygQFJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OEzHUVJPEeiyW7NaN4qWdw" name="lootCargo" visibility="private" method="_OKgGuFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OEzHUlJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEzuYFJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OEzuYVJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OE08gFJPEeiyW7NaN4qWdw" name="monarchAction" visibility="private" method="_OKgGvFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OE08gVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE08glJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE08g1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OE1jk1JPEeiyW7NaN4qWdw" name="multiple" method="_OKgGwFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLch5lJPEeiyW7NaN4qWdw">
                    <body>Handle all the children of this element.&#xD;
     *&#xD;
     * @param connection The &lt;code>Connection&lt;/code> the element arrived on.&#xD;
     * @param element The &lt;code>Element&lt;/code> to process.&#xD;
     * @return An &lt;code>Element&lt;/code> containing the response/s.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OE1jlFJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE1jlVJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE2KoFJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OE2KoVJPEeiyW7NaN4qWdw" name="newLandName" visibility="private" method="_OKgGxFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OE2KolJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE2Ko1JPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE2KpFJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OE3YwFJPEeiyW7NaN4qWdw" name="newRegionName" visibility="private" method="_OKgtwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OE3YwVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE3YwlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE3Yw1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OE4m4FJPEeiyW7NaN4qWdw" name="setCurrentPlayer" visibility="private" method="_OKgtxFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OE4m4VJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE4m4lJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_OE5N9FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_OE5N9VJPEeiyW7NaN4qWdw" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OE4m41JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NRhQQFJPEeiyW7NaN4qWdw" name="AIMain">
                <ownedComment xmi:id="_OLch6lJPEeiyW7NaN4qWdw">
                  <body>The main AI-class.&#xD;
Keeps references to all other AI-classes.</body>
                </ownedComment>
                <generalization xmi:id="_OFGpUlJPEeiyW7NaN4qWdw" general="_OBXY0VJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJDVMVJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMPMEVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJD8QFJPEeiyW7NaN4qWdw" value="Logger.getLogger(AIMain.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJD8QVJPEeiyW7NaN4qWdw" name="freeColServer" visibility="private" isLeaf="true" type="_OBOO4FJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMPzIVJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJD8Q1JPEeiyW7NaN4qWdw" name="nextId" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJD8RVJPEeiyW7NaN4qWdw" value="1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJEjUlJPEeiyW7NaN4qWdw" name="aiObjects" visibility="private" isLeaf="true" type="_NR_xYFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMQaMFJPEeiyW7NaN4qWdw">
                  <qualifier xmi:id="_OJEjVVJPEeiyW7NaN4qWdw">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </qualifier>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJEjU1JPEeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJFKYFJPEeiyW7NaN4qWdw" name="NEXT_ID_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJFKYVJPEeiyW7NaN4qWdw" value="&quot;nextId&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJFKYlJPEeiyW7NaN4qWdw" name="COLONIAL_AI_PLAYER_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJFKY1JPEeiyW7NaN4qWdw" value="&quot;colonialAIPlayer&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJFKZFJPEeiyW7NaN4qWdw" name="GOODS_WISH_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJFKZVJPEeiyW7NaN4qWdw" value="&quot;GoodsWish&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJFKZlJPEeiyW7NaN4qWdw" name="OLD_NEXT_ID_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJFKZ1JPEeiyW7NaN4qWdw" value="&quot;nextID&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJFxcFJPEeiyW7NaN4qWdw" name="OLD_TILE_IMPROVEMENT_PLAN_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJFxcVJPEeiyW7NaN4qWdw" value="&quot;tileimprovementplan&quot;"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_OE6cEFJPEeiyW7NaN4qWdw" client="_NRhQQFJPEeiyW7NaN4qWdw" supplier="_OBWxwFJPEeiyW7NaN4qWdw" contract="_OBWxwFJPEeiyW7NaN4qWdw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKhU0lJPEeiyW7NaN4qWdw" name="AIMain" specification="_OE7DIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKhU01JPEeiyW7NaN4qWdw" name="freeColServer" type="_OBOO4FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKhU1FJPEeiyW7NaN4qWdw" type="_NRhQQFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this.freeColServer = freeColServer;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKhU1VJPEeiyW7NaN4qWdw" name="AIMain" specification="_OE7qNFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKhU1lJPEeiyW7NaN4qWdw" name="freeColServer" type="_OBOO4FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKhU11JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKhU2FJPEeiyW7NaN4qWdw" type="_NRhQQFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(freeColServer);&#xD;
&#xD;
     readFromXML(xr);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKhU2VJPEeiyW7NaN4qWdw" name="getFreeColServer" specification="_NRieYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKhU2lJPEeiyW7NaN4qWdw" type="_OBOO4FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return freeColServer;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKhU21JPEeiyW7NaN4qWdw" name="getGame" specification="_NRjFcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKhU3FJPEeiyW7NaN4qWdw" type="_OA9wMVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return freeColServer.getGame();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKh74FJPEeiyW7NaN4qWdw" name="getRandomSeed" specification="_NRjFcVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKh74VJPEeiyW7NaN4qWdw" name="logMe">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKh74lJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return randomInt(logger, logMe, freeColServer.getServerRandom(),&#xD;
                      Integer.MAX_VALUE);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKh741JPEeiyW7NaN4qWdw" name="shouldHaveAIObject" specification="_OE84UVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKh75FJPEeiyW7NaN4qWdw" name="fcgo" type="_OA9JIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKh75VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (fcgo instanceof Colony) ? true&#xD;
         : (fcgo instanceof Player)  ? ((Player)fcgo).isAI()&#xD;
         : (fcgo instanceof Unit)    ? true&#xD;
         : false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKh75lJPEeiyW7NaN4qWdw" name="findNewObjects" specification="_NRjsgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKh751JPEeiyW7NaN4qWdw" name="overwrite">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>for (FreeColGameObject fcgo : freeColServer.getGame()&#xD;
              .getFreeColGameObjects()) {&#xD;
         if (!shouldHaveAIObject(fcgo)) continue;&#xD;
         if (overwrite || getAIObject(fcgo) == null) {&#xD;
             setFreeColGameObject(fcgo.getId(), fcgo);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKh76FJPEeiyW7NaN4qWdw" name="getAIObject" specification="_OE9fYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKh76VJPEeiyW7NaN4qWdw" name="fcgo" type="_OA9JIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKh76lJPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getAIObject(fcgo.getId());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKh761JPEeiyW7NaN4qWdw" name="getAIObject" specification="_NRjsglJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKh77FJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKh77VJPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>synchronized (aiObjects) {&#xD;
         return aiObjects.get(id);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKh77lJPEeiyW7NaN4qWdw" name="addAIObject" specification="_OBZOAVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKh771JPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKh78FJPEeiyW7NaN4qWdw" name="aiObject" type="_NR_xYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>if (aiObject == null) {&#xD;
         throw new NullPointerException(&quot;aiObject == null&quot;);&#xD;
     }&#xD;
     boolean present;&#xD;
     synchronized (aiObjects) {&#xD;
         present = aiObjects.containsKey(id);&#xD;
         if (!present) aiObjects.put(id, aiObject);&#xD;
     }&#xD;
     if (present) {&#xD;
         throw new RuntimeException(&quot;AIObject already created: &quot; + id);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKh78VJPEeiyW7NaN4qWdw" name="removeAIObject" specification="_NRkTkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKh78lJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKh781JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>boolean result;&#xD;
     synchronized (aiObjects) {&#xD;
         result = aiObjects.remove(id) != null;&#xD;
     }&#xD;
     if (result) logger.finest(&quot;Removed AI object: &quot; + id);&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKii8FJPEeiyW7NaN4qWdw" name="getAIObjects" specification="_NRkTk1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKii8VJPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKii8lJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>synchronized (aiObjects) {&#xD;
         return new ArrayList&lt;>(aiObjects.values());&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKii81JPEeiyW7NaN4qWdw" name="getAIObject" specification="_OE-tgVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKii9FJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKii9VJPEeiyW7NaN4qWdw" name="returnClass" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKii9lJPEeiyW7NaN4qWdw" type="_OE9fY1JPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>AIObject aio = getAIObject(id);&#xD;
     try {&#xD;
         return returnClass.cast(aio);&#xD;
     } catch (ClassCastException e) {&#xD;
         return null;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKii91JPEeiyW7NaN4qWdw" name="getAIColony" specification="_OE_7oVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKii-FJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKii-VJPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getAIObject(colony.getId(), AIColony.class);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKii-lJPEeiyW7NaN4qWdw" name="getAIPlayer" specification="_OFAisFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKii-1JPEeiyW7NaN4qWdw" name="player" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKii_FJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getAIObject(player.getId(), AIPlayer.class);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKii_VJPEeiyW7NaN4qWdw" name="getAIUnit" specification="_OFAis1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKii_lJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKii_1JPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getAIObject(unit.getId(), AIUnit.class);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKijAFJPEeiyW7NaN4qWdw" name="getAIStatistics" specification="_NRlhsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKijAVJPEeiyW7NaN4qWdw" type="_OBU8klJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>Map&lt;String, String> stats = new HashMap&lt;>();&#xD;
     Map&lt;String, Long> objStats = new HashMap&lt;>();&#xD;
     for (AIObject aio : getAIObjects()) {&#xD;
         String className = aio.getClass().getSimpleName();&#xD;
         if (objStats.containsKey(className)) {&#xD;
             Long count = objStats.get(className);&#xD;
             count++;&#xD;
             objStats.put(className, count);&#xD;
         } else {&#xD;
             Long count = (long) 1;&#xD;
             objStats.put(className, count);&#xD;
         }&#xD;
     }&#xD;
     for (Entry&lt;String, Long> entry : objStats.entrySet()) {&#xD;
         stats.put(entry.getKey(), Long.toString(entry.getValue()));&#xD;
     }&#xD;
&#xD;
     return stats;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjKAFJPEeiyW7NaN4qWdw" name="checkIntegrity" specification="_NRmIwVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjKAVJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKjKAlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = 1;&#xD;
     for (AIObject aio : getAIObjects()) {&#xD;
         int integ = aio.checkIntegrity(fix);&#xD;
         if (integ &lt; 0 &amp;&amp; fix) {&#xD;
             logger.warning(&quot;Invalid AIObject: &quot; + aio.getId()&#xD;
                 + &quot; (&quot; + lastPart(aio.getClass().getName(), &quot;.&quot;)&#xD;
                 + &quot;), dropping.&quot;);&#xD;
             removeAIObject(aio.getId());&#xD;
             aio.dispose();&#xD;
             integ = 0;&#xD;
         }&#xD;
         result = Math.min(result, integ);&#xD;
     }&#xD;
&#xD;
     for (FreeColGameObject fcgo : getGame().getFreeColGameObjects()) {&#xD;
         if (shouldHaveAIObject(fcgo)&#xD;
             &amp;&amp; getAIObject(fcgo.getId()) == null) {&#xD;
             if (fix) {&#xD;
                 logger.warning(&quot;Added missing AIObject for: &quot; + fcgo.getId());&#xD;
                 setFreeColGameObject(fcgo.getId(), fcgo);&#xD;
                 result = 0;&#xD;
             } else {&#xD;
                 logger.warning(&quot;Missing AIObject for: &quot; + fcgo.getId());&#xD;
                 result = -1;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjKA1JPEeiyW7NaN4qWdw" name="setFreeColGameObject" specification="_OFBJw1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjKBFJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKjKBVJPEeiyW7NaN4qWdw" name="fcgo" type="_OA9JIFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>if (getAIObject(id) != null || !shouldHaveAIObject(fcgo)) return;&#xD;
     if (!id.equals(fcgo.getId())) {&#xD;
         throw new IllegalArgumentException(&quot;!id.equals(fcgo.getId())&quot;);&#xD;
     }&#xD;
     if (fcgo instanceof Colony) {&#xD;
         new AIColony(this, (Colony)fcgo);&#xD;
     } else if (fcgo instanceof ServerPlayer) {&#xD;
         ServerPlayer player = (ServerPlayer)fcgo;&#xD;
         if (player.getPlayerType() == null) {&#xD;
             // No point doing anything with the object yet, as we&#xD;
             // need the player type before we can create the&#xD;
             // right class of AI player.&#xD;
             logger.info(&quot;Temporarily ignoring incomplete AI player: &quot;&#xD;
                 + fcgo.getId());&#xD;
         } else if (player.isIndian()) {&#xD;
             new NativeAIPlayer(this, player);&#xD;
         } else if (player.isREF()) {&#xD;
             new REFAIPlayer(this, player);&#xD;
         } else if (player.isEuropean()) {&#xD;
             new EuropeanAIPlayer(this, player);&#xD;
         } else {&#xD;
             throw new IllegalArgumentException(&quot;Bogus player: &quot; + player);&#xD;
         }&#xD;
     } else if (fcgo instanceof Unit) {&#xD;
         new AIUnit(this, (Unit)fcgo);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjKBlJPEeiyW7NaN4qWdw" name="removeFreeColGameObject" specification="_NRmv0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjKB1JPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>AIObject o = getAIObject(id);&#xD;
     if (o != null) o.dispose();&#xD;
     removeAIObject(id);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjKCFJPEeiyW7NaN4qWdw" name="ownerChanged" specification="_OFCX4VJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjKCVJPEeiyW7NaN4qWdw" name="source" type="_OA9JIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKjKClJPEeiyW7NaN4qWdw" name="oldOwner" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKjKC1JPEeiyW7NaN4qWdw" name="newOwner" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>AIObject ao = getAIObject(source);&#xD;
     logger.finest(&quot;Owner changed for &quot; + source.getId()&#xD;
         + &quot; with AI object: &quot; + ao);&#xD;
     AIPlayer aiOwner = getAIPlayer(oldOwner);&#xD;
     if (aiOwner != null) {&#xD;
         if (ao instanceof AIColony) {&#xD;
             aiOwner.removeAIColony((AIColony)ao);&#xD;
         } else if (ao instanceof AIUnit) {&#xD;
             aiOwner.removeAIUnit((AIUnit)ao);&#xD;
         }&#xD;
     }&#xD;
     if (ao != null) {&#xD;
         ao.dispose();&#xD;
         setFreeColGameObject(source.getId(), source);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjKDFJPEeiyW7NaN4qWdw" name="getSpecification" specification="_NRnW4lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjKDVJPEeiyW7NaN4qWdw" type="_OAX6UVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getGame().getSpecification();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjKDlJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_OFDmAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjKD1JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>xw.writeAttribute(NEXT_ID_TAG, nextId);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjKEFJPEeiyW7NaN4qWdw" name="writeChildren" specification="_OFENElJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjKEVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeChildren(xw);&#xD;
&#xD;
     for (AIObject aio : FreeColObject.getSortedCopy(aiObjects.values())) {&#xD;
         if (aio.checkIntegrity(false) &lt; 0) {&#xD;
             // We expect to see integrity failure when AIGoods are&#xD;
             // aboard a unit that gets destroyed or if its&#xD;
             // destination is destroyed, and probably more.  These&#xD;
             // are hard to catch because AIGoods ids are not&#xD;
             // linked to the Goods ids (Goods ids are just the&#xD;
             // type ids) so we do not get notification of the&#xD;
             // Goods being destroyed.&#xD;
             aio.dispose();&#xD;
             continue;&#xD;
         }&#xD;
         if (aio instanceof Wish) {&#xD;
             if (!((Wish)aio).shouldBeStored()) continue;&#xD;
         }&#xD;
&#xD;
         try {&#xD;
             if (aio.getId() == null) {&#xD;
                 logger.warning(&quot;Null AI identifier for: &quot;&#xD;
                     + aio.getClass().getName());&#xD;
             } else {&#xD;
                 aio.toXML(xw);&#xD;
             }&#xD;
         } catch (Exception e) {&#xD;
             logger.log(Level.WARNING, &quot;Failed to write AI object: &quot; + aio,&#xD;
                 e);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjxEFJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OFE0IlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjxEVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>nextId = xr.getAttribute(NEXT_ID_TAG, -1);&#xD;
     // @compat 0.10.x&#xD;
     if (nextId &lt; 0) nextId = xr.getAttribute(OLD_NEXT_ID_TAG, 0);&#xD;
     // end @compat&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjxElJPEeiyW7NaN4qWdw" name="readChildren" specification="_OFFbMlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjxE1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>aiObjects.clear();&#xD;
&#xD;
     super.readChildren(xr);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjxFFJPEeiyW7NaN4qWdw" name="readChild" specification="_OFGCQlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjxFVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final String tag = xr.getLocalName();&#xD;
     final String oid = xr.readId();&#xD;
&#xD;
     try {&#xD;
         Wish wish = null;&#xD;
&#xD;
         // The AI data is quite shallow, so we can get away with&#xD;
         // fixing up forward references just with this simple&#xD;
         // lookup.  AIObjects that can be forward referenced must&#xD;
         // ensure they complete initialization somewhere in their&#xD;
         // serialization read* routines.&#xD;
         AIObject aio;&#xD;
         if (oid != null &amp;&amp; (aio = getAIObject(oid)) != null) {&#xD;
             aio.readFromXML(xr);&#xD;
&#xD;
         // @compat 0.10.1&#xD;
         } else if (COLONIAL_AI_PLAYER_TAG.equals(tag)) {&#xD;
             new EuropeanAIPlayer(this, xr);&#xD;
         // end @compat&#xD;
&#xD;
         } else if (AIColony.getXMLElementTagName().equals(tag)) {&#xD;
             new AIColony(this, xr);&#xD;
&#xD;
         } else if (AIGoods.getXMLElementTagName().equals(tag)) {&#xD;
             new AIGoods(this, xr);&#xD;
&#xD;
         } else if (AIPlayer.getXMLElementTagName().equals(tag)) {&#xD;
             Player p = getGame().getFreeColGameObject(oid, Player.class);&#xD;
             if (p != null) {&#xD;
                 if (p.isIndian()) {&#xD;
                     new NativeAIPlayer(this, xr);&#xD;
                 } else if (p.isREF()) {&#xD;
                     new REFAIPlayer(this, xr);&#xD;
                 } else if (p.isEuropean()) {&#xD;
                     new EuropeanAIPlayer(this, xr);&#xD;
                 } else {&#xD;
                     throw new RuntimeException(&quot;Bogus AIPlayer: &quot; + p);&#xD;
                 }&#xD;
             }&#xD;
&#xD;
         } else if (AIUnit.getXMLElementTagName().equals(tag)) {&#xD;
             new AIUnit(this, xr);&#xD;
&#xD;
         } else if (GoodsWish.getXMLElementTagName().equals(tag)&#xD;
             // @compat 0.10.3&#xD;
             || GOODS_WISH_TAG.equals(tag)&#xD;
             // end @compat&#xD;
                    ) {&#xD;
             wish = new GoodsWish(this, xr);&#xD;
&#xD;
         } else if (TileImprovementPlan.getXMLElementTagName().equals(tag)&#xD;
             // @compat 0.10.3&#xD;
             || OLD_TILE_IMPROVEMENT_PLAN_TAG.equals(tag)&#xD;
             // end @compat&#xD;
                    ) {&#xD;
             new TileImprovementPlan(this, xr);&#xD;
&#xD;
         } else if (WorkerWish.getXMLElementTagName().equals(tag)) {&#xD;
             wish = new WorkerWish(this, xr);&#xD;
         &#xD;
         } else {&#xD;
             super.readChild(xr);&#xD;
         }&#xD;
         &#xD;
         if (wish != null) {&#xD;
             AIColony ac = wish.getDestinationAIColony();&#xD;
             if (ac != null) ac.addWish(wish);&#xD;
         }&#xD;
&#xD;
     } catch (Exception e) {&#xD;
         logger.log(Level.WARNING, &quot;Exception reading AIObject: &quot;&#xD;
                    + tag + &quot;, id=&quot; + oid, e);&#xD;
         // We are hosed.  Try to resynchronize at the end of the tag&#xD;
         // or aiMain.&#xD;
         final String mainTag = getXMLElementTagName();&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjxFlJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_NRolAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjxF1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getXMLElementTagName(); </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKjxGFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_NRpMEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKjxGVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return &quot;aiMain&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NRieYFJPEeiyW7NaN4qWdw" name="getFreeColServer" method="_OKhU2VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLch7VJPEeiyW7NaN4qWdw">
                    <body>Gets the main controller object for the server.&#xD;
     *&#xD;
     * @return The &lt;code>FreeColServer&lt;/code>-object.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OE8RRVJPEeiyW7NaN4qWdw" type="_OBOO4FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NRjFcFJPEeiyW7NaN4qWdw" name="getGame" method="_OKhU21JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLch7lJPEeiyW7NaN4qWdw">
                    <body>Convenience accessor for the Game.&#xD;
     *&#xD;
     * @return The &lt;code>Game&lt;/code> this AI is operating in.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OE84UFJPEeiyW7NaN4qWdw" type="_OA9wMVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NRjFcVJPEeiyW7NaN4qWdw" name="getRandomSeed" method="_OKh74FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLch71JPEeiyW7NaN4qWdw">
                    <body>Gets a random value from the server to use for individual AI player&#xD;
     * PRNG seeds.&#xD;
     *&#xD;
     * @param logMe A logging string.&#xD;
     * @return A random seed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRjFclJPEeiyW7NaN4qWdw" name="logMe">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NRjFc1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRjsgFJPEeiyW7NaN4qWdw" name="findNewObjects" method="_OKh75lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLch8VJPEeiyW7NaN4qWdw">
                    <body>Searches for new {@link FreeColGameObject FreeColGameObjects}.&#xD;
     * An AI-object is created for each new object.&#xD;
     *&#xD;
     * @param overwrite Determines wether any old &lt;code>AIObject&lt;/code>&#xD;
     *     should be overwritten or not.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRjsgVJPEeiyW7NaN4qWdw" name="overwrite">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRjsglJPEeiyW7NaN4qWdw" name="getAIObject" method="_OKh761JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLch81JPEeiyW7NaN4qWdw">
                    <body>Gets the &lt;code>AIObject&lt;/code> for a given object identifier.&#xD;
     *&#xD;
     * @param id The object identifier.&#xD;
     * @see #getAIObject(FreeColGameObject)&#xD;
     * @return The &lt;code>AIObject&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRjsg1JPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OBZOAFJPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NRkTkFJPEeiyW7NaN4qWdw" name="removeAIObject" method="_OKh78VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdI8FJPEeiyW7NaN4qWdw">
                    <body>Removes a reference to the given &lt;code>AIObject&lt;/code>.&#xD;
     *&#xD;
     * @param id The object identifier.&#xD;
     * @return True if an object for the identifier is removed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRkTkVJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NRkTklJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRkTk1JPEeiyW7NaN4qWdw" name="getAIObjects" visibility="private" method="_OKii8FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdI8VJPEeiyW7NaN4qWdw">
                    <body>Get a copy of the list of all AI objects.&#xD;
     *&#xD;
     * @return A list of &lt;code>AIObject&lt;/code>s.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRk6oFJPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NRk6oVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRlhsFJPEeiyW7NaN4qWdw" name="getAIStatistics" method="_OKijAFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdI9VJPEeiyW7NaN4qWdw">
                    <body>Computes how many objects of each class have been created, to&#xD;
     * track memory leaks over time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFBJwlJPEeiyW7NaN4qWdw" type="_OBU8klJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NRmIwVJPEeiyW7NaN4qWdw" name="checkIntegrity" method="_OKjKAFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdI9lJPEeiyW7NaN4qWdw">
                    <body>Checks the integrity of this &lt;code>AIMain&lt;/code> by checking if&#xD;
     * there are any invalid objects.&#xD;
     *&#xD;
     * @param fix Fix problems if possible.&#xD;
     * @return Negative if there are problems remaining, zero if&#xD;
     *     problems were fixed, positive if no problems found at all.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRmIwlJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NRmIw1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRmv0FJPEeiyW7NaN4qWdw" name="removeFreeColGameObject" method="_OKjKBlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NRmv0VJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRnW4lJPEeiyW7NaN4qWdw" name="getSpecification" method="_OKjKDFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFC-81JPEeiyW7NaN4qWdw" type="_OAX6UVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NRolAFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_OKjxFlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NRolAVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NRpMEFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_OKjxGFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdI91JPEeiyW7NaN4qWdw">
                    <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;aiMain&quot;</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NRpMEVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OBZOAVJPEeiyW7NaN4qWdw" name="addAIObject" method="_OKh77lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLch9FJPEeiyW7NaN4qWdw">
                    <body>Adds a reference to the given &lt;code>AIObject&lt;/code>.&#xD;
     *&#xD;
     * @param id The object identifier.&#xD;
     * @param aiObject The &lt;code>AIObject&lt;/code> to store a reference&#xD;
     *        for.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OBZOAlJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OBZOA1JPEeiyW7NaN4qWdw" name="aiObject" type="_NR_xYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OE7DIFJPEeiyW7NaN4qWdw" name="AIMain" method="_OKhU0lJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OE7qMVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OE7qMlJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLch61JPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIMain&lt;/code> and searches the current&#xD;
     * game for &lt;code>FreeColGameObject&lt;/code>s.&#xD;
     *&#xD;
     * @param freeColServer The main controller object for the server.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OE7qMFJPEeiyW7NaN4qWdw" name="freeColServer" type="_OBOO4FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE7qM1JPEeiyW7NaN4qWdw" type="_NRhQQFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OE7qNFJPEeiyW7NaN4qWdw" name="AIMain" method="_OKhU1VJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OE8RQlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OE8RQ1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLch7FJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIMain&lt;/code> and reads the given element.&#xD;
     *&#xD;
     * @param freeColServer The main controller object for the&#xD;
     *     server.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @exception XMLStreamException if a problem was encountered&#xD;
     *     during parsing.&#xD;
     * @see #readFromXML</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OE8RQFJPEeiyW7NaN4qWdw" name="freeColServer" type="_OBOO4FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE8RQVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE8RRFJPEeiyW7NaN4qWdw" type="_NRhQQFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OE84UVJPEeiyW7NaN4qWdw" name="shouldHaveAIObject" visibility="private" method="_OKh741JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLch8FJPEeiyW7NaN4qWdw">
                    <body>Should a &lt;code>FreeColGameObject&lt;/code> have a corresponding AI&#xD;
     * object?&#xD;
     *&#xD;
     * Strictly true only for AI players and their units and colonies&#xD;
     * (not (yet) for native settlements).  However object&#xD;
     * initialization is not necessarily complete when we arrive here,&#xD;
     * which means we can not yet use the Colony or Unit owner fields.&#xD;
     * So the actual test implemented here is somewhat sloppy.&#xD;
     *&#xD;
     * @param fcgo The &lt;code>FreeColGameObject&lt;/code> to test.&#xD;
     * @return True if a corresponding AI object is needed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OE84UlJPEeiyW7NaN4qWdw" name="fcgo" type="_OA9JIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE84U1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OE9fYFJPEeiyW7NaN4qWdw" name="getAIObject" method="_OKh76FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLch8lJPEeiyW7NaN4qWdw">
                    <body>Gets the &lt;code>AIObject&lt;/code> for the given&#xD;
     * &lt;code>FreeColGameObject&lt;/code>.&#xD;
     *&#xD;
     * @param fcgo The &lt;code>FreeColGameObject&lt;/code> to find the&#xD;
     *     &lt;code>AIObject&lt;/code> for.&#xD;
     * @see #getAIObject(String)&#xD;
     * @return The &lt;code>AIObject&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OE9fYVJPEeiyW7NaN4qWdw" name="fcgo" type="_OA9JIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE9fYlJPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OE-tgVJPEeiyW7NaN4qWdw" name="getAIObject" method="_OKii81JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OE-tglJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OE-tg1JPEeiyW7NaN4qWdw" name="returnClass" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE_UkVJPEeiyW7NaN4qWdw" type="_OE9fY1JPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OE_7oVJPEeiyW7NaN4qWdw" name="getAIColony" method="_OKii91JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdI8lJPEeiyW7NaN4qWdw">
                    <body>Gets the AI colony corresponding to a given colony.&#xD;
     *&#xD;
     * @param colony The &lt;code>Colony&lt;/code> to look up.&#xD;
     * @return The corresponding AI colony, or null if not found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OE_7olJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OE_7o1JPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFAisFJPEeiyW7NaN4qWdw" name="getAIPlayer" method="_OKii-lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdI81JPEeiyW7NaN4qWdw">
                    <body>Gets the AI player corresponding to a given player.&#xD;
     *&#xD;
     * @param player The &lt;code>Player&lt;/code> to look up.&#xD;
     * @return The corresponding AI player, or null if not found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFAisVJPEeiyW7NaN4qWdw" name="player" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFAislJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFAis1JPEeiyW7NaN4qWdw" name="getAIUnit" method="_OKii_VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdI9FJPEeiyW7NaN4qWdw">
                    <body>Gets the AI unit corresponding to a given unit.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to look up.&#xD;
     * @return The corresponding AI unit, or null if not found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFBJwFJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFBJwVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFBJw1JPEeiyW7NaN4qWdw" name="setFreeColGameObject" method="_OKjKA1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFBw0FJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFBw0VJPEeiyW7NaN4qWdw" name="fcgo" type="_OA9JIFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFCX4VJPEeiyW7NaN4qWdw" name="ownerChanged" method="_OKjKCFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFCX4lJPEeiyW7NaN4qWdw" name="source" type="_OA9JIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFCX41JPEeiyW7NaN4qWdw" name="oldOwner" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFCX5FJPEeiyW7NaN4qWdw" name="newOwner" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFDmAFJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_OKjKDlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFDmAVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFENElJPEeiyW7NaN4qWdw" name="writeChildren" visibility="protected" method="_OKjKEFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFENE1JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFE0IlJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OKjxEFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFE0I1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFFbMlJPEeiyW7NaN4qWdw" name="readChildren" visibility="protected" method="_OKjxElJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFFbM1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFGCQlJPEeiyW7NaN4qWdw" name="readChild" visibility="protected" method="_OKjxFFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFGCQ1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NRvSsFJPEeiyW7NaN4qWdw" name="AIMessage">
                <ownedComment xmi:id="_OLdI-FJPEeiyW7NaN4qWdw">
                  <body>Wrapper class for AI message handling.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_OJFxclJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMQaM1JPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJFxc1JPEeiyW7NaN4qWdw" value="Logger.getLogger(AIMessage.class.getName())"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKkYIFJPEeiyW7NaN4qWdw" name="ask" specification="_OFH3cFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKkYIVJPEeiyW7NaN4qWdw" name="conn" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKkYIlJPEeiyW7NaN4qWdw" name="request" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKkYI1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>Element reply;&#xD;
     try {&#xD;
         reply = conn.ask(request);&#xD;
     } catch (IOException e) {&#xD;
         logger.log(Level.WARNING, &quot;Could not send \&quot;&quot;&#xD;
             + request.getTagName() + &quot;\&quot;-message.&quot;, e);&#xD;
         reply = null;&#xD;
     }&#xD;
     return reply;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKkYJFJPEeiyW7NaN4qWdw" name="checkError" specification="_OFIegVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKkYJVJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKkYJlJPEeiyW7NaN4qWdw" name="tag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKkYJ1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (element != null &amp;&amp; &quot;error&quot;.equals(element.getTagName())) {&#xD;
         String messageId = element.getAttribute(&quot;messageID&quot;);&#xD;
         String messageText = element.getAttribute(&quot;message&quot;);&#xD;
         logger.warning(&quot;AIMessage.&quot; + tag + &quot; error,&quot;&#xD;
             + &quot; messageId: &quot; + messageId&#xD;
             + &quot; message: &quot; + messageText);&#xD;
         return true;&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKkYKFJPEeiyW7NaN4qWdw" name="askHandling" specification="_OFIehVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKkYKVJPEeiyW7NaN4qWdw" name="conn" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKkYKlJPEeiyW7NaN4qWdw" name="request" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKkYK1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>while (request != null) {&#xD;
         Element reply = ask(conn, request);&#xD;
         if (reply == null) break;&#xD;
         if (checkError(reply, request.getTagName())) return false;&#xD;
         try {&#xD;
             request = conn.handle(reply);&#xD;
         } catch (FreeColException fce) {&#xD;
             logger.log(Level.WARNING, &quot;AI handler failed: &quot; + reply, fce);&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKk_MFJPEeiyW7NaN4qWdw" name="askExpecting" specification="_OFJFklJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKk_MVJPEeiyW7NaN4qWdw" name="conn" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKk_MlJPEeiyW7NaN4qWdw" name="request" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKk_M1JPEeiyW7NaN4qWdw" name="expect">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKk_NFJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>Element reply = ask(conn, request);&#xD;
     if (checkError(reply, request.getTagName())&#xD;
         || reply == null) return null;&#xD;
    &#xD;
     final String tag = reply.getTagName();&#xD;
     if (&quot;multiple&quot;.equals(tag)) {&#xD;
         List&lt;Element> replies = new ArrayList&lt;>();&#xD;
         NodeList nodes = reply.getChildNodes();&#xD;
         Element result = null;&#xD;
&#xD;
         for (int i = 0; i &lt; nodes.getLength(); i++) {&#xD;
             if (nodes.item(i) instanceof Element&#xD;
                 &amp;&amp; ((Element)nodes.item(i)).getTagName().equals(expect)) {&#xD;
                 result = (Element)nodes.item(i);&#xD;
                 continue;&#xD;
             }&#xD;
             try {&#xD;
                 Element e = conn.handle((Element)nodes.item(i));&#xD;
                 if (e != null) replies.add(e);&#xD;
             } catch (FreeColException fce) {&#xD;
                 logger.log(Level.WARNING, &quot;AI handler failed: &quot; + reply, fce);&#xD;
             }&#xD;
         }&#xD;
         if (!askHandling(conn, DOMMessage.collapseElements(replies))&#xD;
             || result == null) return null;&#xD;
         reply = result;&#xD;
     }&#xD;
&#xD;
     if (expect.equals(reply.getTagName())) return reply;&#xD;
     logger.log(Level.WARNING, &quot;AI handler expected &quot; + expect&#xD;
         + &quot;, recieved &quot; + tag);&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKk_NVJPEeiyW7NaN4qWdw" name="sendMessage" specification="_OFJsoFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKk_NlJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKk_N1JPEeiyW7NaN4qWdw" name="request" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKk_OFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return askHandling(connection, request);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKk_OVJPEeiyW7NaN4qWdw" name="sendMessage" specification="_OFJspFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKk_OlJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKk_O1JPEeiyW7NaN4qWdw" name="message" type="_OBJ9cVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKk_PFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (connection != null &amp;&amp; message != null)&#xD;
         ? sendMessage(connection, message.toXMLElement())&#xD;
         : false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKk_PVJPEeiyW7NaN4qWdw" name="sendTrivial" specification="_OFKTsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKk_PlJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKk_P1JPEeiyW7NaN4qWdw" name="tag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKk_QFJPEeiyW7NaN4qWdw" name="attributes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKk_QVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKk_QlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(connection, makeTrivial(tag, attributes));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKk_Q1JPEeiyW7NaN4qWdw" name="makeTrivial" specification="_NRxu8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKk_RFJPEeiyW7NaN4qWdw" name="tag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKk_RVJPEeiyW7NaN4qWdw" name="attributes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKk_RlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKk_R1JPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if ((attributes.length &amp; 1) == 1) {&#xD;
         throw new IllegalArgumentException(&quot;Attributes list must have even length&quot;);&#xD;
     }&#xD;
     return DOMMessage.createMessage(tag, attributes);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKlmQFJPEeiyW7NaN4qWdw" name="askAttack" specification="_OFK6wlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKlmQVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKlmQlJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKlmQ1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new AttackMessage(aiUnit.getUnit(), direction));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKlmRFJPEeiyW7NaN4qWdw" name="askBuildColony" specification="_OB3IEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKlmRVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKlmRlJPEeiyW7NaN4qWdw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKlmR1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new BuildColonyMessage(name, aiUnit.getUnit()));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKlmSFJPEeiyW7NaN4qWdw" name="askCashInTreasureTrain" specification="_OB3vIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKlmSVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKlmSlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new CashInTreasureTrainMessage(aiUnit.getUnit()));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKlmS1JPEeiyW7NaN4qWdw" name="askChangeState" specification="_OFLh0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKlmTFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKlmTVJPEeiyW7NaN4qWdw" name="state" type="_OBgiwVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKlmTlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new ChangeStateMessage(aiUnit.getUnit(), state));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKlmT1JPEeiyW7NaN4qWdw" name="askChangeWorkType" specification="_OFMI4FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKlmUFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKlmUVJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKlmUlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new ChangeWorkTypeMessage(aiUnit.getUnit(), type));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKlmU1JPEeiyW7NaN4qWdw" name="askChangeWorkImprovementType" specification="_OFMI5FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKlmVFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKlmVVJPEeiyW7NaN4qWdw" name="type" type="_OAYhYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKlmVlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
         new ChangeWorkImprovementTypeMessage(aiUnit.getUnit(), type));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKmNUFJPEeiyW7NaN4qWdw" name="askClaimLand" specification="_OFMv8VJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKmNUVJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKmNUlJPEeiyW7NaN4qWdw" name="claimant" type="_NR_xYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKmNU1JPEeiyW7NaN4qWdw" name="price">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKmNVFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>FreeColGameObject fcgo;&#xD;
     Player owner;&#xD;
     if (claimant instanceof AIUnit) {&#xD;
         fcgo = ((AIUnit)claimant).getUnit();&#xD;
         owner = ((Unit)fcgo).getOwner();&#xD;
     } else if (claimant instanceof AIColony) {&#xD;
         fcgo = ((AIColony)claimant).getColony();&#xD;
         owner = ((Colony)fcgo).getOwner();&#xD;
     } else {&#xD;
         throw new IllegalArgumentException(&quot;Claimant must be an AIUnit&quot;&#xD;
             + &quot; or AIColony: &quot; + claimant.getId());&#xD;
     }&#xD;
     return sendMessage(claimant.getAIMain().getAIPlayer(owner)&#xD;
         .getConnection(), new ClaimLandMessage(tile, fcgo, price));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKmNVVJPEeiyW7NaN4qWdw" name="askClearSpeciality" specification="_OB49QFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKmNVlJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKmNV1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new ClearSpecialityMessage(aiUnit.getUnit()));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKmNWFJPEeiyW7NaN4qWdw" name="askCloseTransaction" specification="_OFNXAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKmNWVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKmNWlJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKmNW1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new CloseTransactionMessage(aiUnit.getUnit(),&#xD;
                                                    settlement));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKmNXFJPEeiyW7NaN4qWdw" name="askDeliverGift" specification="_OFNXBFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKmNXVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKmNXlJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKmNX1JPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKmNYFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new DeliverGiftMessage(aiUnit.getUnit(),&#xD;
                                               settlement, goods));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKm0YFJPEeiyW7NaN4qWdw" name="askDisband" specification="_OB5kUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKm0YVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKm0YlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new DisbandUnitMessage(aiUnit.getUnit()));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKm0Y1JPEeiyW7NaN4qWdw" name="askDisembark" specification="_OB6LYVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKm0ZFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKm0ZVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new DisembarkMessage(aiUnit.getUnit()));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKm0ZlJPEeiyW7NaN4qWdw" name="askEmbark" specification="_OFN-EVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKm0Z1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKm0aFJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKm0aVJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKm0alJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new EmbarkMessage(unit, aiUnit.getUnit(),&#xD;
                                          direction));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKm0a1JPEeiyW7NaN4qWdw" name="askEmigrate" specification="_OB6ycFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKm0bFJPEeiyW7NaN4qWdw" name="aiPlayer" type="_NSHGIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKm0bVJPEeiyW7NaN4qWdw" name="slot">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKm0blJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiPlayer.getConnection(),&#xD;
                        new EmigrateUnitMessage(slot));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKm0b1JPEeiyW7NaN4qWdw" name="askEndTurn" specification="_OB6ydFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKm0cFJPEeiyW7NaN4qWdw" name="aiPlayer" type="_NSHGIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKm0cVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendTrivial(aiPlayer.getConnection(), &quot;endTurn&quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKnbcFJPEeiyW7NaN4qWdw" name="askEquipForRole" specification="_OFN-FlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKnbcVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbclJPEeiyW7NaN4qWdw" name="role" type="_OAWsMVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbc1JPEeiyW7NaN4qWdw" name="roleCount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKnbdFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
         new EquipForRoleMessage(aiUnit.getUnit(), role, roleCount));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKnbdVJPEeiyW7NaN4qWdw" name="askEstablishMission" specification="_OFOlJFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKnbdlJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbd1JPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbeFJPEeiyW7NaN4qWdw" name="denounce">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKnbeVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new MissionaryMessage(aiUnit.getUnit(), direction,&#xD;
                                              denounce));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKnbelJPEeiyW7NaN4qWdw" name="askGetNationSummary" specification="_OFPMMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKnbe1JPEeiyW7NaN4qWdw" name="owner" type="_NSHGIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbfFJPEeiyW7NaN4qWdw" name="player" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbfVJPEeiyW7NaN4qWdw" type="_OBf7sVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>Element reply = askExpecting(owner.getConnection(),&#xD;
         new GetNationSummaryMessage(player).toXMLElement(),&#xD;
         GetNationSummaryMessage.getXMLElementTagName());&#xD;
     return new GetNationSummaryMessage(reply).getNationSummary();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKnbflJPEeiyW7NaN4qWdw" name="askGetTransaction" specification="_OFPMNFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKnbf1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbgFJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbgVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new GetTransactionMessage(aiUnit.getUnit(),&#xD;
                                                  settlement));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKnbglJPEeiyW7NaN4qWdw" name="askIndianDemand" specification="_OFPMOFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKnbg1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbhFJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbhVJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKnbhlJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKnbh1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Element reply = askExpecting(aiUnit.getAIOwner().getConnection(),&#xD;
         new IndianDemandMessage(aiUnit.getUnit(), colony,&#xD;
                                 type, amount).toXMLElement(),&#xD;
         IndianDemandMessage.getXMLElementTagName());&#xD;
     return new IndianDemandMessage(colony.getGame(), reply).getResult();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKoCgFJPEeiyW7NaN4qWdw" name="askLoadGoods" specification="_OFPzRFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKoCgVJPEeiyW7NaN4qWdw" name="loc" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoCglJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoCg1JPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKoChFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoChVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
         new LoadGoodsMessage(loc, type, amount, aiUnit.getUnit()));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKoChlJPEeiyW7NaN4qWdw" name="askLoot" specification="_OFQaUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKoCh1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoCiFJPEeiyW7NaN4qWdw" name="defenderId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKoCiVJPEeiyW7NaN4qWdw" name="goods" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoCilJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new LootCargoMessage(aiUnit.getUnit(), defenderId,&#xD;
                                             goods));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKoCi1JPEeiyW7NaN4qWdw" name="askMove" specification="_OFRBYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKoCjFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoCjVJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoCjlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new MoveMessage(aiUnit.getUnit(), direction));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKoCj1JPEeiyW7NaN4qWdw" name="askMoveTo" specification="_OFRBZFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKoCkFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoCkVJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoCklJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new MoveToMessage(aiUnit.getUnit(), destination));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKoCk1JPEeiyW7NaN4qWdw" name="askPutOutsideColony" specification="_OB8AkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKoClFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoClVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new PutOutsideColonyMessage(aiUnit.getUnit()));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKopkFJPEeiyW7NaN4qWdw" name="askRearrangeColony" specification="_OFRocVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKopkVJPEeiyW7NaN4qWdw" name="aiColony" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKopklJPEeiyW7NaN4qWdw" name="workers" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKopk1JPEeiyW7NaN4qWdw" name="scratch" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoplFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Colony colony = aiColony.getColony();&#xD;
     RearrangeColonyMessage message = new RearrangeColonyMessage(colony);&#xD;
     for (Unit u : workers) {&#xD;
         Unit su = scratch.getCorresponding(u);&#xD;
         if (u.getLocation().getId().equals(su.getLocation().getId())&#xD;
             &amp;&amp; u.getWorkType() == su.getWorkType()&#xD;
             &amp;&amp; u.getRole() == su.getRole()&#xD;
             &amp;&amp; u.getRoleCount() == su.getRoleCount()) continue;&#xD;
         message.addChange(u,&#xD;
             (Location)colony.getCorresponding((FreeColObject)su.getLocation()),&#xD;
             su.getWorkType(), su.getRole(), su.getRoleCount());&#xD;
     }&#xD;
     return (message.isEmpty()) ? false&#xD;
         : sendMessage(aiColony.getAIOwner().getConnection(), message);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKoplVJPEeiyW7NaN4qWdw" name="askScoutSpeakToChief" specification="_OFSPgVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKopllJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKopl1JPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKopmFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new ScoutSpeakToChiefMessage(aiUnit.getUnit(), &#xD;
                                                     direction));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKopmVJPEeiyW7NaN4qWdw" name="askSetBuildQueue" specification="_OFS2kFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKopmlJPEeiyW7NaN4qWdw" name="aiColony" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKopm1JPEeiyW7NaN4qWdw" name="queue" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKopnFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiColony.getAIOwner().getConnection(),&#xD;
                        new SetBuildQueueMessage(aiColony.getColony(),&#xD;
                                                 queue));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKopnVJPEeiyW7NaN4qWdw" name="askTrainUnitInEurope" specification="_OFTdoFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKopnlJPEeiyW7NaN4qWdw" name="aiPlayer" type="_NSHGIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKopn1JPEeiyW7NaN4qWdw" name="type" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKopoFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiPlayer.getConnection(),&#xD;
                        new TrainUnitInEuropeMessage(type));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKopoVJPEeiyW7NaN4qWdw" name="askUnloadGoods" specification="_OFUEsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKopolJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKopo1JPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKoppFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKoppVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
         new UnloadGoodsMessage(type, amount, aiUnit.getUnit()));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKopplJPEeiyW7NaN4qWdw" name="askWork" specification="_OFUEtVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKpQoFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKpQoVJPEeiyW7NaN4qWdw" name="workLocation" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKpQolJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return sendMessage(aiUnit.getAIOwner().getConnection(),&#xD;
                        new WorkMessage(aiUnit.getUnit(), workLocation));&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NRxu8FJPEeiyW7NaN4qWdw" name="makeTrivial" isStatic="true" method="_OKk_Q1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NRxu8VJPEeiyW7NaN4qWdw" name="tag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NRxu8lJPEeiyW7NaN4qWdw" name="attributes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NRyWAFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFK6wVJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OB3IEFJPEeiyW7NaN4qWdw" name="askBuildColony" isStatic="true" method="_OKlmRFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OB3IEVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OB3IElJPEeiyW7NaN4qWdw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OB3IE1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OB3vIFJPEeiyW7NaN4qWdw" name="askCashInTreasureTrain" isStatic="true" method="_OKlmSFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OB3vIVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OB4WMFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OB49QFJPEeiyW7NaN4qWdw" name="askClearSpeciality" isStatic="true" method="_OKmNVVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OB49QVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OB49QlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OB5kUFJPEeiyW7NaN4qWdw" name="askDisband" isStatic="true" method="_OKm0YFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OB5kUVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OB6LYFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OB6LYVJPEeiyW7NaN4qWdw" name="askDisembark" isStatic="true" method="_OKm0Y1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OB6LYlJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OB6LY1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OB6ycFJPEeiyW7NaN4qWdw" name="askEmigrate" isStatic="true" method="_OKm0a1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OB6ycVJPEeiyW7NaN4qWdw" name="aiPlayer" type="_NSHGIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OB6yclJPEeiyW7NaN4qWdw" name="slot">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OB6yc1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OB6ydFJPEeiyW7NaN4qWdw" name="askEndTurn" isStatic="true" method="_OKm0b1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OB6ydVJPEeiyW7NaN4qWdw" name="aiPlayer" type="_NSHGIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OB6ydlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OB8AkFJPEeiyW7NaN4qWdw" name="askPutOutsideColony" isStatic="true" method="_OKoCk1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OB8AkVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OB8AklJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFH3cFJPEeiyW7NaN4qWdw" name="ask" visibility="private" isStatic="true" method="_OKkYIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFH3cVJPEeiyW7NaN4qWdw" name="conn" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFH3clJPEeiyW7NaN4qWdw" name="request" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFIegFJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFIegVJPEeiyW7NaN4qWdw" name="checkError" visibility="private" isStatic="true" method="_OKkYJFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFIeglJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFIeg1JPEeiyW7NaN4qWdw" name="tag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFIehFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFIehVJPEeiyW7NaN4qWdw" name="askHandling" visibility="private" isStatic="true" method="_OKkYKFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFIehlJPEeiyW7NaN4qWdw" name="conn" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFJFkFJPEeiyW7NaN4qWdw" name="request" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFJFkVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFJFklJPEeiyW7NaN4qWdw" name="askExpecting" visibility="private" isStatic="true" method="_OKk_MFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFJFk1JPEeiyW7NaN4qWdw" name="conn" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFJFlFJPEeiyW7NaN4qWdw" name="request" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFJFlVJPEeiyW7NaN4qWdw" name="expect">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFJFllJPEeiyW7NaN4qWdw" type="_OAkHkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFJsoFJPEeiyW7NaN4qWdw" name="sendMessage" visibility="private" isStatic="true" method="_OKk_NVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFJsoVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFJsolJPEeiyW7NaN4qWdw" name="request" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFJso1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFJspFJPEeiyW7NaN4qWdw" name="sendMessage" visibility="private" isStatic="true" method="_OKk_OVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFJspVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFJsplJPEeiyW7NaN4qWdw" name="message" type="_OBJ9cVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFJsp1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFKTsFJPEeiyW7NaN4qWdw" name="sendTrivial" isStatic="true" method="_OKk_PVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFKTsVJPEeiyW7NaN4qWdw" name="connection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFKTslJPEeiyW7NaN4qWdw" name="tag">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFKTs1JPEeiyW7NaN4qWdw" name="attributes">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OFKTtlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFKTtFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFK6wlJPEeiyW7NaN4qWdw" name="askAttack" isStatic="true" method="_OKlmQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFK6w1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFK6xFJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFK6xVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFLh0FJPEeiyW7NaN4qWdw" name="askChangeState" isStatic="true" method="_OKlmS1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFLh0VJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFLh0lJPEeiyW7NaN4qWdw" name="state" type="_OBgiwVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFLh01JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFMI4FJPEeiyW7NaN4qWdw" name="askChangeWorkType" isStatic="true" method="_OKlmT1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFMI4VJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFMI4lJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFMI41JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFMI5FJPEeiyW7NaN4qWdw" name="askChangeWorkImprovementType" isStatic="true" method="_OKlmU1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFMI5VJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFMI5lJPEeiyW7NaN4qWdw" name="type" type="_OAYhYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFMv8FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFMv8VJPEeiyW7NaN4qWdw" name="askClaimLand" isStatic="true" method="_OKmNUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFMv8lJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFMv81JPEeiyW7NaN4qWdw" name="claimant" type="_NR_xYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFMv9FJPEeiyW7NaN4qWdw" name="price">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFMv9VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFNXAFJPEeiyW7NaN4qWdw" name="askCloseTransaction" isStatic="true" method="_OKmNWFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFNXAVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFNXAlJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFNXA1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFNXBFJPEeiyW7NaN4qWdw" name="askDeliverGift" isStatic="true" method="_OKmNXFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFNXBVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFNXBlJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFNXB1JPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFN-EFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFN-EVJPEeiyW7NaN4qWdw" name="askEmbark" isStatic="true" method="_OKm0ZlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFN-ElJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFN-E1JPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFN-FFJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFN-FVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFN-FlJPEeiyW7NaN4qWdw" name="askEquipForRole" isStatic="true" method="_OKnbcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFOlIFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFOlIVJPEeiyW7NaN4qWdw" name="role" type="_OAWsMVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFOlIlJPEeiyW7NaN4qWdw" name="roleCount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFOlI1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFOlJFJPEeiyW7NaN4qWdw" name="askEstablishMission" isStatic="true" method="_OKnbdVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFOlJVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFOlJlJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFOlJ1JPEeiyW7NaN4qWdw" name="denounce">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFOlKFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFPMMFJPEeiyW7NaN4qWdw" name="askGetNationSummary" isStatic="true" method="_OKnbelJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFPMMVJPEeiyW7NaN4qWdw" name="owner" type="_NSHGIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFPMMlJPEeiyW7NaN4qWdw" name="player" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFPMM1JPEeiyW7NaN4qWdw" type="_OBf7sVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFPMNFJPEeiyW7NaN4qWdw" name="askGetTransaction" isStatic="true" method="_OKnbflJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFPMNVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFPMNlJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFPMN1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFPMOFJPEeiyW7NaN4qWdw" name="askIndianDemand" isStatic="true" method="_OKnbglJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFPMOVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFPzQFJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFPzQVJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFPzQlJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFPzQ1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFPzRFJPEeiyW7NaN4qWdw" name="askLoadGoods" isStatic="true" method="_OKoCgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFPzRVJPEeiyW7NaN4qWdw" name="loc" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFPzRlJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFPzR1JPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFPzSFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFPzSVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFQaUFJPEeiyW7NaN4qWdw" name="askLoot" isStatic="true" method="_OKoChlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFQaUVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFQaUlJPEeiyW7NaN4qWdw" name="defenderId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFQaU1JPEeiyW7NaN4qWdw" name="goods" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFQaVFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFRBYFJPEeiyW7NaN4qWdw" name="askMove" isStatic="true" method="_OKoCi1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFRBYVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFRBYlJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFRBY1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFRBZFJPEeiyW7NaN4qWdw" name="askMoveTo" isStatic="true" method="_OKoCj1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFRBZVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFRBZlJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFRocFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFRocVJPEeiyW7NaN4qWdw" name="askRearrangeColony" isStatic="true" method="_OKopkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFRoclJPEeiyW7NaN4qWdw" name="aiColony" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFRoc1JPEeiyW7NaN4qWdw" name="workers" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFRodFJPEeiyW7NaN4qWdw" name="scratch" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFRodVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFSPgVJPEeiyW7NaN4qWdw" name="askScoutSpeakToChief" isStatic="true" method="_OKoplVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFSPglJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFSPg1JPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFSPhFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFS2kFJPEeiyW7NaN4qWdw" name="askSetBuildQueue" isStatic="true" method="_OKopmVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFS2kVJPEeiyW7NaN4qWdw" name="aiColony" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFS2klJPEeiyW7NaN4qWdw" name="queue" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFS2k1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFTdoFJPEeiyW7NaN4qWdw" name="askTrainUnitInEurope" isStatic="true" method="_OKopnVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFTdoVJPEeiyW7NaN4qWdw" name="aiPlayer" type="_NSHGIFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFTdolJPEeiyW7NaN4qWdw" name="type" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFTdo1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFUEsFJPEeiyW7NaN4qWdw" name="askUnloadGoods" isStatic="true" method="_OKopoVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFUEsVJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFUEslJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFUEs1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFUEtFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFUEtVJPEeiyW7NaN4qWdw" name="askWork" isStatic="true" method="_OKopplJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFUrwFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFUrwVJPEeiyW7NaN4qWdw" name="workLocation" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFUrwlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NR_xYFJPEeiyW7NaN4qWdw" name="AIObject" isAbstract="true">
                <ownedComment xmi:id="_OLdI-VJPEeiyW7NaN4qWdw">
                  <body>An &lt;code>AIObject&lt;/code> contains AI-related information and methods.&#xD;
Each &lt;code>FreeColGameObject&lt;/code>, that is owned by an AI-controlled&#xD;
player, can have a single &lt;code>AIObject&lt;/code> attached to it.</body>
                </ownedComment>
                <generalization xmi:id="_OFWg9lJPEeiyW7NaN4qWdw" general="_OBXY0VJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJGYgFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMRBQVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJG_kFJPEeiyW7NaN4qWdw" value="Logger.getLogger(FreeColObject.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJG_lVJPEeiyW7NaN4qWdw" name="aiMain" visibility="private" isLeaf="true" type="_NRhQQFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMRoUFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJHmoFJPEeiyW7NaN4qWdw" name="uninitialized" visibility="protected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJHmoVJPEeiyW7NaN4qWdw" value="false"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKpQo1JPEeiyW7NaN4qWdw" name="AIObject" specification="_OCCHMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKpQpFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKpQpVJPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this.aiMain = aiMain;&#xD;
     uninitialized = true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3sFJPEeiyW7NaN4qWdw" name="AIObject" specification="_OCCuQ1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKp3sVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKp3slJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKp3s1JPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(aiMain);&#xD;
&#xD;
     if (id != null) {&#xD;
         setId(id);&#xD;
         aiMain.addAIObject(id, this);&#xD;
     }&#xD;
     uninitialized = true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3tFJPEeiyW7NaN4qWdw" name="AIObject" specification="_OFV54FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKp3tVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKp3tlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKp3t1JPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(aiMain);&#xD;
&#xD;
     readFromXMLElement(element);&#xD;
     addAIObjectWithId();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3uFJPEeiyW7NaN4qWdw" name="AIObject" specification="_OFV55lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKp3uVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKp3ulJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKp3u1JPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(aiMain);&#xD;
&#xD;
     readFromXML(xr);&#xD;
     addAIObjectWithId();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3vFJPEeiyW7NaN4qWdw" name="getAIMain" specification="_NSBmkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKp3vVJPEeiyW7NaN4qWdw" type="_NRhQQFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return aiMain;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3vlJPEeiyW7NaN4qWdw" name="getGame" specification="_NSBmkVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKp3v1JPEeiyW7NaN4qWdw" type="_OA9wMVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return aiMain.getGame();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3wFJPEeiyW7NaN4qWdw" name="isUninitialized" specification="_NSBmklJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKp3wVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return uninitialized;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3wlJPEeiyW7NaN4qWdw" name="dispose" specification="_NSCNoFJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>getAIMain().removeAIObject(getId());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3w1JPEeiyW7NaN4qWdw" name="isDisposed" specification="_NSCNoVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKp3xFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getAIMain().getAIObject(getId()) == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3xVJPEeiyW7NaN4qWdw" name="addAIObjectWithId" specification="_NSCNo1JPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>if (getId() != null) aiMain.addAIObject(getId(), this);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3xlJPEeiyW7NaN4qWdw" name="getSpecification" specification="_NSCNpFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKp3x1JPEeiyW7NaN4qWdw" type="_OAX6UVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getGame().getSpecification();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKp3yFJPEeiyW7NaN4qWdw" name="checkIntegrity" specification="_NSC0slJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKp3yVJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKp3ylJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (isUninitialized()) ? -1 : 1;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NSBmkFJPEeiyW7NaN4qWdw" name="getAIMain" isLeaf="true" method="_OKp3vFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwBFJPEeiyW7NaN4qWdw">
                    <body>Convenience accessor for the main AI-object.&#xD;
     *&#xD;
     * @return The &lt;code>AIMain&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCDVUFJPEeiyW7NaN4qWdw" type="_NRhQQFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSBmkVJPEeiyW7NaN4qWdw" name="getGame" isLeaf="true" method="_OKp3vlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwBVJPEeiyW7NaN4qWdw">
                    <body>Convenience accessor for the game.&#xD;
     *&#xD;
     * @return The &lt;code>Game&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFWg9FJPEeiyW7NaN4qWdw" type="_OA9wMVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSBmklJPEeiyW7NaN4qWdw" name="isUninitialized" isLeaf="true" method="_OKp3wFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwBlJPEeiyW7NaN4qWdw">
                    <body>Checks if this &lt;code>AIObject&lt;/code>&#xD;
     * is uninitialized. That is: it has been referenced&#xD;
     * by another object, but has not yet been updated with&#xD;
     * {@link #readFromXML}.&#xD;
     *&#xD;
     * @return &lt;code>true&lt;/code> if this object is not initialized.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSBmk1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSCNoFJPEeiyW7NaN4qWdw" name="dispose" method="_OKp3wlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwB1JPEeiyW7NaN4qWdw">
                    <body>Disposes this &lt;code>AIObject&lt;/code> by removing the reference&#xD;
     * to this object from the enclosing AIMain.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NSCNoVJPEeiyW7NaN4qWdw" name="isDisposed" isLeaf="true" method="_OKp3w1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwCFJPEeiyW7NaN4qWdw">
                    <body>Has this AIObject been disposed?&#xD;
     *&#xD;
     * @return True if this AIObject was disposed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSCNolJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSCNo1JPEeiyW7NaN4qWdw" name="addAIObjectWithId" visibility="protected" isLeaf="true" method="_OKp3xVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwCVJPEeiyW7NaN4qWdw">
                    <body>Adds this object to the AI main if it has a non-null identifier.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NSCNpFJPEeiyW7NaN4qWdw" name="getSpecification" isLeaf="true" method="_OKp3xlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFWg9VJPEeiyW7NaN4qWdw" type="_OAX6UVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSC0slJPEeiyW7NaN4qWdw" name="checkIntegrity" method="_OKp3yFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwClJPEeiyW7NaN4qWdw">
                    <body>Checks the integrity of this AI object.&#xD;
     * Subclasses should extend.&#xD;
     *&#xD;
     * @param fix Fix problems if possible.&#xD;
     * @return Negative if there are problems remaining, zero if&#xD;
     *     problems were fixed, positive if no problems found at all.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSDbwFJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NSDbwVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OCCHMFJPEeiyW7NaN4qWdw" name="AIObject" method="_OKpQo1JPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OCCuQFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OCCuQVJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLdwAFJPEeiyW7NaN4qWdw">
                    <body>Creates a new uninitialized &lt;code>AIObject&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCCHMVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OCCuQlJPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OCCuQ1JPEeiyW7NaN4qWdw" name="AIObject" method="_OKp3sFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OCCuRlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OCCuR1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLdwAVJPEeiyW7NaN4qWdw">
                    <body>Creates a new uninitialized &lt;code>AIObject&lt;/code> with a registerable&#xD;
     * AI identifier.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param id The object identifier.&#xD;
     * @see AIMain#addAIObject(String, AIObject)</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCCuRFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OCCuRVJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OCCuSFJPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFV54FJPEeiyW7NaN4qWdw" name="AIObject" method="_OKp3tFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OFV541JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OFV55FJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLdwAlJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIObject&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param element An &lt;code>Element&lt;/code> containing an XML-representation&#xD;
     *            of this object.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFV54VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFV54lJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFV55VJPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFV55lJPEeiyW7NaN4qWdw" name="AIObject" method="_OKp3uFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OFWg8VJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OFWg8lJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLdwA1JPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIObject&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @exception XMLStreamException if a problem was encountered&#xD;
     *     during parsing.&#xD;
     * @see AIObject#readFromXML</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFV551JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFWg8FJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFWg81JPEeiyW7NaN4qWdw" type="_NR_xYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NSHGIFJPEeiyW7NaN4qWdw" name="AIPlayer" isAbstract="true">
                <ownedComment xmi:id="_OLdwC1JPEeiyW7NaN4qWdw">
                  <body>Objects of this class contains AI-information for a single {@link&#xD;
Player} and is used for controlling this player.&#xD;
 *&#xD;
The method {@link #startWorking} gets called by the&#xD;
{@link AIInGameInputHandler} when it is this player's turn.</body>
                </ownedComment>
                <generalization xmi:id="_OCL4MFJPEeiyW7NaN4qWdw" general="_NR_xYFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJHmo1JPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMRoU1JPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJINsFJPEeiyW7NaN4qWdw" value="Logger.getLogger(AIPlayer.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJINsVJPEeiyW7NaN4qWdw" name="aiUnitLocationComparator" visibility="private" isLeaf="true" isStatic="true" type="_OAKe8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMSPYVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJI0wVJPEeiyW7NaN4qWdw" value="new Comparator&lt;AIUnit>() {&#xD;&#xA;            @Override&#xD;&#xA;            public int compare(AIUnit a1, AIUnit a2) {&#xD;&#xA;                Location l1 = (a1 == null) ? null&#xD;&#xA;                    : (a1.getUnit() == null) ? null&#xD;&#xA;                    : a1.getUnit().getLocation();&#xD;&#xA;                Location l2 = (a2 == null) ? null&#xD;&#xA;                    : (a2.getUnit() == null) ? null&#xD;&#xA;                    : a2.getUnit().getLocation();&#xD;&#xA;                FreeColObject f1 = (l1 instanceof WorkLocation)&#xD;&#xA;                    ? l1.getColony()&#xD;&#xA;                    : (FreeColObject)l1;&#xD;&#xA;                FreeColObject f2 = (l2 instanceof WorkLocation)&#xD;&#xA;                    ? l2.getColony()&#xD;&#xA;                    : (FreeColObject)l2;&#xD;&#xA;                return FreeColObject.compareIds(f1, f2);&#xD;&#xA;            }&#xD;&#xA;        }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJI0wlJPEeiyW7NaN4qWdw" name="player" type="_OBOO4lJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMS2cFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJJb0FJPEeiyW7NaN4qWdw" name="aiRandom" visibility="private" type="_OCFKgVJPEeiyW7NaN4qWdw" association="_OMS2c1JPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJJb0lJPEeiyW7NaN4qWdw" name="debuggingConnection" visibility="private" type="_OBJWYlJPEeiyW7NaN4qWdw" association="_OMTdgVJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJJb1FJPEeiyW7NaN4qWdw" name="aiUnits" visibility="private" isLeaf="true" type="_NSoDgFJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMTdhFJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJJb1VJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJKC4FJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJKC4lJPEeiyW7NaN4qWdw" name="RANDOM_STATE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJKp8FJPEeiyW7NaN4qWdw" value="&quot;randomState&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKqewlJPEeiyW7NaN4qWdw" name="AIPlayer" specification="_OFXvEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKqew1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKqexFJPEeiyW7NaN4qWdw" name="player" type="_OBOO4lJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKqexVJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, player.getId());&#xD;
&#xD;
     this.player = player;&#xD;
     this.aiRandom = new Random(aiMain.getRandomSeed(&quot;Seed for &quot; + getId()));&#xD;
&#xD;
     uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKqexlJPEeiyW7NaN4qWdw" name="AIPlayer" specification="_OFYWIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKqex1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKqeyFJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKqeyVJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
     &#xD;
     uninitialized = player == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKqeylJPEeiyW7NaN4qWdw" name="getAIRandom" specification="_NSVIkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKqey1JPEeiyW7NaN4qWdw" type="_OCFKgVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return aiRandom;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKqezFJPEeiyW7NaN4qWdw" name="clearAIUnits" specification="_NSVvoFJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>aiUnits.clear();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKqezVJPEeiyW7NaN4qWdw" name="addAIUnit" specification="_OCI04FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKqezlJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>aiUnits.add(aiUnit);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKrF0FJPEeiyW7NaN4qWdw" name="removeAIUnit" specification="_OCI04lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKrF0VJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>aiUnit.dropTransport();&#xD;
     aiUnit.changeMission(null);&#xD;
     aiUnits.remove(aiUnit);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKrF0lJPEeiyW7NaN4qWdw" name="createAIUnits" specification="_NSVvoVJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>clearAIUnits();&#xD;
     for (Unit u : getPlayer().getUnits()) {&#xD;
         if (u.isDisposed()) {&#xD;
             logger.warning(&quot;createAIUnits ignoring: &quot; + u.getId());&#xD;
             continue;&#xD;
         }&#xD;
         AIUnit a = getAIUnit(u);&#xD;
         if (a != null) {&#xD;
             if (a.getUnit() != u) {&#xD;
                 throw new IllegalStateException(&quot;createAIUnits fail: &quot; + u&#xD;
                                                 + &quot;/&quot; + a);&#xD;
             }&#xD;
             aiUnits.add(a);&#xD;
         } else {&#xD;
             logger.warning(&quot;Could not find the AIUnit for: &quot;&#xD;
                            + u + &quot; (&quot; + u.getId() + &quot;)&quot;);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKrF01JPEeiyW7NaN4qWdw" name="getAIAdvantage" specification="_NSWWsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKrF1FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final String prefix = &quot;model.nationType.&quot;;&#xD;
     String id = (player == null || player.getNationType() == null) ? &quot;&quot;&#xD;
         : player.getNationType().getId();&#xD;
     return (id.startsWith(prefix)) ? id.substring(prefix.length())&#xD;
         : &quot;&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKrF1VJPEeiyW7NaN4qWdw" name="getConnection" specification="_NSWWslJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKrF1lJPEeiyW7NaN4qWdw" type="_OBJWYlJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (debuggingConnection != null) ? debuggingConnection&#xD;
         : ((DummyConnection) player.getConnection()).getOtherConnection();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKrF11JPEeiyW7NaN4qWdw" name="setDebuggingConnection" specification="_OFYWKFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKrF2FJPEeiyW7NaN4qWdw" name="debuggingConnection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>this.debuggingConnection = debuggingConnection;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKrF2VJPEeiyW7NaN4qWdw" name="getAIColony" specification="_OFY9MVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKrF2lJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKrF21JPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getAIMain().getAIColony(colony);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKrF3FJPEeiyW7NaN4qWdw" name="getAIColonies" specification="_NSW9wFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKrF3VJPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKrF3lJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;AIColony> ac = new ArrayList&lt;>();&#xD;
     for (Colony colony : getPlayer().getColonies()) {&#xD;
         AIColony a = getAIColony(colony);&#xD;
         if (a != null) {&#xD;
             ac.add(a);&#xD;
         } else {&#xD;
             logger.warning(&quot;Could not find the AIColony for: &quot; + colony);&#xD;
         }&#xD;
     }&#xD;
     return ac;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKsT8FJPEeiyW7NaN4qWdw" name="getAIUnit" specification="_OFY9NFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKsT8VJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKsT8lJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return getAIMain().getAIUnit(unit);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKsT81JPEeiyW7NaN4qWdw" name="getAIUnits" specification="_NSXk0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKsT9FJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKsT9VJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (aiUnits.isEmpty()) createAIUnits();&#xD;
     return new ArrayList&lt;>(aiUnits);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKsT9lJPEeiyW7NaN4qWdw" name="getAIUnitIterator" specification="_NSXk01JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKsT91JPEeiyW7NaN4qWdw" type="_OCEjcFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (aiUnits.isEmpty()) createAIUnits();&#xD;
     return aiUnits.iterator();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKsT-FJPEeiyW7NaN4qWdw" name="determineStance" specification="_OFZkQVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKsT-VJPEeiyW7NaN4qWdw" name="other" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKsT-lJPEeiyW7NaN4qWdw" type="_OCFxkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return player.getStance(other)&#xD;
         .getStanceFromTension(player.getTension(other));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKsT-1JPEeiyW7NaN4qWdw" name="getSettlementDefenders" specification="_OFZkRFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKsT_FJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKsT_VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int defenders = 0;&#xD;
     for (AIUnit au : getAIUnits()) {&#xD;
         Mission dm = au.getMission(DefendSettlementMission.class);&#xD;
         if (dm != null&#xD;
             &amp;&amp; dm.getTarget() == settlement&#xD;
             &amp;&amp; au.getUnit().getSettlement() == settlement) {&#xD;
             defenders++;&#xD;
         }&#xD;
     }&#xD;
     return defenders;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKsT_lJPEeiyW7NaN4qWdw" name="isTargetValidForSeekAndDestroy" specification="_OFaLUVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKsT_1JPEeiyW7NaN4qWdw" name="attacker" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKsUAFJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKsUAVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>// Insist the attacker exists.&#xD;
     if (attacker == null) return false;&#xD;
&#xD;
     Player attackerPlayer = attacker.getOwner();&#xD;
&#xD;
     // Determine the defending player.&#xD;
     Settlement settlement = tile.getSettlement();&#xD;
     Unit defender = tile.getDefendingUnit(attacker);&#xD;
     Player defenderPlayer = (settlement != null) ? settlement.getOwner()&#xD;
         : (defender != null) ? defender.getOwner()&#xD;
         : null;&#xD;
&#xD;
     // Insist there be a defending player.&#xD;
     if (defenderPlayer == null) return false;&#xD;
&#xD;
     // Can not attack our own units.&#xD;
     if (attackerPlayer == defenderPlayer) return false;&#xD;
&#xD;
     // If European, do not attack if not at war.&#xD;
     // If native, do not attack if not at war and at least content.&#xD;
     // Otherwise some attacks are allowed even if not at war.&#xD;
     boolean atWar = attackerPlayer.atWarWith(defenderPlayer);&#xD;
     if (attackerPlayer.isEuropean()) {&#xD;
         if (!atWar) return false;&#xD;
     } else if (attackerPlayer.isIndian()) {&#xD;
         if (!atWar &amp;&amp; attackerPlayer.getTension(defenderPlayer)&#xD;
             .getLevel().compareTo(Tension.Level.CONTENT) &lt;= 0) {&#xD;
             return false;&#xD;
         }&#xD;
     }&#xD;
     return attacker.canAttack(defender);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKsUAlJPEeiyW7NaN4qWdw" name="logMissions" specification="_OFayYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKsUA1JPEeiyW7NaN4qWdw" name="reasons" type="_OBU8klJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKsUBFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>List&lt;AIUnit> units = getAIUnits();&#xD;
     Collections.sort(units, aiUnitLocationComparator);&#xD;
     for (AIUnit aiu : units) {&#xD;
         Unit u = aiu.getUnit();&#xD;
         String reason = reasons.get(u);&#xD;
         if (reason == null) reason = &quot;OMITTED&quot;;&#xD;
         String ms = &quot;NONE&quot;;&#xD;
         Location target = null;&#xD;
         if (aiu.hasMission()) {&#xD;
             Mission m = aiu.getMission();&#xD;
             ms = lastPart(m.getClass().toString(), &quot;.&quot;);&#xD;
             ms = ms.substring(0, ms.length() - &quot;Mission&quot;.length());&#xD;
             target = m.getTarget();&#xD;
         }&#xD;
&#xD;
         lb.add(&quot;\n  @&quot;,&#xD;
             String.format(&quot;%-30s%-10s%-40s%-16s&quot;,&#xD;
                 chop(u.getLocation().toShortString(), 30),&#xD;
                 chop(reason, 10),&#xD;
                 chop(u.toShortString(), 40),&#xD;
                 chop(ms, 16)));&#xD;
         if (target != null) lb.add(&quot;->&quot;, target);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKsUBVJPEeiyW7NaN4qWdw" name="getDefendCurrentSettlementMission" specification="_OCKDAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKsUBlJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKsUB1JPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (DefendSettlementMission.invalidReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Location loc = unit.getLocation();&#xD;
     final Settlement settlement = (loc == null) ? null&#xD;
         : loc.getSettlement();&#xD;
     return (settlement != null &amp;&amp; settlement.isBadlyDefended())&#xD;
         ? getDefendSettlementMission(aiUnit, settlement)&#xD;
         : null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKsUCFJPEeiyW7NaN4qWdw" name="getDefendSettlementMission" specification="_OFbZcVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKsUCVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKsUClJPEeiyW7NaN4qWdw" name="target" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKsUC1JPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (DefendSettlementMission.invalidReason(aiUnit) != null) ? null&#xD;
         : new DefendSettlementMission(getAIMain(), aiUnit, target);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKs7AFJPEeiyW7NaN4qWdw" name="getIdleAtSettlementMission" specification="_OCKqEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKs7AVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKs7AlJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (IdleAtSettlementMission.invalidReason(aiUnit) != null) ? null&#xD;
         : new IdleAtSettlementMission(getAIMain(), aiUnit);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKs7A1JPEeiyW7NaN4qWdw" name="getSeekAndDestroyMission" specification="_OCKqElJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKs7BFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKs7BVJPEeiyW7NaN4qWdw" name="range">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKs7BlJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>Location loc = null;&#xD;
     if (UnitSeekAndDestroyMission.invalidReason(aiUnit) == null) {&#xD;
         loc = UnitSeekAndDestroyMission.findTarget(aiUnit, range, false);&#xD;
     }&#xD;
     return (loc == null) ? null&#xD;
         : getSeekAndDestroyMission(aiUnit, loc);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKtiEFJPEeiyW7NaN4qWdw" name="getSeekAndDestroyMission" specification="_OFcAglJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKtiEVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKtiElJPEeiyW7NaN4qWdw" name="loc" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKtiE1JPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (UnitSeekAndDestroyMission.invalidReason(aiUnit) != null&#xD;
         || loc == null) ? null&#xD;
         : new UnitSeekAndDestroyMission(getAIMain(), aiUnit, loc);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKtiFFJPEeiyW7NaN4qWdw" name="getWanderHostileMission" specification="_OCLRIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKtiFVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKtiFlJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (UnitWanderHostileMission.invalidReason(aiUnit) != null) ? null&#xD;
         : new UnitWanderHostileMission(getAIMain(), aiUnit);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKtiF1JPEeiyW7NaN4qWdw" name="checkIntegrity" specification="_NSZaAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKtiGFJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKtiGVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = super.checkIntegrity(fix);&#xD;
     if (player == null || player.isDisposed() || !player.isAI()) {&#xD;
         result = -1;&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKtiGlJPEeiyW7NaN4qWdw" name="doMissions" specification="_OFcnkVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKtiG1JPEeiyW7NaN4qWdw" name="aiUnits" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKtiHFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKtiHVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKtiHlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>lb.add(&quot;\n  Do Missions:&quot;);&#xD;
     List&lt;AIUnit> result = new ArrayList&lt;>();&#xD;
     for (AIUnit aiu : aiUnits) {&#xD;
         final Unit unit = aiu.getUnit();&#xD;
         if (unit == null || unit.isDisposed()) continue;&#xD;
         lb.add(&quot;\n  &quot;, unit, &quot; &quot;);&#xD;
         try {&#xD;
             aiu.doMission(lb);&#xD;
         } catch (Exception e) {&#xD;
             logger.log(Level.WARNING, &quot;doMissions failed for: &quot; + aiu, e);&#xD;
         }&#xD;
         if (!unit.isDisposed() &amp;&amp; unit.getMovesLeft() > 0) result.add(aiu);&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKtiH1JPEeiyW7NaN4qWdw" name="indianDemand" specification="_OFfD0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKtiIFJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKtiIVJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKtiIlJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKtiI1JPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKtiJFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKtiJVJPEeiyW7NaN4qWdw" name="acceptDiplomaticTrade" specification="_OFfD1lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKtiJlJPEeiyW7NaN4qWdw" name="agreement" type="_OBG6IFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKtiJ1JPEeiyW7NaN4qWdw" type="_OBG6IlJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return TradeStatus.REJECT_TRADE;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKtiKFJPEeiyW7NaN4qWdw" name="acceptTax" specification="_NSb2QFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKtiKVJPEeiyW7NaN4qWdw" name="tax">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKtiKlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKtiK1JPEeiyW7NaN4qWdw" name="acceptMercenaries" specification="_NSb2Q1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKtiLFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKtiLVJPEeiyW7NaN4qWdw" name="selectFoundingFather" specification="_OFg5AVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKtiLlJPEeiyW7NaN4qWdw" name="ffs" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKtiL1JPEeiyW7NaN4qWdw" type="_OBHhMVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKtiMFJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_OFiHIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKtiMVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeAttributes(xw);&#xD;
&#xD;
     xw.writeAttribute(RANDOM_STATE_TAG, Utils.getRandomState(aiRandom));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKuJIFJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OFiuMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKuJIVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readAttributes(xr);&#xD;
&#xD;
     final AIMain aiMain = getAIMain();&#xD;
&#xD;
     player = xr.findFreeColGameObject(aiMain.getGame(), ID_ATTRIBUTE_TAG,&#xD;
         ServerPlayer.class, (ServerPlayer)null, true);&#xD;
&#xD;
     Random rnd = Utils.restoreRandomState(xr.getAttribute(RANDOM_STATE_TAG,&#xD;
                                                           (String)null));&#xD;
     aiRandom = (rnd != null) ? rnd&#xD;
         : new Random(aiMain.getRandomSeed(&quot;Seed for &quot; + getId()));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKuJIlJPEeiyW7NaN4qWdw" name="readChildren" specification="_OFjVQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKuJI1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readChildren(xr);&#xD;
&#xD;
     if (getPlayer() != null) uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKuJJFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_NScdUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKuJJVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return &quot;aiPlayer&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NSVIkFJPEeiyW7NaN4qWdw" name="getAIRandom" method="_OKqeylJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwDlJPEeiyW7NaN4qWdw">
                    <body>Sets the ServerPlayer this AIPlayer is controlling.&#xD;
     * Used by implementing subclasses.&#xD;
     *&#xD;
     * @param p The new &lt;code>Player&lt;/code>.&#xD;
    protected void setPlayer(ServerPlayer p) {&#xD;
        player = p;&#xD;
    }</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFYWJlJPEeiyW7NaN4qWdw" type="_OCFKgVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSVvoFJPEeiyW7NaN4qWdw" name="clearAIUnits" visibility="protected" method="_OKqezFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwD1JPEeiyW7NaN4qWdw">
                    <body>Clears the cache of AI units.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NSVvoVJPEeiyW7NaN4qWdw" name="createAIUnits" visibility="private" method="_OKrF0lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwElJPEeiyW7NaN4qWdw">
                    <body>Build the cache of AI units.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NSWWsFJPEeiyW7NaN4qWdw" name="getAIAdvantage" visibility="protected" method="_OKrF01JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwE1JPEeiyW7NaN4qWdw">
                    <body>Gets the advantage of this AI player from the nation type.&#xD;
     *&#xD;
     * @return A short string stating the national advantage.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSWWsVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSWWslJPEeiyW7NaN4qWdw" name="getConnection" method="_OKrF1VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwFFJPEeiyW7NaN4qWdw">
                    <body>Gets the connection to the server.&#xD;
     *&#xD;
     * @return The connection that can be used when communication with the&#xD;
     *     server.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFYWJ1JPEeiyW7NaN4qWdw" type="_OBJWYlJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSW9wFJPEeiyW7NaN4qWdw" name="getAIColonies" method="_OKrF3FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwF1JPEeiyW7NaN4qWdw">
                    <body>Gets a list of the players AI colonies.&#xD;
     *&#xD;
     * @return A list of AI colonies.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSW9wVJPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NSW9wlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSXk0FJPEeiyW7NaN4qWdw" name="getAIUnits" visibility="protected" method="_OKsT81JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwGVJPEeiyW7NaN4qWdw">
                    <body>Gets a list of AIUnits for the player.&#xD;
     *&#xD;
     * @return A list of AIUnits.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSXk0VJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NSXk0lJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSXk01JPEeiyW7NaN4qWdw" name="getAIUnitIterator" visibility="protected" method="_OKsT9lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwGlJPEeiyW7NaN4qWdw">
                    <body>Returns an iterator over all the &lt;code>AIUnit&lt;/code>s owned by this&#xD;
     * player.&#xD;
     *&#xD;
     * @return The &lt;code>Iterator&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFZkQFJPEeiyW7NaN4qWdw" type="_OCEjcFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSZaAFJPEeiyW7NaN4qWdw" name="checkIntegrity" method="_OKtiF1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NSaBEFJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NSaBEVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSaoIFJPEeiyW7NaN4qWdw" name="startWorking" isAbstract="true">
                  <ownedComment xmi:id="_OLeXGVJPEeiyW7NaN4qWdw">
                    <body>Tells this &lt;code>AIPlayer&lt;/code> to make decisions. The&#xD;
     * &lt;code>AIPlayer&lt;/code> is done doing work this turn when this method&#xD;
     * returns.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NSb2QFJPEeiyW7NaN4qWdw" name="acceptTax" method="_OKtiKFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXIVJPEeiyW7NaN4qWdw">
                    <body>Decides to accept a tax raise or not.&#xD;
     * Overridden by the European player.&#xD;
     *&#xD;
     * @param tax The tax raise.&#xD;
     * @return True if the raise is accepted.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSb2QVJPEeiyW7NaN4qWdw" name="tax">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NSb2QlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSb2Q1JPEeiyW7NaN4qWdw" name="acceptMercenaries" method="_OKtiK1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXIlJPEeiyW7NaN4qWdw">
                    <body>Decides to accept an offer of mercenaries or not.&#xD;
     * Overridden by the European player.&#xD;
     *&#xD;
     * @return True if the mercenaries are accepted.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSb2RFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NScdUFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_OKuJJFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXJFJPEeiyW7NaN4qWdw">
                    <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return the tag name.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSdEYFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OCI04FJPEeiyW7NaN4qWdw" name="addAIUnit" method="_OKqezVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwEFJPEeiyW7NaN4qWdw">
                    <body>Add an AI unit owned by this player.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to add.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCI04VJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OCI04lJPEeiyW7NaN4qWdw" name="removeAIUnit" method="_OKrF0FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwEVJPEeiyW7NaN4qWdw">
                    <body>Removes an AI unit owned by this player.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to remove.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCI041JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OCJb8FJPEeiyW7NaN4qWdw" name="removeAIColony">
                  <ownedParameter xmi:id="_OCJb8VJPEeiyW7NaN4qWdw" name="aic" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OCKDAFJPEeiyW7NaN4qWdw" name="getDefendCurrentSettlementMission" method="_OKsUBVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXE1JPEeiyW7NaN4qWdw">
                    <body>Get a DefendSettlementMission for the current settlement of a&#xD;
     * unit if it is badly defended.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A new misison, or null if impossible or not worthwhile.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCKDAVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFbZcFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OCKqEFJPEeiyW7NaN4qWdw" name="getIdleAtSettlementMission" method="_OKs7AFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXFVJPEeiyW7NaN4qWdw">
                    <body>Gets a new IdleAtSettlementMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to use.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCKqEVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFcAgFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OCKqElJPEeiyW7NaN4qWdw" name="getSeekAndDestroyMission" method="_OKs7A1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXFlJPEeiyW7NaN4qWdw">
                    <body>Gets a UnitSeekAndDestroyMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param range A maximum range to search for a target within.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCKqE1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OCKqFFJPEeiyW7NaN4qWdw" name="range">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFcAgVJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OCLRIFJPEeiyW7NaN4qWdw" name="getWanderHostileMission" method="_OKtiFFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXGFJPEeiyW7NaN4qWdw">
                    <body>Gets a new UnitWanderHostileMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCLRIVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFcnkFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFXvEFJPEeiyW7NaN4qWdw" name="AIPlayer" method="_OKqewlJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OFXvE1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OFXvFFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLdwDFJPEeiyW7NaN4qWdw">
                    <body>Creates a new AI player.&#xD;
     *&#xD;
     * @param aiMain The &lt;code>AIMain&lt;/code> the player exists within.&#xD;
     * @param player The &lt;code>ServerPlayer&lt;/code> to associate this&#xD;
     *            AI player with.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFXvEVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFXvElJPEeiyW7NaN4qWdw" name="player" type="_OBOO4lJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFXvFVJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFYWIFJPEeiyW7NaN4qWdw" name="AIPlayer" method="_OKqexlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OFYWI1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OFYWJFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLdwDVJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIPlayer&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @exception XMLStreamException if a problem was encountered&#xD;
     *     during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFYWIVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFYWIlJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFYWJVJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFYWKFJPEeiyW7NaN4qWdw" name="setDebuggingConnection" method="_OKrF11JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwFVJPEeiyW7NaN4qWdw">
                    <body>Sets the &lt;code>Connection&lt;/code> to be used while communicating with&#xD;
     * the server.&#xD;
     *&#xD;
     * This method is only used for debugging.&#xD;
     *&#xD;
     * @param debuggingConnection The &lt;code>Connection&lt;/code> to be&#xD;
     *     used for debugging.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFY9MFJPEeiyW7NaN4qWdw" name="debuggingConnection" type="_OBJWYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFY9MVJPEeiyW7NaN4qWdw" name="getAIColony" method="_OKrF2VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwFlJPEeiyW7NaN4qWdw">
                    <body>Gets the AI colony corresponding to a given colony, if any.&#xD;
     *&#xD;
     * @param colony The &lt;code>Colony&lt;/code> to look up.&#xD;
     * @return The corresponding AI colony or null if not found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFY9MlJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFY9M1JPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFY9NFJPEeiyW7NaN4qWdw" name="getAIUnit" visibility="protected" method="_OKsT8FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwGFJPEeiyW7NaN4qWdw">
                    <body>Gets the AI unit corresponding to a given unit, if any.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to look up.&#xD;
     * @return The corresponding AI unit or null if not found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFY9NVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFY9NlJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFZkQVJPEeiyW7NaN4qWdw" name="determineStance" visibility="protected" method="_OKsT-FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLdwG1JPEeiyW7NaN4qWdw">
                    <body>Standard stance change determination.&#xD;
     *&#xD;
     * @param other The &lt;code>Player&lt;/code> wrt consider stance.&#xD;
     * @return The new &lt;code>Stance&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFZkQlJPEeiyW7NaN4qWdw" name="other" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFZkQ1JPEeiyW7NaN4qWdw" type="_OCFxkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFZkRFJPEeiyW7NaN4qWdw" name="getSettlementDefenders" method="_OKsT-1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXEFJPEeiyW7NaN4qWdw">
                    <body>Counts the number of defenders allocated to a settlement.&#xD;
     *&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> to examine.&#xD;
     * @return The number of defenders.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFZkRVJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFaLUFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFaLUVJPEeiyW7NaN4qWdw" name="isTargetValidForSeekAndDestroy" method="_OKsT_lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXEVJPEeiyW7NaN4qWdw">
                    <body>Find out if a tile contains a suitable target for seek-and-destroy.&#xD;
     *&#xD;
     * FIXME: Package for access by a test only - necessary?&#xD;
     *&#xD;
     * @param attacker The attacking &lt;code>Unit&lt;/code>.&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to attack into.&#xD;
     * @return True if an attack can be launched.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFaLUlJPEeiyW7NaN4qWdw" name="attacker" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFaLU1JPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFaLVFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFayYFJPEeiyW7NaN4qWdw" name="logMissions" visibility="protected" method="_OKsUAlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXElJPEeiyW7NaN4qWdw">
                    <body>Log the missions of this player.&#xD;
     *&#xD;
     * @param reasons A map of reasons for the current mission by unit.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFayYVJPEeiyW7NaN4qWdw" name="reasons" type="_OBU8klJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFayYlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFbZcVJPEeiyW7NaN4qWdw" name="getDefendSettlementMission" method="_OKsUCFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXFFJPEeiyW7NaN4qWdw">
                    <body>Gets a new DefendSettlementMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param target The &lt;code>Settlement&lt;/code> to defend.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFbZclJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFbZc1JPEeiyW7NaN4qWdw" name="target" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFbZdFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFcAglJPEeiyW7NaN4qWdw" name="getSeekAndDestroyMission" method="_OKtiEFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXF1JPEeiyW7NaN4qWdw">
                    <body>Gets a UnitSeekAndDestroyMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param loc The target &lt;code>Location&lt;/code>.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFcAg1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFcAhFJPEeiyW7NaN4qWdw" name="loc" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFcAhVJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFcnkVJPEeiyW7NaN4qWdw" name="doMissions" visibility="protected" method="_OKtiGlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXGlJPEeiyW7NaN4qWdw">
                    <body>Makes every unit perform their mission.&#xD;
     *&#xD;
     * @param aiUnits A list of &lt;code>AIUnit&lt;/code>s to perform missions.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return A list of &lt;code>AIUnit&lt;/code>s that have moves left.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFcnklJPEeiyW7NaN4qWdw" name="aiUnits" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFcnk1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFdOoFJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OFd1sFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFecwFJPEeiyW7NaN4qWdw" name="adjustMission" isAbstract="true">
                  <ownedComment xmi:id="_OLeXG1JPEeiyW7NaN4qWdw">
                    <body>Adjusts the score of this proposed mission for this player type.&#xD;
     * Subclasses should override and refine this.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to perform the mission.&#xD;
     * @param path A &lt;code>PathNode&lt;/code> to the target of this mission.&#xD;
     * @param value The proposed value.&#xD;
     * @param type The mission type.&#xD;
     * @return A score representing the desirability of this mission.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFecwVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFecwlJPEeiyW7NaN4qWdw" name="path" type="_OA--UVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFecw1JPEeiyW7NaN4qWdw" name="type" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFecxFJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFecxVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFfD0FJPEeiyW7NaN4qWdw" name="indianDemand" method="_OKtiH1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXHFJPEeiyW7NaN4qWdw">
                    <body>Decides whether to accept an Indian demand, or not.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> making demands.&#xD;
     * @param colony The &lt;code>Colony&lt;/code> where demands are being made.&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> demanded.&#xD;
     * @param amount The amount of gold demanded.&#xD;
     * @return True if this player accepts the demand.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFfD0VJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFfD0lJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFfD01JPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFfD1FJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFfD1VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFfD1lJPEeiyW7NaN4qWdw" name="acceptDiplomaticTrade" method="_OKtiJVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXHVJPEeiyW7NaN4qWdw">
                    <body>Resolves a diplomatic trade offer.&#xD;
     *&#xD;
     * @param agreement The proposed &lt;code>DiplomaticTrade&lt;/code>.&#xD;
     * @return The &lt;code>TradeStatus&lt;/code> to apply to the agreement.&#xD;
     *</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFfD11JPEeiyW7NaN4qWdw" name="agreement" type="_OBG6IFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFfq4FJPEeiyW7NaN4qWdw" type="_OBG6IlJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFfq4VJPEeiyW7NaN4qWdw" name="registerSellGoods" isAbstract="true">
                  <ownedComment xmi:id="_OLeXHlJPEeiyW7NaN4qWdw">
                    <body>Called after another &lt;code>Player&lt;/code> sends a&#xD;
     * &lt;code>trade&lt;/code> message&#xD;
     *&#xD;
     * @param goods The goods which we are going to offer</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFfq4lJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFfq41JPEeiyW7NaN4qWdw" name="buyProposition" isAbstract="true">
                  <ownedComment xmi:id="_OLeXH1JPEeiyW7NaN4qWdw">
                    <body>Called when another &lt;code>Player&lt;/code> proposes to buy.&#xD;
     *&#xD;
     *&#xD;
     * @param unit The foreign &lt;code>Unit&lt;/code> trying to trade.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> this player owns and&#xD;
     *            which the given &lt;code>Unit&lt;/code> is trading.&#xD;
     * @param goods The goods the given &lt;code>Unit&lt;/code> is trying to sell.&#xD;
     * @param gold The suggested price.&#xD;
     * @return The price this &lt;code>AIPlayer&lt;/code> suggests or&#xD;
     *     {@link net.sf.freecol.common.networking.NetworkConstants#NO_TRADE}.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFfq5FJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFgR8FJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFgR8VJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFgR8lJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFgR81JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFgR9FJPEeiyW7NaN4qWdw" name="sellProposition" isAbstract="true">
                  <ownedComment xmi:id="_OLeXIFJPEeiyW7NaN4qWdw">
                    <body>Called when another &lt;code>Player&lt;/code> proposes a sale.&#xD;
     *&#xD;
     *&#xD;
     * @param unit The foreign &lt;code>Unit&lt;/code> trying to trade.&#xD;
     * @param settlement The &lt;code>Settlement&lt;/code> this player owns and&#xD;
     *            which the given &lt;code>Unit&lt;/code> if trying to sell goods.&#xD;
     * @param goods The goods the given &lt;code>Unit&lt;/code> is trying to sell.&#xD;
     * @param gold The suggested price.&#xD;
     * @return The price this &lt;code>AIPlayer&lt;/code> suggests or&#xD;
     *     {@link net.sf.freecol.common.networking.NetworkConstants#NO_TRADE}.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFgR9VJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFgR9lJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFgR91JPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFgR-FJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OFg5AFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFg5AVJPEeiyW7NaN4qWdw" name="selectFoundingFather" method="_OKtiLVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLeXI1JPEeiyW7NaN4qWdw">
                    <body>Selects the most useful founding father offered.&#xD;
     * Overridden by EuropeanAIPlayers.&#xD;
     *&#xD;
     * @param ffs The founding fathers on offer.&#xD;
     * @return The founding father selected.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFg5AlJPEeiyW7NaN4qWdw" name="ffs" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFhgEFJPEeiyW7NaN4qWdw" type="_OBHhMVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFiHIFJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_OKtiMFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFiHIVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFiuMFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OKuJIFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFiuMVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFjVQFJPEeiyW7NaN4qWdw" name="readChildren" visibility="protected" method="_OKuJIlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFjVQVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NSoDgFJPEeiyW7NaN4qWdw" name="AIUnit">
                <ownedComment xmi:id="_OLeXJVJPEeiyW7NaN4qWdw">
                  <body>Objects of this class contains AI-information for a single {@link Unit}.&#xD;
 *&#xD;
The method {@link #doMission(LogBuilder)} is called once each turn,&#xD;
by {@link AIPlayer#startWorking()}, to perform the assigned&#xD;
&lt;code>Mission&lt;/code>.  Most of the methods in this class just&#xD;
delegates the call to that mission.&#xD;
 *&#xD;
@see Mission</body>
                </ownedComment>
                <generalization xmi:id="_OCYFcFJPEeiyW7NaN4qWdw" general="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJL4EFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMUEkVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJL4EVJPEeiyW7NaN4qWdw" value="Logger.getLogger(AIUnit.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJL4ElJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMUElFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJMfIlJPEeiyW7NaN4qWdw" name="mission" isLeaf="true" type="_OAf2IVJPEeiyW7NaN4qWdw" association="_OMUroVJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJNGMFJPEeiyW7NaN4qWdw" name="goal" visibility="private" type="_OCSl4VJPEeiyW7NaN4qWdw" association="_OMUrpFJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJNGMVJPEeiyW7NaN4qWdw" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJNtQFJPEeiyW7NaN4qWdw" name="TILE_IMPROVEMENT_PLAN_MISSION_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJNtQVJPEeiyW7NaN4qWdw" value="&quot;tileImprovementPlanMission&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJOUUFJPEeiyW7NaN4qWdw" name="IDLE_AT_COLONY_MISSION_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJOUUVJPEeiyW7NaN4qWdw" value="&quot;idleAtColonyMission&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKuwMlJPEeiyW7NaN4qWdw" name="AIUnit" specification="_OCWQQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKuwM1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKuwNFJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKuwNVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, id);&#xD;
&#xD;
     this.unit = null;&#xD;
     this.mission = null;&#xD;
     this.goal = null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKuwNlJPEeiyW7NaN4qWdw" name="AIUnit" specification="_OFlKcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKuwN1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKuwOFJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKuwOVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(aiMain, unit.getId());&#xD;
&#xD;
     this.unit = unit;&#xD;
     this.mission = null;&#xD;
     this.goal = null;&#xD;
&#xD;
     uninitialized = unit == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKuwOlJPEeiyW7NaN4qWdw" name="AIUnit" specification="_OFlxgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKuwO1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKuwPFJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKuwPVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, element);&#xD;
&#xD;
     uninitialized = getUnit() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKvXQFJPEeiyW7NaN4qWdw" name="AIUnit" specification="_OFlxhlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKvXQVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKvXQlJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKvXQ1JPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
&#xD;
     uninitialized = getUnit() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKvXRFJPEeiyW7NaN4qWdw" name="hasMission" specification="_NSrG0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKvXRVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return this.mission != null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKvXRlJPEeiyW7NaN4qWdw" name="getGoal" specification="_NSrt4FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKvXR1JPEeiyW7NaN4qWdw" type="_OCSl4VJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return this.goal;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKvXSFJPEeiyW7NaN4qWdw" name="setGoal" specification="_OFmYk1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKvXSVJPEeiyW7NaN4qWdw" name="goal" type="_OCSl4VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>this.goal = goal;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKvXSlJPEeiyW7NaN4qWdw" name="requestLocalRearrange" specification="_NSrt4VJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>Location loc;&#xD;
     Colony colony;&#xD;
     AIColony aiColony;&#xD;
     if (unit != null&#xD;
         &amp;&amp; (loc = unit.getLocation()) != null&#xD;
         &amp;&amp; (colony = loc.getColony()) != null&#xD;
         &amp;&amp; (aiColony = getAIMain().getAIColony(colony)) != null) {&#xD;
         aiColony.requestRearrange();&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKvXS1JPEeiyW7NaN4qWdw" name="takeTransport" specification="_NSrt4lJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>Unit carrier = getUnit().getCarrier();&#xD;
     AIUnit aiCarrier = (carrier == null) ? null&#xD;
         : getAIMain().getAIUnit(carrier);&#xD;
     AIUnit transport = getTransport();&#xD;
     if (transport != aiCarrier) {&#xD;
         if (transport != null) {&#xD;
             logger.warning(&quot;Taking different transport: &quot; + aiCarrier);&#xD;
             dropTransport();&#xD;
         }&#xD;
         setTransport(aiCarrier);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKvXTFJPEeiyW7NaN4qWdw" name="getAIOwner" specification="_NSrt41JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKvXTVJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (unit == null) ? null&#xD;
         : (unit.getOwner() == null) ? null&#xD;
         : getAIMain().getAIPlayer(unit.getOwner());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKv-UFJPEeiyW7NaN4qWdw" name="getAIRandom" specification="_NSsU8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKv-UVJPEeiyW7NaN4qWdw" type="_OCFKgVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (unit == null) ? null : getAIOwner().getAIRandom();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKwlYFJPEeiyW7NaN4qWdw" name="getTrivialTarget" specification="_NSsU8VJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKwlYVJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>PathNode path = unit.getTrivialPath();&#xD;
     return (path == null) ? null&#xD;
         : Location.upLoc(path.getLastNode().getLocation());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKwlYlJPEeiyW7NaN4qWdw" name="hasCargo" specification="_NSsU8lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKwlY1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (unit == null) ? false : unit.hasCargo();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKwlZFJPEeiyW7NaN4qWdw" name="hasMission" specification="_OFm_oVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKwlZVJPEeiyW7NaN4qWdw" name="returnClass" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKwlZlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getMission(returnClass) != null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKwlZ1JPEeiyW7NaN4qWdw" name="getMission" specification="_OFoNwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKwlaFJPEeiyW7NaN4qWdw" name="returnClass" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKwlaVJPEeiyW7NaN4qWdw" type="_OE9fY1JPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>try {&#xD;
         return returnClass.cast(this.mission);&#xD;
     } catch (ClassCastException cce) {&#xD;
         return null;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKwlalJPEeiyW7NaN4qWdw" name="doMission" specification="_OFo00VJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKwla1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>if (this.mission != null) this.mission.doMission(lb);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKwlbFJPEeiyW7NaN4qWdw" name="changeMission" specification="_OFpb4FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKwlbVJPEeiyW7NaN4qWdw" name="mission" type="_OAf2IVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKwlblJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (this.mission == mission) return this.mission;&#xD;
&#xD;
     if (this.mission != null) {&#xD;
         this.mission.dispose();&#xD;
         this.mission = null;&#xD;
     }&#xD;
    &#xD;
     setMission(mission);&#xD;
     if (mission != null) {&#xD;
         setTransportPriority(mission.getBaseTransportPriority());&#xD;
     }&#xD;
     return this.mission;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxMcFJPEeiyW7NaN4qWdw" name="moveToAmerica" specification="_NSs8AFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxMcVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return AIMessage.askMoveTo(this, unit.getOwner().getGame().getMap());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxMclJPEeiyW7NaN4qWdw" name="moveToEurope" specification="_NStjEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxMc1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return AIMessage.askMoveTo(this, unit.getOwner().getEurope());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxMdFJPEeiyW7NaN4qWdw" name="move" specification="_OFqC8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxMdVJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKxMdlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Tile start = unit.getTile();&#xD;
     return unit.getMoveType(direction).isProgress()&#xD;
         &amp;&amp; AIMessage.askMove(this, direction)&#xD;
         &amp;&amp; unit.getTile() != start;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxMd1JPEeiyW7NaN4qWdw" name="equipForRole" specification="_OFqqAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxMeFJPEeiyW7NaN4qWdw" name="role" type="_OAWsMVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKxMeVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Specification spec = getSpecification();&#xD;
     final Player player = unit.getOwner();&#xD;
     Location loc = Location.upLoc(unit.getLocation());&#xD;
     if (!(loc instanceof UnitLocation)) return false;&#xD;
     int count = role.getMaximumCount();&#xD;
     if (count > 0) {&#xD;
         for (; count > 0; count--) {&#xD;
             List&lt;AbstractGoods> req = unit.getGoodsDifference(role, count);&#xD;
             int price = ((UnitLocation)loc).priceGoods(req);&#xD;
             if (price &lt; 0) continue;&#xD;
             if (player.checkGold(price)) break;&#xD;
         }&#xD;
         if (count &lt;= 0) return false;&#xD;
     }&#xD;
     return AIMessage.askEquipForRole(this, role, count)&#xD;
         &amp;&amp; unit.getRole() == role &amp;&amp; unit.getRoleCount() == count;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxMelJPEeiyW7NaN4qWdw" name="getTransportPriority" specification="_NStjElJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxMe1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (hasMission()) ? super.getTransportPriority() : 0;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxMfFJPEeiyW7NaN4qWdw" name="getTransportLocatable" specification="_NSuKJFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxMfVJPEeiyW7NaN4qWdw" type="_OA-XQVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return unit;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxMflJPEeiyW7NaN4qWdw" name="getTransportSource" specification="_NSuxM1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxMf1JPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (getUnit() == null || getUnit().isDisposed()) ? null&#xD;
         : getUnit().getLocation();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxMgFJPEeiyW7NaN4qWdw" name="getTransportDestination" specification="_NSvYQ1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxMgVJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (getUnit() == null || getUnit().isDisposed() || !hasMission())&#xD;
         ? null&#xD;
         : mission.getTransportDestination();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxMglJPEeiyW7NaN4qWdw" name="getDeliveryPath" specification="_OFrRE1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxMg1JPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKxMhFJPEeiyW7NaN4qWdw" name="dst" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKxMhVJPEeiyW7NaN4qWdw" type="_OA--UVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (dst == null) {&#xD;
         dst = getTransportDestination();&#xD;
         if (dst == null) return null;&#xD;
     }&#xD;
     dst = Location.upLoc(dst);&#xD;
&#xD;
     PathNode path;&#xD;
     if (unit.getLocation() == carrier) {&#xD;
         path = unit.findPath(carrier.getLocation(), dst, carrier, null);&#xD;
         if (path == null &amp;&amp; dst.getTile() != null) {&#xD;
             path = unit.findPathToNeighbour(carrier.getLocation(),&#xD;
                 dst.getTile(), carrier, null);&#xD;
         }&#xD;
     } else if (unit.getLocation() instanceof Unit) {&#xD;
         return null;&#xD;
     } else {&#xD;
         path = unit.findPath(unit.getLocation(), dst, carrier, null);&#xD;
         if (path == null &amp;&amp; dst.getTile() != null) {&#xD;
             path = unit.findPathToNeighbour(unit.getLocation(),&#xD;
                 dst.getTile(), carrier, null);&#xD;
         }&#xD;
     }&#xD;
     if (path != null) path.ensureDisembark();&#xD;
     return path;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxzgFJPEeiyW7NaN4qWdw" name="getIntermediatePath" specification="_OFsfNFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxzgVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKxzglJPEeiyW7NaN4qWdw" name="dst" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKxzg1JPEeiyW7NaN4qWdw" type="_OA--UVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return null; // NYI&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxzhFJPEeiyW7NaN4qWdw" name="setTransportDestination" specification="_OFuUYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxzhVJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>throw new RuntimeException(&quot;AI unit transport destination set by mission.&quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKxzhlJPEeiyW7NaN4qWdw" name="carriableBy" specification="_OFvigFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKxzh1JPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKxziFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return carrier.couldCarry(getUnit());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKyakFJPEeiyW7NaN4qWdw" name="canMove" specification="_NSv_UlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKyakVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getUnit().getMovesLeft() > 0;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKyaklJPEeiyW7NaN4qWdw" name="leaveTransport" specification="_NSwmZFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKyak1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Unit unit = getUnit();&#xD;
     if (!unit.isOnCarrier()) return true; // Harmless error&#xD;
&#xD;
     // Just leave at once if in Europe&#xD;
     if (unit.isInEurope()) return leaveTransport(null);&#xD;
&#xD;
     // Otherwise if not on the map, do nothing.&#xD;
     final Tile tile = unit.getTile();&#xD;
     if (tile == null) return false;&#xD;
&#xD;
     // Try to go to the target location.&#xD;
     final Mission mission = getMission();&#xD;
     final Location target = (mission == null || !mission.isValid()) ? null&#xD;
         : mission.getTarget();&#xD;
     Direction direction;&#xD;
     if (target != null) {&#xD;
         if (Map.isSameLocation(target, tile)) return leaveTransport(null);&#xD;
         if (target.getTile() != null&#xD;
             &amp;&amp; (direction = tile.getDirection(target.getTile())) != null) {&#xD;
             return leaveTransport(direction);&#xD;
         }&#xD;
         PathNode path = unit.findPath(target); // Not using carrier!&#xD;
         if (path != null&#xD;
             &amp;&amp; (direction = tile.getDirection(path.next.getTile())) != null) {&#xD;
             try {&#xD;
                 return leaveTransport(direction);&#xD;
             } catch (Exception e) {&#xD;
                 logger.log(Level.WARNING, &quot;Leave transport crash for &quot;&#xD;
                     + this + &quot;/&quot; + unit.getMovesLeft(), e);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Just get off here if possible.&#xD;
     if (tile.isLand()) return leaveTransport(null);&#xD;
&#xD;
     // Collect neighbouring land tiles, get off if one has our settlement&#xD;
     List&lt;Tile> tiles = new ArrayList&lt;>();&#xD;
     for (Tile t : tile.getSurroundingTiles(1)) {&#xD;
         if (!t.isBlocked(unit)) {&#xD;
             if (t.getSettlement() != null) {&#xD;
                 return leaveTransport(tile.getDirection(t));&#xD;
             }&#xD;
             tiles.add(t);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // No adjacent unblocked tile, fail.&#xD;
     if (tiles.isEmpty()) return false;&#xD;
&#xD;
     // Pick the available tile with the shortest path to one of our&#xD;
     // settlements, or the tile with the highest defence value.&#xD;
     final Player player = unit.getOwner();&#xD;
     Tile safe = tiles.get(0);&#xD;
     Tile best = null;&#xD;
     int bestTurns = Unit.MANY_TURNS;&#xD;
     Settlement settlement = null;&#xD;
     for (Tile t : tiles) {&#xD;
         if (settlement == null || t.isConnectedTo(settlement.getTile())) {&#xD;
             settlement = t.getNearestSettlement(player, 10, true);&#xD;
         }&#xD;
         if (settlement != null) {&#xD;
             int turns = unit.getTurnsToReach(t, settlement);&#xD;
             if (bestTurns > turns) {&#xD;
                 bestTurns = turns;&#xD;
                 best = t;&#xD;
             }&#xD;
         }&#xD;
         if (safe.getDefenceValue() &lt; t.getDefenceValue()) {&#xD;
             safe = t;&#xD;
         }&#xD;
     }&#xD;
     return leaveTransport(tile.getDirection((best != null) ? best : safe));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKyalFJPEeiyW7NaN4qWdw" name="leaveTransport" specification="_OFwJklJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKyalVJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKyallJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!unit.isOnCarrier()) return false;&#xD;
     final Unit carrier = unit.getCarrier();&#xD;
     boolean result = (direction == null)&#xD;
         ? (AIMessage.askDisembark(this)&#xD;
             &amp;&amp; unit.getLocation() == carrier.getLocation())&#xD;
         : move(direction);&#xD;
&#xD;
     if (result) {&#xD;
         requestLocalRearrange();&#xD;
         dropTransport();&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKyal1JPEeiyW7NaN4qWdw" name="joinTransport" specification="_OFwwpFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKyamFJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKyamVJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OKyamlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>AIUnit aiCarrier = getAIMain().getAIUnit(carrier);&#xD;
     if (aiCarrier == null) return false;&#xD;
     boolean result = AIMessage.askEmbark(aiCarrier, unit, direction)&#xD;
         &amp;&amp; unit.getLocation() == carrier;&#xD;
&#xD;
     if (result) {&#xD;
         requestLocalRearrange();&#xD;
         takeTransport();&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKyam1JPEeiyW7NaN4qWdw" name="invalidReason" specification="_NSx0gFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKyanFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String reason = Mission.invalidTransportableReason(this);&#xD;
     return (reason != null) ? reason&#xD;
         : (hasMission()) ? getMission().invalidReason()&#xD;
         : null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKzBoFJPEeiyW7NaN4qWdw" name="dispose" specification="_NSybkFJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>dropTransport();&#xD;
     AIPlayer aiOwner = getAIOwner();&#xD;
     if (aiOwner != null) {&#xD;
         aiOwner.removeAIUnit(this);&#xD;
     } else {&#xD;
         // This happens with missionaries, and legitimately when a unit&#xD;
         // changes owner.  FIXME: cleanup.&#xD;
         logger.warning(&quot;Disposing of &quot; + getId() + &quot; but owner is null!&quot;);&#xD;
     }&#xD;
     if (mission != null) {&#xD;
         this.mission.dispose();&#xD;
         this.mission = null;&#xD;
     }&#xD;
     super.dispose();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKzBoVJPEeiyW7NaN4qWdw" name="checkIntegrity" specification="_NSzCoFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKzBolJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OKzBo1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = super.checkIntegrity(fix);&#xD;
     if (unit == null || unit.isDisposed()) {&#xD;
         result = -1;&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKzosFJPEeiyW7NaN4qWdw" name="writeChildren" specification="_OFx-xFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKzosVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeChildren(xw);&#xD;
&#xD;
     if (mission != null &amp;&amp; !mission.isOneTime() &amp;&amp; mission.isValid()) {&#xD;
         mission.toXML(xw);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKzoslJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OFzM41JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKzos1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readAttributes(xr);&#xD;
&#xD;
     final AIMain aiMain = getAIMain();&#xD;
&#xD;
     unit = xr.findFreeColGameObject(aiMain.getGame(), ID_ATTRIBUTE_TAG,&#xD;
                                     Unit.class, (Unit)null, true);&#xD;
     if (unit.isUninitialized()) {&#xD;
         xr.nextTag(); // Move off the opening &lt;AIUnit> tag&#xD;
         throw new XMLStreamException(&quot;AIUnit for uninitialized Unit: &quot;&#xD;
             + unit.getId());&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKzotFJPEeiyW7NaN4qWdw" name="readChildren" specification="_OF0bAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKzotVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readChildren(xr);&#xD;
&#xD;
     if (getUnit() != null) uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKzotlJPEeiyW7NaN4qWdw" name="readChild" specification="_OF1CE1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKzot1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final AIMain aiMain = getAIMain();&#xD;
     final String tag = xr.getLocalName();&#xD;
&#xD;
     mission = null;&#xD;
     if (BuildColonyMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new BuildColonyMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (CashInTreasureTrainMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new CashInTreasureTrainMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (DefendSettlementMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new DefendSettlementMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (IdleAtSettlementMission.getXMLElementTagName().equals(tag)&#xD;
         // @compat 0.10.5&#xD;
         || IDLE_AT_COLONY_MISSION_TAG.equals(tag)&#xD;
         // end @compat&#xD;
                ) {&#xD;
         mission = new IdleAtSettlementMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (IndianBringGiftMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new IndianBringGiftMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (IndianDemandMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new IndianDemandMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (MissionaryMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new MissionaryMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (PioneeringMission.getXMLElementTagName().equals(tag)&#xD;
         // @compat 0.10.3&#xD;
         || TILE_IMPROVEMENT_PLAN_MISSION_TAG.equals(tag)&#xD;
         // end @compat&#xD;
                ) {&#xD;
         mission = new PioneeringMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (PrivateerMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new PrivateerMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (ScoutingMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new ScoutingMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (TransportMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new TransportMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (UnitSeekAndDestroyMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new UnitSeekAndDestroyMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (UnitWanderHostileMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new UnitWanderHostileMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (UnitWanderMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new UnitWanderMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (WishRealizationMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new WishRealizationMission(aiMain, this, xr);&#xD;
&#xD;
     } else if (WorkInsideColonyMission.getXMLElementTagName().equals(tag)) {&#xD;
         mission = new WorkInsideColonyMission(aiMain, this, xr);&#xD;
&#xD;
     } else {&#xD;
         super.readChild(xr);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKzouFJPEeiyW7NaN4qWdw" name="toString" specification="_NS0QwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKzouVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (unit == null) ? &quot;AIUnit-null&quot; : unit.toString(&quot;AIUnit &quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKzoulJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_NS030lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKzou1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getXMLElementTagName(); </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OKzovFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_NS1e4lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OKzovVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return &quot;aiUnit&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NSrG0FJPEeiyW7NaN4qWdw" name="hasMission" isLeaf="true" method="_OKvXRFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-IlJPEeiyW7NaN4qWdw">
                    <body>Checks if this unit has been assigned a mission.&#xD;
     *&#xD;
     * @return True if this unit has a mission.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSrG0VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSrt4FJPEeiyW7NaN4qWdw" name="getGoal" isLeaf="true" method="_OKvXRlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-I1JPEeiyW7NaN4qWdw">
                    <body>Gets the goal of this AI unit.&#xD;
     *&#xD;
     * @return The goal of this AI unit.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFmYklJPEeiyW7NaN4qWdw" type="_OCSl4VJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSrt4VJPEeiyW7NaN4qWdw" name="requestLocalRearrange" visibility="private" method="_OKvXSlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-JVJPEeiyW7NaN4qWdw">
                    <body>Request a rearrangement of any colony at the current location.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NSrt4lJPEeiyW7NaN4qWdw" name="takeTransport" visibility="private" method="_OKvXS1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-JlJPEeiyW7NaN4qWdw">
                    <body>Take the current carrier as transport, keeping the transport mission/s&#xD;
     * consistent.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NSrt41JPEeiyW7NaN4qWdw" name="getAIOwner" method="_OKvXTFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-J1JPEeiyW7NaN4qWdw">
                    <body>Gets the AIPlayer that owns this AIUnit.&#xD;
     *&#xD;
     * @return The owning AIPlayer.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCW3UFJPEeiyW7NaN4qWdw" type="_NSHGIFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSsU8FJPEeiyW7NaN4qWdw" name="getAIRandom" method="_OKv-UFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-KFJPEeiyW7NaN4qWdw">
                    <body>Gets the PRNG to use with this unit.&#xD;
     *&#xD;
     * @return A &lt;code>Random&lt;/code> instance.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFmYlVJPEeiyW7NaN4qWdw" type="_OCFKgVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSsU8VJPEeiyW7NaN4qWdw" name="getTrivialTarget" method="_OKwlYFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-KVJPEeiyW7NaN4qWdw">
                    <body>Get a trivial target, usually a safe nearby settlement or Europe.&#xD;
     *&#xD;
     * @return A trivial target, or null if none found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFm_oFJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSsU8lJPEeiyW7NaN4qWdw" name="hasCargo" isLeaf="true" method="_OKwlYlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-KlJPEeiyW7NaN4qWdw">
                    <body>Is this AI unit carrying any cargo (units or goods).&#xD;
     *&#xD;
     * @return True if the unit has cargo aboard.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSsU81JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSs8AFJPEeiyW7NaN4qWdw" name="moveToAmerica" method="_OKxMcFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-LVJPEeiyW7NaN4qWdw">
                    <body>Moves a unit to the new world.&#xD;
     *&#xD;
     * @return True if there was no c-s problem.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NSs8AVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NStjEFJPEeiyW7NaN4qWdw" name="moveToEurope" method="_OKxMclJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-LlJPEeiyW7NaN4qWdw">
                    <body>Moves a unit to Europe.&#xD;
     *&#xD;
     * @return True if there was no c-s problem.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NStjEVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NStjElJPEeiyW7NaN4qWdw" name="getTransportPriority" method="_OKxMelJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NSuKIFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSuKJFJPEeiyW7NaN4qWdw" name="getTransportLocatable" method="_OKxMfFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFrREFJPEeiyW7NaN4qWdw" type="_OA-XQVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSuxM1JPEeiyW7NaN4qWdw" name="getTransportSource" method="_OKxMflJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFrREVJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSvYQ1JPEeiyW7NaN4qWdw" name="getTransportDestination" method="_OKxMgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFrRElJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NSv_UlJPEeiyW7NaN4qWdw" name="canMove" method="_OKyakFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NSwmYFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSwmZFJPEeiyW7NaN4qWdw" name="leaveTransport" method="_OKyaklJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NSwmZVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSx0gFJPEeiyW7NaN4qWdw" name="invalidReason" method="_OKyam1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NSx0gVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NSybkFJPEeiyW7NaN4qWdw" name="dispose" method="_OKzBoFJPEeiyW7NaN4qWdw"/>
                <ownedOperation xmi:id="_NSzCoFJPEeiyW7NaN4qWdw" name="checkIntegrity" method="_OKzBoVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NSzCoVJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NSzColJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NS0QwFJPEeiyW7NaN4qWdw" name="toString" method="_OKzouFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NS0QwVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NS030lJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_OKzoulJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NS0301JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NS1e4lJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_OKzovFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-MVJPEeiyW7NaN4qWdw">
                    <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;aiUnit&quot;</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NS1e41JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OCWQQFJPEeiyW7NaN4qWdw" name="AIUnit" method="_OKuwMlJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OCWQQ1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OCWQRFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLeXJlJPEeiyW7NaN4qWdw">
                    <body>Creates a new uninitialized &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param id The object identifier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCWQQVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OCWQQlJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OCWQRVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFlKcFJPEeiyW7NaN4qWdw" name="AIUnit" method="_OKuwNlJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OFlKc1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OFlKdFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLeXJ1JPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIUnit&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param unit The unit to make an {@link AIObject} for.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFlKcVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFlKclJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFlKdVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFlxgFJPEeiyW7NaN4qWdw" name="AIUnit" method="_OKuwOlJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OFlxg1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OFlxhFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLe-IFJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIUnit&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param element The root element for the XML-representation&#xD;
     *       of a &lt;code>Wish&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFlxgVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFlxglJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFlxhVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFlxhlJPEeiyW7NaN4qWdw" name="AIUnit" method="_OKvXQFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OFlxiVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OFmYkFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLe-IVJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIUnit&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @exception XMLStreamException if a problem was encountered&#xD;
     *     during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFlxh1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFlxiFJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFmYkVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFmYk1JPEeiyW7NaN4qWdw" name="setGoal" isLeaf="true" method="_OKvXSFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-JFJPEeiyW7NaN4qWdw">
                    <body>Sets the goal of this AI unit.&#xD;
     *&#xD;
     * @param goal The new &lt;code>Goal&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFmYlFJPEeiyW7NaN4qWdw" name="goal" type="_OCSl4VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFm_oVJPEeiyW7NaN4qWdw" name="hasMission" method="_OKwlZFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFm_olJPEeiyW7NaN4qWdw" name="returnClass" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFm_pFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFoNwFJPEeiyW7NaN4qWdw" name="getMission" method="_OKwlZ1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFoNwVJPEeiyW7NaN4qWdw" name="returnClass" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFoNw1JPEeiyW7NaN4qWdw" type="_OE9fY1JPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFo00VJPEeiyW7NaN4qWdw" name="doMission" method="_OKwlalJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-K1JPEeiyW7NaN4qWdw">
                    <body>Performs the mission this unit has been assigned.&#xD;
     *&#xD;
     * Do *not* check mission validity.  The mission itself does that,&#xD;
     * and has special case error handling.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFo00lJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFpb4FJPEeiyW7NaN4qWdw" name="changeMission" method="_OKwlbFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-LFJPEeiyW7NaN4qWdw">
                    <body>Change the mission of a unit.&#xD;
     *&#xD;
     * @param mission The new &lt;code>Mission&lt;/code>.&#xD;
     * @return The new current &lt;code>Mission&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFpb4VJPEeiyW7NaN4qWdw" name="mission" type="_OAf2IVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFpb4lJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFqC8FJPEeiyW7NaN4qWdw" name="move" method="_OKxMdFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-L1JPEeiyW7NaN4qWdw">
                    <body>Moves this AI unit.&#xD;
     *&#xD;
     * @param direction The &lt;code>Direction&lt;/code> to move.&#xD;
     * @return True if the move succeeded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFqC8VJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFqC8lJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFqqAFJPEeiyW7NaN4qWdw" name="equipForRole" method="_OKxMd1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLe-MFJPEeiyW7NaN4qWdw">
                    <body>Equips this AI unit for a particular role.&#xD;
     *&#xD;
     * The unit must be at a location where the required goods are available&#xD;
     * (possibly requiring a purchase, which may fail due to lack of gold&#xD;
     * or boycotts in effect).&#xD;
     *&#xD;
     * @param role The &lt;code>Role&lt;/code> to equip for identifier.&#xD;
     * @return True if the role change was successful.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OFqqAVJPEeiyW7NaN4qWdw" name="role" type="_OAWsMVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFqqAlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFrRE1JPEeiyW7NaN4qWdw" name="getDeliveryPath" method="_OKxMglJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFrRFFJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFr4IFJPEeiyW7NaN4qWdw" name="dst" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFsfMFJPEeiyW7NaN4qWdw" type="_OA--UVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFsfNFJPEeiyW7NaN4qWdw" name="getIntermediatePath" method="_OKxzgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFtGQFJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFtGQVJPEeiyW7NaN4qWdw" name="dst" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFtGQlJPEeiyW7NaN4qWdw" type="_OA--UVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFuUYFJPEeiyW7NaN4qWdw" name="setTransportDestination" method="_OKxzhFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFuUYVJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFvigFJPEeiyW7NaN4qWdw" name="carriableBy" method="_OKxzhlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFvigVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFviglJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFwJklJPEeiyW7NaN4qWdw" name="leaveTransport" method="_OKyalFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFwJk1JPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFwwoFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFwwpFJPEeiyW7NaN4qWdw" name="joinTransport" method="_OKyal1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFwwpVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFwwplJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OFx-wFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OFx-xFJPEeiyW7NaN4qWdw" name="writeChildren" visibility="protected" method="_OKzosFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFx-xVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OFzM41JPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OKzoslJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OFzM5FJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OF0bAFJPEeiyW7NaN4qWdw" name="readChildren" visibility="protected" method="_OKzotFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OF0bAVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OF1CE1JPEeiyW7NaN4qWdw" name="readChild" visibility="protected" method="_OKzotlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OF1pIFJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NS-o0FJPEeiyW7NaN4qWdw" name="CacheEntryComparator">
                <ownedComment xmi:id="_OLe-MlJPEeiyW7NaN4qWdw">
                  <body>A special comparator to sort the production cache with.</body>
                </ownedComment>
                <interfaceRealization xmi:id="_OF3eUFJPEeiyW7NaN4qWdw" client="_NS-o0FJPEeiyW7NaN4qWdw" supplier="_OAKe8VJPEeiyW7NaN4qWdw" contract="_OAKe8VJPEeiyW7NaN4qWdw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK0PwFJPEeiyW7NaN4qWdw" name="compareProduction" specification="_OCeMEVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK0PwVJPEeiyW7NaN4qWdw" name="entry1" type="_OCdlAFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK0PwlJPEeiyW7NaN4qWdw" name="entry2" type="_OCdlAFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK0Pw1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return entry2.getProduction() - entry1.getProduction();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK020FJPEeiyW7NaN4qWdw" name="compare" specification="_OCezIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK020VJPEeiyW7NaN4qWdw" name="entry1" type="_OCdlAFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK020lJPEeiyW7NaN4qWdw" name="entry2" type="_OCdlAFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK0201JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int production = compareProduction(entry1, entry2);&#xD;
     if (production != 0) {&#xD;
         return production;&#xD;
     } else if (entry1.isExpert()) {&#xD;
         if (entry2.isExpert()) {&#xD;
             return 0;&#xD;
         } else {&#xD;
             return -1;&#xD;
         }&#xD;
     } else if (entry2.isExpert()) {&#xD;
         return 1;&#xD;
     } else if (entry1.unitUpgradesToExpert()) {&#xD;
         if (entry2.unitUpgradesToExpert()) {&#xD;
             // both can be upgraded to expert: compare experience&#xD;
             return entry2.getUnit().getExperience()&#xD;
                 - entry1.getUnit().getExperience();&#xD;
         } else {&#xD;
             return -1;&#xD;
         }&#xD;
     } else if (entry2.unitUpgradesToExpert()) {&#xD;
         return 1;&#xD;
     } else if (entry1.unitUpgrades()) {&#xD;
         if (entry2.unitUpgrades()) {&#xD;
             // both can be upgraded: compare wasted experience&#xD;
             return entry1.getUnit().getExperience()&#xD;
                 - entry2.getUnit().getExperience();&#xD;
         } else {&#xD;
             return -1;&#xD;
         }&#xD;
     } else if (entry2.unitUpgrades()) {&#xD;
         return 1;&#xD;
     } else if (entry1.isOtherExpert()) {&#xD;
         if (entry2.isOtherExpert()) {&#xD;
             return 0;&#xD;
         } else {&#xD;
             // prefer non-experts&#xD;
             return 1;&#xD;
         }&#xD;
     } else if (entry2.isOtherExpert()) {&#xD;
         return -1;&#xD;
     } else {&#xD;
         return 0;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_OCeMEVJPEeiyW7NaN4qWdw" name="compareProduction" method="_OK0PwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OCeMElJPEeiyW7NaN4qWdw" name="entry1" type="_OCdlAFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OCeME1JPEeiyW7NaN4qWdw" name="entry2" type="_OCdlAFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OCeMFFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OCezIFJPEeiyW7NaN4qWdw" name="compare" method="_OK020FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OCezIVJPEeiyW7NaN4qWdw" name="entry1" type="_OCdlAFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OCezIlJPEeiyW7NaN4qWdw" name="entry2" type="_OCdlAFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OCezI1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NS_28FJPEeiyW7NaN4qWdw" name="Cargo">
                <ownedComment xmi:id="_OLe-M1JPEeiyW7NaN4qWdw">
                  <body>An class describing the action needed to make progress in a&#xD;
transportation action for a specific transportable.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_OJO7YFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMVSsVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJPicFJPEeiyW7NaN4qWdw" value="Logger.getLogger(Cargo.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJPicVJPEeiyW7NaN4qWdw" name="MAX_TRY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJPiclJPEeiyW7NaN4qWdw" value="3"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJQwk1JPEeiyW7NaN4qWdw" name="transportable" type="_NV5Z8FJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMWg0VJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJRXoFJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMXH4VJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJRXoVJPEeiyW7NaN4qWdw" name="tries" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJRXolJPEeiyW7NaN4qWdw" name="spaceLeft">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJRXo1JPEeiyW7NaN4qWdw" name="wrapped" visibility="private" type="_NS_28FJPEeiyW7NaN4qWdw" isOrdered="true" association="_OMXu8VJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJRXpFJPEeiyW7NaN4qWdw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJR-sFJPEeiyW7NaN4qWdw" name="plan" visibility="private" type="_NTBsIVJPEeiyW7NaN4qWdw" association="_OMXu9FJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJR-slJPEeiyW7NaN4qWdw" name="CDST_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJSlwFJPEeiyW7NaN4qWdw" value="&quot;cdst&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJSlwVJPEeiyW7NaN4qWdw" name="CWAIT_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJSlwlJPEeiyW7NaN4qWdw" value="&quot;cwait&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJSlw1JPEeiyW7NaN4qWdw" name="CARRIER_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJSlxFJPEeiyW7NaN4qWdw" value="&quot;carrier&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJSlxVJPEeiyW7NaN4qWdw" name="FALLBACK_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJSlxlJPEeiyW7NaN4qWdw" value="&quot;fallback&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJTM0FJPEeiyW7NaN4qWdw" name="MODE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJTM0VJPEeiyW7NaN4qWdw" value="&quot;mode&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJTM0lJPEeiyW7NaN4qWdw" name="SPACELEFT_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJTM01JPEeiyW7NaN4qWdw" value="&quot;space&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJTM1FJPEeiyW7NaN4qWdw" name="TDST_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJTM1VJPEeiyW7NaN4qWdw" value="&quot;tdst&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJTM1lJPEeiyW7NaN4qWdw" name="TRIES_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJTM11JPEeiyW7NaN4qWdw" value="&quot;tries&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJTM2FJPEeiyW7NaN4qWdw" name="TURNS_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJTz4FJPEeiyW7NaN4qWdw" value="&quot;turns&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJTz4VJPEeiyW7NaN4qWdw" name="TWAIT_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJTz4lJPEeiyW7NaN4qWdw" value="&quot;twait&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK2E8FJPEeiyW7NaN4qWdw" name="Cargo" specification="_OF56kFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK2E8VJPEeiyW7NaN4qWdw" name="transportable" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2E8lJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2E81JPEeiyW7NaN4qWdw" name="plan" type="_NTBsIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2E9FJPEeiyW7NaN4qWdw" type="_NS_28FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this.transportable = transportable;&#xD;
     this.carrier = carrier;&#xD;
     this.tries = 0;&#xD;
     this.spaceLeft = carrier.getSpaceLeft();&#xD;
     this.wrapped = null;&#xD;
     this.plan = plan;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK2E9VJPEeiyW7NaN4qWdw" name="Cargo" specification="_OF6hpVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK2E9lJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2E91JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2E-FJPEeiyW7NaN4qWdw" type="_NS_28FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>readFromXML(aiMain, xr);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK2E-VJPEeiyW7NaN4qWdw" name="initialize" specification="_OF7ItVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK2E-lJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2E-1JPEeiyW7NaN4qWdw" name="allowFallback">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OK2E_FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return this.plan.initialize(this.transportable, this.carrier,&#xD;
                                 destination, allowFallback);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK2sAFJPEeiyW7NaN4qWdw" name="update" specification="_NTEIYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK2sAVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return this.plan.initialize(this.transportable, this.carrier, null,&#xD;
                                 this.plan.fallback);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK2sAlJPEeiyW7NaN4qWdw" name="newCargo" specification="_OF8W0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK2sA1JPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2sBFJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2sBVJPEeiyW7NaN4qWdw" type="_NS_28FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return newCargo(t, carrier, t.getTransportDestination(), true);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK2sBlJPEeiyW7NaN4qWdw" name="newCargo" specification="_OF8941JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK2sB1JPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2sCFJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2sCVJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK2sClJPEeiyW7NaN4qWdw" name="allowFallback">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OK2sC1JPEeiyW7NaN4qWdw" type="_NS_28FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>Cargo cargo = new Cargo(t, carrier, new CargoPlan());&#xD;
     String reason = cargo.plan.initialize(t, carrier, destination,&#xD;
                                           allowFallback);&#xD;
     if (reason != null) throw new FreeColException(reason);&#xD;
     return cargo;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK36IFJPEeiyW7NaN4qWdw" name="dump" specification="_NTEvcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK36IVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!isCarried()) return &quot;not-carried&quot;;&#xD;
     PathNode path = carrier.getTrivialPath();&#xD;
     if (path == null) return &quot;no-trivial-path&quot;;&#xD;
     String reason = initialize(path.getLastNode().getLocation(), false);&#xD;
     if (reason != null) return reason;&#xD;
     this.plan.mode = CargoMode.DUMP;&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK36IlJPEeiyW7NaN4qWdw" name="isValid" specification="_NTEvclJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK36I1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return plan != null &amp;&amp; plan.mode != null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK36JFJPEeiyW7NaN4qWdw" name="getMode" specification="_NTFWgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK36JVJPEeiyW7NaN4qWdw" type="_NTAeAFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return plan.mode;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK4hMFJPEeiyW7NaN4qWdw" name="getModeString" specification="_NTFWgVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK4hMVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>CargoMode mode = getMode();&#xD;
     return (mode == null) ? &quot;null&quot;&#xD;
         : mode.toString().toLowerCase(Locale.US);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK4hMlJPEeiyW7NaN4qWdw" name="getTurns" specification="_NTFWg1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK4hM1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return plan.turns;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK4hNFJPEeiyW7NaN4qWdw" name="isFallback" specification="_NTF9kFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK4hNVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return plan.fallback;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK4hNlJPEeiyW7NaN4qWdw" name="getTransportTarget" specification="_NTF9klJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK4hN1JPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (getMode().isCollection()) ? plan.twait : plan.tdst;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK4hOFJPEeiyW7NaN4qWdw" name="getCarrierTarget" specification="_NTF9k1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK4hOVJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (getMode().isCollection()) ? plan.cwait : plan.cdst;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK4hOlJPEeiyW7NaN4qWdw" name="clear" specification="_NTF9lFJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>this.transportable = null;&#xD;
     this.carrier = null;&#xD;
     this.plan.mode = null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK5IQFJPEeiyW7NaN4qWdw" name="isCarried" specification="_NTGkoFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK5IQVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return transportable != null&#xD;
         &amp;&amp; transportable.getLocation() == carrier;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK5IQlJPEeiyW7NaN4qWdw" name="isCollectable" specification="_NTGkolJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK5IQ1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!getMode().isCollection() || isCarried()) return false;&#xD;
     return Map.isSameLocation(plan.twait, transportable.getLocation())&#xD;
         &amp;&amp; Map.isSameLocation(plan.cwait, carrier.getLocation());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK5IRFJPEeiyW7NaN4qWdw" name="isDeliverable" specification="_NTGkpFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK5IRVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (getMode().isCollection() || !isCarried()) return false;&#xD;
     return Map.isSameLocation(plan.cdst, carrier.getLocation());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK5IRlJPEeiyW7NaN4qWdw" name="isDelivered" specification="_NTHLsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK5IR1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return !getMode().isCollection() &amp;&amp; !isCarried();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK5vUFJPEeiyW7NaN4qWdw" name="hasPath" specification="_NTHLslJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK5vUVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return carrier.findPath(getCarrierTarget()) != null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK5vUlJPEeiyW7NaN4qWdw" name="getJoinDirection" specification="_NT6c8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK5vU1JPEeiyW7NaN4qWdw" type="_OAVeEVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (carrier.isInEurope() || plan.cwait == plan.twait) ? null&#xD;
         : carrier.getGame().getMap().getDirection(plan.twait.getTile(),&#xD;
                                                   plan.cwait.getTile());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK6WYFJPEeiyW7NaN4qWdw" name="getLeaveDirection" specification="_NT7EAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK6WYVJPEeiyW7NaN4qWdw" type="_OAVeEVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (!carrier.hasTile() || plan.cdst == plan.tdst) return null;&#xD;
     TransportableAIObject t = getTransportable();&#xD;
     PathNode path = t.getDeliveryPath(getCarrier(), plan.tdst);&#xD;
     return (path == null || path.next == null) ? null&#xD;
         : path.next.getDirection();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK6WYlJPEeiyW7NaN4qWdw" name="getNewSpace" specification="_NT7rEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK6WY1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (!isValid()) return 0;&#xD;
     int ret = 0;&#xD;
     ret += (getMode().isCollection()) ? getTransportable().getSpaceTaken()&#xD;
         : -getTransportable().getSpaceTaken();&#xD;
     if (hasWrapped()) {&#xD;
         ret += wrapped.stream().mapToInt(c -> c.getNewSpace()).sum();&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK6WZFJPEeiyW7NaN4qWdw" name="hasWrapped" specification="_NT7rElJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK6WZVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return wrapped != null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK69cFJPEeiyW7NaN4qWdw" name="couldWrap" specification="_OCh2cVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK69cVJPEeiyW7NaN4qWdw" name="other" type="_NS_28FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK69clJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getCarrierTarget() == other.getCarrierTarget()&#xD;
         &amp;&amp; getNewSpace() &lt; 0 &amp;&amp; other.getNewSpace() &lt; 0;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK69c1JPEeiyW7NaN4qWdw" name="wrap" specification="_OCidgVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK69dFJPEeiyW7NaN4qWdw" name="other" type="_NS_28FJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>if (other == this) {&#xD;
         throw new IllegalStateException(&quot;Autowrap at&quot; + this);&#xD;
     }&#xD;
     if (wrapped == null) wrapped = new ArrayList&lt;>();&#xD;
     wrapped.add(other);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK69dVJPEeiyW7NaN4qWdw" name="unwrap" specification="_NT8SIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK69dlJPEeiyW7NaN4qWdw" type="_NS_28FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OK69d1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (wrapped == null) {&#xD;
         throw new IllegalStateException(&quot;Bogus unwrap &quot; + this);&#xD;
     }&#xD;
     List&lt;Cargo> result = wrapped;&#xD;
     wrapped = null;&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK69eFJPEeiyW7NaN4qWdw" name="retry" specification="_NT85MVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK69eVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return tries++ &lt; MAX_TRY;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK69elJPEeiyW7NaN4qWdw" name="resetTries" specification="_NT9gQFJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>this.tries = 0;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK69e1JPEeiyW7NaN4qWdw" name="isEuropeanTrade" specification="_OF-zEVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK69fFJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK69fVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return transportable instanceof AIGoods&#xD;
         &amp;&amp; ((AIGoods)transportable).getGoodsType() == type&#xD;
         &amp;&amp; getCarrierTarget() instanceof Europe;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK69flJPEeiyW7NaN4qWdw" name="check" specification="_OCidg1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK69f1JPEeiyW7NaN4qWdw" name="aiCarrier" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK69gFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (transportable == null) {&#xD;
         return &quot;null transportable&quot;;&#xD;
     } else if (transportable.isDisposed()) {&#xD;
         return &quot;disposed transportable&quot;;&#xD;
     }&#xD;
         &#xD;
     Locatable l = transportable.getTransportLocatable();&#xD;
     if (l == null) {&#xD;
         return &quot;null locatable: &quot; + transportable;&#xD;
     } else if (l instanceof FreeColGameObject&#xD;
         &amp;&amp; ((FreeColGameObject)l).isDisposed()) {&#xD;
         return &quot;locatable disposed&quot;;&#xD;
     }&#xD;
         &#xD;
     Location tLoc = l.getLocation();&#xD;
     if (tLoc instanceof Unit &amp;&amp; tLoc != carrier) {&#xD;
         return &quot;carrier usurped&quot;; // On another carrier!&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK69gVJPEeiyW7NaN4qWdw" name="canQueueAt" specification="_OF-zFFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK69glJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK69g1JPEeiyW7NaN4qWdw" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OK69hFJPEeiyW7NaN4qWdw" name="cargoes" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK69hVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final int maxHolds = carrier.getCargoCapacity();&#xD;
     final int newSpace = this.getNewSpace();&#xD;
     Cargo tr = cargoes.get(index);&#xD;
     for (int j = index; j &lt; cargoes.size(); j++) {&#xD;
         int holds = (j == 0) ? carrier.getCargoSpaceTaken()&#xD;
             : maxHolds - cargoes.get(j-1).getSpaceLeft();&#xD;
         holds += newSpace;&#xD;
         if (holds &lt; 0 || holds > maxHolds) return false;&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK69hlJPEeiyW7NaN4qWdw" name="toShortString" specification="_NT-HUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK69h1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>LogBuilder lb = new LogBuilder(32);&#xD;
     lb.add(getModeString(), &quot; &quot;, transportable);&#xD;
     Location lt = getTransportTarget();&#xD;
     lb.add(&quot; @ &quot;, ((lt == null) ? &quot;null&quot; : lt.toShortString()));&#xD;
     Location ct = getCarrierTarget();&#xD;
     if (ct != lt) lb.add(&quot;/&quot;, ct.toShortString());&#xD;
     return lb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK7kgFJPEeiyW7NaN4qWdw" name="toString" specification="_NT-HUlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK7kgVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>LogBuilder lb = new LogBuilder(64);&#xD;
     lb.add(&quot;[&quot;, transportable,&#xD;
         &quot; &quot;, getModeString(),&#xD;
         &quot; &quot;, getTurns(), &quot;/&quot;, tries, &quot; space=&quot;, spaceLeft,&#xD;
         ((wrapped == null) ? &quot;&quot; : &quot; wrap&quot;));&#xD;
     if (plan.twait != null &amp;&amp; plan.cwait != null) {&#xD;
         lb.add(&quot; &quot;, plan.twait.toShortString(),&#xD;
             &quot;/&quot;, plan.cwait.toShortString());&#xD;
     }&#xD;
     if (plan.cdst != null &amp;&amp; plan.tdst != null) {&#xD;
         lb.add(&quot;->&quot;, plan.cdst.toShortString(),&#xD;
             &quot;/&quot;, plan.tdst.toShortString());&#xD;
     }&#xD;
     lb.add(&quot; &quot;, plan.fallback, &quot;]&quot;);&#xD;
     return lb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK7kglJPEeiyW7NaN4qWdw" name="toXML" specification="_OGBPUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK7kg1JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>xw.writeStartElement(getXMLElementTagName());&#xD;
&#xD;
     xw.writeAttribute(FreeColObject.ID_ATTRIBUTE_TAG,&#xD;
                       (AIObject)getTransportable());&#xD;
&#xD;
     xw.writeAttribute(CARRIER_TAG, getCarrier());&#xD;
&#xD;
     xw.writeAttribute(TRIES_TAG, getTries());&#xD;
&#xD;
     xw.writeAttribute(SPACELEFT_TAG, getSpaceLeft());&#xD;
&#xD;
     if (plan.twait != null) {&#xD;
         xw.writeLocationAttribute(TWAIT_TAG, plan.twait);&#xD;
     }&#xD;
&#xD;
     if (plan.cwait != null) {&#xD;
         xw.writeLocationAttribute(CWAIT_TAG, plan.cwait);&#xD;
     }&#xD;
&#xD;
     if (plan.cdst != null) {&#xD;
         xw.writeLocationAttribute(CDST_TAG, plan.cdst);&#xD;
     }&#xD;
&#xD;
     if (plan.tdst != null) {&#xD;
         xw.writeLocationAttribute(TDST_TAG, plan.tdst);&#xD;
     }&#xD;
&#xD;
     xw.writeAttribute(TURNS_TAG, plan.turns);&#xD;
&#xD;
     xw.writeAttribute(MODE_TAG, plan.mode);&#xD;
&#xD;
     xw.writeAttribute(FALLBACK_TAG, plan.fallback);&#xD;
&#xD;
     xw.writeEndElement();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK7khFJPEeiyW7NaN4qWdw" name="readFromXML" specification="_OGBPUlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK7khVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK7khlJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Game game = aiMain.getGame();&#xD;
&#xD;
     String tid = xr.readId();&#xD;
     TransportableAIObject tao = null;&#xD;
     if (tid != null) {&#xD;
         AIObject aio = aiMain.getAIObject(tid);&#xD;
         if (aio == null) {&#xD;
             if (tid.startsWith(Unit.getXMLElementTagName())) {&#xD;
                 tao = new AIUnit(aiMain, tid);&#xD;
             } else if (tid.startsWith(AIGoods.getXMLElementTagName())) {&#xD;
                 tao = new AIGoods(aiMain, tid);&#xD;
             }&#xD;
         } else {&#xD;
             tao = (TransportableAIObject)aio;&#xD;
         }&#xD;
     }&#xD;
     if (tao == null) {&#xD;
         throw new XMLStreamException(&quot;Transportable expected: &quot; + tid);&#xD;
     }&#xD;
     this.transportable = tao;&#xD;
&#xD;
     this.carrier = xr.getAttribute(game, CARRIER_TAG,&#xD;
                                    Unit.class, (Unit)null);&#xD;
&#xD;
     this.tries = xr.getAttribute(TRIES_TAG, 0);&#xD;
     &#xD;
     this.spaceLeft = xr.getAttribute(SPACELEFT_TAG, -1);&#xD;
         &#xD;
     this.wrapped = null;&#xD;
&#xD;
     this.plan = new CargoPlan();&#xD;
&#xD;
     this.plan.twait = xr.getLocationAttribute(game, TWAIT_TAG, false);&#xD;
&#xD;
     this.plan.cwait = xr.getLocationAttribute(game, CWAIT_TAG, false);&#xD;
&#xD;
     this.plan.cdst = xr.getLocationAttribute(game, CDST_TAG, false);&#xD;
&#xD;
     this.plan.tdst = xr.getLocationAttribute(game, TDST_TAG, false);&#xD;
         &#xD;
     this.plan.turns = xr.getAttribute(TURNS_TAG, -1);&#xD;
&#xD;
     this.plan.mode = xr.getAttribute(MODE_TAG, &#xD;
                                      CargoMode.class, (CargoMode)null);&#xD;
&#xD;
     this.plan.fallback = xr.getAttribute(FALLBACK_TAG, false);&#xD;
&#xD;
     xr.closeTag(getXMLElementTagName());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK7kh1JPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_NUAjkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK7kiFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return &quot;cargo&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NTEIYFJPEeiyW7NaN4qWdw" name="update" method="_OK2sAFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzU1JPEeiyW7NaN4qWdw">
                    <body>Update the current delivery at the current fallback tolerance.&#xD;
     *&#xD;
     * @return A reason the planning failed, null if it succeeded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NTEIYVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NTEvcFJPEeiyW7NaN4qWdw" name="dump" method="_OK36IFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzVlJPEeiyW7NaN4qWdw">
                    <body>Reset this cargo to dump to the nearest available location.&#xD;
     *&#xD;
     * @return A reason for failing to reset, or null on succes.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NTEvcVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NTEvclJPEeiyW7NaN4qWdw" name="isValid" method="_OK36IlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NTEvc1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NTFWgFJPEeiyW7NaN4qWdw" name="getMode" method="_OK36JFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OCh2cFJPEeiyW7NaN4qWdw" type="_NTAeAFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NTFWgVJPEeiyW7NaN4qWdw" name="getModeString" method="_OK4hMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NTFWglJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NTFWg1JPEeiyW7NaN4qWdw" name="getTurns" method="_OK4hMlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NTFWhFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NTF9kFJPEeiyW7NaN4qWdw" name="isFallback" method="_OK4hNFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NTF9kVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NTF9klJPEeiyW7NaN4qWdw" name="getTransportTarget" method="_OK4hNlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OF9k9VJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NTF9k1JPEeiyW7NaN4qWdw" name="getCarrierTarget" method="_OK4hOFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OF9k9lJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NTF9lFJPEeiyW7NaN4qWdw" name="clear" method="_OK4hOlJPEeiyW7NaN4qWdw"/>
                <ownedOperation xmi:id="_NTGkoFJPEeiyW7NaN4qWdw" name="isCarried" method="_OK5IQFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzV1JPEeiyW7NaN4qWdw">
                    <body>Is the transportable on board the carrier?&#xD;
     *&#xD;
     * @return True if the transportable is being carried by the carrier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NTGkoVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NTGkolJPEeiyW7NaN4qWdw" name="isCollectable" method="_OK5IQlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzWFJPEeiyW7NaN4qWdw">
                    <body>Is this cargo collectable?  That is, is it and the carrier&#xD;
     * at their collection points, and in a collectable mode.&#xD;
     *&#xD;
     * @return True if the cargo can be collected.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NTGko1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NTGkpFJPEeiyW7NaN4qWdw" name="isDeliverable" method="_OK5IRFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzWVJPEeiyW7NaN4qWdw">
                    <body>Is this cargo deliverable?  That is, has it arrived at the target&#xD;
     * on board the carrier in a deliverable mode.&#xD;
     *&#xD;
     * @return True if the cargo can be delivered to the target.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NTGkpVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NTHLsFJPEeiyW7NaN4qWdw" name="isDelivered" method="_OK5IRlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzWlJPEeiyW7NaN4qWdw">
                    <body>Is this cargo delivered, or otherwise removed?  That is, is the&#xD;
     * cargo not on board the carrier in a deliverable mode?&#xD;
     *&#xD;
     * @return True if the cargo has been delivered.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NTHLsVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NTHLslJPEeiyW7NaN4qWdw" name="hasPath" method="_OK5vUFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzW1JPEeiyW7NaN4qWdw">
                    <body>Does this cargo have a potential delivery path?&#xD;
     *&#xD;
     * @return True if the carrier can deliver the cargo.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NTHLs1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NT6c8FJPEeiyW7NaN4qWdw" name="getJoinDirection" method="_OK5vUlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzXFJPEeiyW7NaN4qWdw">
                    <body>Get the movement direction to join the carrier.&#xD;
     *&#xD;
     * @return The &lt;code>Direction&lt;/code> to join by.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OF9k91JPEeiyW7NaN4qWdw" type="_OAVeEVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NT7EAFJPEeiyW7NaN4qWdw" name="getLeaveDirection" method="_OK6WYFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzXVJPEeiyW7NaN4qWdw">
                    <body>Get the movement direction to leave the carrier.&#xD;
     *&#xD;
     * @return The &lt;code>Direction&lt;/code> to leave by.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OF-zEFJPEeiyW7NaN4qWdw" type="_OAVeEVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NT7rEFJPEeiyW7NaN4qWdw" name="getNewSpace" method="_OK6WYlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzXlJPEeiyW7NaN4qWdw">
                    <body>How much space would be needed to add this transportable?&#xD;
     *&#xD;
     * @return The extra space required.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NT7rEVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NT7rElJPEeiyW7NaN4qWdw" name="hasWrapped" method="_OK6WZFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzX1JPEeiyW7NaN4qWdw">
                    <body>Does this cargo wrap others?&#xD;
     *&#xD;
     * @return True if wrapped transportables are present.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NT7rE1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NT8SIFJPEeiyW7NaN4qWdw" name="unwrap" method="_OK69dVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzYlJPEeiyW7NaN4qWdw">
                    <body>Unwrap this cargo.&#xD;
     *&#xD;
     * @return The cargoes that were wrapped.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NT8SIVJPEeiyW7NaN4qWdw" type="_NS_28FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NT85MFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NT85MVJPEeiyW7NaN4qWdw" name="retry" method="_OK69eFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzY1JPEeiyW7NaN4qWdw">
                    <body>Should this &lt;code>Cargo&lt;/code> be retried after encountering&#xD;
     * a blockage?  For now, just tries three times.&#xD;
     *&#xD;
     * FIXME: be smarter.&#xD;
     *&#xD;
     * @return True if the &lt;code>Cargo&lt;/code> should be retried.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NT85MlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NT9gQFJPEeiyW7NaN4qWdw" name="resetTries" method="_OK69elJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzZFJPEeiyW7NaN4qWdw">
                    <body>Reset the tries counter.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NT-HUFJPEeiyW7NaN4qWdw" name="toShortString" method="_OK69hlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLhaYVJPEeiyW7NaN4qWdw">
                    <body>Abbreviated string representation for this cargo.&#xD;
     *&#xD;
     * @return A short descriptive string.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NT-HUVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NT-HUlJPEeiyW7NaN4qWdw" name="toString" method="_OK7kgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NT-uYFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUAjkFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_OK7kh1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLhaYlJPEeiyW7NaN4qWdw">
                    <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;cargo&quot;</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NUAjkVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OCh2cVJPEeiyW7NaN4qWdw" name="couldWrap" method="_OK69cFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzYFJPEeiyW7NaN4qWdw">
                    <body>TransportableAIObjects can be `wrapped' if they have the&#xD;
     * same target and advancing them reduces the space on the carrier.&#xD;
     *&#xD;
     * @param other The other &lt;code>TransportableAIObject&lt;/code>&#xD;
     *     to consider.&#xD;
     * @return True if the transportables can be wrapped.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCh2clJPEeiyW7NaN4qWdw" name="other" type="_NS_28FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OCidgFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OCidgVJPEeiyW7NaN4qWdw" name="wrap" method="_OK69c1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzYVJPEeiyW7NaN4qWdw">
                    <body>Wrap a Cargo into this one.&#xD;
     *&#xD;
     * @param other The other &lt;code>Cargo&lt;/code> to wrap.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCidglJPEeiyW7NaN4qWdw" name="other" type="_NS_28FJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OCidg1JPEeiyW7NaN4qWdw" name="check" method="_OK69flJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzZlJPEeiyW7NaN4qWdw">
                    <body>Check the integrity of this cargo.&#xD;
     *&#xD;
     * @param aiCarrier The &lt;code>AIUnit&lt;/code> version of the carrier.&#xD;
     * @return A reason for integrity failure, or null if none.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCidhFJPEeiyW7NaN4qWdw" name="aiCarrier" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OCjEkFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OF56kFJPEeiyW7NaN4qWdw" name="Cargo" visibility="private" method="_OK2E8FJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OF6holJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OF6ho1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLgzUFJPEeiyW7NaN4qWdw">
                    <body>Create a new cargo.&#xD;
     *&#xD;
     * @param transportable The &lt;code>TransportableAIObject&lt;/code>&#xD;
     *     to transport.&#xD;
     * @param carrier The carrier &lt;code>Unit&lt;/code>.&#xD;
     * @param plan The &lt;code>CargoPlan&lt;/code> to perform.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OF56kVJPEeiyW7NaN4qWdw" name="transportable" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF6hoFJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF6hoVJPEeiyW7NaN4qWdw" name="plan" type="_NTBsIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF6hpFJPEeiyW7NaN4qWdw" type="_NS_28FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OF6hpVJPEeiyW7NaN4qWdw" name="Cargo" method="_OK2E9VJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OF7IslJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OF7Is1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLgzUVJPEeiyW7NaN4qWdw">
                    <body>Create a new cargo from a stream.&#xD;
     *&#xD;
     * @param aiMain The &lt;code>AIMain&lt;/code> root.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @exception XMLStreamException if a problem was encountered&#xD;
     *     during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OF7IsFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF7IsVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF7ItFJPEeiyW7NaN4qWdw" type="_NS_28FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OF7ItVJPEeiyW7NaN4qWdw" name="initialize" visibility="private" method="_OK2E-VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzUlJPEeiyW7NaN4qWdw">
                    <body>Initialize this cargo.&#xD;
     *&#xD;
     * @param destination The destination &lt;code>Location&lt;/code> to take&#xD;
     *     the transportable to, defaulting to the transport destination&#xD;
     *     if null.&#xD;
     * @param allowFallback Allow a fallback transport.&#xD;
     * @return A reason the planning failed, null if it succeeded.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OF7vwFJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF7vwVJPEeiyW7NaN4qWdw" name="allowFallback">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OF7vwlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OF8W0FJPEeiyW7NaN4qWdw" name="newCargo" isStatic="true" method="_OK2sAlJPEeiyW7NaN4qWdw" raisedException="_OBfUoVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzVFJPEeiyW7NaN4qWdw">
                    <body>Make a new cargo with given transportable and carrier.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to transport.&#xD;
     * @param carrier The carrier &lt;code>Unit&lt;/code> to perform the transport.&#xD;
     * @return The new &lt;code>Cargo&lt;/code>.&#xD;
     * @exception FreeColException on failure of the planning stage.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OF894FJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF894VJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF894lJPEeiyW7NaN4qWdw" type="_NS_28FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OF8941JPEeiyW7NaN4qWdw" name="newCargo" isStatic="true" method="_OK2sBlJPEeiyW7NaN4qWdw" raisedException="_OBfUoVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzVVJPEeiyW7NaN4qWdw">
                    <body>Make a new cargo with given transportable, carrier and explicit&#xD;
     * destination and fallback state.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to transport.&#xD;
     * @param carrier The carrier &lt;code>Unit&lt;/code> to perform the transport.&#xD;
     * @param destination The destination &lt;code>Location&lt;/code> for&#xD;
     *     the transportable.&#xD;
     * @param allowFallback Allow a fallback destination.&#xD;
     * @return The new &lt;code>Cargo&lt;/code>.&#xD;
     * @exception FreeColException on failure of the planning stage.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OF9k8FJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF9k8VJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF9k8lJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF9k81JPEeiyW7NaN4qWdw" name="allowFallback">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OF9k9FJPEeiyW7NaN4qWdw" type="_NS_28FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OF-zEVJPEeiyW7NaN4qWdw" name="isEuropeanTrade" method="_OK69e1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLgzZVJPEeiyW7NaN4qWdw">
                    <body>Does this cargo involve trade with Europe in a given goods type?&#xD;
     *&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> to check.&#xD;
     * @return True if this cargo is of the given type and to be&#xD;
     *     collected or delivered to Europe.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OF-zElJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF-zE1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OF-zFFJPEeiyW7NaN4qWdw" name="canQueueAt" method="_OK69gVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLhaYFJPEeiyW7NaN4qWdw">
                    <body>Can this cargo be queued at the given index in a list of cargoes?&#xD;
     *&#xD;
     * TODO: be smarter and break out of the loop if the cargo reaches&#xD;
     * its delivery point.&#xD;
     *&#xD;
     * @param carrier The &lt;code>Unit&lt;/code> to queue to.&#xD;
     * @param index The queuing position to test.&#xD;
     * @param cargoes A list of &lt;code>Cargo&lt;/code>s.&#xD;
     * @return True if there is space to add the cargo.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OF-zFVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF-zFlJPEeiyW7NaN4qWdw" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OF-zF1JPEeiyW7NaN4qWdw" name="cargoes" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OF-zGFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OGBPUFJPEeiyW7NaN4qWdw" name="toXML" method="_OK7kglJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OGBPUVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGBPUlJPEeiyW7NaN4qWdw" name="readFromXML" method="_OK7khFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OGB2YFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGB2YVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_NTAeAFJPEeiyW7NaN4qWdw" name="CargoMode">
                  <eAnnotations xmi:id="_NTBFEFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_NTBFEVJPEeiyW7NaN4qWdw" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLe-NFJPEeiyW7NaN4qWdw">
                    <body>The actions to perform at the target.</body>
                  </ownedComment>
                  <ownedOperation xmi:id="_NTBFF1JPEeiyW7NaN4qWdw" name="isCollection" method="_OK021FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_NTBsIFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedLiteral xmi:id="_NTBFElJPEeiyW7NaN4qWdw" name="LOAD"/>
                  <ownedLiteral xmi:id="_NTBFE1JPEeiyW7NaN4qWdw" name="UNLOAD"/>
                  <ownedLiteral xmi:id="_NTBFFFJPEeiyW7NaN4qWdw" name="PICKUP"/>
                  <ownedLiteral xmi:id="_NTBFFVJPEeiyW7NaN4qWdw" name="DROPOFF"/>
                  <ownedLiteral xmi:id="_NTBFFlJPEeiyW7NaN4qWdw" name="DUMP"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_NTBsIVJPEeiyW7NaN4qWdw" name="CargoPlan">
                  <eAnnotations xmi:id="_NTBsIlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_NTBsI1JPEeiyW7NaN4qWdw" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLflMFJPEeiyW7NaN4qWdw">
                    <body>Container for a plan for a transportable to get to TWAIT where&#xD;
     * a carrier collects it from CWAIT (may equal TWAIT) and takes it&#xD;
     * to CDST, whence the transportable goes to TDST (may equal&#xD;
     * CDST).</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_OJPic1JPEeiyW7NaN4qWdw" name="twait" type="_OAU3AVJPEeiyW7NaN4qWdw" association="_OMV5wFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OJQJgVJPEeiyW7NaN4qWdw" name="turns">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_OJQJg1JPEeiyW7NaN4qWdw" name="mode" type="_NTAeAFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OJQwkVJPEeiyW7NaN4qWdw" name="fallback">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_OLflMVJPEeiyW7NaN4qWdw" name="cwait" type="_OAU3AVJPEeiyW7NaN4qWdw" association="_ONDEYVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OLflNFJPEeiyW7NaN4qWdw" name="cdst" type="_OAU3AVJPEeiyW7NaN4qWdw" association="_ONDrcVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OLgMQlJPEeiyW7NaN4qWdw" name="tdst" type="_OAU3AVJPEeiyW7NaN4qWdw" association="_ONESgVJPEeiyW7NaN4qWdw"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK1d4FJPEeiyW7NaN4qWdw" name="initialize" specification="_OF4scVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OK1d4VJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OK1d4lJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OK1d41JPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OK1d5FJPEeiyW7NaN4qWdw" name="allowFallback">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_OK1d5VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>// Do some sanity checking&#xD;
         if (t.isDisposed()) {&#xD;
             return &quot;invalid-disposed&quot;;&#xD;
         } else if (carrier == null) {&#xD;
             return &quot;invalid-null-carrier&quot;;&#xD;
         } else if (destination == null&#xD;
             &amp;&amp; (destination = t.getTransportDestination()) == null) {&#xD;
             return &quot;invalid-null-destination&quot;;&#xD;
         }&#xD;
         this.tdst = Location.upLoc(destination);&#xD;
         final Location src = t.getLocation();&#xD;
         final boolean carrying = src == carrier;&#xD;
         if (!carrying &amp;&amp; src instanceof Unit) {&#xD;
             // FIXME: drop this and allow multi-stage plans?&#xD;
             return &quot;invalid-collected-elsewhere&quot;;&#xD;
         }&#xD;
&#xD;
         // Get the path to the destination, possibly allowing fallback&#xD;
         // to a destination that at least improves matters.&#xD;
         PathNode deliver = t.getDeliveryPath(carrier, tdst);&#xD;
         fallback = false;&#xD;
         if (deliver == null &amp;&amp; allowFallback) {&#xD;
             deliver = t.getIntermediatePath(carrier, tdst);&#xD;
             fallback = true;&#xD;
         }&#xD;
         if (deliver == null) {&#xD;
             return &quot;no-deliver &quot; + t&#xD;
                 + &quot;/&quot; + carrier.toShortString()&#xD;
                 + &quot; -> &quot; + tdst.toShortString();&#xD;
         }&#xD;
&#xD;
         // Where is the transportable collected?  At the first&#xD;
         // path node where it is on the carrier.&#xD;
         PathNode pick = deliver.getCarrierMove();&#xD;
         if (pick == null) return &quot;invalid-transport-not-needed&quot;;&#xD;
         // The pickup node determines the c/twait locations.&#xD;
         if (carrying) {&#xD;
             this.twait = this.cwait = null;&#xD;
         } else {&#xD;
             this.cwait = Location.upLoc(pick.getLocation());&#xD;
             // If there is a previous non-carrier move on the delivery&#xD;
             // path, that is where the transportable should wait.&#xD;
             // This will be true for units moving directly from land&#xD;
             // to a naval carrier, but usually false when collection&#xD;
             // occurs in a colony (as for goods).&#xD;
             PathNode prev = (pick.previous == null) ? pick : pick.previous;&#xD;
             this.twait = Location.upLoc(prev.getLocation());&#xD;
         }&#xD;
&#xD;
         // Can the carrier reach the pickup point?  If already&#xD;
         // carrying this is obviously moot.&#xD;
         PathNode collect = null;&#xD;
         if (!carrying&#xD;
             &amp;&amp; (collect = carrier.findPath(this.cwait)) == null) {&#xD;
             return &quot;no-collect &quot; + t&#xD;
                 + &quot;/&quot; + carrier.toShortString()&#xD;
                 + &quot; at &quot; + this.cwait.toShortString();&#xD;
         }&#xD;
             &#xD;
         // Where is the transportable dropped?  At the drop node,&#xD;
         // or at its predecessor from the carrier point of view.&#xD;
         PathNode drop = pick.getTransportDropNode();&#xD;
         if (drop == null || drop.previous == null) {&#xD;
             throw new IllegalStateException(&quot;Cargo failure &quot; + t&#xD;
                 + &quot; &quot; + deliver.fullPathToString()&#xD;
                 + &quot; &quot; + pick.fullPathToString()&#xD;
                 + &quot; &quot; + drop);&#xD;
         }&#xD;
         this.cdst = Location.upLoc(drop.previous.getLocation());&#xD;
&#xD;
         // The transportable ends up at the end of the delivery path.&#xD;
         this.tdst = Location.upLoc(deliver.getLastNode().getLocation());&#xD;
&#xD;
         // Total turns is just that of the delivery path if the&#xD;
         // transportable has been collected.  Otherwise, it is the&#xD;
         // maximum of the turns for the transportable and carrier to&#xD;
         // reach the collection point, plus the turns from there to&#xD;
         // the destination.&#xD;
         //&#xD;
         // The mode depends whether the carrier and transportable&#xD;
         // have the same terminal points.&#xD;
         if (carrying) {&#xD;
             this.turns = deliver.getTotalTurns();&#xD;
             this.mode = (this.cdst instanceof Europe&#xD;
                 || this.cdst == this.tdst) ? CargoMode.UNLOAD&#xD;
                 : CargoMode.DROPOFF;&#xD;
         } else {&#xD;
             this.turns = Math.max(pick.getTurns(), collect.getTotalTurns())&#xD;
                 + pick.getTotalTurns();&#xD;
             this.mode = (this.cwait instanceof Europe&#xD;
                 || this.cwait == this.twait) ? CargoMode.LOAD&#xD;
                 : CargoMode.PICKUP;&#xD;
         }&#xD;
         return null;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_OF4scVJPEeiyW7NaN4qWdw" name="initialize" method="_OK1d4FJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_OLgMRVJPEeiyW7NaN4qWdw">
                      <body>Plan the transport of a transportable with a given carrier.&#xD;
         *&#xD;
         * @param t The &lt;code>TransportableAIObject&lt;/code> to deliver.&#xD;
         * @param carrier The carrier &lt;code>Unit&lt;/code> to use.&#xD;
         * @param destination The destination &lt;code>Location&lt;/code> to take the&#xD;
         *     transportable to, using the transport destination if null.&#xD;
         * @param allowFallback Allow a fallback plan that does not complete&#xD;
         *     the transport but does at least improve matters.&#xD;
         * @return Null on success, an error message on failure.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_OF5TgFJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OF5TgVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OF5TglJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OF5Tg1JPEeiyW7NaN4qWdw" name="allowFallback">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_OF5ThFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NUKUkFJPEeiyW7NaN4qWdw" name="ColonyPlan">
                <ownedComment xmi:id="_OLhaY1JPEeiyW7NaN4qWdw">
                  <body>Objects of this class describes the plan the AI has for a&#xD;
&lt;code>Colony&lt;/code>.&#xD;
 *&#xD;
A &lt;code>ColonyPlan&lt;/code> contains a list of&#xD;
{@link WorkLocationPlan}s which suggests the food and non-food&#xD;
production of each {@link WorkLocation}, and a list of&#xD;
{@link BuildableType}s to build.  It takes account of the available&#xD;
tiles and building production, but does not make decisions to claim&#xD;
tiles or change the current buildable.  It does takes account of&#xD;
goods present in the colony, and overall colony size but not the&#xD;
exact composition of the units involved.  However there is&#xD;
extensive structure for making a trial assignment of workers in&#xD;
{@link #assignWorkers}.&#xD;
 *&#xD;
{@link AIColony#rearrangeWorkers} is responsible for making&#xD;
the real decisions.&#xD;
 *&#xD;
@see Colony</body>
                </ownedComment>
                <ownedAttribute xmi:id="_OJUa8FJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMY9EFJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJUa8VJPEeiyW7NaN4qWdw" value="Logger.getLogger(ColonyPlan.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJUa8lJPEeiyW7NaN4qWdw" name="LOW_PRODUCTION_THRESHOLD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJVCAFJPEeiyW7NaN4qWdw" value="1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJVCAVJPEeiyW7NaN4qWdw" name="PRODUCTION_TURNOVER_TURNS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJVCAlJPEeiyW7NaN4qWdw" value="5"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJVCA1JPEeiyW7NaN4qWdw" name="profileType" visibility="private" type="_NULisFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJVpEFJPEeiyW7NaN4qWdw" name="aiMain" visibility="private" isLeaf="true" type="_NRhQQFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMY9E1JPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJVpElJPEeiyW7NaN4qWdw" name="colony" visibility="private" isLeaf="true" type="_OARzsVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMZkIVJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJW3M1JPEeiyW7NaN4qWdw" name="buildPlans" visibility="private" isLeaf="true" type="_NUNX4FJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMaLM1JPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJW3NFJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJXeQFJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJXeQlJPEeiyW7NaN4qWdw" name="buildPlanComparator" visibility="private" isLeaf="true" isStatic="true" type="_OAKe8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMayQVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJXeRFJPEeiyW7NaN4qWdw" value="new Comparator&lt;BuildPlan>() {&#xD;&#xA;            @Override&#xD;&#xA;            public int compare(BuildPlan b1, BuildPlan b2) {&#xD;&#xA;                double d = b1.getValue() - b2.getValue();&#xD;&#xA;                return (d > 0.0) ? -1 : (d &lt; 0.0) ? 1 : 0;&#xD;&#xA;            }&#xD;&#xA;        }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJYFUFJPEeiyW7NaN4qWdw" name="workPlans" visibility="private" isLeaf="true" type="_NWQmUFJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMayRFJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJYFUVJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJYFUlJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJYFVFJPEeiyW7NaN4qWdw" name="produce" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMbZUVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJYFVVJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJYFVlJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJYsYFJPEeiyW7NaN4qWdw" name="foodGoodsTypes" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMcAYVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJYsYVJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJYsYlJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJYsZFJPEeiyW7NaN4qWdw" name="libertyGoodsTypes" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMcAZFJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJYsZVJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJZTcFJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJZTclJPEeiyW7NaN4qWdw" name="immigrationGoodsTypes" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMcncVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJZTc1JPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJZTdFJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJZTdlJPEeiyW7NaN4qWdw" name="militaryGoodsTypes" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMdOgFJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJZ6gFJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJZ6gVJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJZ6g1JPEeiyW7NaN4qWdw" name="rawBuildingGoodsTypes" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMdOg1JPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJZ6hFJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJZ6hVJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJahkFJPEeiyW7NaN4qWdw" name="buildingGoodsTypes" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMd1kVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJahkVJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJahklJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJahlFJPEeiyW7NaN4qWdw" name="rawLuxuryGoodsTypes" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMd1lFJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJahlVJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJahllJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJbIoVJPEeiyW7NaN4qWdw" name="luxuryGoodsTypes" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMecoVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJbIolJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJbIo1JPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJbIpVJPEeiyW7NaN4qWdw" name="otherRawGoodsTypes" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMfDsVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJbIplJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJbIp1JPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJbvsVJPEeiyW7NaN4qWdw" name="BREEDING_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJbvslJPEeiyW7NaN4qWdw" value="0.1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJbvs1JPEeiyW7NaN4qWdw" name="BUILDING_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJbvtFJPEeiyW7NaN4qWdw" value="0.9"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJbvtVJPEeiyW7NaN4qWdw" name="DEFENCE_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJbvtlJPEeiyW7NaN4qWdw" value="0.1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJcWwFJPEeiyW7NaN4qWdw" name="EXPORT_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJcWwVJPEeiyW7NaN4qWdw" value="0.6"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJcWwlJPEeiyW7NaN4qWdw" name="FISH_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJcWw1JPEeiyW7NaN4qWdw" value="0.25"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJcWxFJPEeiyW7NaN4qWdw" name="FORTIFY_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJcWxVJPEeiyW7NaN4qWdw" value="0.3"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJcWxlJPEeiyW7NaN4qWdw" name="IMMIGRATION_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJc90FJPEeiyW7NaN4qWdw" value="0.05"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJc90VJPEeiyW7NaN4qWdw" name="LIBERTY_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJc90lJPEeiyW7NaN4qWdw" value="0.75"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJc901JPEeiyW7NaN4qWdw" name="MILITARY_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJc91FJPEeiyW7NaN4qWdw" value="0.4"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJc91VJPEeiyW7NaN4qWdw" name="PRODUCTION_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJc91lJPEeiyW7NaN4qWdw" value="0.25"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJc911JPEeiyW7NaN4qWdw" name="REPAIR_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJc92FJPEeiyW7NaN4qWdw" value="0.1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJdk4FJPEeiyW7NaN4qWdw" name="STORAGE_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJdk4VJPEeiyW7NaN4qWdw" value="0.85"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJdk4lJPEeiyW7NaN4qWdw" name="TEACH_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJdk41JPEeiyW7NaN4qWdw" value="0.2"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJdk5FJPEeiyW7NaN4qWdw" name="TRANSPORT_WEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJdk5VJPEeiyW7NaN4qWdw" value="0.15"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZtFJPEeiyW7NaN4qWdw" name="ColonyPlan" specification="_OGHV8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9ZtVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK9ZtlJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK9Zt1JPEeiyW7NaN4qWdw" type="_NUKUkFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (aiMain == null) throw new IllegalArgumentException(&quot;Null AIMain&quot;);&#xD;
     if (colony == null) throw new IllegalArgumentException(&quot;Null colony&quot;);&#xD;
&#xD;
     this.aiMain = aiMain;&#xD;
     this.colony = colony;&#xD;
     this.profileType = ProfileType&#xD;
         .getProfileTypeFromSize(colony.getUnitCount());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZuFJPEeiyW7NaN4qWdw" name="getAIMain" specification="_NUQbMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9ZuVJPEeiyW7NaN4qWdw" type="_NRhQQFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return aiMain;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZulJPEeiyW7NaN4qWdw" name="spec" specification="_NUQbMVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9Zu1JPEeiyW7NaN4qWdw" type="_OAX6UVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return aiMain.getGame().getSpecification();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZvFJPEeiyW7NaN4qWdw" name="getPreferredProduction" specification="_NUQbMlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9ZvVJPEeiyW7NaN4qWdw" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OK9ZvlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return new ArrayList&lt;>(produce);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9Zv1JPEeiyW7NaN4qWdw" name="getBuildableTypes" specification="_NURCQlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9ZwFJPEeiyW7NaN4qWdw" type="_OAQlkVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OK9ZwVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;BuildableType> build = new ArrayList&lt;>();&#xD;
     for (BuildPlan b : buildPlans) build.add(b.type);&#xD;
     return build;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZwlJPEeiyW7NaN4qWdw" name="getBestBuildableType" specification="_NURpUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9Zw1JPEeiyW7NaN4qWdw" type="_OAQlkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>BuildPlan bp = find(buildPlans, p -> colony.canBuild(p.type));&#xD;
     return (bp == null) ? null : bp.type;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZxFJPEeiyW7NaN4qWdw" name="getBuildableReport" specification="_NURpUVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9ZxVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>LogBuilder lb = new LogBuilder(64);&#xD;
     lb.add(&quot;Buildables:\n&quot;);&#xD;
     for (BuildPlan b : buildPlans) lb.add(b, &quot;\n&quot;);&#xD;
     return lb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZxlJPEeiyW7NaN4qWdw" name="getFoodPlans" specification="_NUSQYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9Zx1JPEeiyW7NaN4qWdw" type="_NWQmUFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OK9ZyFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return workPlans.stream()&#xD;
         .filter(wp -> wp.isFoodPlan()&#xD;
             &amp;&amp; !wp.getWorkLocation().canAutoProduce())&#xD;
         .collect(Collectors.toList());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZyVJPEeiyW7NaN4qWdw" name="getWorkPlans" specification="_NUSQY1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9ZylJPEeiyW7NaN4qWdw" type="_NWQmUFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OK9Zy1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return workPlans.stream()&#xD;
         .filter(wp -> !wp.isFoodPlan()&#xD;
             &amp;&amp; !wp.getWorkLocation().canAutoProduce())&#xD;
         .collect(Collectors.toList());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZzFJPEeiyW7NaN4qWdw" name="refine" specification="_OGH9AVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9ZzVJPEeiyW7NaN4qWdw" name="build" type="_OAQlkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK9ZzlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>List&lt;GoodsType> required = new ArrayList&lt;>();&#xD;
     for (AbstractGoods ag : colony.getFullRequiredGoods(build)) {&#xD;
         required.add(ag.getType());&#xD;
     }&#xD;
     Map&lt;GoodsType, List&lt;WorkLocationPlan>> suppressed = new HashMap&lt;>();&#xD;
&#xD;
     // Examine a copy of the work plans, but operate on the&#xD;
     // original list.  Maintain a offset between the index in the&#xD;
     // copied list and the original to aid reinsertion.&#xD;
     //&#xD;
     // Remove any work plans to make raw/building goods that are&#xD;
     // not required to complete the current buildable, but take&#xD;
     // care to put such plans back again if a plan is encountered&#xD;
     // that makes goods that are made from a type that was removed&#xD;
     // and there is less than CARGO_SIZE/2 of that type in stock.&#xD;
     // Note though in such cases the position of the&#xD;
     // building-goods plans in the work plans list will have moved&#xD;
     // from their usual high priority to immediately before the&#xD;
     // position of the manufactured goods.&#xD;
     //&#xD;
     // So, for example, we should suppress tool building when a&#xD;
     // colony is building a warehouse, unless we find a plan to&#xD;
     // make muskets and the tool stock is low.&#xD;
     //&#xD;
     // FIXME: generalize this further to make tools for pioneers.&#xD;
     //&#xD;
     List&lt;WorkLocationPlan> plans = new ArrayList&lt;>(workPlans);&#xD;
     int offset = 0;&#xD;
     for (int i = 0; i &lt; plans.size(); i++) {&#xD;
         List&lt;WorkLocationPlan> wls;&#xD;
         WorkLocationPlan wlp = plans.get(i);&#xD;
         GoodsType g = wlp.getGoodsType();&#xD;
         if ((rawBuildingGoodsTypes.contains(g)&#xD;
                 &amp;&amp; !required.contains(g.getOutputType()))&#xD;
             || (buildingGoodsTypes.contains(g)&#xD;
                 &amp;&amp; !required.contains(g))) {&#xD;
             workPlans.remove(i - offset);&#xD;
             offset++;&#xD;
             wls = suppressed.get(g);&#xD;
             if (wls == null) wls = new ArrayList&lt;>();&#xD;
             wls.add(0, wlp); // reverses list&#xD;
             suppressed.put(g, wls);&#xD;
             produce.remove(g);&#xD;
             lb.add(&quot;, suppress production of &quot;, g);&#xD;
         } else if (g.isRefined()&#xD;
             &amp;&amp; (rawBuildingGoodsTypes.contains(g.getInputType())&#xD;
                 || buildingGoodsTypes.contains(g.getInputType()))) {&#xD;
             int n = 0, idx = produce.indexOf(g);&#xD;
             for (GoodsType type = g.getInputType(); type != null;&#xD;
                  type = type.getInputType()) {&#xD;
                 if ((wls = suppressed.get(type)) == null) break;&#xD;
                 if (colony.getGoodsCount(type)&#xD;
                     >= GoodsContainer.CARGO_SIZE/2) break;&#xD;
                 n += wls.size();&#xD;
                 while (!wls.isEmpty()) {&#xD;
                     // reverses again when adding, cancelling reversal above&#xD;
                     workPlans.add(i - offset, wls.remove(0));&#xD;
                 }&#xD;
                 produce.add(idx, type);&#xD;
                 lb.add(&quot;, restore production of &quot;, type);&#xD;
             }&#xD;
             offset -= n;&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9Zz1JPEeiyW7NaN4qWdw" name="update" specification="_NUS3cFJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>// Update the profile type.&#xD;
     profileType = ProfileType.getProfileTypeFromSize(colony.getUnitCount());&#xD;
&#xD;
     // Build the total map of all possible production with standard units.&#xD;
     Map&lt;GoodsType, Map&lt;WorkLocation, Integer>> production&#xD;
         = createProductionMap();&#xD;
&#xD;
     // Set the goods type lists, and prune production of manufactured&#xD;
     // goods that are missing raw materials and other non-interesting.&#xD;
     updateGoodsTypeLists(production);&#xD;
&#xD;
     // Set the preferred raw materials.  Prune production and&#xD;
     // goods lists further removing the non-preferred new world&#xD;
     // raw and refined materials.&#xD;
     updateRawMaterials(production);&#xD;
&#xD;
     // The buildables depend on the profile type, the goods type lists&#xD;
     // and/or goods-to-produce list.&#xD;
     updateBuildableTypes();&#xD;
&#xD;
     // Make plans for each valid &lt;goods, location> production and&#xD;
     // complete the list of goods to produce.&#xD;
     updatePlans(production);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9Z0FJPEeiyW7NaN4qWdw" name="createProductionMap" specification="_NUS3cVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK9Z0VJPEeiyW7NaN4qWdw" type="_OBU8klJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>Map&lt;GoodsType, Map&lt;WorkLocation, Integer>> production = new HashMap&lt;>();&#xD;
     for (WorkLocation wl : colony.getAvailableWorkLocations()) {&#xD;
         for (GoodsType g : spec().getGoodsTypeList()) {&#xD;
             int p = wl.getGenericPotential(g);&#xD;
             if (p > 0) {&#xD;
                 Map&lt;WorkLocation, Integer> m = production.get(g);&#xD;
                 if (m == null) {&#xD;
                     m = new HashMap&lt;>();&#xD;
                     production.put(g, m);&#xD;
                 }&#xD;
                 m.put(wl, p);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return production;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-AwFJPEeiyW7NaN4qWdw" name="updateGoodsTypeLists" specification="_OGIkElJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-AwVJPEeiyW7NaN4qWdw" name="production" type="_OBU8klJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>foodGoodsTypes.clear();&#xD;
     libertyGoodsTypes.clear();&#xD;
     immigrationGoodsTypes.clear();&#xD;
     militaryGoodsTypes.clear();&#xD;
     rawBuildingGoodsTypes.clear();&#xD;
     buildingGoodsTypes.clear();&#xD;
     rawLuxuryGoodsTypes.clear();&#xD;
     luxuryGoodsTypes.clear();&#xD;
     otherRawGoodsTypes.clear();&#xD;
     for (GoodsType g : new ArrayList&lt;>(production.keySet())) {&#xD;
         if (g.isFoodType()) {&#xD;
             foodGoodsTypes.add(g);&#xD;
         } else if (g.isLibertyType()) {&#xD;
             libertyGoodsTypes.add(g);&#xD;
         } else if (g.isImmigrationType()) {&#xD;
             immigrationGoodsTypes.add(g);&#xD;
         } else if (g.isMilitaryGoods()) {&#xD;
             militaryGoodsTypes.add(g);&#xD;
         } else if (g.isRawBuildingMaterial()) {&#xD;
             rawBuildingGoodsTypes.add(g);&#xD;
         } else if (g.isBuildingMaterial()&#xD;
             &amp;&amp; g.getInputType().isRawBuildingMaterial()) {&#xD;
             buildingGoodsTypes.add(g);&#xD;
         } else if (g.isNewWorldGoodsType()) {&#xD;
             rawLuxuryGoodsTypes.add(g);&#xD;
         } else if (g.isRefined()&#xD;
             &amp;&amp; g.getInputType().isNewWorldGoodsType()) {&#xD;
             luxuryGoodsTypes.add(g);&#xD;
         } else if (g.isFarmed()) {&#xD;
             otherRawGoodsTypes.add(g);&#xD;
         } else { // Not interested in this goods type.  Should not happen.&#xD;
             logger.warning(&quot;Ignoring goods type &quot; + g&#xD;
                 + &quot; at &quot; + colony.getName());&#xD;
             production.remove(g);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-AwlJPEeiyW7NaN4qWdw" name="updateRawMaterials" specification="_OGJyMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-Aw1JPEeiyW7NaN4qWdw" name="production" type="_OBU8klJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>Player player = colony.getOwner();&#xD;
     Market market = player.getMarket();&#xD;
     NationType nationType = player.getNationType();&#xD;
     GoodsType primaryRawMaterial = null;&#xD;
     GoodsType secondaryRawMaterial = null;&#xD;
     int primaryValue = -1;&#xD;
     int secondaryValue = -1;&#xD;
&#xD;
     produce.clear();&#xD;
     List&lt;GoodsType> rawMaterials = new ArrayList&lt;>(rawLuxuryGoodsTypes);&#xD;
     rawMaterials.addAll(otherRawGoodsTypes);&#xD;
     for (GoodsType g : rawMaterials) {&#xD;
         int value = production.get(g).entrySet().stream()&#xD;
             .mapToInt(e -> e.getValue()).sum();&#xD;
         if (value &lt;= LOW_PRODUCTION_THRESHOLD) {&#xD;
             production.remove(g);&#xD;
             continue;&#xD;
         }&#xD;
         if (market != null) {&#xD;
             // If the market is available, weight by sale price of&#xD;
             // the material, or if it is the raw material for a&#xD;
             // refined goods type, the average of the raw and&#xD;
             // refined goods prices.&#xD;
             if (g.getOutputType() == null) {&#xD;
                 value *= market.getSalePrice(g, 1);&#xD;
             } else if (production.containsKey(g.getOutputType())) {&#xD;
                 value *= (market.getSalePrice(g, 1)&#xD;
                     + market.getSalePrice(g.getOutputType(), 1)) / 2;&#xD;
             }&#xD;
         }&#xD;
         if (nationType.hasModifier(g.getId())) {&#xD;
             value = (value * 12) / 10; // Bonus for national advantages&#xD;
         }&#xD;
         if (value > secondaryValue &amp;&amp; secondaryRawMaterial != null) {&#xD;
             production.remove(secondaryRawMaterial);&#xD;
             production.remove(secondaryRawMaterial.getOutputType());&#xD;
             if (rawLuxuryGoodsTypes.contains(secondaryRawMaterial)) {&#xD;
                 rawLuxuryGoodsTypes.remove(secondaryRawMaterial);&#xD;
                 luxuryGoodsTypes.remove(secondaryRawMaterial.getOutputType());&#xD;
             } else if (otherRawGoodsTypes.contains(secondaryRawMaterial)) {&#xD;
                 otherRawGoodsTypes.remove(secondaryRawMaterial);&#xD;
             }&#xD;
         }&#xD;
         if (value > primaryValue) {&#xD;
             secondaryRawMaterial = primaryRawMaterial;&#xD;
             secondaryValue = primaryValue;&#xD;
             primaryRawMaterial = g;&#xD;
             primaryValue = value;&#xD;
         } else if (value > secondaryValue) {&#xD;
             secondaryRawMaterial = g;&#xD;
             secondaryValue = value;&#xD;
         }&#xD;
     }&#xD;
     if (primaryRawMaterial != null) {&#xD;
         produce.add(primaryRawMaterial);&#xD;
         if (primaryRawMaterial.getOutputType() != null) {&#xD;
             produce.add(primaryRawMaterial.getOutputType());&#xD;
         }&#xD;
         if (secondaryRawMaterial != null) {&#xD;
             produce.add(secondaryRawMaterial);&#xD;
             if (secondaryRawMaterial.getOutputType() != null) {&#xD;
                 produce.add(secondaryRawMaterial.getOutputType());&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-AxFJPEeiyW7NaN4qWdw" name="findBuildPlan" specification="_OGLAUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-AxVJPEeiyW7NaN4qWdw" name="type" type="_OAQlkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-AxlJPEeiyW7NaN4qWdw" type="_NUNX4FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return find(buildPlans, bp -> bp.type == type);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-Ax1JPEeiyW7NaN4qWdw" name="prioritize" specification="_OGLnYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-AyFJPEeiyW7NaN4qWdw" name="type" type="_OAQlkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-AyVJPEeiyW7NaN4qWdw" name="weight">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OK-AylJPEeiyW7NaN4qWdw" name="support">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OK-Ay1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>BuildPlan bp = findBuildPlan(type);&#xD;
     if (bp == null) {&#xD;
         buildPlans.add(new BuildPlan(type, weight, support));&#xD;
         return true;&#xD;
     }&#xD;
     if (bp.weight * bp.support &lt; weight * support) {&#xD;
         bp.weight = weight;&#xD;
         bp.support = support;&#xD;
         return true;&#xD;
     }&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-AzFJPEeiyW7NaN4qWdw" name="prioritizeProduction" specification="_OGMOcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-AzVJPEeiyW7NaN4qWdw" name="type" type="_OAQlkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-AzlJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-Az1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Player player = colony.getOwner();&#xD;
     NationType nationType = player.getNationType();&#xD;
     String advantage = getAIMain().getAIPlayer(player).getAIAdvantage();&#xD;
     boolean ret = false;&#xD;
     double factor = 1.0;&#xD;
     if (nationType.hasModifier(goodsType.getId())) {&#xD;
         // Handles building, agriculture, furTrapping advantages&#xD;
         factor *= 1.2;&#xD;
     }&#xD;
     if (goodsType.isMilitaryGoods()) {&#xD;
         if (&quot;conquest&quot;.equals(advantage)) factor = 1.2;&#xD;
         ret = prioritize(type, MILITARY_WEIGHT * factor,&#xD;
             1.0/*FIXME: amount present wrt amount to equip*/);&#xD;
     } else if (goodsType.isBuildingMaterial()) {&#xD;
         ret = prioritize(type, BUILDING_WEIGHT * factor,&#xD;
             1.0/*FIXME: need for this type*/);&#xD;
     } else if (goodsType.isLibertyType()) {&#xD;
         if (player.isREF()) return false; // no bells for REF colonies&#xD;
         ret = prioritize(type, LIBERTY_WEIGHT,&#xD;
             (colony.getSoL() >= 100) ? 0.01 : 1.0);&#xD;
     } else if (goodsType.isImmigrationType()) {&#xD;
         if (&quot;immigration&quot;.equals(advantage)) factor = 1.2;&#xD;
         ret = prioritize(type, IMMIGRATION_WEIGHT * factor,&#xD;
             1.0/*FIXME: Brewster?*/);&#xD;
     } else if (produce.contains(goodsType)) {&#xD;
         if (&quot;trade&quot;.equals(advantage)) factor = 1.2;&#xD;
         double f = 0.1 * colony.getTotalProductionOf(goodsType.getInputType());&#xD;
         ret = prioritize(type, PRODUCTION_WEIGHT,&#xD;
             f/*FIXME: improvement?*/);&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-n0FJPEeiyW7NaN4qWdw" name="updateBuildableTypes" specification="_NUUsoFJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>final EuropeanAIPlayer euaip = (EuropeanAIPlayer)getAIMain()&#xD;
         .getAIPlayer(colony.getOwner());&#xD;
     String advantage = euaip.getAIAdvantage();&#xD;
     buildPlans.clear();&#xD;
&#xD;
     int maxLevel;&#xD;
     switch (profileType) {&#xD;
     case OUTPOST:&#xD;
     case SMALL:   maxLevel = 1; break;&#xD;
     case MEDIUM:  maxLevel = 2; break;&#xD;
     case LARGE:   maxLevel = 3; break;&#xD;
     case CAPITAL: maxLevel = 4; break;&#xD;
     default:&#xD;
         throw new IllegalStateException(&quot;Bogus profile type: &quot;&#xD;
             + profileType);&#xD;
     }&#xD;
&#xD;
     Player player = colony.getOwner();&#xD;
     for (BuildingType type : spec().getBuildingTypeList()) {&#xD;
         boolean expectFail = false;&#xD;
         if (!colony.canBuild(type)) continue;&#xD;
&#xD;
         // Exempt defence and export from the level check.&#xD;
         if (type.hasModifier(Modifier.DEFENCE)) {&#xD;
             double factor = 1.0;&#xD;
             if (&quot;conquest&quot;.equals(advantage)) factor = 1.1;&#xD;
             prioritize(type, FORTIFY_WEIGHT * factor,&#xD;
                 1.0/*FIXME: 0 if FF underway*/);&#xD;
         }&#xD;
         if (type.hasAbility(Ability.EXPORT)) {&#xD;
             double factor = 1.0;&#xD;
             if (&quot;trade&quot;.equals(advantage)) factor = 1.1;&#xD;
             prioritize(type, EXPORT_WEIGHT * factor,&#xD;
                 1.0/*FIXME: weigh production v transport*/);&#xD;
         }&#xD;
&#xD;
         // Skip later stage buildings for smaller settlements.&#xD;
         if (type.getLevel() > maxLevel) continue;&#xD;
&#xD;
         // Scale docks by the improvement available to the food supply.&#xD;
         if (type.hasAbility(Ability.PRODUCE_IN_WATER)) {&#xD;
             double factor = 0.0;&#xD;
             if (!colony.hasAbility(Ability.PRODUCE_IN_WATER)&#xD;
                 &amp;&amp; colony.getTile().isShore()) {&#xD;
                 int landFood = 0, seaFood = 0;&#xD;
                 for (Tile t : colony.getTile().getSurroundingTiles(1)) {&#xD;
                     if (t.getOwningSettlement() == colony&#xD;
                         || player.canClaimForSettlement(t)) {&#xD;
                         for (AbstractGoods ag : t.getSortedPotential()) {&#xD;
                             if (ag.getType().isFoodType()) {&#xD;
                                 if (t.isLand()) {&#xD;
                                     landFood += ag.getAmount();&#xD;
                                 } else {&#xD;
                                     seaFood += ag.getAmount();&#xD;
                                 }&#xD;
                             }&#xD;
                         }&#xD;
                     }&#xD;
                 }&#xD;
                 factor = (seaFood + landFood == 0) ? 0.0&#xD;
                     : seaFood / (double)(seaFood + landFood);&#xD;
             }&#xD;
             prioritize(type, FISH_WEIGHT, factor);&#xD;
         }&#xD;
&#xD;
         if (type.hasAbility(Ability.BUILD)) {&#xD;
             double factor = 1.0;&#xD;
             if (&quot;building&quot;.equals(advantage)) factor = 1.1;&#xD;
             double support = 1.0;&#xD;
             for (Ability a : type.getAbilities(Ability.BUILD)) {&#xD;
                 List&lt;Scope> scopes = a.getScopes();&#xD;
                 if (scopes != null &amp;&amp; !scopes.isEmpty()) support = 0.1;&#xD;
             }&#xD;
             prioritize(type, BUILDING_WEIGHT * factor,&#xD;
                 support/*FIXME: need for the thing now buildable*/);&#xD;
         }&#xD;
&#xD;
         if (type.hasAbility(Ability.TEACH)) {&#xD;
             prioritize(type, TEACH_WEIGHT,&#xD;
                 1.0/*FIXME: #students, #specialists here, #wanted*/);&#xD;
         }&#xD;
&#xD;
         if (type.hasAbility(Ability.REPAIR_UNITS)) {&#xD;
             double factor = 1.0;&#xD;
             if (&quot;naval&quot;.equals(advantage)) factor = 1.1;&#xD;
             prioritize(type, REPAIR_WEIGHT * factor,&#xD;
                 1.0/*FIXME: #units-to-repair, has-Europe etc*/);&#xD;
         }&#xD;
&#xD;
         GoodsType output = type.getProducedGoodsType();&#xD;
         if (output != null) {&#xD;
             if (!prioritizeProduction(type, output)) {&#xD;
                 // Allow failure if this building can not build.&#xD;
                 expectFail = true;&#xD;
             }&#xD;
         } else {&#xD;
             for (GoodsType g : spec().getGoodsTypeList()) {&#xD;
                 if (type.hasModifier(g.getId())) {&#xD;
                     if (!prioritizeProduction(type, g)) {&#xD;
                         expectFail = true;&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
             // Hacks.  No good way to make this really generic.&#xD;
             if (type.hasModifier(Modifier.WAREHOUSE_STORAGE)) {&#xD;
                 double factor = 1.0;&#xD;
                 if (&quot;trade&quot;.equals(advantage)) factor = 1.1;&#xD;
                 prioritize(type, STORAGE_WEIGHT * factor,&#xD;
                     1.0/*FIXME: amount of goods*/);&#xD;
             }&#xD;
             if (type.hasModifier(Modifier.BREEDING_DIVISOR)) {&#xD;
                 prioritize(type, BREEDING_WEIGHT,&#xD;
                     1.0/*FIXME: horses present?*/);&#xD;
             }&#xD;
         }&#xD;
&#xD;
         if (findBuildPlan(type) == null &amp;&amp; !expectFail) {&#xD;
             logger.warning(&quot;No building priority found for: &quot; + type);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     double wagonNeed = 0.0;&#xD;
     if (!colony.isConnectedPort()) { // Inland colonies need transportation&#xD;
         int wagons = euaip.getNeededWagons(colony.getTile());&#xD;
         wagonNeed = (wagons &lt;= 0) ? 0.0 : (wagons > 3) ? 1.0&#xD;
             : wagons / 3.0;&#xD;
     }&#xD;
     for (UnitType unitType : spec().getUnitTypeList()) {&#xD;
         if (!colony.canBuild(unitType)) continue;&#xD;
         if (unitType.hasAbility(Ability.NAVAL_UNIT)) {&#xD;
             ; // FIXME: decide to build a ship&#xD;
         } else if (unitType.isDefensive()) {&#xD;
             if (colony.isBadlyDefended()) {&#xD;
                 prioritize(unitType, DEFENCE_WEIGHT,&#xD;
                     1.0/*FIXME: how badly defended?*/);&#xD;
             }&#xD;
         } else if (unitType.hasAbility(Ability.CARRY_GOODS)) {&#xD;
             if (wagonNeed > 0.0) {&#xD;
                 double factor = 1.0;&#xD;
                 if (&quot;trade&quot;.equals(advantage)) factor = 1.1;&#xD;
                 prioritize(unitType, TRANSPORT_WEIGHT * factor,&#xD;
                     wagonNeed/*FIXME: type.getSpace()*/);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Weight by lower required goods.&#xD;
     for (BuildPlan bp : buildPlans) {&#xD;
         double difficulty = bp.type.getRequiredGoods().stream()&#xD;
             .filter(ag -> ag.getAmount() > colony.getGoodsCount(ag.getType()))&#xD;
             .mapToDouble(ag -> {&#xD;
                     final GoodsType type = ag.getType();&#xD;
                     return (ag.getAmount() - colony.getGoodsCount(type))&#xD;
                         // Penalize building with type that can not be&#xD;
                         // made locally.&#xD;
                         * ((produce.contains(type.getInputType())) ? 1.0&#xD;
                             : 5.0);&#xD;
                 }).sum();&#xD;
         bp.difficulty = Math.max(1.0f, Math.sqrt(difficulty));&#xD;
     }&#xD;
&#xD;
     Collections.sort(buildPlans, buildPlanComparator);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-n0VJPEeiyW7NaN4qWdw" name="updatePlans" specification="_OGM1gFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-n0lJPEeiyW7NaN4qWdw" name="production" type="_OBU8klJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>workPlans.clear();&#xD;
     for (Entry&lt;GoodsType, Map&lt;WorkLocation, Integer>> entry&#xD;
              : production.entrySet()) {&#xD;
         GoodsType g = entry.getKey();&#xD;
         // Do not make plans to produce into a full warehouse.&#xD;
         if (g.isStorable()&#xD;
             &amp;&amp; colony.getGoodsCount(g) >= colony.getWarehouseCapacity()&#xD;
             &amp;&amp; !g.limitIgnored()) continue;&#xD;
&#xD;
         for (WorkLocation wl : entry.getValue().keySet()) {&#xD;
             if (wl.canBeWorked() || wl.canAutoProduce()) {&#xD;
                 workPlans.add(new WorkLocationPlan(getAIMain(), wl, g));&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Now we have lots of plans, determine what goods to produce.&#xD;
     updateProductionList(production);&#xD;
&#xD;
     // Filter out plans that can not use a unit.&#xD;
     List&lt;WorkLocationPlan> oldPlans = new ArrayList&lt;>(workPlans);&#xD;
     workPlans.clear();&#xD;
     for (WorkLocationPlan wlp : oldPlans) {&#xD;
         if (wlp.getWorkLocation().canBeWorked()) workPlans.add(wlp);&#xD;
     }&#xD;
&#xD;
     // Sort the work plans by earliest presence in the produce&#xD;
     // list, and then by amount.  If the type of goods produced is&#xD;
     // not on the produce list, then make sure such plans sort to&#xD;
     // the end, except for food plans.&#xD;
     Collections.sort(workPlans, new Comparator&lt;WorkLocationPlan>() {&#xD;
             @Override&#xD;
             public int compare(WorkLocationPlan w1, WorkLocationPlan w2) {&#xD;
                 GoodsType g1 = w1.getGoodsType();&#xD;
                 GoodsType g2 = w2.getGoodsType();&#xD;
                 int i1 = produce.indexOf(g1);&#xD;
                 int i2 = produce.indexOf(g2);&#xD;
                 if (i1 &lt; 0 &amp;&amp; !g1.isFoodType()) i1 = 99999;&#xD;
                 if (i2 &lt; 0 &amp;&amp; !g2.isFoodType()) i2 = 99999;&#xD;
                 int cmp = i1 - i2;&#xD;
                 if (cmp == 0) {&#xD;
                     cmp = w2.getWorkLocation().getGenericPotential(g2)&#xD;
                         - w1.getWorkLocation().getGenericPotential(g1);&#xD;
                 }&#xD;
                 return cmp;&#xD;
             }&#xD;
         });&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-n01JPEeiyW7NaN4qWdw" name="updateProductionList" specification="_OGNckVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-n1FJPEeiyW7NaN4qWdw" name="production" type="_OBU8klJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_OK-n1VJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_OK-n1lJPEeiyW7NaN4qWdw" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Comparator&lt;GoodsType> productionComparator&#xD;
         = new Comparator&lt;GoodsType>() {&#xD;
             @Override&#xD;
             public int compare(GoodsType g1, GoodsType g2) {&#xD;
                 int p1 = production.get(g1).values().stream()&#xD;
                     .mapToInt(Integer::intValue).sum();&#xD;
                 int p2 = production.get(g2).values().stream()&#xD;
                     .mapToInt(Integer::intValue).sum();&#xD;
                 return p2 - p1;&#xD;
             }&#xD;
         };&#xD;
     List&lt;GoodsType> toAdd = new ArrayList&lt;>();&#xD;
&#xD;
     // If we need liberty put it before the new world production.&#xD;
     if (colony.getSoL() &lt; 100) {&#xD;
         for (GoodsType g : libertyGoodsTypes) {&#xD;
             if (production.containsKey(g)) toAdd.add(g);&#xD;
         }&#xD;
         Collections.sort(toAdd, productionComparator);&#xD;
         produce.addAll(0, toAdd);&#xD;
         toAdd.clear();&#xD;
     }&#xD;
&#xD;
     // Always add raw/building materials first.&#xD;
     Collections.sort(rawBuildingGoodsTypes, productionComparator);&#xD;
     for (GoodsType g : buildingGoodsTypes) {&#xD;
         if (production.containsKey(g)) {&#xD;
             GoodsType raw = g.getInputType();&#xD;
             if (colony.getGoodsCount(raw) >= GoodsContainer.CARGO_SIZE/2&#xD;
                 || production.containsKey(raw)) {&#xD;
                 toAdd.add(g);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     Collections.sort(toAdd, new Comparator&lt;GoodsType>() {&#xD;
             @Override&#xD;
             public int compare(GoodsType g1, GoodsType g2) {&#xD;
                 int i1 = rawBuildingGoodsTypes.indexOf(g1.getInputType());&#xD;
                 int i2 = rawBuildingGoodsTypes.indexOf(g2.getInputType());&#xD;
                 return i1 - i2;&#xD;
             }&#xD;
         });&#xD;
     for (int i = toAdd.size()-1; i >= 0; i--) {&#xD;
         GoodsType make = toAdd.get(i);&#xD;
         GoodsType raw = make.getInputType();&#xD;
         if (production.containsKey(raw)) {&#xD;
             if (colony.getGoodsCount(raw) >= GoodsContainer.CARGO_SIZE/2) {&#xD;
                 produce.add(raw); // Add at the end, enough in stock&#xD;
                 produce.add(0, make);&#xD;
             } else {&#xD;
                 produce.add(0, make);&#xD;
                 produce.add(0, raw);&#xD;
             }&#xD;
         } else {&#xD;
             produce.add(0, make);&#xD;
         }&#xD;
     }&#xD;
     toAdd.clear();&#xD;
&#xD;
     // Military goods after lucrative production.&#xD;
     for (GoodsType g : militaryGoodsTypes) {&#xD;
         if (production.containsKey(g)) toAdd.add(g);&#xD;
     }&#xD;
     Collections.sort(toAdd, productionComparator);&#xD;
     produce.addAll(toAdd);&#xD;
     toAdd.clear();&#xD;
&#xD;
     // Immigration last.&#xD;
     if (colony.getOwner().getEurope() != null) {&#xD;
         for (GoodsType g : immigrationGoodsTypes) {&#xD;
             if (production.containsKey(g)) toAdd.add(g);&#xD;
         }&#xD;
         Collections.sort(toAdd, productionComparator);&#xD;
         produce.addAll(toAdd);&#xD;
         toAdd.clear();&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-n11JPEeiyW7NaN4qWdw" name="trySwapExpert" specification="_OGOqsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-n2FJPEeiyW7NaN4qWdw" name="expert" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n2VJPEeiyW7NaN4qWdw" name="others" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n2lJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n21JPEeiyW7NaN4qWdw" type="_OAa9oVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>Role oldRole = expert.getRole();&#xD;
     int oldRoleCount = expert.getRoleCount();&#xD;
     GoodsType work = expert.getType().getExpertProduction();&#xD;
     GoodsType oldWork = expert.getWorkType();&#xD;
     for (Unit other : others) {&#xD;
         if (!other.isPerson()) continue;&#xD;
         if (other.getWorkType() == work&#xD;
             &amp;&amp; other.getType().getExpertProduction() != work) {&#xD;
             Location l1 = expert.getLocation();&#xD;
             Location l2 = other.getLocation();&#xD;
             other.setLocation(colony.getTile());&#xD;
             expert.setLocation(l2);&#xD;
             expert.changeWorkType(work);&#xD;
             other.setLocation(l1);&#xD;
             if (oldWork != null) other.changeWorkType(oldWork);&#xD;
             Role tmpRole = other.getRole();&#xD;
             int tmpRoleCount = other.getRoleCount();&#xD;
             other.changeRole(oldRole, oldRoleCount);&#xD;
             expert.changeRole(tmpRole, tmpRoleCount);&#xD;
             return other;&#xD;
         }&#xD;
     }&#xD;
     return null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-n3FJPEeiyW7NaN4qWdw" name="findPlan" specification="_OGP40VJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-n3VJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n3lJPEeiyW7NaN4qWdw" name="plans" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n31JPEeiyW7NaN4qWdw" type="_NWQmUFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return find(plans, wlp -> wlp.getGoodsType() == goodsType);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-n4FJPEeiyW7NaN4qWdw" name="getBestWorker" specification="_OGRG8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-n4VJPEeiyW7NaN4qWdw" name="wl" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n4lJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n41JPEeiyW7NaN4qWdw" name="workers" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n5FJPEeiyW7NaN4qWdw" type="_OAa9oVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (workers == null || workers.isEmpty()) return null;&#xD;
     final Colony colony = wl.getColony();&#xD;
     final GoodsType outputType = (goodsType.isStoredAs())&#xD;
         ? goodsType.getStoredAs() : goodsType;&#xD;
&#xD;
     // Avoid some nasty autodestructions by accepting singleton&#xD;
     // workers that do *something*.&#xD;
     if (workers.size() == 1) {&#xD;
         Unit u = workers.get(0);&#xD;
         if (!wl.canAdd(u)) return null;&#xD;
         Location oldLoc = u.getLocation();&#xD;
         GoodsType oldWork = u.getWorkType();&#xD;
         u.setLocation(wl);&#xD;
         u.changeWorkType(goodsType);&#xD;
         int production = wl.getProductionOf(u, goodsType);&#xD;
         u.setLocation(oldLoc);&#xD;
         u.changeWorkType(oldWork);&#xD;
         return (production > 0) ? u : null;&#xD;
     }&#xD;
&#xD;
     // Do not mutate the workers list!&#xD;
     List&lt;Unit> todo = new ArrayList&lt;>(workers);&#xD;
     List&lt;Unit> best = new ArrayList&lt;>();&#xD;
     int bestValue = colony.getAdjustedNetProductionOf(outputType);&#xD;
     Unit special = null;&#xD;
     best.clear();&#xD;
     for (Unit u : todo) {&#xD;
         if (!wl.canAdd(u)) continue;&#xD;
         Location oldLoc = u.getLocation();&#xD;
         GoodsType oldWork = u.getWorkType();&#xD;
         u.setLocation(wl);&#xD;
         u.changeWorkType(goodsType);&#xD;
&#xD;
         int value = colony.getAdjustedNetProductionOf(outputType);&#xD;
         if (value > bestValue) {&#xD;
             bestValue = value;&#xD;
             best.clear();&#xD;
             best.add(u);&#xD;
             if (u.getType().getExpertProduction() == goodsType) {&#xD;
                 special = u;&#xD;
             }&#xD;
         } else if (value == bestValue &amp;&amp; !best.isEmpty()) {&#xD;
             best.add(u);&#xD;
             if (u.getType().getExpertProduction() == goodsType) {&#xD;
                 special = u;&#xD;
             }&#xD;
         }&#xD;
&#xD;
         u.setLocation(oldLoc);&#xD;
         u.changeWorkType(oldWork);&#xD;
     }&#xD;
&#xD;
     switch (best.size()) {&#xD;
     case 0: return null; // Not good.  No unit improves production.&#xD;
     case 1: return best.get(0);&#xD;
     default:todo.clear(); todo.addAll(best); break;&#xD;
     }&#xD;
     // Several winners including an expert implies they are all experts.&#xD;
     if (special != null) return special;&#xD;
&#xD;
     // Partition units into those that can upgrade-by-experience&#xD;
     // to the relevant expert (which we favour), those that can&#xD;
     // upgrade-by-experience in some way but not to the expert&#xD;
     // (which we avoid), and the rest.  Within the groups, favour&#xD;
     // those with the most relevant experience and the least irrelevant&#xD;
     // experience.&#xD;
     Specification spec = colony.getSpecification();&#xD;
     UnitType expert = spec.getExpertForProducing(goodsType);&#xD;
     best.clear();&#xD;
     bestValue = Integer.MIN_VALUE;&#xD;
     for (Unit u : todo) {&#xD;
         boolean relevant = u.getWorkType() == goodsType;&#xD;
         int score = (relevant) ? u.getExperience() : -u.getExperience();&#xD;
         if (expert != null&#xD;
             &amp;&amp; u.getType().canBeUpgraded(expert, ChangeType.EXPERIENCE)) {&#xD;
             score += 10000;&#xD;
         } else if (expert != null&#xD;
             &amp;&amp; u.getType().canBeUpgraded(null, ChangeType.EXPERIENCE)) {&#xD;
             score -= 10000;&#xD;
         }&#xD;
         if (score > bestValue) {&#xD;
             best.clear();&#xD;
             best.add(u);&#xD;
             bestValue = score;&#xD;
         } else if (score == bestValue) {&#xD;
             best.add(u);&#xD;
         }&#xD;
     }&#xD;
     switch (best.size()) {&#xD;
     case 0: break;&#xD;
     case 1: return best.get(0);&#xD;
     default:todo.clear(); todo.addAll(best); break;&#xD;
     }&#xD;
&#xD;
     // Use the unit with the least skill, in the hope that&#xD;
     // remaining experts will be called upon in due course.&#xD;
     int worstSkill = Integer.MAX_VALUE;&#xD;
     special = null;&#xD;
     for (Unit u : todo) {&#xD;
         if (u.getType().getSkill() &lt; worstSkill) {&#xD;
             special = u;&#xD;
             worstSkill = u.getType().getSkill();&#xD;
         }&#xD;
     }&#xD;
     return special;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-n5VJPEeiyW7NaN4qWdw" name="fullEquipUnit" specification="_OGS8IFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-n5lJPEeiyW7NaN4qWdw" name="spec" type="_OAX6UVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n51JPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n6FJPEeiyW7NaN4qWdw" name="role" type="_OAWsMVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n6VJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n6lJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (role.isOffensive()) {&#xD;
         for (Role r : unit.getAvailableRoles(spec.getMilitaryRoles())) {&#xD;
             if (colony.equipForRole(unit, &#xD;
                                     r, r.getMaximumCount())) return true;&#xD;
         }&#xD;
         return false;&#xD;
     }&#xD;
     return colony.equipForRole(unit, role, role.getMaximumCount());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK-n61JPEeiyW7NaN4qWdw" name="assignWorkers" specification="_OGTjMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK-n7FJPEeiyW7NaN4qWdw" name="workers" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n7VJPEeiyW7NaN4qWdw" name="preferScout">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OK-n7lJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK-n71JPEeiyW7NaN4qWdw" type="_OARzsVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final GoodsType foodType = spec().getPrimaryFoodType();&#xD;
&#xD;
     // Collect the work location plans.  Note that the plans are&#xD;
     // pre-sorted in order of desirability.&#xD;
     final List&lt;GoodsType> produce = getPreferredProduction();&#xD;
     List&lt;WorkLocationPlan> foodPlans = getFoodPlans();&#xD;
     List&lt;WorkLocationPlan> workPlans = getWorkPlans();&#xD;
&#xD;
     // Make a scratch colony to work on.&#xD;
     Colony col = colony.copyColony();&#xD;
     Tile tile = col.getTile();&#xD;
&#xD;
     // Replace the given workers with those in the scratch colony.&#xD;
     List&lt;Unit> otherWorkers = new ArrayList&lt;>(workers);&#xD;
     workers.clear();&#xD;
     for (Unit u : otherWorkers) workers.add(col.getCorresponding(u));&#xD;
&#xD;
     // Move all workers to the tile.&#xD;
     // Also remove equipment, which is safe because no missionaries&#xD;
     // or active pioneers should be on the worker list.&#xD;
     for (Unit u : workers) {&#xD;
         u.setLocation(tile);&#xD;
         col.equipForRole(u, spec().getDefaultRole(), 0);&#xD;
     }&#xD;
&#xD;
     // Move outdoor experts outside if possible.&#xD;
     // Prefer scouts in early game if there are very few.&#xD;
     Role[] outdoorRoles = {&#xD;
         spec().getRoleWithAbility(Ability.IMPROVE_TERRAIN, null),&#xD;
         null,&#xD;
         spec().getRoleWithAbility(Ability.SPEAK_WITH_CHIEF, null)&#xD;
     };&#xD;
     if (preferScout) {&#xD;
         Role tmp = outdoorRoles[1];&#xD;
         outdoorRoles[1] = outdoorRoles[2];&#xD;
         outdoorRoles[2] = tmp;&#xD;
     }&#xD;
     for (Role outdoorRole : outdoorRoles) {&#xD;
         for (Unit u : new ArrayList&lt;>(workers)) {&#xD;
             if (workers.size() &lt;= 1) break;&#xD;
             Role role = outdoorRole;&#xD;
             if (role == null) {&#xD;
                 if ((role = u.getMilitaryRole()) == null) continue;&#xD;
             }&#xD;
             if (u.getType() == role.getExpertUnit()&#xD;
                     &amp;&amp; fullEquipUnit(spec(), u, role, col)) {&#xD;
                 workers.remove(u);&#xD;
                 lb.add(u.getId(), &quot;(&quot;, u.getType().getSuffix(),&#xD;
                         &quot;) -> &quot;, role.getSuffix(), &quot;\n&quot;);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Consider the defence situation.&#xD;
     // FIXME: scan for neighbouring hostiles&#xD;
     // Favour low-skill/experience units for defenders, order experts&#xD;
     // in reverse order of their production on the produce-list.&#xD;
     Comparator&lt;Unit> soldierComparator = new Comparator&lt;Unit>() {&#xD;
         @Override&#xD;
         public int compare(Unit u1, Unit u2) {&#xD;
             int cmp = u1.getSkillLevel() - u2.getSkillLevel();&#xD;
             if (cmp == 0) {&#xD;
                 GoodsType g1 = u1.getType().getExpertProduction();&#xD;
                 GoodsType g2 = u2.getType().getExpertProduction();&#xD;
                 cmp = ((g2 == null) ? 1 : 0) - ((g1 == null) ? 1 : 0);&#xD;
                 if (cmp == 0 &amp;&amp; g1 != null) {&#xD;
                     int i = produce.indexOf(g2);&#xD;
                     cmp = (i &lt; 0) ? produce.size() : i;&#xD;
                     i = produce.indexOf(g1);&#xD;
                     cmp -= (i &lt; 0) ? produce.size() : i;&#xD;
                 }&#xD;
             }&#xD;
             if (cmp == 0) {&#xD;
                 cmp = u1.getExperience() - u2.getExperience();&#xD;
             }&#xD;
             return cmp;&#xD;
         }&#xD;
     };&#xD;
     Collections.sort(workers, soldierComparator);&#xD;
     for (Unit u : new ArrayList&lt;>(workers)) {&#xD;
         if (workers.size() &lt;= 1) break;&#xD;
         if (!col.isBadlyDefended()) break;&#xD;
         Role role = u.getMilitaryRole();&#xD;
         if (role != null &amp;&amp; fullEquipUnit(spec(), u, role, col)) {&#xD;
             workers.remove(u);&#xD;
             lb.add(u.getId(), &quot;(&quot;, u.getType().getSuffix(), &quot;) -> &quot;,&#xD;
                    u.getRoleSuffix(), &quot;\n&quot;);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Greedy assignment of other workers to plans.&#xD;
     List&lt;AbstractGoods> buildGoods = new ArrayList&lt;>();&#xD;
     BuildableType build = col.getCurrentlyBuilding();&#xD;
     if (build != null) buildGoods.addAll(build.getRequiredGoods());&#xD;
     List&lt;WorkLocationPlan> wlps;&#xD;
     WorkLocationPlan wlp;&#xD;
     boolean done = false;&#xD;
     while (!workers.isEmpty() &amp;&amp; !done) {&#xD;
         // Decide what to produce: set the work location plan to&#xD;
         // try (wlp), and the list the plan came from so it can&#xD;
         // be recycled if successful (wlps).&#xD;
         wlps = null;&#xD;
         wlp = null;&#xD;
         if (col.getAdjustedNetProductionOf(foodType) > 0) {&#xD;
             // Try to produce something.&#xD;
             wlps = workPlans;&#xD;
             while (!produce.isEmpty()) {&#xD;
                 if ((wlp = findPlan(produce.get(0), workPlans)) != null) {&#xD;
                     break; // Found a plan to try.&#xD;
                 }&#xD;
                 produce.remove(0); // Can not produce this goods type&#xD;
             }&#xD;
         }&#xD;
&#xD;
         // See if a plan can be satisfied.&#xD;
         Unit best;&#xD;
         WorkLocation wl;&#xD;
         GoodsType goodsType;&#xD;
         for (;;) {&#xD;
             if (wlp == null) { // Time to use a food plan.&#xD;
                 if (foodPlans.isEmpty()) {&#xD;
                     lb.add(&quot;    Food plans exhausted\n&quot;);&#xD;
                     done = true;&#xD;
                     break;&#xD;
                 }&#xD;
                 wlps = foodPlans;&#xD;
                 wlp = wlps.get(0);&#xD;
             }&#xD;
&#xD;
             String err = null;&#xD;
             goodsType = wlp.getGoodsType();&#xD;
             wl = col.getCorresponding(wlp.getWorkLocation());&#xD;
             best = null;&#xD;
             lb.add(&quot;    &quot;, LogBuilder.wide(2, col.getUnitCount()),&#xD;
                    &quot;: &quot;, LogBuilder.wide(-15, goodsType.getSuffix()),&#xD;
                    &quot;@&quot;, LogBuilder.wide(25, locationDescription(wl)),&#xD;
                    &quot; => &quot;);&#xD;
&#xD;
             if (!wl.canBeWorked()) {&#xD;
                 err = &quot;can not be worked&quot;;&#xD;
             } else if (wl.isFull()) {&#xD;
                 err = &quot;full&quot;;&#xD;
             } else if ((best = ColonyPlan.getBestWorker(wl, goodsType,&#xD;
                                                         workers)) == null) {&#xD;
                 err = &quot;no worker found&quot;;&#xD;
             }&#xD;
             if (err != null) {&#xD;
                 wlps.remove(wlp); // The plan can not be worked, dump it.&#xD;
                 lb.add(err, &quot;\n&quot;);&#xD;
                 break;&#xD;
             }&#xD;
&#xD;
             // Found a suitable worker, place it.&#xD;
             best.setLocation(wl);&#xD;
&#xD;
             // Did the placement break the production bonus?&#xD;
             if (col.getProductionBonus() &lt; 0) {&#xD;
                 best.setLocation(tile);&#xD;
                 done = true;&#xD;
                 lb.add(&quot;    broke production bonus\n&quot;);&#xD;
                 break;&#xD;
             }&#xD;
&#xD;
             // Is the colony going to starve because of this placement?&#xD;
             if (col.getAdjustedNetProductionOf(foodType) &lt; 0) {&#xD;
                 int net = col.getAdjustedNetProductionOf(foodType);&#xD;
                 int count = col.getGoodsCount(foodType);&#xD;
                 if (count / -net &lt; PRODUCTION_TURNOVER_TURNS) {&#xD;
                     // Too close for comfort.  Back out the&#xD;
                     // placement and try a food plan, unless this&#xD;
                     // was already a food plan.&#xD;
                     best.setLocation(tile);&#xD;
                     wlp = null;&#xD;
                     if (goodsType.isFoodType()) {&#xD;
                         lb.add(&quot;    starvation (&quot;, count, &quot;/&quot;, net, &quot;)\n&quot;);&#xD;
                         done = true;&#xD;
                         break;&#xD;
                     }&#xD;
                     lb.add(&quot;    would starve (&quot;, count, &quot;/&quot;, net, &quot;)\n&quot;);&#xD;
                     continue;&#xD;
                 }&#xD;
                 // Otherwise tolerate the food stock running down.&#xD;
                 // Rely on the warehouse-exhaustion code to fire&#xD;
                 // another rearrangement before units starve.&#xD;
             }&#xD;
&#xD;
             // Check if placing the worker will soon exhaust the&#xD;
             // raw material.  Do not reduce raw materials below&#xD;
             // what is needed for a building--- e.g. prevent&#xD;
             // musket production from hogging the tools.&#xD;
             GoodsType raw = goodsType.getInputType();&#xD;
             int rawNeeded = buildGoods.stream()&#xD;
                 .filter(ag -> ag.getType() == raw)&#xD;
                 .mapToInt(AbstractGoods::getAmount).sum();&#xD;
             if (raw == null&#xD;
                 || col.getAdjustedNetProductionOf(raw) >= 0&#xD;
                 || (((col.getGoodsCount(raw) - rawNeeded)&#xD;
                         / -col.getAdjustedNetProductionOf(raw))&#xD;
                     >= PRODUCTION_TURNOVER_TURNS)) {&#xD;
                 // No raw material problems, the placement&#xD;
                 // succeeded.  Set the work type, move the&#xD;
                 // successful goods type to the end of the produce&#xD;
                 // list for later reuse, remove the worker from&#xD;
                 // the workers pool, but leave the successful plan&#xD;
                 // on its list.&#xD;
                 best.changeWorkType(goodsType);&#xD;
                 workers.remove(best);&#xD;
                 lb.add(&quot;    &quot;, best.getId(), &quot;(&quot;,&#xD;
                        best.getType().getSuffix(),&quot;)\n&quot;);&#xD;
                 if (!goodsType.isFoodType() &amp;&amp; produce.remove(goodsType)) {&#xD;
                     produce.add(goodsType);&#xD;
                 }&#xD;
                 break;&#xD;
             }&#xD;
&#xD;
             // Yes, we need more of the raw material.  Pull the&#xD;
             // unit out again and see if we can make more.&#xD;
             best.setLocation(tile);&#xD;
&#xD;
             WorkLocationPlan rawWlp = findPlan(raw, workPlans);&#xD;
             if (rawWlp != null) {&#xD;
                 // OK, we have an alternate plan.  Put the raw&#xD;
                 // material at the start of the produce list and&#xD;
                 // loop trying to satisfy the alternate plan.&#xD;
                 if (produce.remove(raw)) produce.add(0, raw);&#xD;
                 wlp = rawWlp;&#xD;
                 lb.add(&quot;    retry with &quot;, raw.getSuffix(), &quot;\n&quot;);&#xD;
                 continue;&#xD;
             }&#xD;
&#xD;
             // No raw material available, so we have to give up on&#xD;
             // both the plan and the type of production.&#xD;
             // Hopefully the raw production is positive again and&#xD;
             // we will succeed next time.&#xD;
             wlps.remove(wlp);&#xD;
             produce.remove(goodsType);&#xD;
             lb.add(&quot;    needs more &quot;, raw.getSuffix(), &quot;\n&quot;);&#xD;
             break;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Put the rest of the workers on the tile.&#xD;
     for (Unit u : workers) {&#xD;
         if (u.getLocation() != tile) u.setLocation(tile);&#xD;
     }&#xD;
&#xD;
     // Check for failure to assign any workers.  This happens when:&#xD;
     // - there are no useful food plans&#xD;
     //   - in which case look for a `harmless' place and add one worker&#xD;
     // - food is low, and perhaps partly eaten by horses, and no&#xD;
     //   unit can *improve* production by being added.&#xD;
     //   - find a place to produce food that at least avoids&#xD;
     //     starvation and add one worker.&#xD;
     if (col.getUnitCount() == 0) {&#xD;
         if (getFoodPlans().isEmpty()) {&#xD;
locations:      for (WorkLocation wl : col.getAvailableWorkLocations()) {&#xD;
                 for (Unit u : new ArrayList&lt;>(workers)) {&#xD;
                     for (GoodsType type : libertyGoodsTypes) {&#xD;
                         if (wl.canAdd(u)&#xD;
                             &amp;&amp; wl.getPotentialProduction(type,&#xD;
                                 u.getType()) > 0) {&#xD;
                             u.setLocation(wl);&#xD;
                             u.changeWorkType(type);&#xD;
                             workers.remove(u);&#xD;
                             break locations;&#xD;
                         }&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         } else {&#xD;
plans:          for (WorkLocationPlan w : getFoodPlans()) {&#xD;
                 GoodsType goodsType = w.getGoodsType();&#xD;
                 WorkLocation wl = col.getCorresponding(w.getWorkLocation());&#xD;
                 for (Unit u : new ArrayList&lt;>(workers)) {&#xD;
                     GoodsType oldWork = u.getWorkType();&#xD;
                     u.setLocation(wl);&#xD;
                     u.changeWorkType(goodsType);&#xD;
                     if (col.getAdjustedNetProductionOf(foodType) >= 0) {&#xD;
                         lb.add(&quot;    Subsist with &quot;, u, &quot;\n&quot;);&#xD;
                         workers.remove(u);&#xD;
                         break plans;&#xD;
                     }&#xD;
                     u.setLocation(tile);&#xD;
                     u.changeWorkType(oldWork);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // The greedy algorithm works reasonably well, but will&#xD;
     // misplace experts when they are more productive at the&#xD;
     // immediately required task than a lesser unit, not knowing&#xD;
     // that a requirement for their speciality will subsequently&#xD;
     // follow.  Do a cleanup pass to sort these out.&#xD;
     List&lt;Unit> experts = new ArrayList&lt;>();&#xD;
     List&lt;Unit> nonExperts = new ArrayList&lt;>();&#xD;
     for (Unit u : col.getUnitList()) {&#xD;
         if (u.getType().getExpertProduction() != null) {&#xD;
             if (u.getType().getExpertProduction() != u.getWorkType()) {&#xD;
                 experts.add(u);&#xD;
             }&#xD;
         } else {&#xD;
             nonExperts.add(u);&#xD;
         }&#xD;
     }&#xD;
     int expert = 0;&#xD;
     while (expert &lt; experts.size()) {&#xD;
         Unit u1 = experts.get(expert);&#xD;
         Unit other;&#xD;
         if ((other = trySwapExpert(u1, experts, col)) != null) {&#xD;
             lb.add(&quot;    Swapped &quot;, u1.getId(), &quot;(&quot;,&#xD;
                 u1.getType().getSuffix(), &quot;) for &quot;, other, &quot;\n&quot;);&#xD;
             experts.remove(u1);&#xD;
         } else if ((other = trySwapExpert(u1, nonExperts, col)) != null) {&#xD;
             lb.add(&quot;    Swapped &quot;, u1.getId(), &quot;(&quot;,&#xD;
                 u1.getType().getSuffix(), &quot;) for &quot;, other, &quot;\n&quot;);&#xD;
             experts.remove(u1);&#xD;
         } else {&#xD;
             expert++;&#xD;
         }&#xD;
     }&#xD;
     for (Unit u : new ArrayList&lt;>(workers)) {&#xD;
         GoodsType work = u.getType().getExpertProduction();&#xD;
         if (work != null) {&#xD;
             Unit other = trySwapExpert(u, col.getUnitList(), col);&#xD;
             if (other != null) {&#xD;
                 lb.add(&quot;    Swapped &quot;, u.getId(), &quot;(&quot;,&#xD;
                     u.getType().getSuffix(), &quot;) for &quot;, other, &quot;\n&quot;);&#xD;
                 workers.remove(u);&#xD;
                 workers.add(other);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Rearm what remains as far as possible.&#xD;
     Collections.sort(workers, soldierComparator);&#xD;
     for (Unit u : new ArrayList&lt;>(workers)) {&#xD;
         Role role = u.getMilitaryRole();&#xD;
         if (role == null) continue;&#xD;
         if (fullEquipUnit(spec(), u, role, col)) {&#xD;
             lb.add(&quot;    &quot;, u.getId(), &quot;(&quot;, u.getType().getSuffix(),&#xD;
                    &quot;) -> &quot;, u.getRoleSuffix(), &quot;\n&quot;);&#xD;
             workers.remove(u);&#xD;
         } else break;&#xD;
     }&#xD;
     for (Unit u : col.getUnitList()) {&#xD;
         if (!u.hasDefaultRole()) {&#xD;
             logger.warning(&quot;assignWorkers bogus role for &quot; + u);&#xD;
             u.changeRole(spec().getDefaultRole(), 0);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Log and return the scratch colony on success.&#xD;
     // Otherwise abandon this rearrangement, disposing of the&#xD;
     // scratch colony and returning null.&#xD;
     for (Unit u : workers) {&#xD;
         lb.add(&quot;    &quot;, u.getId(), &quot;(&quot;, u.getType().getSuffix(),&#xD;
                &quot;) -> UNUSED\n&quot;);&#xD;
     }&#xD;
     if (col.getUnitCount() &lt;= 0) col = null;&#xD;
     return col;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK_O4FJPEeiyW7NaN4qWdw" name="locationDescription" specification="_OGUxUVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK_O4VJPEeiyW7NaN4qWdw" name="loc" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK_O4lJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>String name = colony.getName() + &quot;-&quot;;&#xD;
     String desc = loc.toShortString();&#xD;
     if (desc.startsWith(name)) {&#xD;
         desc = desc.substring(name.length(), desc.length());&#xD;
     }&#xD;
     return desc;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK_18FJPEeiyW7NaN4qWdw" name="toString" specification="_NUV6wFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK_18VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Tile tile = colony.getTile();&#xD;
     LogBuilder lb = new LogBuilder(256);&#xD;
     lb.add(&quot;ColonyPlan: &quot;, colony,&#xD;
         &quot; &quot;, colony.getTile(),&#xD;
         &quot;\nProfile: &quot;, profileType, &quot;\nPreferred production:&quot;);&#xD;
     FreeColObject.logFreeColObjects(getPreferredProduction(), lb);&#xD;
     lb.add(getBuildableReport(), &quot;Food Plans:\n&quot;);&#xD;
     for (WorkLocationPlan wlp : getFoodPlans()) {&#xD;
         WorkLocation wl = wlp.getWorkLocation();&#xD;
         lb.add(locationDescription(wl),&#xD;
             &quot;: &quot;, wl.getGenericPotential(wlp.getGoodsType()), &#xD;
             &quot; &quot;, wlp.getGoodsType().getSuffix(), &quot;\n&quot;);&#xD;
     }&#xD;
     lb.add(&quot;Work Plans:\n&quot;);&#xD;
     for (WorkLocationPlan wlp : getWorkPlans()) {&#xD;
         WorkLocation wl = wlp.getWorkLocation();&#xD;
         lb.add(locationDescription(wl),&#xD;
             &quot;: &quot;, wl.getGenericPotential(wlp.getGoodsType()),&#xD;
             &quot; &quot;, wlp.getGoodsType().getSuffix(), &quot;\n&quot;);&#xD;
     }&#xD;
     return lb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NUQbMFJPEeiyW7NaN4qWdw" name="getAIMain" visibility="private" method="_OK9ZuFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLhaaFJPEeiyW7NaN4qWdw">
                    <body>Gets the main AI-object.&#xD;
     *&#xD;
     * @return The main AI-object.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OCv44FJPEeiyW7NaN4qWdw" type="_NRhQQFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NUQbMVJPEeiyW7NaN4qWdw" name="spec" visibility="private" method="_OK9ZulJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBcFJPEeiyW7NaN4qWdw">
                    <body>Gets the specification.&#xD;
     *&#xD;
     * @return The specification.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGHV9lJPEeiyW7NaN4qWdw" type="_OAX6UVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NUQbMlJPEeiyW7NaN4qWdw" name="getPreferredProduction" method="_OK9ZvFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBcVJPEeiyW7NaN4qWdw">
                    <body>Gets the preferred goods to produce.&#xD;
     *&#xD;
     * @return A copy of the preferred goods production list in this plan.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NURCQFJPEeiyW7NaN4qWdw" type="_OAUP8VJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NURCQVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NURCQlJPEeiyW7NaN4qWdw" name="getBuildableTypes" method="_OK9Zv1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBclJPEeiyW7NaN4qWdw">
                    <body>Gets a copy of the current list of buildable types associated&#xD;
     * with this &lt;code>ColonyPlan&lt;/code>.&#xD;
     *&#xD;
     * @return A copy of the of &lt;code>BuildableType&lt;/code>s list.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NURCQ1JPEeiyW7NaN4qWdw" type="_OAQlkVJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NURCRFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NURpUFJPEeiyW7NaN4qWdw" name="getBestBuildableType" method="_OK9ZwlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBc1JPEeiyW7NaN4qWdw">
                    <body>Gets the best buildable type from this plan that can currently&#xD;
     * be built by the colony.&#xD;
     *&#xD;
     * @return The best current &lt;code>BuildableType&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGH9AFJPEeiyW7NaN4qWdw" type="_OAQlkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NURpUVJPEeiyW7NaN4qWdw" name="getBuildableReport" method="_OK9ZxFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBdFJPEeiyW7NaN4qWdw">
                    <body>Get a report on the build plans.&#xD;
     *&#xD;
     * @return A build plan report.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NURpUlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUSQYFJPEeiyW7NaN4qWdw" name="getFoodPlans" method="_OK9ZxlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBdVJPEeiyW7NaN4qWdw">
                    <body>Gets the food-producing and non-autoproducing work location&#xD;
     * plans associated with this &lt;code>ColonyPlan&lt;/code>.&#xD;
     *&#xD;
     * @return A list of food producing plans.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NUSQYVJPEeiyW7NaN4qWdw" type="_NWQmUFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NUSQYlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUSQY1JPEeiyW7NaN4qWdw" name="getWorkPlans" method="_OK9ZyVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBdlJPEeiyW7NaN4qWdw">
                    <body>Gets the non-food-producing/non-autoproducing work location&#xD;
     * plans associated with this &lt;code>ColonyPlan&lt;/code>.&#xD;
     *&#xD;
     * @return A list of non-food producing plans.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NUSQZFJPEeiyW7NaN4qWdw" type="_NWQmUFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NUSQZVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUS3cFJPEeiyW7NaN4qWdw" name="update" method="_OK9Zz1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBeFJPEeiyW7NaN4qWdw">
                    <body>Recreates the buildables and work location plans for this&#xD;
     * colony.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NUS3cVJPEeiyW7NaN4qWdw" name="createProductionMap" visibility="private" method="_OK9Z0FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBeVJPEeiyW7NaN4qWdw">
                    <body>Creates a map of potential production of all goods types&#xD;
     * from all available work locations using the default unit type.&#xD;
     * Includes non-workable locations (e.g. chapel, colony-center-tile)&#xD;
     * as their production can influence the choice of goods to produce.&#xD;
     *&#xD;
     * @return The map of potential production.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGIkEVJPEeiyW7NaN4qWdw" type="_OBU8klJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NUUsoFJPEeiyW7NaN4qWdw" name="updateBuildableTypes" visibility="private" method="_OK-n0FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBf1JPEeiyW7NaN4qWdw">
                    <body>Updates the build plans for this colony.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NUV6wFJPEeiyW7NaN4qWdw" name="toString" method="_OK_18FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NUWh0FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OGHV8FJPEeiyW7NaN4qWdw" name="ColonyPlan" method="_OK9ZtFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OGHV81JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OGHV9FJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLhaZ1JPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>ColonyPlan&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param colony The colony to make a &lt;code>ColonyPlan&lt;/code> for.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGHV8VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGHV8lJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGHV9VJPEeiyW7NaN4qWdw" type="_NUKUkFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGH9AVJPEeiyW7NaN4qWdw" name="refine" method="_OK9ZzFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBd1JPEeiyW7NaN4qWdw">
                    <body>Refines this plan given the colony choice of what to build.&#xD;
     *&#xD;
     * @param build The &lt;code>BuildableType&lt;/code> to be built (may be null).&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGH9AlJPEeiyW7NaN4qWdw" name="build" type="_OAQlkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGIkEFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGIkElJPEeiyW7NaN4qWdw" name="updateGoodsTypeLists" visibility="private" method="_OK-AwFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBelJPEeiyW7NaN4qWdw">
                    <body>Updates the goods type lists.  The categories are:&lt;UL>&#xD;
     * &lt;LI>food&lt;/LI>&#xD;
     * &lt;LI>liberty&lt;/LI>&#xD;
     * &lt;LI>immigration&lt;/LI>&#xD;
     * &lt;LI>military&lt;/LI>&#xD;
     * &lt;LI>raw building&lt;/LI>&#xD;
     * &lt;LI>building&lt;/LI>&#xD;
     * &lt;LI>raw luxury&lt;/LI>&#xD;
     * &lt;LI>luxury&lt;/LI>&#xD;
     * &lt;LI>raw other&lt;/LI>&#xD;
     * &lt;/UL>&#xD;
     *&#xD;
     * Ignore raw materials which can not be refined and refined goods&#xD;
     * that have no raw materials available.  Also ignore other goods&#xD;
     * that do not fit these categories (e.g. trade goods).&#xD;
     *&#xD;
     * @param production The production map.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGIkE1JPEeiyW7NaN4qWdw" name="production" type="_OBU8klJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGJyMFJPEeiyW7NaN4qWdw" name="updateRawMaterials" visibility="private" method="_OK-AwlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBe1JPEeiyW7NaN4qWdw">
                    <body>Chooses the two best raw materials, updating the production&#xD;
     * map and lists.&#xD;
     *&#xD;
     * FIXME: scale with colony size.&#xD;
     *&#xD;
     * @param production The production map.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGJyMVJPEeiyW7NaN4qWdw" name="production" type="_OBU8klJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGLAUFJPEeiyW7NaN4qWdw" name="findBuildPlan" visibility="private" method="_OK-AxFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBfFJPEeiyW7NaN4qWdw">
                    <body>Finds a build plan for this type.&#xD;
     *&#xD;
     * @param type The &lt;code>BuildableType&lt;/code> to search for.&#xD;
     * @return A &lt;code>BuildPlan&lt;/code> with this type, or null if not found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGLAUVJPEeiyW7NaN4qWdw" name="type" type="_OAQlkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGLAUlJPEeiyW7NaN4qWdw" type="_NUNX4FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGLnYFJPEeiyW7NaN4qWdw" name="prioritize" visibility="private" method="_OK-Ax1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBfVJPEeiyW7NaN4qWdw">
                    <body>Adds or improves the priority of a buildable in a list.&#xD;
     *&#xD;
     * @param type The &lt;code>BuildableType&lt;/code> to use.&#xD;
     * @param weight The relative weight of this class of buildable with&#xD;
     *     respect to other buildable classes.&#xD;
     * @param support The support for this buildable within its class.&#xD;
     * @return True if this type was prioritized.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGLnYVJPEeiyW7NaN4qWdw" name="type" type="_OAQlkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGLnYlJPEeiyW7NaN4qWdw" name="weight">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OGLnY1JPEeiyW7NaN4qWdw" name="support">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OGLnZFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OGMOcFJPEeiyW7NaN4qWdw" name="prioritizeProduction" visibility="private" method="_OK-AzFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBflJPEeiyW7NaN4qWdw">
                    <body>Given a buildable that improves production of a goods type,&#xD;
     * prioritize it.&#xD;
     *&#xD;
     * @param type The &lt;code>BuildableType&lt;/code> to consider.&#xD;
     * @param goodsType The &lt;code>GoodsType&lt;/code> improved by the buildable.&#xD;
     * @return True if this type was prioritized.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGMOcVJPEeiyW7NaN4qWdw" name="type" type="_OAQlkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGMOclJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGMOc1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OGM1gFJPEeiyW7NaN4qWdw" name="updatePlans" visibility="private" method="_OK-n0VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBgFJPEeiyW7NaN4qWdw">
                    <body>Makes a plan for each type of possible production, that is&#xD;
     * those work locations that can use a unit or can auto-produce.&#xD;
     * Note that this will almost certainly include clashes over work&#xD;
     * locations.  That gets sorted out elsewhere as ColonyPlans do&#xD;
     * not examine the units present.&#xD;
     *&#xD;
     * With the complete list of work plans, finish creating the list&#xD;
     * of goods to produce.&#xD;
     *&#xD;
     * Then filter out the auto-production plans as they are not&#xD;
     * going to be helpful for unit allocation.&#xD;
     *&#xD;
     * Finally sort by desirability.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGM1gVJPEeiyW7NaN4qWdw" name="production" type="_OBU8klJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGNckVJPEeiyW7NaN4qWdw" name="updateProductionList" visibility="private" method="_OK-n01JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBgVJPEeiyW7NaN4qWdw">
                    <body>Add the other goods types to the production list.  When this is&#xD;
     * called the new world goods production is already present on the&#xD;
     * produce list.  Ignores food which is treated separately.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGNcklJPEeiyW7NaN4qWdw" name="production" type="_OBU8klJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_OGODoFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_OGODoVJPEeiyW7NaN4qWdw" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OGOqsFJPEeiyW7NaN4qWdw" name="trySwapExpert" visibility="private" method="_OK-n11JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBglJPEeiyW7NaN4qWdw">
                    <body>Tries to swap an expert unit for another doing its job.&#xD;
     *&#xD;
     * @param expert The expert &lt;code>Unit&lt;/code>.&#xD;
     * @param others A list of other &lt;code>Unit&lt;/code>s to test against.&#xD;
     * @param colony The &lt;code>Colony&lt;/code> the units are working in.&#xD;
     * @return The unit that was replaced by the expert, or null if none.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGOqsVJPEeiyW7NaN4qWdw" name="expert" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGOqslJPEeiyW7NaN4qWdw" name="others" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGPRwFJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGPRwVJPEeiyW7NaN4qWdw" type="_OAa9oVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGP40VJPEeiyW7NaN4qWdw" name="findPlan" visibility="private" method="_OK-n3FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBg1JPEeiyW7NaN4qWdw">
                    <body>Finds a plan on a list that produces a given goods type.&#xD;
     *&#xD;
     * @param goodsType The &lt;code>GoodsType&lt;/code> to produce.&#xD;
     * @param plans The list of &lt;code>WorkLocationPlan&lt;/code>s to check.&#xD;
     * @return The first plan found that produces the goods type, or null&#xD;
     *     if none found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGP40lJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGQf4FJPEeiyW7NaN4qWdw" name="plans" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGQf4VJPEeiyW7NaN4qWdw" type="_NWQmUFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGRG8FJPEeiyW7NaN4qWdw" name="getBestWorker" isStatic="true" method="_OK-n4FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBhFJPEeiyW7NaN4qWdw">
                    <body>Gets the best worker to execute a work location plan.&#xD;
     * - The most productive one wins (which will automatically pick a&#xD;
     *   relevant expert).&#xD;
     * - If they are all relevant experts, pick any.&#xD;
     * - Pick the unit that can upgrade to the required expert with the most&#xD;
     *     relevant experience or least irrelevant expertise.&#xD;
     * - Pick a unit that can not upgrade at all.&#xD;
     * - Pick an otherwise upgradeable unit with the most relevant experience&#xD;
     *     or least irrelevant experience.&#xD;
     * - Pick the least skillful unit.&#xD;
     *&#xD;
     * Public for the benefit of the test suite.&#xD;
     *&#xD;
     * @param wl The &lt;code>WorkLocation&lt;/code> to work at.&#xD;
     * @param goodsType The &lt;code>GoodsType&lt;/code> to make.&#xD;
     * @param workers A list of potential &lt;code>Unit&lt;/code>s to try.&#xD;
     * @return The best worker for the job.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGRuAFJPEeiyW7NaN4qWdw" name="wl" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGRuAVJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGRuAlJPEeiyW7NaN4qWdw" name="workers" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGRuA1JPEeiyW7NaN4qWdw" type="_OAa9oVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGS8IFJPEeiyW7NaN4qWdw" name="fullEquipUnit" visibility="private" isStatic="true" method="_OK-n5VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBhVJPEeiyW7NaN4qWdw">
                    <body>Equips a unit for a role, trying extra possibilities.&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to equip if possible.&#xD;
     * @param role The &lt;code>Role&lt;/code> for the unit to take.&#xD;
     * @param colony The &lt;code>Colony&lt;/code> storing the equipment.&#xD;
     * @return True if the unit was equipped.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGS8IVJPEeiyW7NaN4qWdw" name="spec" type="_OAX6UVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGS8IlJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGS8I1JPEeiyW7NaN4qWdw" name="role" type="_OAWsMVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGS8JFJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGS8JVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OGTjMFJPEeiyW7NaN4qWdw" name="assignWorkers" method="_OK-n61JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBhlJPEeiyW7NaN4qWdw">
                    <body>Tries to apply a colony plan given a list of workers.&#xD;
     *&#xD;
     * @param workers A list of &lt;code>Unit&lt;/code>s to assign.&#xD;
     * @param preferScout Prefer to make scouts rather than soldiers.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return A scratch colony with the workers in place.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGTjMVJPEeiyW7NaN4qWdw" name="workers" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGUKQFJPEeiyW7NaN4qWdw" name="preferScout">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OGUKQVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGUKQlJPEeiyW7NaN4qWdw" type="_OARzsVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGUxUVJPEeiyW7NaN4qWdw" name="locationDescription" visibility="private" method="_OK_O4FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiBh1JPEeiyW7NaN4qWdw">
                    <body>Gets a concise textual description of a location associated with&#xD;
     * the colony.  No i18n here, this is for debugging purposes.&#xD;
     *&#xD;
     * @param loc The &lt;code>Location&lt;/code> to describe.&#xD;
     * @return The text description.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGVYYFJPEeiyW7NaN4qWdw" name="loc" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGVYYVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_NULisFJPEeiyW7NaN4qWdw" name="ProfileType" visibility="private">
                  <eAnnotations xmi:id="_NULisVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_NULislJPEeiyW7NaN4qWdw" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLhaZFJPEeiyW7NaN4qWdw">
                    <body>The profile of the colony (a sort of general flavour).</body>
                  </ownedComment>
                  <ownedOperation xmi:id="_NUMw0FJPEeiyW7NaN4qWdw" name="getProfileTypeFromSize" isStatic="true" method="_OK8LkFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_OLhaZVJPEeiyW7NaN4qWdw">
                      <body>Chooses a suitable profile type given a size of colony.&#xD;
         *&#xD;
         * @param size A proposed colony size.</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_NUMw0VJPEeiyW7NaN4qWdw" name="size">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_OCuqwFJPEeiyW7NaN4qWdw" type="_NULisFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedLiteral xmi:id="_NUMJwFJPEeiyW7NaN4qWdw" name="OUTPOST"/>
                  <ownedLiteral xmi:id="_NUMJwVJPEeiyW7NaN4qWdw" name="SMALL"/>
                  <ownedLiteral xmi:id="_NUMJwlJPEeiyW7NaN4qWdw" name="MEDIUM"/>
                  <ownedLiteral xmi:id="_NUMJw1JPEeiyW7NaN4qWdw" name="LARGE"/>
                  <ownedLiteral xmi:id="_NUMJxFJPEeiyW7NaN4qWdw" name="CAPITAL"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_NUNX4FJPEeiyW7NaN4qWdw" name="BuildPlan" visibility="private">
                  <eAnnotations xmi:id="_NUNX4VJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_NUNX4lJPEeiyW7NaN4qWdw" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLhaZlJPEeiyW7NaN4qWdw">
                    <body>The things to build, and their priority.</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_OJVpFFJPEeiyW7NaN4qWdw" name="type" isLeaf="true" type="_OAQlkVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMaLMFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OJWQIVJPEeiyW7NaN4qWdw" name="weight">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_OJWQI1JPEeiyW7NaN4qWdw" name="support">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_OJW3MVJPEeiyW7NaN4qWdw" name="difficulty">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK8Lk1JPEeiyW7NaN4qWdw" name="BuildPlan" specification="_OGE5sFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OK8LlFJPEeiyW7NaN4qWdw" name="type" type="_OAQlkVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OK8LlVJPEeiyW7NaN4qWdw" name="weight">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_OK8LllJPEeiyW7NaN4qWdw" name="support">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_OK8Ll1JPEeiyW7NaN4qWdw" type="_NUNX4FJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>this.type = type;&#xD;
         this.weight = weight;&#xD;
         this.support = support;&#xD;
         this.difficulty = 1.0f;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZsFJPEeiyW7NaN4qWdw" name="getValue" specification="_NUN-8FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OK9ZsVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return weight * support / difficulty;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK9ZslJPEeiyW7NaN4qWdw" name="toString" specification="_NUN-8lJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OK9Zs1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return String.format(&quot;%s (%1.3f * %1.3f / %1.3f = %1.3f)&quot;,&#xD;
                              type.getSuffix(), weight, support,&#xD;
                              difficulty, getValue());&#xD;
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_NUN-8FJPEeiyW7NaN4qWdw" name="getValue" method="_OK9ZsFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_NUN-8VJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_NUN-8lJPEeiyW7NaN4qWdw" name="toString" method="_OK9ZslJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_NUOmAFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_OGE5sFJPEeiyW7NaN4qWdw" name="BuildPlan" method="_OK8Lk1JPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_OGE5tFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_OGE5tVJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_OGE5sVJPEeiyW7NaN4qWdw" name="type" type="_OAQlkVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OGE5slJPEeiyW7NaN4qWdw" name="weight">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_OGE5s1JPEeiyW7NaN4qWdw" name="support">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_OGE5tlJPEeiyW7NaN4qWdw" type="_NUNX4FJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NUg54FJPEeiyW7NaN4qWdw" name="EuropeanAIPlayer">
                <ownedComment xmi:id="_OLiBiFJPEeiyW7NaN4qWdw">
                  <body>Objects of this class contains AI-information for a single European&#xD;
{@link Player} and is used for controlling this player.&#xD;
 *&#xD;
The method {@link #startWorking} gets called by the&#xD;
{@link AIInGameInputHandler} when it is this player's turn.</body>
                </ownedComment>
                <generalization xmi:id="_ODMk0FJPEeiyW7NaN4qWdw" general="_NSHGIFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJezAFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMfDtFJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJezAVJPEeiyW7NaN4qWdw" value="Logger.getLogger(EuropeanAIPlayer.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJezAlJPEeiyW7NaN4qWdw" name="buildingRange" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJezA1JPEeiyW7NaN4qWdw" value="5"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJezBFJPEeiyW7NaN4qWdw" name="cashInRange" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJezBVJPEeiyW7NaN4qWdw" value="20"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJfaEFJPEeiyW7NaN4qWdw" name="missionaryRange" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJfaEVJPEeiyW7NaN4qWdw" value="20"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJfaElJPEeiyW7NaN4qWdw" name="pioneeringRange" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJfaE1JPEeiyW7NaN4qWdw" value="10"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJfaFFJPEeiyW7NaN4qWdw" name="privateerRange" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJfaFVJPEeiyW7NaN4qWdw" value="1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJfaFlJPEeiyW7NaN4qWdw" name="scoutingRange" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJfaF1JPEeiyW7NaN4qWdw" value="20"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJfaGFJPEeiyW7NaN4qWdw" name="builderComparator" visibility="private" isLeaf="true" isStatic="true" type="_OAKe8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMfqwVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJgBIVJPEeiyW7NaN4qWdw" value="new Comparator&lt;AIUnit>() {&#xD;&#xA;            private int score(AIUnit a) {&#xD;&#xA;                Unit unit;&#xD;&#xA;                if (a == null || (unit = a.getUnit()) == null&#xD;&#xA;                    || BuildColonyMission.invalidReason(a) != null)&#xD;&#xA;                    return -1000;&#xD;&#xA;                int base = (!unit.hasDefaultRole()) ? 0&#xD;&#xA;                    : (unit.getSkillLevel() > 0) ? 100&#xD;&#xA;                    : 500 + 100 * unit.getSkillLevel();&#xD;&#xA;                if (unit.hasTile()) base += 50;&#xD;&#xA;                return base;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            @Override&#xD;&#xA;            public int compare(AIUnit a1, AIUnit a2) {&#xD;&#xA;                return score(a2) - score(a1);&#xD;&#xA;            }&#xD;&#xA;        }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJgBIlJPEeiyW7NaN4qWdw" name="pioneerComparator" isLeaf="true" isStatic="true" type="_OAKe8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMg44FJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJgoMVJPEeiyW7NaN4qWdw" value="new Comparator&lt;AIUnit>() {&#xD;&#xA;            private int score(AIUnit a) {&#xD;&#xA;                Unit unit;&#xD;&#xA;                return (a == null || (unit = a.getUnit()) == null) ? -1000&#xD;&#xA;                    : unit.getPioneerScore();&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            @Override&#xD;&#xA;            public int compare(AIUnit a1, AIUnit a2) {&#xD;&#xA;                return score(a2) - score(a1);&#xD;&#xA;            }&#xD;&#xA;        }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJgoMlJPEeiyW7NaN4qWdw" name="scoutComparator" isLeaf="true" isStatic="true" type="_OAKe8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMg441JPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJhPQVJPEeiyW7NaN4qWdw" value="new Comparator&lt;AIUnit>() {&#xD;&#xA;            private int score(AIUnit a) {&#xD;&#xA;                Unit unit;&#xD;&#xA;                return (a == null || (unit = a.getUnit()) == null) ? -1000&#xD;&#xA;                    : unit.getScoutScore();&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            @Override&#xD;&#xA;            public int compare(AIUnit a1, AIUnit a2) {&#xD;&#xA;                return score(a2) - score(a1);&#xD;&#xA;            }&#xD;&#xA;        }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJhPQlJPEeiyW7NaN4qWdw" name="liftBoycottCheatPercent" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJh2UFJPEeiyW7NaN4qWdw" name="equipScoutCheatPercent" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJh2UlJPEeiyW7NaN4qWdw" name="equipPioneerCheatPercent" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJh2VFJPEeiyW7NaN4qWdw" name="landUnitCheatPercent" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJidYVJPEeiyW7NaN4qWdw" name="offensiveLandUnitCheatPercent" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJidY1JPEeiyW7NaN4qWdw" name="offensiveNavalUnitCheatPercent" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJjEcFJPEeiyW7NaN4qWdw" name="transportNavalUnitCheatPercent" visibility="private" isStatic="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJjrgFJPEeiyW7NaN4qWdw" name="pioneerRole" visibility="private" isStatic="true" type="_OAWsMVJPEeiyW7NaN4qWdw" association="_OMhf8VJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJjrgVJPEeiyW7NaN4qWdw" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJjrg1JPEeiyW7NaN4qWdw" name="scoutRole" visibility="private" isStatic="true" type="_OAWsMVJPEeiyW7NaN4qWdw" association="_OMiHAVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJjrhFJPEeiyW7NaN4qWdw" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJjrhlJPEeiyW7NaN4qWdw" name="sessionRegister" visibility="private" isLeaf="true" type="_OBU8klJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMkjQFJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJkSkVJPEeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJkSk1JPEeiyW7NaN4qWdw" name="tipMap" visibility="private" isLeaf="true" type="_OBU8klJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMlxYFJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJk5oVJPEeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJk5o1JPEeiyW7NaN4qWdw" name="transportDemand" visibility="private" isLeaf="true" type="_OBU8klJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMlxY1JPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJlgsVJPEeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJmHwVJPEeiyW7NaN4qWdw" name="transportSupply" visibility="private" isLeaf="true" type="_NV5Z8FJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMmYcVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJmHwlJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJmHw1JPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJmHxVJPEeiyW7NaN4qWdw" name="goodsWishes" visibility="private" isLeaf="true" type="_OBU8klJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMm_gVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJmu0VJPEeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJnV4FJPEeiyW7NaN4qWdw" name="workerWishes" visibility="private" isLeaf="true" type="_OBU8klJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMnmkVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJnV4lJPEeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJn88VJPEeiyW7NaN4qWdw" name="wagonsNeeded" visibility="private" isLeaf="true" type="_OBU8klJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMoNoVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJn881JPEeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJokAVJPEeiyW7NaN4qWdw" name="badlyDefended" visibility="protected" isLeaf="true" type="_NQeHYFJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMo0sVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJokA1JPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJokBFJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJpLE1JPEeiyW7NaN4qWdw" name="nBuilders" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJpyIFJPEeiyW7NaN4qWdw" value="0"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJpyIlJPEeiyW7NaN4qWdw" name="nPioneers" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJpyI1JPEeiyW7NaN4qWdw" value="0"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJqZMVJPEeiyW7NaN4qWdw" name="nScouts" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJrAQFJPEeiyW7NaN4qWdw" value="0"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJrAQlJPEeiyW7NaN4qWdw" name="nNavalCarrier" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJrAQ1JPEeiyW7NaN4qWdw" value="0"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK_19VJPEeiyW7NaN4qWdw" name="EuropeanAIPlayer" specification="_OGbfAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK_19lJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK_191JPEeiyW7NaN4qWdw" name="player" type="_OBOO4lJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK_1-FJPEeiyW7NaN4qWdw" type="_NUg54FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, player);&#xD;
&#xD;
     uninitialized = getPlayer() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK_1-VJPEeiyW7NaN4qWdw" name="EuropeanAIPlayer" specification="_OGctIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK_1-lJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK_1-1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OK_1_FJPEeiyW7NaN4qWdw" type="_NUg54FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
&#xD;
     uninitialized = getPlayer() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK_1_VJPEeiyW7NaN4qWdw" name="initializeFromSpecification" specification="_OGdUMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK_1_lJPEeiyW7NaN4qWdw" name="spec" type="_OAX6UVJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>if (pioneerRole != null) return;&#xD;
     pioneerRole = spec.getRoleWithAbility(Ability.IMPROVE_TERRAIN, null);&#xD;
     scoutRole = spec.getRoleWithAbility(Ability.SPEAK_WITH_CHIEF, null);&#xD;
     liftBoycottCheatPercent&#xD;
         = spec.getInteger(GameOptions.LIFT_BOYCOTT_CHEAT);&#xD;
     equipScoutCheatPercent&#xD;
         = spec.getInteger(GameOptions.EQUIP_SCOUT_CHEAT);&#xD;
     equipPioneerCheatPercent&#xD;
         = spec.getInteger(GameOptions.EQUIP_PIONEER_CHEAT);&#xD;
     landUnitCheatPercent&#xD;
         = spec.getInteger(GameOptions.LAND_UNIT_CHEAT);&#xD;
     offensiveLandUnitCheatPercent&#xD;
         = spec.getInteger(GameOptions.OFFENSIVE_LAND_UNIT_CHEAT);&#xD;
     offensiveNavalUnitCheatPercent&#xD;
         = spec.getInteger(GameOptions.OFFENSIVE_NAVAL_UNIT_CHEAT);&#xD;
     transportNavalUnitCheatPercent&#xD;
         = spec.getInteger(GameOptions.TRANSPORT_NAVAL_UNIT_CHEAT);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK_1_1JPEeiyW7NaN4qWdw" name="initializeMissions" specification="_OHAGwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK_2AFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final AIMain aiMain = getAIMain();&#xD;
     List&lt;AIUnit> aiUnits = getAIUnits();&#xD;
     lb.add(&quot;\n  Initialize &quot;);&#xD;
     &#xD;
     // Find all the carriers with potential colony builders on board,&#xD;
     // give them missions.&#xD;
     final Map map = getGame().getMap();&#xD;
     final int maxRange = map.getWidth() + map.getHeight();&#xD;
     Location target;&#xD;
     Mission m;&#xD;
     TransportMission tm;&#xD;
     for (AIUnit aiCarrier : aiUnits) {&#xD;
         if (aiCarrier.hasMission()) continue;&#xD;
         Unit carrier = aiCarrier.getUnit();&#xD;
         if (!carrier.isNaval()) continue;&#xD;
         target = null;&#xD;
         for (Unit u : carrier.getUnitList()) {&#xD;
             AIUnit aiu = aiMain.getAIUnit(u);&#xD;
             for (int range = buildingRange; range &lt; maxRange;&#xD;
                  range += buildingRange) {&#xD;
                 target = BuildColonyMission.findTarget(aiu, range, false);&#xD;
                 if (target != null) break;&#xD;
             }&#xD;
             if (target == null) {&#xD;
                 throw new RuntimeException(&quot;Initial colony fail!&quot;);&#xD;
             }&#xD;
             if ((m = getBuildColonyMission(aiu, target)) != null) {&#xD;
                 lb.add(m, &quot;, &quot;);&#xD;
             }&#xD;
         }&#xD;
         // Initialize the carrier mission after the cargo units&#xD;
         // have a valid mission so that the transport list and&#xD;
         // mission target do not break.&#xD;
         tm = (TransportMission)getTransportMission(aiCarrier);&#xD;
         if (tm != null) {&#xD;
             lb.add(tm);&#xD;
             for (Unit u : carrier.getUnitList()) {&#xD;
                 AIUnit aiu = getAIMain().getAIUnit(u);&#xD;
                 if (aiu == null) continue;&#xD;
                 tm.queueTransportable(aiu, false, lb);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Put in some backup missions.&#xD;
     lb.mark();&#xD;
     for (AIUnit aiu : aiUnits) {&#xD;
         if (aiu.hasMission()) continue;&#xD;
         if ((m = getSimpleMission(aiu)) != null) lb.add(m, &quot;, &quot;);&#xD;
     }&#xD;
     if (lb.grew(&quot;\n  Backup: &quot;)) lb.shrink(&quot;, &quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OK_2AVJPEeiyW7NaN4qWdw" name="cheatGold" specification="_OHAt0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OK_2AlJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OK_2A1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     int gold = player.getGold();&#xD;
     if (gold &lt; amount) {&#xD;
         amount -= gold;&#xD;
         player.modifyGold(amount);&#xD;
         lb.add(&quot;added &quot;, amount, &quot; gold&quot;);&#xD;
     }&#xD;
     player.logCheat(amount + &quot; gold&quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLAdAFJPEeiyW7NaN4qWdw" name="cheat" specification="_OHAt01JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLAdAVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final AIMain aiMain = getAIMain();&#xD;
     if (!aiMain.getFreeColServer().getSinglePlayer()) return;&#xD;
&#xD;
     final Player player = getPlayer();&#xD;
     if (player.getPlayerType() != PlayerType.COLONIAL) return;&#xD;
     lb.mark();&#xD;
&#xD;
     final Specification spec = getSpecification();&#xD;
     final Game game = getGame();&#xD;
     final Market market = player.getMarket();&#xD;
     final Europe europe = player.getEurope();&#xD;
     final Random air = getAIRandom();&#xD;
     final List&lt;GoodsType> arrears = new ArrayList&lt;>();&#xD;
     if (market != null) {&#xD;
         arrears.addAll(spec.getGoodsTypeList().stream()&#xD;
             .filter(gt -> market.getArrears(gt) > 0)&#xD;
             .collect(Collectors.toList()));&#xD;
     }&#xD;
     final int nCheats = arrears.size() + 6; // 6 cheats + arrears&#xD;
     int[] randoms = randomInts(logger, &quot;cheats&quot;, air, 100, nCheats);&#xD;
     int cheatIndex = 0;&#xD;
&#xD;
     for (GoodsType goodsType : arrears) {&#xD;
         if (randoms[cheatIndex++] &lt; liftBoycottCheatPercent) {&#xD;
             market.setArrears(goodsType, 0);&#xD;
             // Just remove one goods party modifier (we can not&#xD;
             // currently identify which modifier applies to which&#xD;
             // goods type, but that is not worth fixing for the&#xD;
             // benefit of `temporary' cheat code).  If we do not&#xD;
             // do this, AI colonies accumulate heaps of party&#xD;
             // modifiers because of the cheat boycott removal.&#xD;
             findOne: for (Colony c : player.getColonies()) {&#xD;
                 for (Modifier m : c.getModifiers()) {&#xD;
                     if (Specification.COLONY_GOODS_PARTY_SOURCE == m.getSource()) {&#xD;
                         c.removeModifier(m);&#xD;
                         lb.add(&quot;lift-boycott at &quot;, c, &quot;, &quot;);&#xD;
                         player.logCheat(&quot;lift boycott at &quot; + c.getName());&#xD;
                         break findOne;&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 &#xD;
     if (!europe.isEmpty()&#xD;
         &amp;&amp; scoutsNeeded() > 0&#xD;
         &amp;&amp; randoms[cheatIndex++] &lt; equipScoutCheatPercent) {&#xD;
         for (Unit u : europe.getUnitList()) {&#xD;
             if (u.hasDefaultRole()&#xD;
                 &amp;&amp; u.hasAbility(Ability.CAN_BE_EQUIPPED)) {&#xD;
                 cheatGold(europe.priceGoods(u.getGoodsDifference(scoutRole, 1)), lb);&#xD;
                 if&#xD;
         (getAIUnit(u).equipForRole(spec.getRoleWithAbility(Ability.SPEAK_WITH_CHIEF, null))) {&#xD;
                     lb.add(&quot; to equip scout &quot;, u, &quot;, &quot;);&#xD;
                     player.logCheat(&quot;Equip scout &quot; + u.toShortString());&#xD;
                 }&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (!europe.isEmpty()&#xD;
         &amp;&amp; pioneersNeeded() > 0&#xD;
         &amp;&amp; randoms[cheatIndex++] &lt; equipPioneerCheatPercent) {&#xD;
         for (Unit u : europe.getUnitList()) {&#xD;
             if (u.hasDefaultRole()&#xD;
                 &amp;&amp; u.hasAbility(Ability.CAN_BE_EQUIPPED)) {&#xD;
                 cheatGold(europe.priceGoods(u.getGoodsDifference(pioneerRole, 1)), lb);&#xD;
                 if (getAIUnit(u).equipForRole(spec.getRoleWithAbility(Ability.IMPROVE_TERRAIN, null))) {&#xD;
                     lb.add(&quot; to equip pioneer &quot;, u, &quot;, &quot;);&#xD;
                     player.logCheat(&quot;Equip pioneer &quot; + u.toShortString());&#xD;
                 }&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (randoms[cheatIndex++] &lt; landUnitCheatPercent) {&#xD;
         WorkerWish bestWish = null;&#xD;
         int bestValue = Integer.MIN_VALUE;&#xD;
         for (UnitType ut : workerWishes.keySet()) {&#xD;
             List&lt;WorkerWish> wl = workerWishes.get(ut);&#xD;
             if (wl == null&#xD;
                 || wl.isEmpty()&#xD;
                 || ut == null&#xD;
                 || !ut.isAvailableTo(player)&#xD;
                 || europe.getUnitPrice(ut) == UNDEFINED) continue;&#xD;
             WorkerWish ww = wl.get(0);&#xD;
             if (bestValue &lt; ww.getValue()) {&#xD;
                 bestValue = ww.getValue();&#xD;
                 bestWish = ww;&#xD;
             }&#xD;
         }&#xD;
&#xD;
         int cost;&#xD;
         if (bestWish != null) {&#xD;
             cost = europe.getUnitPrice(bestWish.getUnitType());&#xD;
         } else if (player.getImmigration()&#xD;
             &lt; player.getImmigrationRequired() / 2) {&#xD;
             cost = player.getRecruitPrice();&#xD;
         } else {&#xD;
             cost = INFINITY;&#xD;
         }&#xD;
         if (cost != INFINITY) {&#xD;
             cheatGold(cost, lb);&#xD;
             AIUnit aiu;&#xD;
             if (bestWish == null) {&#xD;
                 if ((aiu = recruitAIUnitInEurope(-1)) != null) {&#xD;
                     // let giveNormalMissions look after the mission&#xD;
                     lb.add(&quot; to recruit &quot;, aiu.getUnit(), &quot;, &quot;);&#xD;
                 }&#xD;
             } else {&#xD;
                 if ((aiu = trainAIUnitInEurope(bestWish.getUnitType())) != null) {&#xD;
                     Mission m = getWishRealizationMission(aiu, bestWish);&#xD;
                     if (m != null) {&#xD;
                         lb.add(&quot; to train for &quot;, m, &quot;, &quot;);&#xD;
                     } else {&#xD;
                         lb.add(&quot; to train &quot;, aiu.getUnit(), &quot;, &quot;);&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
             if (aiu != null) player.logCheat(&quot;Make &quot; + aiu.getUnit());&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (game.getTurn().getNumber() > 300&#xD;
         &amp;&amp; player.isAtWar()&#xD;
         &amp;&amp; randoms[cheatIndex++] &lt; offensiveLandUnitCheatPercent) {&#xD;
         // Find a target to attack.&#xD;
         Location target = null;&#xD;
         // - collect enemies, prefer not to antagonize the strong or&#xD;
         //   crush the weak&#xD;
         List&lt;Player> enemies = new ArrayList&lt;>();&#xD;
         List&lt;Player> preferred = new ArrayList&lt;>();&#xD;
         for (Player p : game.getLivePlayers(player)) {&#xD;
             if (player.atWarWith(p)) {&#xD;
                 enemies.add(p);&#xD;
                 double strength = getStrengthRatio(p);&#xD;
                 if (strength &lt; 3.0/2.0 &amp;&amp; strength > 2.0/3.0) {&#xD;
                     preferred.add(p);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         if (!preferred.isEmpty()) {&#xD;
             enemies.clear();&#xD;
             enemies.addAll(preferred);&#xD;
         }&#xD;
         List&lt;Colony> colonies = player.getColonies();&#xD;
         // Few colonies?  Attack the weakest European port&#xD;
         if (colonies.size() &lt; 3) {&#xD;
             List&lt;Colony> targets = new ArrayList&lt;>();&#xD;
             for (Player p : enemies) {&#xD;
                 if (p.isEuropean()) targets.addAll(p.getColonies());&#xD;
             }&#xD;
             double targetScore = -1;&#xD;
             for (Colony c : targets) {&#xD;
                 if (c.isConnectedPort()) {&#xD;
                     double score = 100000.0 / c.getUnitCount();&#xD;
                     Building stockade = c.getStockade();&#xD;
                     score /= (stockade == null) ? 1.0&#xD;
                         : (stockade.getLevel() + 1.5);&#xD;
                     if (targetScore &lt; score) {&#xD;
                         targetScore = score;&#xD;
                         target = c;&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         // Otherwise attack something near a weak colony&#xD;
         if (target == null &amp;&amp; !colonies.isEmpty()) {&#xD;
             List&lt;AIColony> bad = new ArrayList&lt;>(getBadlyDefended());&#xD;
             if (bad.isEmpty()) bad.addAll(getAIColonies());&#xD;
             AIColony defend = getRandomMember(logger,&#xD;
                 &quot;AIColony to defend&quot;, bad, air);&#xD;
             Tile center = defend.getColony().getTile();&#xD;
             Tile t = game.getMap().searchCircle(center,&#xD;
                 GoalDeciders.getEnemySettlementGoalDecider(enemies),&#xD;
                 30);&#xD;
             if (t != null) target = t.getSettlement();&#xD;
         }&#xD;
         if (target != null) {&#xD;
             List&lt;Unit> mercs = ((ServerPlayer)player)&#xD;
                 .createUnits(player.getMonarch().getMercenaries(air),&#xD;
                              europe);&#xD;
             for (Unit u : mercs) {&#xD;
                 AIUnit aiu = getAIUnit(u);&#xD;
                 if (aiu == null) continue; // Can not happen&#xD;
                 player.logCheat(&quot;Enlist &quot; + aiu.getUnit());&#xD;
                 Mission m = getSeekAndDestroyMission(aiu, target);&#xD;
                 if (m != null) {&#xD;
                     lb.add(&quot;enlisted &quot;, m, &quot;, &quot;);&#xD;
                 } else {&#xD;
                     lb.add(&quot;enlisted &quot;, aiu.getUnit(), &quot;, &quot;);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
         &#xD;
     // Always cheat a new armed ship if the navy is destroyed,&#xD;
     // otherwise if the navy is below average the chance to cheat&#xD;
     // is proportional to how badly below average.&#xD;
     double naval = getNavalStrengthRatio();&#xD;
     int nNaval = (player.getUnitCount(true) == 0) ? 100&#xD;
         : (0.0f &lt; naval &amp;&amp; naval &lt; 0.5f)&#xD;
         ? (int)(naval * offensiveNavalUnitCheatPercent)&#xD;
         : -1;&#xD;
     List&lt;RandomChoice&lt;UnitType>> rc = new ArrayList&lt;>();&#xD;
     if (randoms[cheatIndex++] &lt; nNaval) {&#xD;
         rc.clear();&#xD;
         for (UnitType unitType : spec.getUnitTypeList()) {&#xD;
             if (unitType.hasAbility(Ability.NAVAL_UNIT)&#xD;
                 &amp;&amp; unitType.isAvailableTo(player)&#xD;
                 &amp;&amp; unitType.hasPrice()&#xD;
                 &amp;&amp; unitType.isOffensive()) {&#xD;
                 int weight = 100000 / europe.getUnitPrice(unitType);&#xD;
                 rc.add(new RandomChoice&lt;>(unitType, weight));&#xD;
             }&#xD;
         }&#xD;
         cheatUnit(rc, &quot;offensive-naval&quot;, lb);&#xD;
     }&#xD;
     // Only cheat carriers if they have work to do.&#xD;
     int nCarrier = (nNavalCarrier > 0) ? transportNavalUnitCheatPercent&#xD;
         : -1;&#xD;
     if (randoms[cheatIndex++] &lt; nCarrier) {&#xD;
         rc.clear();&#xD;
         for (UnitType unitType : spec.getUnitTypeList()) {&#xD;
             if (unitType.hasAbility(Ability.NAVAL_UNIT)&#xD;
                 &amp;&amp; unitType.isAvailableTo(player)&#xD;
                 &amp;&amp; unitType.hasPrice()&#xD;
                 &amp;&amp; unitType.getSpace() > 0) {&#xD;
                 int weight = 100000 / europe.getUnitPrice(unitType);&#xD;
                 rc.add(new RandomChoice&lt;>(unitType, weight));&#xD;
             }&#xD;
         }&#xD;
         cheatUnit(rc, &quot;transport-naval&quot;, lb);&#xD;
     }&#xD;
&#xD;
     if (lb.grew(&quot;\n  Cheats: &quot;)) lb.shrink(&quot;, &quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLAdAlJPEeiyW7NaN4qWdw" name="cheatUnit" specification="_OHBU4VJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLAdA1JPEeiyW7NaN4qWdw" name="rc" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLAdBFJPEeiyW7NaN4qWdw" name="what">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLAdBVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLAdBlJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>UnitType unitToPurchase&#xD;
         = RandomChoice.getWeightedRandom(logger, &quot;Cheat which unit&quot;,&#xD;
                                          rc, getAIRandom());&#xD;
     return (unitToPurchase == null) ? null&#xD;
         : cheatUnit(unitToPurchase, what, lb);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLAdB1JPEeiyW7NaN4qWdw" name="cheatUnit" specification="_OHCjAVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLAdCFJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLAdCVJPEeiyW7NaN4qWdw" name="what">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLAdClJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLAdC1JPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     final Europe europe = player.getEurope();&#xD;
     int cost = europe.getUnitPrice(unitType);&#xD;
     cheatGold(cost, lb);&#xD;
     AIUnit result = trainAIUnitInEurope(unitType);&#xD;
     lb.add(&quot; to build &quot;, what, &quot; &quot;, unitType.getSuffix(),&#xD;
         ((result != null) ? &quot;&quot; : &quot;(failed)&quot;), &quot;, &quot;);&#xD;
     if (result == null) return null;&#xD;
     player.logCheat(&quot;Build &quot; + result.getUnit());&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLAdDFJPEeiyW7NaN4qWdw" name="allocateTransportables" specification="_OHDxIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLAdDVJPEeiyW7NaN4qWdw" name="transportables" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLAdDlJPEeiyW7NaN4qWdw" name="missions" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLAdD1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>if (transportables.isEmpty()) return;&#xD;
     if (missions.isEmpty()) return;&#xD;
&#xD;
     lb.add(&quot;\n  Allocate Transport cargo=&quot;, transportables.size(),&#xD;
            &quot; carriers=&quot;, missions.size());&#xD;
     //for (TransportableAIObject t : urgent) lb.add(&quot; &quot;, t);&#xD;
     //lb.add(&quot; ->&quot;);&#xD;
     //for (Mission m : missions) lb.add(&quot; &quot;, m);&#xD;
&#xD;
     LogBuilder lb2 = new LogBuilder(0);&#xD;
     TransportMission best;&#xD;
     float bestValue;&#xD;
     boolean present;&#xD;
     int i = 0;&#xD;
     outer: while (i &lt; transportables.size()) {&#xD;
         if (missions.isEmpty()) break;&#xD;
         TransportableAIObject t = transportables.get(i);&#xD;
         lb.add(&quot; for &quot;, t);&#xD;
         best = null;&#xD;
         bestValue = 0.0f;&#xD;
         present = false;&#xD;
         for (TransportMission tm : missions) {&#xD;
             if (!tm.spaceAvailable(t)) continue;&#xD;
             Cargo cargo = tm.makeCargo(t, lb2);&#xD;
             if (cargo == null) { // Serious problem with this cargo&#xD;
                 transportables.remove(i);&#xD;
                 continue outer;&#xD;
             }&#xD;
             int turns = cargo.getTurns();&#xD;
             float value;&#xD;
             if (turns == 0) {&#xD;
                 value = tm.destinationCapacity();&#xD;
                 if (!present) bestValue = 0.0f; // reset&#xD;
                 present = true;&#xD;
             } else {&#xD;
                 value = (present) ? -1.0f&#xD;
                     : (float)t.getTransportPriority() / turns;&#xD;
             }&#xD;
             if (bestValue &lt; value) {&#xD;
                 bestValue = value;&#xD;
                 best = tm;&#xD;
             }&#xD;
         }&#xD;
         if (best == null) {&#xD;
             lb.add(&quot; nothing found&quot;);&#xD;
         } else {&#xD;
             lb.add(&quot; &quot;, best.getUnit(), &quot; chosen&quot;);&#xD;
             if (best.queueTransportable(t, false, lb)) {&#xD;
                 claimTransportable(t);&#xD;
                 if (best.destinationCapacity() &lt;= 0) {&#xD;
                     missions.remove(best);&#xD;
                 }&#xD;
             } else {&#xD;
                 missions.remove(best);&#xD;
             }&#xD;
         }&#xD;
         i++;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLAdEFJPEeiyW7NaN4qWdw" name="bringGifts" specification="_OHE_QVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLAdEVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>return;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLAdElJPEeiyW7NaN4qWdw" name="demandTribute" specification="_OHFmUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLAdE1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>return;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLAdFFJPEeiyW7NaN4qWdw" name="buildTipMap" specification="_OHGNYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLAdFVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>tipMap.clear();&#xD;
     for (AIColony aic : getAIColonies()) {&#xD;
         for (TileImprovementPlan tip : aic.getTileImprovementPlans()) {&#xD;
             if (tip == null || tip.isComplete()) {&#xD;
                 aic.removeTileImprovementPlan(tip);&#xD;
             } else if (tip.getPioneer() != null) {&#xD;
                 ; // Do nothing, remove when complete&#xD;
             } else if (!tip.validate()) {&#xD;
                 aic.removeTileImprovementPlan(tip);&#xD;
                 tip.dispose();&#xD;
             } else if (tip.getTarget() == null) {&#xD;
                 logger.warning(&quot;No target for tip: &quot; + tip);&#xD;
             } else {&#xD;
                 TileImprovementPlan other = tipMap.get(tip.getTarget());&#xD;
                 if (other == null || other.getValue() &lt; tip.getValue()) {&#xD;
                     tipMap.put(tip.getTarget(), tip);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (!tipMap.isEmpty()) {&#xD;
         lb.add(&quot;\n  Improvements:&quot;);&#xD;
         for (Tile t : tipMap.keySet()) {&#xD;
             TileImprovementPlan tip = tipMap.get(t);&#xD;
             AIUnit pioneer = tip.getPioneer();&#xD;
             lb.add(&quot; &quot;, t, &quot;=&quot;, tip.getType().getSuffix());&#xD;
             if (pioneer != null) lb.add(&quot;/&quot;, pioneer.getUnit());&#xD;
         }&#xD;
     }                &#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLAdFlJPEeiyW7NaN4qWdw" name="updateTipMap" specification="_ODF3IFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLAdF1JPEeiyW7NaN4qWdw" name="aic" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>for (TileImprovementPlan tip : aic.getTileImprovementPlans()) {&#xD;
         tipMap.put(tip.getTarget(), tip);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBEEFJPEeiyW7NaN4qWdw" name="getBestPlan" specification="_OHG0cFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBEEVJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBEElJPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (tipMap == null) ? null : tipMap.get(tile);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBEE1JPEeiyW7NaN4qWdw" name="getBestPlanTile" specification="_OHG0c1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBEFFJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBEFVJPEeiyW7NaN4qWdw" type="_OAYhYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>TileImprovementPlan best = null;&#xD;
     int bestValue = Integer.MIN_VALUE;&#xD;
     for (Tile t : colony.getOwnedTiles()) {&#xD;
         TileImprovementPlan tip = tipMap.get(t);&#xD;
         if (tip != null &amp;&amp; tip.getValue() > bestValue) {&#xD;
             bestValue = tip.getValue();&#xD;
             best = tip;&#xD;
         }&#xD;
     }&#xD;
     return (best == null) ? null : best.getTarget();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBEFlJPEeiyW7NaN4qWdw" name="removeTileImprovementPlan" specification="_ODF3IlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBEF1JPEeiyW7NaN4qWdw" name="plan" type="_NVvB4FJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>if (plan == null) return;&#xD;
     if (plan.getTarget() != null) tipMap.remove(plan.getTarget());&#xD;
     for (AIColony aic : getAIColonies()) {&#xD;
         if (aic.removeTileImprovementPlan(plan)) break;&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBEGFJPEeiyW7NaN4qWdw" name="updateTransport" specification="_OHHbgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBEGVJPEeiyW7NaN4qWdw" name="aiu" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBEGlJPEeiyW7NaN4qWdw" name="oldTarget" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBEG1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final AIUnit aiCarrier = aiu.getTransport();&#xD;
     final Mission newMission = aiu.getMission();&#xD;
     final Location newTarget = (newMission == null) ? null&#xD;
         : newMission.getTarget();&#xD;
     TransportMission tm;&#xD;
     if (aiCarrier != null&#xD;
         &amp;&amp; (tm = aiCarrier.getMission(TransportMission.class)) != null&#xD;
         &amp;&amp; !Map.isSameLocation(oldTarget, newTarget)) {&#xD;
         if (aiu.getUnit().getLocation() != aiCarrier.getUnit()) {&#xD;
             lb.add(&quot;, drop transport &quot;, aiCarrier.getUnit());&#xD;
             aiu.dropTransport();&#xD;
         } else if (newTarget == null) {&#xD;
             tm.dumpTransportable(aiu, lb);&#xD;
         } else {&#xD;
             tm.requeueTransportable(aiu, lb);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBEHFJPEeiyW7NaN4qWdw" name="requestsTransport" specification="_ODGeMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBEHVJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBEHlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return t.getTransport() == null&#xD;
         &amp;&amp; t.getTransportDestination() != null&#xD;
         &amp;&amp; t.getTransportSource() != null&#xD;
         &amp;&amp; !(t.getLocation() instanceof Unit);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBEH1JPEeiyW7NaN4qWdw" name="checkTransport" specification="_ODGeM1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBEIFJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBEIVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>AIUnit aiCarrier = t.getTransport();&#xD;
     if (aiCarrier == null) return false;&#xD;
     TransportMission tm = aiCarrier.getMission(TransportMission.class);&#xD;
     if (tm != null &amp;&amp; tm.isTransporting(t)) return true;&#xD;
     t.changeTransport(null);&#xD;
     return false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBrIFJPEeiyW7NaN4qWdw" name="getNeededWagons" specification="_OHICkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBrIVJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBrIlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (tile != null) {&#xD;
         int contig = tile.getContiguity();&#xD;
         if (contig > 0) {&#xD;
             Integer i = wagonsNeeded.get(contig);&#xD;
             if (i != null) return i;&#xD;
         }&#xD;
     }&#xD;
     return 0;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBrI1JPEeiyW7NaN4qWdw" name="changeNeedWagon" specification="_OHIpoFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBrJFJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBrJVJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (tile == null) return;&#xD;
     int contig = tile.getContiguity();&#xD;
     if (contig > 0) {&#xD;
         Integer i = wagonsNeeded.get(contig);&#xD;
         if (i == null) {&#xD;
             if (amount == 0) wagonsNeeded.put(contig, 0);&#xD;
         } else {&#xD;
             wagonsNeeded.put(contig, i + amount);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBrJlJPEeiyW7NaN4qWdw" name="buildTransportMaps" specification="_OHIpo1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBrJ1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>transportDemand.clear();&#xD;
     transportSupply.clear();&#xD;
     wagonsNeeded.clear();&#xD;
     nNavalCarrier = 0;&#xD;
&#xD;
     // Prime the wagonsNeeded map with contiguities with a connected port&#xD;
     for (AIColony aic : getAIColonies()) {&#xD;
         Colony colony = aic.getColony();&#xD;
         if (colony.isConnectedPort()) changeNeedWagon(colony.getTile(), 0);&#xD;
     }&#xD;
&#xD;
     for (AIUnit aiu : getAIUnits()) {&#xD;
         if (aiu.hasMission() &amp;&amp; !aiu.getMission().isValid()) continue;&#xD;
         Unit u = aiu.getUnit();&#xD;
         if (u.isCarrier()) {&#xD;
             if (u.isNaval()) {&#xD;
                 nNavalCarrier--;&#xD;
             } else {&#xD;
                 changeNeedWagon(u.getTile(), -1);&#xD;
             }&#xD;
         } else {&#xD;
             checkTransport(aiu);&#xD;
             if (requestsTransport(aiu)) {&#xD;
                 transportSupply.add(aiu);&#xD;
                 aiu.incrementTransportPriority();&#xD;
                 nNavalCarrier++;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     for (AIColony aic : getAIColonies()) {&#xD;
         for (AIGoods aig : aic.getExportGoods()) {&#xD;
             checkTransport(aig);&#xD;
             if (requestsTransport(aig)) {&#xD;
                 transportSupply.add(aig);&#xD;
                 aig.incrementTransportPriority();&#xD;
                 Location src = aig.getTransportSource();&#xD;
                 Location dst = aig.getTransportDestination();&#xD;
                 if (!Map.isSameContiguity(src, dst)) {&#xD;
                     nNavalCarrier++;&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         Colony colony = aic.getColony();&#xD;
         if (!colony.isConnectedPort()) {&#xD;
             changeNeedWagon(colony.getTile(), 1);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     for (Wish w : getWishes()) {&#xD;
         TransportableAIObject t = w.getTransportable();&#xD;
         if (t != null &amp;&amp; t.getTransport() == null&#xD;
             &amp;&amp; t.getTransportDestination() != null) {&#xD;
             Location loc = Location.upLoc(t.getTransportDestination());&#xD;
             appendToMapList(transportDemand, loc, w);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (!transportSupply.isEmpty()) {&#xD;
         lb.add(&quot;\n  Transport Supply:&quot;);&#xD;
         for (TransportableAIObject t : transportSupply) {&#xD;
             lb.add(&quot; &quot;, t.getTransportPriority(), &quot;+&quot;, t);&#xD;
         }&#xD;
     }&#xD;
     if (!transportDemand.isEmpty()) {&#xD;
         lb.add(&quot;\n  Transport Demand:&quot;);&#xD;
         for (Location ld : transportDemand.keySet()) {&#xD;
             lb.add(&quot;\n    &quot;, ld, &quot;[&quot;);&#xD;
             for (Wish w : transportDemand.get(ld)) lb.add(&quot; &quot;, w);&#xD;
             lb.add(&quot; ]&quot;);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBrKFJPEeiyW7NaN4qWdw" name="getUrgentTransportables" specification="_NUmZcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBrKVJPEeiyW7NaN4qWdw" type="_NV5Z8FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLBrKlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;TransportableAIObject> urgent = new ArrayList&lt;>(transportSupply);&#xD;
     // Do not let the list exceed 10% of all transports&#xD;
     Collections.sort(urgent);&#xD;
     int urge = urgent.size();&#xD;
     urge = Math.max(2, (urge + 5) / 10);&#xD;
     while (urgent.size() > urge) urgent.remove(urge);&#xD;
     return urgent;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBrK1JPEeiyW7NaN4qWdw" name="claimTransportable" specification="_ODHFQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBrLFJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBrLVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return transportSupply.remove(t);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBrLlJPEeiyW7NaN4qWdw" name="rearrangeColonies" specification="_OHJQsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBrL1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBrMFJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLBrMVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Set&lt;AIUnit> workers = new HashSet&lt;>();&#xD;
     for (AIColony aic : getAIColonies()) {&#xD;
         workers.addAll(aic.rearrangeWorkers(lb));&#xD;
     }&#xD;
     return workers;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLBrMlJPEeiyW7NaN4qWdw" name="suppressEuropeanTrade" specification="_OHJ3wlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLBrM1JPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLBrNFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     final Europe europe = player.getEurope();&#xD;
&#xD;
     lb.add(&quot;  Suppressing trade in &quot;, type.getSuffix());&#xD;
     List&lt;Unit> units = new ArrayList&lt;>(europe.getUnitList());&#xD;
     units.addAll(player.getHighSeas().getUnitList());&#xD;
     for (Unit u : units) {&#xD;
         int amount;&#xD;
         AIUnit aiu;&#xD;
         if (u.isCarrier() &amp;&amp; (amount = u.getGoodsCount(type)) > 0&#xD;
             &amp;&amp; (aiu = getAIUnit(u)) != null&#xD;
             &amp;&amp; AIMessage.askUnloadGoods(type, amount, aiu)) {&#xD;
             lb.add(&quot;, &quot;, u, &quot; sold &quot;, amount);&#xD;
         }&#xD;
     }&#xD;
     for (AIUnit aiu : getAIUnits()) {&#xD;
         TransportMission tm = aiu.getMission(TransportMission.class);&#xD;
         if (tm != null) tm.suppressEuropeanTrade(type, lb);&#xD;
     }           &#xD;
&#xD;
     int n = 0;&#xD;
     List&lt;GoodsWish> wishes = goodsWishes.get(type);&#xD;
     if (wishes != null) {&#xD;
         for (GoodsWish gw : wishes) {&#xD;
             if (gw.getGoodsType() == type&#xD;
                 &amp;&amp; gw.getDestination() == europe) {&#xD;
                 if (gw.getTransportable() instanceof AIGoods) {&#xD;
                     AIGoods aig = (AIGoods)gw.getTransportable();&#xD;
                     consumeGoodsWish(aig, gw);&#xD;
                     aig.setTransportDestination(null);&#xD;
                 }&#xD;
                 gw.dispose();&#xD;
                 n++;&#xD;
             }&#xD;
         }&#xD;
         if (n > 0) lb.add(&quot;, dropped &quot;, n, &quot; goods wishes&quot;);&#xD;
     }&#xD;
     lb.add(&quot;.&quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLCSMFJPEeiyW7NaN4qWdw" name="getWorkerWishesAt" specification="_OHKe0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLCSMVJPEeiyW7NaN4qWdw" name="loc" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLCSMlJPEeiyW7NaN4qWdw" name="type" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLCSM1JPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLCSNFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;Wish> demand = transportDemand.get(Location.upLoc(loc));&#xD;
     if (demand == null) return Collections.&lt;WorkerWish>emptyList();&#xD;
     List&lt;WorkerWish> result = new ArrayList&lt;>();&#xD;
     for (Wish w : demand) {&#xD;
         if (w instanceof WorkerWish&#xD;
             &amp;&amp; ((WorkerWish)w).getUnitType() == type) {&#xD;
             result.add((WorkerWish)w);&#xD;
         }&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLCSNVJPEeiyW7NaN4qWdw" name="getGoodsWishesAt" specification="_OHLF4lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLCSNlJPEeiyW7NaN4qWdw" name="loc" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLCSN1JPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLCSOFJPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLCSOVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;Wish> demand = transportDemand.get(Location.upLoc(loc));&#xD;
     if (demand == null) return Collections.&lt;GoodsWish>emptyList();&#xD;
     List&lt;GoodsWish> result = new ArrayList&lt;>();&#xD;
     for (Wish w : demand) {&#xD;
         if (w instanceof GoodsWish&#xD;
             &amp;&amp; ((GoodsWish)w).getGoodsType() == type) {&#xD;
             result.add((GoodsWish)w);&#xD;
         }&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLCSOlJPEeiyW7NaN4qWdw" name="getBestWorkerWish" specification="_OHMUAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLCSO1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLCSPFJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLCSPVJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>List&lt;WorkerWish> wishes = workerWishes.get(unitType);&#xD;
     if (wishes == null) return null;&#xD;
&#xD;
     final Unit carrier = aiUnit.getUnit();&#xD;
     WorkerWish carried = null;&#xD;
     WorkerWish other = null;&#xD;
     double bestCarriedValue = -1.0, bestOtherValue = -1.0;&#xD;
     for (WorkerWish w : wishes) {&#xD;
         int turns = carrier.getTurnsToReach(w.getDestination());&#xD;
         if (turns &lt; Unit.MANY_TURNS) {&#xD;
             if (bestCarriedValue &lt; (double)w.getValue() / turns) {&#xD;
                 bestCarriedValue = (double)w.getValue() / turns;&#xD;
                 carried = w;&#xD;
             }&#xD;
         } else {&#xD;
             if (bestOtherValue &lt; w.getValue()) {&#xD;
                 bestOtherValue = w.getValue();&#xD;
                 other = w;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return (carried != null) ? carried : (other != null) ? other : null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLCSPlJPEeiyW7NaN4qWdw" name="getBestGoodsWish" specification="_OHM7EFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLCSP1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLCSQFJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLCSQVJPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>List&lt;GoodsWish> wishes = goodsWishes.get(goodsType);&#xD;
     if (wishes == null) return null;&#xD;
&#xD;
     final Unit carrier = aiUnit.getUnit();&#xD;
     double bestValue = 0.0f;&#xD;
     GoodsWish best = null;&#xD;
     for (GoodsWish w : wishes) {&#xD;
         int turns = carrier.getTurnsToReach(carrier.getLocation(),&#xD;
                                             w.getDestination());&#xD;
         if (turns >= Unit.MANY_TURNS) continue;&#xD;
         double value = (double)w.getValue() / turns;&#xD;
         if (bestValue &lt; value) {&#xD;
             bestValue = value;&#xD;
             best = w;&#xD;
         }&#xD;
     }&#xD;
     return best;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLCSQlJPEeiyW7NaN4qWdw" name="buildWishMaps" specification="_OHM7FFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLCSQ1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>for (UnitType unitType : getSpecification().getUnitTypeList()) {&#xD;
         List&lt;WorkerWish> wl = workerWishes.get(unitType);&#xD;
         if (wl == null) {&#xD;
             workerWishes.put(unitType, new ArrayList&lt;WorkerWish>());&#xD;
         } else {&#xD;
             wl.clear();&#xD;
         }&#xD;
     }&#xD;
     for (GoodsType goodsType : getSpecification().getStorableGoodsTypeList()) {&#xD;
         List&lt;GoodsWish> gl = goodsWishes.get(goodsType);&#xD;
         if (gl == null) {&#xD;
             goodsWishes.put(goodsType, new ArrayList&lt;GoodsWish>());&#xD;
         } else {&#xD;
             gl.clear();&#xD;
         }&#xD;
     }&#xD;
&#xD;
     for (Wish w : getWishes()) {&#xD;
         if (w instanceof WorkerWish) {&#xD;
             WorkerWish ww = (WorkerWish)w;&#xD;
             if (ww.getTransportable() == null) {&#xD;
                 appendToMapList(workerWishes, ww.getUnitType(), ww);&#xD;
             }&#xD;
         } else if (w instanceof GoodsWish) {&#xD;
             GoodsWish gw = (GoodsWish)w;&#xD;
             if (gw.getDestination() instanceof Colony) {&#xD;
                 appendToMapList(goodsWishes, gw.getGoodsType(), gw);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (!workerWishes.isEmpty()) {&#xD;
         lb.add(&quot;\n  Wishes (workers):&quot;);&#xD;
         for (UnitType ut : workerWishes.keySet()) {&#xD;
             List&lt;WorkerWish> wl = workerWishes.get(ut);&#xD;
             if (!wl.isEmpty()) {&#xD;
                 lb.add(&quot;\n    &quot;, ut.getSuffix(), &quot;:&quot;);&#xD;
                 for (WorkerWish ww : wl) {&#xD;
                     lb.add(&quot; &quot;, ww.getDestination(),&#xD;
                            &quot;(&quot;, ww.getValue(), &quot;)&quot;);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (!goodsWishes.isEmpty()) {&#xD;
         lb.add(&quot;\n  Wishes (goods):&quot;);&#xD;
         for (GoodsType gt : goodsWishes.keySet()) {&#xD;
             List&lt;GoodsWish> gl = goodsWishes.get(gt);&#xD;
             if (!gl.isEmpty()) {&#xD;
                 lb.add(&quot;\n    &quot;, gt.getSuffix(), &quot;:&quot;);&#xD;
                 for (GoodsWish gw : gl) {&#xD;
                     lb.add(&quot; &quot;, gw.getDestination(),&#xD;
                            &quot;(&quot;, gw.getValue(), &quot;)&quot;);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLCSRFJPEeiyW7NaN4qWdw" name="completeWish" specification="_ODHsUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLCSRVJPEeiyW7NaN4qWdw" name="w" type="_NWKfsFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>if (w instanceof WorkerWish) {&#xD;
         WorkerWish ww = (WorkerWish)w;&#xD;
         List&lt;WorkerWish> wl = workerWishes.get(ww.getUnitType());&#xD;
         if (wl != null) wl.remove(ww);&#xD;
     } else if (w instanceof GoodsWish) {&#xD;
         GoodsWish gw = (GoodsWish)w;&#xD;
         List&lt;GoodsWish> gl = goodsWishes.get(gw.getGoodsType());&#xD;
         if (gl != null) gl.remove(gw);&#xD;
     } else {&#xD;
         throw new IllegalStateException(&quot;Bogus wish: &quot; + w);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLCSRlJPEeiyW7NaN4qWdw" name="consumeWorkerWish" specification="_ODITYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLCSR1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLCSSFJPEeiyW7NaN4qWdw" name="ww" type="_NWU3wFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Unit unit = aiUnit.getUnit();&#xD;
     List&lt;WorkerWish> wwL = workerWishes.get(unit.getType());&#xD;
     wwL.remove(ww);&#xD;
     List&lt;Wish> wl = transportDemand.get(ww.getDestination());&#xD;
     if (wl != null) wl.remove(ww);&#xD;
     ww.setTransportable(aiUnit);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLCSSVJPEeiyW7NaN4qWdw" name="consumeGoodsWish" specification="_ODITY1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLCSSlJPEeiyW7NaN4qWdw" name="aig" type="_NQ4XEFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLCSS1JPEeiyW7NaN4qWdw" name="gw" type="_NVE6kFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Goods goods = aig.getGoods();&#xD;
     List&lt;GoodsWish> gwL = goodsWishes.get(goods.getType());&#xD;
     gwL.remove(gw);&#xD;
     List&lt;Wish> wl = transportDemand.get(gw.getDestination());&#xD;
     if (wl != null) wl.remove(gw);&#xD;
     gw.setTransportable(aig);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLCSTFJPEeiyW7NaN4qWdw" name="buildersNeeded" specification="_NUnnkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLCSTVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Player player = getPlayer();&#xD;
     if (!player.canBuildColonies()) return 0;&#xD;
&#xD;
     int nColonies = 0, nPorts = 0, nWorkers = 0, nEuropean = 0;&#xD;
     for (Settlement settlement : player.getSettlements()) {&#xD;
         nColonies++;&#xD;
         if (settlement.isConnectedPort()) nPorts++;&#xD;
         for (Unit u : settlement.getUnitList()) {&#xD;
             if (u.isPerson()) nWorkers++;&#xD;
         }&#xD;
         for (Unit u : settlement.getTile().getUnitList()) {&#xD;
             if (u.isPerson()) nWorkers++;&#xD;
         }&#xD;
     }&#xD;
     Europe europe = player.getEurope();&#xD;
     if (europe != null) {&#xD;
         for (Unit u : europe.getUnitList()) {&#xD;
             if (u.isPerson()) nEuropean++;&#xD;
         }&#xD;
     }&#xD;
         &#xD;
     // If would be good to have at least two colonies, and at least&#xD;
     // one port.  After that, determine the ratio of workers to colonies&#xD;
     // (which should be the average colony size), and if that is above&#xD;
     // a threshold, send out another colonist.&#xD;
     // The threshold probably should be configurable.  2 is too&#xD;
     // low IMHO as it makes a lot of brittle colonies, 3 is too&#xD;
     // high at least initially as it makes it hard for the initial&#xD;
     // colonies to become substantial.  For now, arbitrarily choose e.&#xD;
     return (nColonies == 0 || nPorts == 0) ? 2&#xD;
         : ((nPorts &lt;= 1) &amp;&amp; (nWorkers + nEuropean) >= 3) ? 1&#xD;
         : ((double)(nWorkers + nEuropean) / nColonies > Math.E) ? 1&#xD;
         : 0;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLDgUFJPEeiyW7NaN4qWdw" name="pioneersNeeded" specification="_NUnnklJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLDgUVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (tipMap.size() + 1) / 2;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLDgUlJPEeiyW7NaN4qWdw" name="scoutsNeeded" specification="_NUnnlFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLDgU1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return 3 - (getGame().getTurn().getNumber() / 100);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLDgVFJPEeiyW7NaN4qWdw" name="recruitAIUnitInEurope" specification="_NUoOoVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLDgVVJPEeiyW7NaN4qWdw" name="slot">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLDgVlJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>AIUnit aiUnit = null;&#xD;
     Europe europe = getPlayer().getEurope();&#xD;
     if (europe == null) return null;&#xD;
     int n = europe.getUnitCount();&#xD;
     final String selectAbility = Ability.SELECT_RECRUIT;&#xD;
     if (!Europe.MigrationType.validMigrantSlot(slot)) {&#xD;
         slot = (getPlayer().hasAbility(selectAbility))&#xD;
             ? Europe.MigrationType.getDefaultSlot()&#xD;
             : Europe.MigrationType.getUnspecificSlot();&#xD;
     }&#xD;
     if (AIMessage.askEmigrate(this, slot)&#xD;
         &amp;&amp; europe.getUnitCount() == n+1) {&#xD;
         aiUnit = getAIUnit(europe.getUnitList().get(n));&#xD;
         if (aiUnit != null) addAIUnit(aiUnit);&#xD;
     }&#xD;
     return aiUnit;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLDgV1JPEeiyW7NaN4qWdw" name="trainAIUnitInEurope" specification="_OHNiIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLDgWFJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLDgWVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (unitType==null) {&#xD;
         throw new IllegalArgumentException(&quot;Invalid UnitType.&quot;);&#xD;
     }&#xD;
&#xD;
     AIUnit aiUnit = null;&#xD;
     Europe europe = getPlayer().getEurope();&#xD;
     if (europe == null) return null;&#xD;
     int n = europe.getUnitCount();&#xD;
&#xD;
     if (AIMessage.askTrainUnitInEurope(this, unitType)&#xD;
         &amp;&amp; europe.getUnitCount() == n+1) {&#xD;
         aiUnit = getAIUnit(europe.getUnitList().get(n));&#xD;
         if (aiUnit != null) addAIUnit(aiUnit);&#xD;
     }&#xD;
     return aiUnit;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLDgWlJPEeiyW7NaN4qWdw" name="getWishes" specification="_NUoOo1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLDgW1JPEeiyW7NaN4qWdw" type="_NWKfsFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLDgXFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;Wish> wishes = new ArrayList&lt;>();&#xD;
     for (AIColony aic : getAIColonies()) {&#xD;
         wishes.addAll(aic.getWishes());&#xD;
     }&#xD;
     Collections.sort(wishes);&#xD;
     return wishes;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLDgXVJPEeiyW7NaN4qWdw" name="determineStances" specification="_OHOJMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLDgXlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final ServerPlayer serverPlayer = (ServerPlayer)getPlayer();&#xD;
     lb.mark();&#xD;
&#xD;
     for (Player p : getGame().getLivePlayers(serverPlayer)) {&#xD;
         Stance newStance = determineStance(p);&#xD;
         if (newStance != serverPlayer.getStance(p)) {&#xD;
             if (newStance == Stance.WAR &amp;&amp; peaceHolds(p)) {&#xD;
                 ; // Peace treaty holds for now&#xD;
             } else {&#xD;
                 getAIMain().getFreeColServer().getInGameController()&#xD;
                     .changeStance(serverPlayer, newStance,&#xD;
                                   (ServerPlayer)p, true);&#xD;
                 lb.add(&quot; &quot;, p.getDebugName(), &quot;->&quot;, newStance, &quot;, &quot;);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (lb.grew(&quot;\n  Stance changes:&quot;)) lb.shrink(&quot;, &quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLDgX1JPEeiyW7NaN4qWdw" name="peaceHolds" specification="_OHOJMlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLDgYFJPEeiyW7NaN4qWdw" name="p" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLDgYVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     final Turn turn = getGame().getTurn();&#xD;
     final double peaceProb = getSpecification()&#xD;
         .getInteger(GameOptions.PEACE_PROBABILITY) / 100.0;&#xD;
&#xD;
     int peaceTurn = -1;&#xD;
     for (HistoryEvent h : player.getHistory()) {&#xD;
         if (p.getId().equals(h.getPlayerId())&#xD;
             &amp;&amp; h.getTurn().getNumber() > peaceTurn) {&#xD;
             switch (h.getEventType()) {&#xD;
             case MAKE_PEACE: case FORM_ALLIANCE:&#xD;
                 peaceTurn = h.getTurn().getNumber();&#xD;
                 break;&#xD;
             case DECLARE_WAR:&#xD;
                 peaceTurn = -1;&#xD;
                 break;&#xD;
             default:&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (peaceTurn &lt; 0) return false;&#xD;
&#xD;
     int n = turn.getNumber() - peaceTurn;&#xD;
     float prob = (float)Math.pow(peaceProb, n);&#xD;
     // Apply Franklin's modifier&#xD;
     prob = p.applyModifiers(prob, turn, Modifier.PEACE_TREATY);&#xD;
     return prob > 0.0f&#xD;
         &amp;&amp; (randomInt(logger, &quot;Peace holds?&quot;,  getAIRandom(), 100)&#xD;
             &lt; (int)(100.0f * prob));&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEHYFJPEeiyW7NaN4qWdw" name="getNationSummary" specification="_OHOwQVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEHYVJPEeiyW7NaN4qWdw" name="other" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEHYlJPEeiyW7NaN4qWdw" type="_OBf7sVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>Player player = getPlayer();&#xD;
     NationSummary ns = player.getNationSummary(other);&#xD;
     if (ns == null) {&#xD;
         ns = AIMessage.askGetNationSummary(this, other);&#xD;
         player.putNationSummary(other, ns);&#xD;
     }            &#xD;
     return ns;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEHY1JPEeiyW7NaN4qWdw" name="getStrengthRatio" specification="_OHOwRFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEHZFJPEeiyW7NaN4qWdw" name="other" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEHZVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getPlayer().getStrengthRatio(other, false);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEHZlJPEeiyW7NaN4qWdw" name="getNavalStrengthRatio" specification="_NUo1sFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEHZ1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     double navalAverage = 0.0;&#xD;
     double navalStrength = 0.0;&#xD;
     int nPlayers = 0;&#xD;
     for (Player p : getGame().getLiveEuropeanPlayers(player)) {&#xD;
         if (p.isREF()) continue;&#xD;
         NationSummary ns = getNationSummary(p);&#xD;
         if (p == player) {&#xD;
             navalStrength = ns.getNavalStrength();&#xD;
         } else {&#xD;
             int st = ns.getNavalStrength();&#xD;
             if (st >= 0) navalAverage += st;&#xD;
             nPlayers++;&#xD;
         }&#xD;
     }&#xD;
     if (nPlayers &lt;= 0 || navalStrength &lt; 0) return -1.0;&#xD;
     navalAverage /= nPlayers;&#xD;
     return (navalAverage == 0.0) ? -1.0 : navalStrength / navalAverage;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEHaFJPEeiyW7NaN4qWdw" name="rejectAgreement" specification="_OHPXUlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEHaVJPEeiyW7NaN4qWdw" name="stance" type="_ODBlsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEHalJPEeiyW7NaN4qWdw" name="agreement" type="_OBG6IFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEHa1JPEeiyW7NaN4qWdw" type="_OBG6IlJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (stance == null) return TradeStatus.REJECT_TRADE;&#xD;
     &#xD;
     agreement.clear();&#xD;
     agreement.add(stance);&#xD;
     return TradeStatus.PROPOSE_TRADE;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEHbFJPEeiyW7NaN4qWdw" name="giveNormalMissions" specification="_OHP-YVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEHbVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final AIMain aiMain = getAIMain();&#xD;
     final Player player = getPlayer();&#xD;
     java.util.Map&lt;Unit, String> reasons = new HashMap&lt;>();&#xD;
     BuildColonyMission bcm = null;&#xD;
     Mission m;&#xD;
&#xD;
     nBuilders = buildersNeeded();&#xD;
     nPioneers = pioneersNeeded();&#xD;
     nScouts = scoutsNeeded();&#xD;
&#xD;
     List&lt;AIUnit> aiUnits = getAIUnits();&#xD;
     List&lt;AIUnit> navalUnits = new ArrayList&lt;>();&#xD;
     List&lt;AIUnit> done = new ArrayList&lt;>();&#xD;
     List&lt;TransportMission> transportMissions = new ArrayList&lt;>();&#xD;
&#xD;
     // For all units, check if it is a candidate for a new&#xD;
     // mission.  If it is not a candidate remove it from the&#xD;
     // aiUnits list (reporting why not).  Adjust the&#xD;
     // Build/Pioneer/Scout counts according to the existing valid&#xD;
     // missions.  Accumulate potentially usable transport missions.&#xD;
     lb.mark();&#xD;
     for (AIUnit aiUnit : aiUnits) {&#xD;
         final Unit unit = aiUnit.getUnit();&#xD;
         final Colony colony = unit.getColony();&#xD;
         m = aiUnit.getMission();&#xD;
         final Location oldTarget = (m == null) ? null : m.getTarget();&#xD;
&#xD;
         if (unit.isUninitialized() || unit.isDisposed()) {&#xD;
             reasons.put(unit, &quot;Invalid&quot;);&#xD;
&#xD;
         } else if (unit.isDamaged()) { // Damaged units must wait&#xD;
             if (!(m instanceof IdleAtSettlementMission)) {&#xD;
                 if ((m = getIdleAtSettlementMission(aiUnit)) != null) {&#xD;
                     lb.add(&quot;, &quot;, m);&#xD;
                 }&#xD;
             }&#xD;
             reasons.put(unit, &quot;Damaged&quot;);&#xD;
                 &#xD;
         } else if (unit.getState() == UnitState.IN_COLONY&#xD;
             &amp;&amp; colony.getUnitCount() &lt;= 1) {&#xD;
             // The unit has its hand full keeping the colony alive.&#xD;
             if (!(m instanceof WorkInsideColonyMission)&#xD;
                 &amp;&amp; (m = getWorkInsideColonyMission(aiUnit,&#xD;
                         aiMain.getAIColony(colony))) != null) {&#xD;
                 logger.warning(aiUnit + &quot; should WorkInsideColony at &quot;&#xD;
                     + colony.getName());&#xD;
                 lb.add(&quot;, &quot;, m);&#xD;
                 updateTransport(aiUnit, oldTarget, lb);&#xD;
             }&#xD;
             reasons.put(unit, &quot;Vital&quot;);&#xD;
&#xD;
         } else if (unit.isInMission()) {&#xD;
             reasons.put(unit, &quot;Mission&quot;);&#xD;
&#xD;
         } else if (m != null &amp;&amp; m.isValid() &amp;&amp; !m.isOneTime()) {&#xD;
             if (m instanceof BuildColonyMission) {&#xD;
                 bcm = (BuildColonyMission)m;&#xD;
                 nBuilders--;&#xD;
             } else if (m instanceof PioneeringMission) {&#xD;
                 nPioneers--;&#xD;
             } else if (m instanceof ScoutingMission) {&#xD;
                 nScouts--;&#xD;
             } else if (m instanceof TransportMission) {&#xD;
                 TransportMission tm = (TransportMission)m;&#xD;
                 // Consider reassigning quiescent transport&#xD;
                 // missions to privateer missions&#xD;
                 if (tm.isEmpty() &amp;&amp; unit.isNaval()&#xD;
                     &amp;&amp; unit.isOffensiveUnit()) {&#xD;
                     navalUnits.add(aiUnit);&#xD;
                     done.add(aiUnit);&#xD;
                     continue;&#xD;
                 }&#xD;
                 // If there is capacity in this mission, consider adding&#xD;
                 // more cargoes&#xD;
                 if (tm.destinationCapacity() > 0) {&#xD;
                     transportMissions.add(tm);&#xD;
                 }&#xD;
             } else if (m instanceof PrivateerMission) {&#xD;
                 if (!(m.getTarget() instanceof Unit)) {&#xD;
                     // Privateering but not chasing a unit, consider&#xD;
                     // reassigning to transport.&#xD;
                     navalUnits.add(aiUnit);&#xD;
                     done.add(aiUnit);&#xD;
                     continue;&#xD;
                 }&#xD;
             }&#xD;
             reasons.put(unit, &quot;Valid&quot;);&#xD;
&#xD;
         } else if (unit.isNaval()) {&#xD;
             navalUnits.add(aiUnit);&#xD;
&#xD;
         } else if (unit.isAtSea()) { // Wait for it to emerge&#xD;
             reasons.put(unit, &quot;At-Sea&quot;);&#xD;
&#xD;
         } else { // Needs mission&#xD;
             continue;&#xD;
         }                &#xD;
         done.add(aiUnit);&#xD;
     }&#xD;
     aiUnits.removeAll(done);&#xD;
     done.clear();&#xD;
&#xD;
     // First try to satisfy the demand for missions with a defined&#xD;
     // quota.  Builders first to keep weak players in the game,&#xD;
     // scouts next as they are profitable.  Pile onto any&#xD;
     // exisiting building mission if there are no colonies.&#xD;
     if (player.getNumberOfSettlements() &lt;= 0 &amp;&amp; bcm != null) {&#xD;
         final Location bcmTarget = bcm.getTarget();&#xD;
         Collections.sort(aiUnits, builderComparator);&#xD;
         for (AIUnit aiUnit : aiUnits) {&#xD;
             final Location oldTarget = ((m = aiUnit.getMission()) == null)&#xD;
                 ? null : m.getTarget();&#xD;
             if ((m = getBuildColonyMission(aiUnit, bcmTarget)) == null)&#xD;
                 continue;&#xD;
             lb.add(&quot;, &quot;, m);&#xD;
             updateTransport(aiUnit, oldTarget, lb);&#xD;
             done.add(aiUnit);&#xD;
             if (requestsTransport(aiUnit)) transportSupply.add(aiUnit);&#xD;
             reasons.put(aiUnit.getUnit(), &quot;0Builder&quot;);&#xD;
         }&#xD;
         aiUnits.removeAll(done);&#xD;
         done.clear();&#xD;
     }&#xD;
     if (nBuilders > 0) {&#xD;
         Collections.sort(aiUnits, builderComparator);&#xD;
         for (AIUnit aiUnit : aiUnits) {&#xD;
             final Location oldTarget = ((m = aiUnit.getMission()) == null)&#xD;
                 ? null : m.getTarget();&#xD;
             if ((m = getBuildColonyMission(aiUnit, null)) == null)&#xD;
                 continue;&#xD;
             lb.add(&quot;, &quot;, m);&#xD;
             updateTransport(aiUnit, oldTarget, lb);&#xD;
             done.add(aiUnit);&#xD;
             if (requestsTransport(aiUnit)) transportSupply.add(aiUnit);&#xD;
             reasons.put(aiUnit.getUnit(), &quot;Builder&quot; + nBuilders);&#xD;
             if (--nBuilders &lt;= 0) break;&#xD;
         }&#xD;
         aiUnits.removeAll(done);&#xD;
         done.clear();&#xD;
     }&#xD;
     if (nScouts > 0) {&#xD;
         Collections.sort(aiUnits, scoutComparator);&#xD;
         for (AIUnit aiUnit : aiUnits) {&#xD;
             final Location oldTarget = ((m = aiUnit.getMission()) == null)&#xD;
                 ? null : m.getTarget();&#xD;
             final Unit unit = aiUnit.getUnit();&#xD;
             if ((m = getScoutingMission(aiUnit)) == null) continue;&#xD;
             lb.add(&quot;, &quot;, m);&#xD;
             updateTransport(aiUnit, oldTarget, lb);&#xD;
             done.add(aiUnit);&#xD;
             if (requestsTransport(aiUnit)) transportSupply.add(aiUnit);&#xD;
             reasons.put(unit, &quot;Scout&quot; + nScouts);&#xD;
             if (--nScouts &lt;= 0) break;&#xD;
         }&#xD;
         aiUnits.removeAll(done);&#xD;
         done.clear();&#xD;
     }&#xD;
     if (nPioneers > 0) {&#xD;
         Collections.sort(aiUnits, pioneerComparator);&#xD;
         for (AIUnit aiUnit : aiUnits) {&#xD;
             final Unit unit = aiUnit.getUnit();&#xD;
             final Location oldTarget = ((m = aiUnit.getMission()) == null)&#xD;
                 ? null : m.getTarget();&#xD;
             if ((m = getPioneeringMission(aiUnit, null)) == null) continue;&#xD;
             lb.add(&quot;, &quot;, m);&#xD;
             updateTransport(aiUnit, oldTarget, lb);&#xD;
             done.add(aiUnit);&#xD;
             if (requestsTransport(aiUnit)) transportSupply.add(aiUnit);&#xD;
             reasons.put(unit, &quot;Pioneer&quot; + nPioneers);&#xD;
             if (--nPioneers &lt;= 0) break;&#xD;
         }&#xD;
         aiUnits.removeAll(done);&#xD;
         done.clear();&#xD;
     }&#xD;
&#xD;
     // Give the remaining land units a valid mission.&#xD;
     for (AIUnit aiUnit : aiUnits) {&#xD;
         final Unit unit = aiUnit.getUnit();&#xD;
         final Location oldTarget = ((m = aiUnit.getMission()) == null)&#xD;
             ? null : m.getTarget();&#xD;
         if ((m = getSimpleMission(aiUnit)) == null) continue;&#xD;
         lb.add(&quot;, &quot;, m);&#xD;
         updateTransport(aiUnit, oldTarget, lb);&#xD;
         reasons.put(unit, &quot;New-Land&quot;);&#xD;
         done.add(aiUnit);&#xD;
         if (requestsTransport(aiUnit)) transportSupply.add(aiUnit);&#xD;
     }&#xD;
     aiUnits.removeAll(done);&#xD;
     done.clear();&#xD;
&#xD;
     // Process the free naval units, possibly adding to the usable&#xD;
     // transport missions.&#xD;
     for (AIUnit aiUnit : navalUnits) {&#xD;
         final Unit unit = aiUnit.getUnit();&#xD;
         Mission old = ((m = aiUnit.getMission()) != null &amp;&amp; m.isValid())&#xD;
             ? m : null;&#xD;
         if ((m = getSimpleMission(aiUnit)) == null) continue;&#xD;
         lb.add(&quot;, &quot;, m, ((m == old) ? &quot; (preserved)&quot; : &quot; (new)&quot;));&#xD;
         reasons.put(unit, &quot;New-Naval&quot;);&#xD;
         done.add(aiUnit);&#xD;
         if (m instanceof TransportMission) {&#xD;
             TransportMission tm = (TransportMission)m;&#xD;
             if (tm.destinationCapacity() > 0) {&#xD;
                 transportMissions.add(tm);&#xD;
             }&#xD;
             // A new transport mission might have retargeted&#xD;
             // its passengers into new valid missions.&#xD;
             for (Unit u : aiUnit.getUnit().getUnitList()) {&#xD;
                 AIUnit aiu = getAIUnit(u);&#xD;
                 Mission um = aiu.getMission();&#xD;
                 if (um != null &amp;&amp; um.isValid()&#xD;
                     &amp;&amp; aiUnits.contains(aiu)) {&#xD;
                     aiUnits.remove(aiu);&#xD;
                     reasons.put(aiu.getUnit(), &quot;TNew&quot;);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     navalUnits.removeAll(done);&#xD;
     done.clear();&#xD;
&#xD;
     // Give remaining units the fallback mission.&#xD;
     aiUnits.addAll(navalUnits);&#xD;
     List&lt;Colony> ports = null;&#xD;
     int nPorts = player.getNumberOfPorts();&#xD;
     for (AIUnit aiUnit : aiUnits) {&#xD;
         final Unit unit = aiUnit.getUnit();&#xD;
         m = aiUnit.getMission();&#xD;
         final Location oldTarget = (m == null) ? null : m.getTarget();&#xD;
         if (m != null &amp;&amp; m.isValid() &amp;&amp; !m.isOneTime()) {&#xD;
             logger.warning(&quot;Trying fallback mission for unit &quot; + unit&#xD;
                 + &quot; with valid mission &quot; + m&#xD;
                 + &quot; reason &quot; + reasons.get(unit));&#xD;
             continue;&#xD;
         }&#xD;
&#xD;
         if (unit.isInEurope() &amp;&amp; unit.isPerson() &amp;&amp; nPorts > 0) {&#xD;
             // Choose a port to add to&#xD;
             if (ports == null) ports = player.getPorts();&#xD;
             Colony c = ports.remove(0);&#xD;
             AIColony aic = aiMain.getAIColony(c);&#xD;
             if ((m = getWorkInsideColonyMission(aiUnit, aic)) != null) {&#xD;
                 lb.add(&quot;, &quot;, m);&#xD;
                 updateTransport(aiUnit, oldTarget, lb);&#xD;
                 reasons.put(unit, &quot;To-work&quot;);&#xD;
                 ports.add(c);&#xD;
             }&#xD;
&#xD;
         } else if (m instanceof IdleAtSettlementMission) {&#xD;
             reasons.put(unit, &quot;Idle&quot;); // already idle&#xD;
         } else {&#xD;
             if ((m = getIdleAtSettlementMission(aiUnit)) != null) {&#xD;
                 lb.add(&quot;, &quot;, m);&#xD;
                 updateTransport(aiUnit, oldTarget, lb);&#xD;
                 reasons.put(unit, &quot;Idle&quot;);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     lb.grew(&quot;\n  Mission changes&quot;);&#xD;
&#xD;
     // Now see if transport can be found&#xD;
     allocateTransportables(getUrgentTransportables(),&#xD;
                            transportMissions, lb);&#xD;
&#xD;
     // Log&#xD;
     if (!aiUnits.isEmpty()) {&#xD;
         lb.add(&quot;\n  Free Land Units:&quot;);&#xD;
         for (AIUnit aiu : aiUnits) {&#xD;
             lb.add(&quot; &quot;, aiu.getUnit());&#xD;
         }&#xD;
     }&#xD;
     if (!navalUnits.isEmpty()) {&#xD;
         lb.add(&quot;\n  Free Naval Units:&quot;);&#xD;
         for (AIUnit aiu : navalUnits) {&#xD;
             lb.add(&quot; &quot;, aiu.getUnit());&#xD;
         }&#xD;
     }&#xD;
     lb.add(&quot;\n  Missions(colonies=&quot;, player.getNumberOfSettlements(),&#xD;
         &quot; builders=&quot;, nBuilders,&#xD;
         &quot; pioneers=&quot;, nPioneers,&#xD;
         &quot; scouts=&quot;, nScouts,&#xD;
         &quot; naval-carriers=&quot;, nNavalCarrier,&#xD;
         &quot;)&quot;);&#xD;
     logMissions(reasons, lb);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEHblJPEeiyW7NaN4qWdw" name="getSimpleMission" specification="_ODI6cFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEHb1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEHcFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Unit unit = aiUnit.getUnit();&#xD;
     Mission m, ret;&#xD;
     final Mission old = ((m = aiUnit.getMission()) != null &amp;&amp; m.isValid())&#xD;
         ? m : null;&#xD;
&#xD;
     if (unit.isNaval()) {&#xD;
         ret = (old instanceof PrivateerMission) ? old&#xD;
             : ((m = getPrivateerMission(aiUnit, null)) != null) ? m&#xD;
             : (old instanceof TransportMission) ? old&#xD;
             : ((m = getTransportMission(aiUnit)) != null) ? m&#xD;
             : (old instanceof UnitSeekAndDestroyMission) ? old&#xD;
             : ((m = getSeekAndDestroyMission(aiUnit, 8)) != null) ? m&#xD;
             : (old instanceof UnitWanderHostileMission) ? old&#xD;
             : getWanderHostileMission(aiUnit);&#xD;
&#xD;
     } else if (unit.isCarrier()) {&#xD;
         ret = getTransportMission(aiUnit);&#xD;
&#xD;
     } else {&#xD;
         // CashIn missions are obvious&#xD;
         ret = (old instanceof CashInTreasureTrainMission) ? old&#xD;
             : ((m = getCashInTreasureTrainMission(aiUnit)) != null) ? m&#xD;
&#xD;
             // Working in colony is obvious&#xD;
             : (unit.isInColony()&#xD;
                 &amp;&amp; old instanceof WorkInsideColonyMission) ? old&#xD;
             : (unit.isInColony()&#xD;
                 &amp;&amp; (m = getWorkInsideColonyMission(aiUnit, null)) != null) ? m&#xD;
&#xD;
             // Try to maintain local defence&#xD;
             : (old instanceof DefendSettlementMission) ? old&#xD;
             : ((m = getDefendCurrentSettlementMission(aiUnit)) != null) ? m&#xD;
&#xD;
             // REF override&#xD;
             : (unit.hasAbility(Ability.REF_UNIT))&#xD;
             ? ((old instanceof UnitSeekAndDestroyMission) ? old&#xD;
                 : ((m = getSeekAndDestroyMission(aiUnit, 12)) != null) ? m&#xD;
                 : (m = getWanderHostileMission(aiUnit)))&#xD;
&#xD;
             // Favour wish realization for expert units&#xD;
             : (unit.isColonist() &amp;&amp; unit.getSkillLevel() > 0&#xD;
                 &amp;&amp; old instanceof WishRealizationMission) ? old&#xD;
             : (unit.isColonist() &amp;&amp; unit.getSkillLevel() > 0&#xD;
                 &amp;&amp; (m = getWishRealizationMission(aiUnit, null)) != null) ? m&#xD;
&#xD;
             // Ordinary defence&#xD;
             : ((m = getDefendSettlementMission(aiUnit, false)) != null) ? m&#xD;
&#xD;
             // Try nearby offence&#xD;
             : (old instanceof UnitSeekAndDestroyMission) ? old&#xD;
             : ((m = getSeekAndDestroyMission(aiUnit, 8)) != null) ? m&#xD;
&#xD;
             // Missionary missions are only available to some units&#xD;
             : (old instanceof MissionaryMission) ? old&#xD;
             : ((m = getMissionaryMission(aiUnit)) != null) ? m&#xD;
&#xD;
             // Try to satisfy any remaining wishes, such as population&#xD;
             : (old instanceof WishRealizationMission) ? old&#xD;
             : ((m = getWishRealizationMission(aiUnit, null)) != null) ? m&#xD;
&#xD;
             // Another try to defend, with relaxed cost decider&#xD;
             : ((m = getDefendSettlementMission(aiUnit, true)) != null) ? m&#xD;
&#xD;
             // Another try to attack, at longer range&#xD;
             : ((m = getSeekAndDestroyMission(aiUnit, 16)) != null) ? m&#xD;
&#xD;
             // Leftover offensive units should go out looking for trouble&#xD;
             : (old instanceof UnitWanderHostileMission) ? old&#xD;
             : ((m = getWanderHostileMission(aiUnit)) != null) ? m&#xD;
&#xD;
             : null;&#xD;
     }&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEHcVJPEeiyW7NaN4qWdw" name="getBuildColonyMission" specification="_OHQlcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEucFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEucVJPEeiyW7NaN4qWdw" name="target" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEuclJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>String reason = BuildColonyMission.invalidReason(aiUnit);&#xD;
     if (reason != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     if (target == null) {&#xD;
         target = BuildColonyMission.findTarget(aiUnit, buildingRange,&#xD;
                                                unit.isInEurope());&#xD;
     }&#xD;
     return (target == null) ? null&#xD;
         : new BuildColonyMission(getAIMain(), aiUnit, target);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEuc1JPEeiyW7NaN4qWdw" name="getCashInTreasureTrainMission" specification="_ODJhgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEudFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEudVJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>String reason = CashInTreasureTrainMission.invalidReason(aiUnit);&#xD;
     if (reason != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     Location loc = CashInTreasureTrainMission.findTarget(aiUnit,&#xD;
         cashInRange, unit.isInEurope());&#xD;
     return (loc == null) ? null&#xD;
         : new CashInTreasureTrainMission(getAIMain(), aiUnit, loc);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEudlJPEeiyW7NaN4qWdw" name="getDefendSettlementMission" specification="_ODJhglJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEud1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEueFJPEeiyW7NaN4qWdw" name="relaxed">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLEueVJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (DefendSettlementMission.invalidReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Location loc = unit.getLocation();&#xD;
     double worstValue = 1000000.0;&#xD;
     Colony worstColony = null;&#xD;
     for (AIColony aic : getAIColonies()) {&#xD;
         Colony colony = aic.getColony();&#xD;
         if (aic.isBadlyDefended()) {&#xD;
             if (unit.isAtLocation(colony.getTile())) {&#xD;
                 worstColony = colony;&#xD;
                 break;&#xD;
             }&#xD;
             int ttr = 1 + unit.getTurnsToReach(loc, colony.getTile(),&#xD;
                 unit.getCarrier(),&#xD;
                 ((relaxed) ? CostDeciders.numberOfTiles() : null));&#xD;
             if (ttr >= Unit.MANY_TURNS) continue;&#xD;
             double value = colony.getDefenceRatio() * 100.0 / ttr;&#xD;
             if (worstValue > value) {&#xD;
                 worstValue = value;&#xD;
                 worstColony = colony;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return (worstColony == null) ? null&#xD;
         : getDefendSettlementMission(aiUnit, worstColony);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEuelJPEeiyW7NaN4qWdw" name="getMissionaryMission" specification="_ODKIkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEue1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEufFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (MissionaryMission.prepare(aiUnit) != null) return null;&#xD;
     Location loc = MissionaryMission.findTarget(aiUnit, missionaryRange,&#xD;
                                                 true);&#xD;
     if (loc == null) {&#xD;
         aiUnit.equipForRole(getSpecification().getDefaultRole());&#xD;
         return null;&#xD;
     }&#xD;
     return new MissionaryMission(getAIMain(), aiUnit, loc);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEufVJPEeiyW7NaN4qWdw" name="getPioneeringMission" specification="_OHRMglJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEuflJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEuf1JPEeiyW7NaN4qWdw" name="target" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEugFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (PioneeringMission.prepare(aiUnit) != null) return null;&#xD;
     if (target == null) {&#xD;
         target = PioneeringMission.findTarget(aiUnit, pioneeringRange,&#xD;
                                               true);&#xD;
     }&#xD;
     if (target == null) {&#xD;
         Unit unit = aiUnit.getUnit();&#xD;
         if (unit.isInEurope() || unit.getSettlement() != null) {&#xD;
             aiUnit.equipForRole(getSpecification().getDefaultRole());&#xD;
         }&#xD;
         return null;&#xD;
     }&#xD;
     return new PioneeringMission(getAIMain(), aiUnit, target);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEugVJPEeiyW7NaN4qWdw" name="getPrivateerMission" specification="_OHRzk1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEuglJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEug1JPEeiyW7NaN4qWdw" name="target" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEuhFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (PrivateerMission.invalidReason(aiUnit) != null) return null;&#xD;
     if (target == null) {&#xD;
         target = PrivateerMission.findTarget(aiUnit, privateerRange, true);&#xD;
     }&#xD;
     return (target == null) ? null&#xD;
         : new PrivateerMission(getAIMain(), aiUnit, target);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEuhVJPEeiyW7NaN4qWdw" name="getScoutingMission" specification="_ODKvoFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEuhlJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEuh1JPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (ScoutingMission.prepare(aiUnit) != null) return null;&#xD;
     Location loc = ScoutingMission.findTarget(aiUnit, scoutingRange, true);&#xD;
     if (loc == null) {&#xD;
         Unit unit = aiUnit.getUnit();&#xD;
         if (unit.isInEurope() || unit.getSettlement() != null) {&#xD;
             aiUnit.equipForRole(getSpecification().getDefaultRole());&#xD;
         }&#xD;
         return null;&#xD;
     }            &#xD;
     return new ScoutingMission(getAIMain(), aiUnit, loc);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLEuiFJPEeiyW7NaN4qWdw" name="getTransportMission" specification="_ODKvolJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLEuiVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLEuilJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (TransportMission.invalidReason(aiUnit) != null) return null;&#xD;
     return new TransportMission(getAIMain(), aiUnit);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLFVgFJPEeiyW7NaN4qWdw" name="getWishRealizationMission" specification="_ODKvpFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLFVgVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLFVglJPEeiyW7NaN4qWdw" name="wish" type="_NWU3wFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLFVg1JPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (WishRealizationMission.invalidReason(aiUnit) != null) return null;&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     if (wish == null) {&#xD;
         wish = getBestWorkerWish(aiUnit, unit.getType());&#xD;
     }&#xD;
     if (wish == null) return null;&#xD;
     consumeWorkerWish(aiUnit, wish);&#xD;
     return new WishRealizationMission(getAIMain(), aiUnit, wish);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLFVhFJPEeiyW7NaN4qWdw" name="getWorkInsideColonyMission" specification="_ODLWsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLFVhVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLFVhlJPEeiyW7NaN4qWdw" name="aiColony" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLFVh1JPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>if (WorkInsideColonyMission.invalidReason(aiUnit) != null) return null;&#xD;
     if (aiColony == null) {&#xD;
         aiColony = getAIColony(aiUnit.getUnit().getColony());&#xD;
     }&#xD;
     return (aiColony == null) ? null&#xD;
         : new WorkInsideColonyMission(getAIMain(), aiUnit, aiColony);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLFViFJPEeiyW7NaN4qWdw" name="determineStance" specification="_OHTBslJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLFViVJPEeiyW7NaN4qWdw" name="other" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLFVilJPEeiyW7NaN4qWdw" type="_OCFxkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     return (other.isREF())&#xD;
         ? ((player.getREFPlayer() == other) &#xD;
             // At war with our REF if rebel, otherwise at peace.&#xD;
             ? ((player.isRebel()) ? Stance.WAR : Stance.PEACE)&#xD;
             // Do not mess with other player's REF unless they conquer&#xD;
             // their rebellious colonies.&#xD;
             : ((!other.getRebels().isEmpty()) ? Stance.PEACE&#xD;
                 : super.determineStance(other)))&#xD;
         // Use normal stance determination for non-REF nations.&#xD;
         : super.determineStance(other);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLFVi1JPEeiyW7NaN4qWdw" name="removeAIColony" specification="_ODLWs1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLFVjFJPEeiyW7NaN4qWdw" name="aic" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Colony colony = aic.getColony();&#xD;
     &#xD;
     Set&lt;TileImprovementPlan> tips = new HashSet&lt;>();&#xD;
     for (Tile t : colony.getOwnedTiles()) {&#xD;
         TileImprovementPlan tip = tipMap.remove(t);&#xD;
         if (tip != null) tips.add(tip);&#xD;
     }&#xD;
&#xD;
     for (AIGoods aig : aic.getExportGoods()) {&#xD;
         if (Map.isSameLocation(aig.getLocation(), colony)) {&#xD;
             aig.changeTransport(null);&#xD;
             aig.dispose();&#xD;
         }&#xD;
     }&#xD;
&#xD;
     transportDemand.remove(colony);&#xD;
&#xD;
     Set&lt;Wish> wishes = new HashSet&lt;>(aic.getWishes());&#xD;
     for (AIUnit aiu : getAIUnits()) {&#xD;
         PioneeringMission pm = aiu.getMission(PioneeringMission.class);&#xD;
         if (pm != null) {&#xD;
             if (tips.contains(pm.getTileImprovementPlan())) {&#xD;
                 logger.info(pm + &quot; collapses with loss of &quot; + colony);&#xD;
                 aiu.changeMission(null);&#xD;
             }&#xD;
             continue;&#xD;
         }&#xD;
         WishRealizationMission&#xD;
             wm = aiu.getMission(WishRealizationMission.class);&#xD;
         if (wm != null) {&#xD;
             if (wishes.contains(wm.getWish())) {&#xD;
                 logger.info(wm + &quot; collapses with loss of &quot; + colony);&#xD;
                 aiu.changeMission(null);&#xD;
             }&#xD;
             continue;&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLFVjVJPEeiyW7NaN4qWdw" name="startWorking" specification="_NUqq4FJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     final Turn turn = getGame().getTurn();&#xD;
     final Specification spec = getSpecification();&#xD;
     initializeFromSpecification(spec);&#xD;
&#xD;
     // This is happening, very rarely.  Hopefully now fixed by&#xD;
     // synchronizing access to AIMain.aiObjects.&#xD;
     if (getAIMain().getAIPlayer(player) != this) {&#xD;
         throw new RuntimeException(&quot;EuropeanAIPlayer integrity fail&quot;);&#xD;
     }&#xD;
     sessionRegister.clear();&#xD;
     clearAIUnits();&#xD;
     player.clearNationCache();&#xD;
     badlyDefended.clear();&#xD;
&#xD;
     // Note call to getAIUnits().  This triggers&#xD;
     // AIPlayer.createAIUnits which we want to do early, certainly&#xD;
     // before cheat() or other operations that might make new units&#xD;
     // happen.&#xD;
     LogBuilder lb = new LogBuilder(1024);&#xD;
     int colonyCount = getAIColonies().size();&#xD;
     lb.add(player.getDebugName(),&#xD;
            &quot; in &quot;, turn, &quot;/&quot;, turn.getNumber(),&#xD;
            &quot; units=&quot;, getAIUnits().size(),&#xD;
            &quot; colonies=&quot;, colonyCount,&#xD;
            &quot; declare=&quot;, (player.checkDeclareIndependence() == null),&#xD;
            &quot; v-land-REF=&quot;, player.getRebelStrengthRatio(false),&#xD;
            &quot; v-naval-REF=&quot;, player.getRebelStrengthRatio(true));&#xD;
     if (turn.isFirstTurn()) initializeMissions(lb);&#xD;
     determineStances(lb);&#xD;
&#xD;
     if (colonyCount > 0) {&#xD;
         lb.add(&quot;\n  Badly defended:&quot;); // FIXME: prioritize defence&#xD;
         for (AIColony aic : getAIColonies()) {&#xD;
             if (aic.isBadlyDefended()) {&#xD;
                 badlyDefended.add(aic);&#xD;
                 lb.add(&quot; &quot;, aic.getColony());&#xD;
             }&#xD;
         }&#xD;
&#xD;
         lb.add(&quot;\n  Update colonies:&quot;);&#xD;
         for (AIColony aic : getAIColonies()) aic.update(lb);&#xD;
&#xD;
         buildTipMap(lb);&#xD;
         buildWishMaps(lb);&#xD;
     }&#xD;
     cheat(lb);&#xD;
     buildTransportMaps(lb);&#xD;
&#xD;
     // Note order of operations below.  We allow rearrange et al to run&#xD;
     // even when there are no movable units left because this expedites&#xD;
     // mission assignment.&#xD;
     List&lt;AIUnit> aiUnits = getAIUnits();&#xD;
     for (int i = 0; i &lt; 3; i++) {&#xD;
         rearrangeColonies(lb);&#xD;
         giveNormalMissions(lb);&#xD;
         bringGifts(lb);&#xD;
         demandTribute(lb);&#xD;
         if (aiUnits.isEmpty()) break;&#xD;
         aiUnits = doMissions(aiUnits, lb);&#xD;
     }&#xD;
     lb.log(logger, Level.FINE);&#xD;
&#xD;
     clearAIUnits();&#xD;
     tipMap.clear();&#xD;
     transportDemand.clear();&#xD;
     transportSupply.clear();&#xD;
     wagonsNeeded.clear();&#xD;
     goodsWishes.clear();&#xD;
     workerWishes.clear();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLFVjlJPEeiyW7NaN4qWdw" name="doMissions" specification="_OHUP0lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLFVj1JPEeiyW7NaN4qWdw" name="aiUnits" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLFVkFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLFVkVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLFVklJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>lb.add(&quot;\n  Do missions:&quot;);&#xD;
     List&lt;AIUnit> result = new ArrayList&lt;>();&#xD;
&#xD;
     // For all units, do their mission and collect the ones that need&#xD;
     // to be revisited.&#xD;
     for (AIUnit aiu : aiUnits) {&#xD;
         final Unit unit = aiu.getUnit();&#xD;
         if (unit == null || unit.isDisposed()) continue;&#xD;
&#xD;
         // giveNormalMissions should have given all units a&#xD;
         // mission, but TransportMissions may have delivered a&#xD;
         // unit and completed its WishRealizationMission, so it is&#xD;
         // possible for a null mission to happen here.  Refer such&#xD;
         // units back to giveNormalMissions.&#xD;
         final Mission oldMission = aiu.getMission();&#xD;
         if (oldMission == null) {&#xD;
             result.add(aiu);&#xD;
             continue;&#xD;
         }&#xD;
         final Location oldTarget = oldMission.getTarget();&#xD;
         final Location oldLocation = unit.getLocation();&#xD;
         final Colony oldColony = oldLocation.getColony();&#xD;
&#xD;
         // Do the mission.  Clean up dead units.&#xD;
         lb.add(&quot;\n  &quot;, unit, &quot; &quot;);&#xD;
         try {&#xD;
             aiu.doMission(lb);&#xD;
         } catch (Exception e) {&#xD;
             lb.add(&quot;, EXCEPTION: &quot;, e.getMessage());&#xD;
             logger.log(Level.WARNING, &quot;doMissions failed for: &quot; + aiu, e);&#xD;
         }&#xD;
         if (unit.isDisposed() || unit.getLocation() == null) {&#xD;
             aiu.dropTransport();&#xD;
             lb.add(&quot;, DIED.&quot;);&#xD;
             continue;&#xD;
         }&#xD;
         &#xD;
         updateTransport(aiu, oldTarget, lb);&#xD;
         &#xD;
         // Units with moves left should be requeued.  If they are on a&#xD;
         // carrier the carrier needs to have moves left.&#xD;
         if (unit.getMovesLeft() > 0 &amp;&amp; (!unit.isOnCarrier()&#xD;
                 || unit.getCarrier().getMovesLeft() > 0)) {&#xD;
             lb.add(&quot;+&quot;);&#xD;
             result.add(aiu);&#xD;
         } else {&#xD;
             lb.add(&quot;.&quot;);&#xD;
         }&#xD;
&#xD;
         // Immediately update a newly built colony so that other&#xD;
         // units that are about to wake up can see its tile&#xD;
         // improvement plans.&#xD;
         Colony newColony = unit.getLocation().getColony();&#xD;
         if (oldColony == null &amp;&amp; newColony != null&#xD;
             &amp;&amp; Map.isSameLocation(oldLocation, newColony)) {&#xD;
             AIColony aiColony = getAIColony(newColony);&#xD;
             aiColony.update(lb);&#xD;
             updateTipMap(aiColony);&#xD;
         }&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLFVk1JPEeiyW7NaN4qWdw" name="adjustMission" specification="_OHVd8lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLFVlFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLFVlVJPEeiyW7NaN4qWdw" name="path" type="_OA--UVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLFVllJPEeiyW7NaN4qWdw" name="type" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLFVl1JPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLFVmFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (value > 0) {&#xD;
         if (type == DefendSettlementMission.class) {&#xD;
             // Reduce value in proportion to the number of defenders.&#xD;
             Location loc = DefendSettlementMission.extractTarget(aiUnit, path);&#xD;
             if (!(loc instanceof Colony)) {&#xD;
                 throw new IllegalStateException(&quot;European players defend colonies: &quot; + loc);&#xD;
             }&#xD;
             Colony colony = (Colony)loc;&#xD;
             int defenders = getSettlementDefenders(colony);&#xD;
             value -= 25 * defenders;&#xD;
             // Reduce value according to the stockade level.&#xD;
             if (colony.hasStockade()) {&#xD;
                 if (defenders > colony.getStockade().getLevel() + 1) {&#xD;
                     value -= 100 * colony.getStockade().getLevel();&#xD;
                 } else {&#xD;
                     value -= 20 * colony.getStockade().getLevel();&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return value;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLF8kFJPEeiyW7NaN4qWdw" name="indianDemand" specification="_OHXTIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLF8kVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLF8klJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLF8k1JPEeiyW7NaN4qWdw" name="goods" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLF8lFJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLF8lVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return !&quot;conquest&quot;.equals(getAIAdvantage());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLGjoFJPEeiyW7NaN4qWdw" name="acceptDiplomaticTrade" specification="_OHX6MFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLGjoVJPEeiyW7NaN4qWdw" name="agreement" type="_OBG6IFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLGjolJPEeiyW7NaN4qWdw" type="_OBG6IlJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     final Player other = agreement.getOtherPlayer(player);&#xD;
     final Market market = player.getMarket();&#xD;
     final boolean franklin&#xD;
         = other.hasAbility(Ability.ALWAYS_OFFERED_PEACE);&#xD;
     final java.util.Map&lt;TradeItem, Integer> scores = new HashMap&lt;>();&#xD;
     TradeItem peace = null;&#xD;
     TradeItem cash = null;&#xD;
     LogBuilder lb = new LogBuilder(64);&#xD;
     lb.add(&quot;Evaluate trade offer from &quot;, other.getName());&#xD;
     TradeStatus result = null;&#xD;
&#xD;
     int unacceptable = 0;&#xD;
     for (TradeItem item : agreement.getTradeItems()) {&#xD;
         if (item instanceof StanceTradeItem) {&#xD;
             getNationSummary(other); // Freshen the name summary cache&#xD;
         }                    &#xD;
         int value = item.evaluateFor(player);&#xD;
         if (item instanceof GoldTradeItem) {&#xD;
             cash = item;&#xD;
         } else if (item instanceof StanceTradeItem) {&#xD;
             // Handle some special cases&#xD;
             switch (item.getStance()) {&#xD;
             case ALLIANCE: case CEASE_FIRE:&#xD;
                 if (franklin) {&#xD;
                     peace = item;&#xD;
                     value = 0;&#xD;
                 }&#xD;
                 break;&#xD;
             case PEACE:&#xD;
                 if (agreement.getContext() == DiplomaticTrade.TradeContext.CONTACT) {&#xD;
                     peace = item;&#xD;
                     value = 0;&#xD;
                 }&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
         lb.add(&quot;, &quot;, Messages.message(item.getLabel()), &quot; = &quot;, value);&#xD;
         if (value == Integer.MIN_VALUE) unacceptable++;&#xD;
         scores.put(item, value);&#xD;
     }&#xD;
     lb.add(&quot;.&quot;);&#xD;
     &#xD;
     // If too many items are unacceptable, reject&#xD;
     double ratio = (double)unacceptable&#xD;
         / (unacceptable + agreement.getTradeItems().size());&#xD;
     if (ratio > 0.5 - 0.5 * agreement.getVersion()) {&#xD;
         result = rejectAgreement(peace, agreement);&#xD;
         lb.add(&quot;  Too many (&quot;, unacceptable, &quot;) unacceptable.&quot;);&#xD;
     }&#xD;
&#xD;
     int value = 0;&#xD;
     if (result == null) {&#xD;
         // Dump the unacceptable offers, sum the rest&#xD;
         for (Entry&lt;TradeItem, Integer> entry : scores.entrySet()) {&#xD;
             if (entry.getValue() == Integer.MIN_VALUE) {&#xD;
                 agreement.remove(entry.getKey());&#xD;
                 lb.add(&quot;  Dropped invalid &quot;, entry.getKey(), &quot;.&quot;);&#xD;
             } else {&#xD;
                 value += entry.getValue();&#xD;
                 lb.add(&quot;  Added valid &quot;, entry.getKey(), &quot;, total = &quot;, value,&#xD;
                        &quot;.&quot;);&#xD;
             }&#xD;
         }&#xD;
         // If the result is non-negative,&#xD;
         // accept/propose-without-unacceptable&#xD;
         if (value >= 0) {&#xD;
             result = (agreement.getContext()&#xD;
                 == DiplomaticTrade.TradeContext.CONTACT&#xD;
                 &amp;&amp; agreement.getVersion() == 0) ? TradeStatus.PROPOSE_TRADE&#xD;
                 : (unacceptable == 0) ? TradeStatus.ACCEPT_TRADE&#xD;
                 : (agreement.isEmpty()) ? TradeStatus.REJECT_TRADE&#xD;
                 : TradeStatus.PROPOSE_TRADE;&#xD;
         }&#xD;
         lb.add(&quot;  Total = &quot;, value, &quot;.&quot;);&#xD;
     }&#xD;
&#xD;
     if (result == null) { // Give up?&#xD;
         if (randomInt(logger, &quot;Enough diplomacy?&quot;, getAIRandom(),&#xD;
                       1 + agreement.getVersion()) > 5) {&#xD;
             result = rejectAgreement(peace, agreement);&#xD;
             lb.add(&quot;  Ran out of patience at &quot;, agreement.getVersion(), &quot;.&quot;);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     if (result == null) {&#xD;
         // Dump the negative offers until the sum is positive.&#xD;
         // Return a proposal with items we like/can accept, or reject&#xD;
         // if none are left.&#xD;
         for (Entry&lt;TradeItem, Integer> e&#xD;
                  : mapEntriesByValue(scores, ascendingIntegerComparator)) {&#xD;
             if (value > 0) break;&#xD;
             TradeItem item = e.getKey();&#xD;
             value -= e.getValue();&#xD;
             if (value >= 50 &amp;&amp; item instanceof GoldTradeItem) {&#xD;
                 // Counter offer smaller amount of gold, FIXME: magic#&#xD;
                 GoldTradeItem gti = (GoldTradeItem)item;&#xD;
                 gti.setGold(gti.getGold() - value / 2);&#xD;
                 value /= 2;&#xD;
                 lb.add(&quot;  Reducing gold item to &quot;, gti.getGold(), &quot;.&quot;);&#xD;
                 break;&#xD;
             }&#xD;
             agreement.remove(item);&#xD;
             lb.add(&quot;  Dropped &quot;, item, &quot;, value now = &quot;, value, &quot;.&quot;);&#xD;
         }&#xD;
         if (value > 0 &amp;&amp; !agreement.isEmpty()) {&#xD;
             result = TradeStatus.PROPOSE_TRADE;&#xD;
             lb.add(&quot;  Pruned until acceptable at &quot;, value, &quot;.&quot;);&#xD;
         } else {&#xD;
             result = rejectAgreement(peace, agreement);&#xD;
             lb.add(&quot;  Agreement unsalvageable at &quot;, value, &quot;.&quot;);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     lb.add(&quot; => &quot;, result);&#xD;
     lb.log(logger, Level.INFO);&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLGjo1JPEeiyW7NaN4qWdw" name="registerSellGoods" specification="_OHYhQ1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLGjpFJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>String goldKey = &quot;tradeGold#&quot; + goods.getType().getId()&#xD;
         + &quot;#&quot; + goods.getAmount() + &quot;#&quot; + goods.getLocation().getId();&#xD;
     sessionRegister.put(goldKey, null);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLGjpVJPEeiyW7NaN4qWdw" name="buyProposition" specification="_OHZvYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLGjplJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLGjp1JPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLGjqFJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLGjqVJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLGjqlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>logger.finest(&quot;Entering method buyProposition&quot;);&#xD;
     final Specification spec = getSpecification();&#xD;
     Player buyer = unit.getOwner();&#xD;
     IndianSettlement is = (IndianSettlement)settlement;&#xD;
     String goldKey = &quot;tradeGold#&quot; + goods.getType().getId()&#xD;
         + &quot;#&quot; + goods.getAmount() + &quot;#&quot; + settlement.getId();&#xD;
     String hagglingKey = &quot;tradeHaggling#&quot; + unit.getId();&#xD;
     Integer registered = sessionRegister.get(goldKey);&#xD;
     if (registered == null) {&#xD;
         int price = is.getPriceToSell(goods)&#xD;
             + getPlayer().getTension(buyer).getValue();&#xD;
         if (is.hasMissionary(buyer)&#xD;
             &amp;&amp; spec.getBoolean(GameOptions.ENHANCED_MISSIONARIES)) {&#xD;
             Unit u = is.getMissionary();&#xD;
             price = (int)FeatureContainer.applyModifiers(price,&#xD;
                 getGame().getTurn(), u.getMissionaryTradeModifiers(false));&#xD;
         }&#xD;
         sessionRegister.put(goldKey, price);&#xD;
         return price;&#xD;
     } else {&#xD;
         int price = registered;&#xD;
         if (price &lt; 0 || price == gold) {&#xD;
             return price;&#xD;
         } else if (gold &lt; (price * 9) / 10) {&#xD;
             logger.warning(&quot;Cheating attempt: sending a offer too low&quot;);&#xD;
             sessionRegister.put(goldKey, -1);&#xD;
             return NetworkConstants.NO_TRADE;&#xD;
         } else {&#xD;
             int haggling = 1;&#xD;
             if (sessionRegister.containsKey(hagglingKey)) {&#xD;
                 haggling = sessionRegister.get(hagglingKey);&#xD;
             }&#xD;
             if (randomInt(logger, &quot;Buy gold&quot;, getAIRandom(),&#xD;
                           3 + haggling) &lt;= 3) {&#xD;
                 sessionRegister.put(goldKey, gold);&#xD;
                 sessionRegister.put(hagglingKey, haggling + 1);&#xD;
                 return gold;&#xD;
             } else {&#xD;
                 sessionRegister.put(goldKey, -1);&#xD;
                 return NetworkConstants.NO_TRADE_HAGGLE;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLGjq1JPEeiyW7NaN4qWdw" name="sellProposition" specification="_OHa9gFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLGjrFJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLGjrVJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLGjrlJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLGjr1JPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLGjsFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>logger.finest(&quot;Entering method sellProposition&quot;);&#xD;
     Colony colony = (Colony) settlement;&#xD;
     Player otherPlayer = unit.getOwner();&#xD;
     // don't pay for more than fits in the warehouse&#xD;
     int amount = colony.getWarehouseCapacity()&#xD;
         - colony.getGoodsCount(goods.getType());&#xD;
     amount = Math.min(amount, goods.getAmount());&#xD;
     // get a good price&#xD;
     Tension.Level tensionLevel = getPlayer().getTension(otherPlayer).getLevel();&#xD;
     int percentage = (9 - tensionLevel.ordinal()) * 10;&#xD;
     // what we could get for the goods in Europe (minus taxes)&#xD;
     int netProfits = ((100 - getPlayer().getTax())&#xD;
                       * getPlayer().getMarket().getSalePrice(goods.getType(), amount)) / 100;&#xD;
     return (netProfits * percentage) / 100;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLHKsFJPEeiyW7NaN4qWdw" name="acceptTax" specification="_NUsgEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLHKsVJPEeiyW7NaN4qWdw" name="tax">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLHKslJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>boolean ret = true;&#xD;
     LogBuilder lb = new LogBuilder(64);&#xD;
     Goods toBeDestroyed = getPlayer().getMostValuableGoods();&#xD;
     lb.add(&quot;Tax demand to &quot;, getPlayer().getName(), &quot; of &quot;, tax, &quot;% with &quot;,&#xD;
         getPlayer().getMostValuableGoods(), &quot; &quot;);&#xD;
     GoodsType goodsType = (toBeDestroyed == null) ? null&#xD;
         : toBeDestroyed.getType();&#xD;
&#xD;
     if (tax &lt;= 2) {&#xD;
         // Accept small increase.&#xD;
         ret = true;&#xD;
         lb.add(&quot;accepted: small rise.&quot;);&#xD;
     } else if (toBeDestroyed == null) {&#xD;
         // Is this cheating to look at what the crown will destroy?&#xD;
         ret = false;&#xD;
         lb.add(&quot;rejected: no-goods-under-threat.&quot;);&#xD;
     } else if (goodsType.isFoodType()) {&#xD;
         ret = false;&#xD;
         lb.add(&quot;rejected: food-type.&quot;);&#xD;
     } else if (goodsType.isBreedable()) {&#xD;
         // Refuse if we already have this type under production in&#xD;
         // multiple places.&#xD;
         int n = 0;&#xD;
         for (Settlement s : getPlayer().getSettlements()) {&#xD;
             if (s.getGoodsCount(goodsType) > 0) n++;&#xD;
         }&#xD;
         ret = n &lt; 2;&#xD;
         if (ret) {&#xD;
             lb.add(&quot;accepted: breedable-type-&quot;, goodsType.getSuffix(), &#xD;
                    &quot;-missing.&quot;);&#xD;
         } else {&#xD;
             lb.add(&quot;rejected: breedable-type-&quot;, goodsType.getSuffix(),&#xD;
                    &quot;-present-in-&quot;, n, &quot;-settlements.&quot;);&#xD;
         }&#xD;
     } else if (goodsType.isMilitaryGoods()&#xD;
         || goodsType.isTradeGoods()&#xD;
         || goodsType.isBuildingMaterial()) {&#xD;
         // By age 3 we should be able to produce enough ourselves.&#xD;
         // FIXME: check whether we have an armory, at least&#xD;
         int turn = getGame().getTurn().getNumber();&#xD;
         ret = turn &lt; 300;&#xD;
         lb.add(((ret) ? &quot;accepted&quot; : &quot;rejected&quot;),&#xD;
                &quot;: special-goods-in-turn-&quot;, turn, &quot;.&quot;);&#xD;
     } else {&#xD;
         // FIXME: consider the amount of goods produced. If we&#xD;
         // depend on shipping huge amounts of cheap goods, we&#xD;
         // don't want these goods to be boycotted.&#xD;
         final List&lt;GoodsType> goodsTypes = getSpecification()&#xD;
             .getStorableGoodsTypeList();&#xD;
         int averageIncome = goodsTypes.stream()&#xD;
             .mapToInt(gt -> getPlayer().getIncomeAfterTaxes(gt)).sum()&#xD;
             / goodsTypes.size();&#xD;
         int income = getPlayer().getIncomeAfterTaxes(toBeDestroyed.getType());&#xD;
         ret = income &lt;= 0 || income > averageIncome;&#xD;
         lb.add(((ret) ? &quot;accepted&quot; : &quot;rejected&quot;),&#xD;
             &quot;: goods(&quot;, goodsType.getSuffix(), &quot;)-with-income(&quot;, income,&#xD;
             ((ret) ? &quot;)non-positive-or-more-than(&quot; : &quot;)less-than-average(&quot;),&#xD;
             averageIncome, &quot;).&quot;);&#xD;
     }&#xD;
     if (!ret) suppressEuropeanTrade(goodsType, lb);&#xD;
     lb.log(logger, Level.INFO);&#xD;
     return ret;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLHKs1JPEeiyW7NaN4qWdw" name="acceptMercenaries" specification="_NUtHIlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLHKtFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getPlayer().isAtWar() || &quot;conquest&quot;.equals(getAIAdvantage());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLHKtVJPEeiyW7NaN4qWdw" name="selectFoundingFather" specification="_OHcysFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLHKtlJPEeiyW7NaN4qWdw" name="ffs" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLHKt1JPEeiyW7NaN4qWdw" type="_OBHhMVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final int age = getGame().getAge();&#xD;
     FoundingFather bestFather = null;&#xD;
     int bestWeight = Integer.MIN_VALUE;&#xD;
     for (FoundingFather father : ffs) {&#xD;
         if (father == null) continue;&#xD;
&#xD;
         // For the moment, arbitrarily: always choose the one&#xD;
         // offering custom houses.  Allowing the AI to build CH&#xD;
         // early alleviates the complexity problem of handling all&#xD;
         // TransportMissions correctly somewhat.&#xD;
         if (father.hasAbility(Ability.BUILD_CUSTOM_HOUSE)) {&#xD;
             bestFather = father;&#xD;
             break;&#xD;
         }&#xD;
&#xD;
         int weight = father.getWeight(age);&#xD;
         if (weight > bestWeight) {&#xD;
             bestWeight = weight;&#xD;
             bestFather = father;&#xD;
         }&#xD;
     }&#xD;
     return bestFather;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLHKuFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_NUtuMlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLHKuVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getXMLElementTagName(); </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NUmZcFJPEeiyW7NaN4qWdw" name="getUrgentTransportables" method="_OLBrKFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiolVJPEeiyW7NaN4qWdw">
                    <body>Gets the most urgent transportables.&#xD;
     *&#xD;
     * @return The most urgent 10% of the available transportables.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NUmZcVJPEeiyW7NaN4qWdw" type="_NV5Z8FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NUmZclJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUnnkFJPEeiyW7NaN4qWdw" name="buildersNeeded" method="_OLCSTFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPllJPEeiyW7NaN4qWdw">
                    <body>Gets the number of units that should build a colony.&#xD;
     *&#xD;
     * This is the desired total number, not the actual number which would&#xD;
     * take into account the number of existing BuildColonyMissions.&#xD;
     *&#xD;
     * @return The desired number of colony builders for this player.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NUnnkVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUnnklJPEeiyW7NaN4qWdw" name="pioneersNeeded" method="_OLDgUFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPl1JPEeiyW7NaN4qWdw">
                    <body>How many pioneers should we have?&#xD;
     *&#xD;
     * This is the desired total number, not the actual number which would&#xD;
     * take into account the number of existing PioneeringMissions.&#xD;
     *&#xD;
     * @return The desired number of pioneers for this player.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NUnnk1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUnnlFJPEeiyW7NaN4qWdw" name="scoutsNeeded" method="_OLDgUlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPmFJPEeiyW7NaN4qWdw">
                    <body>How many scouts should we have?&#xD;
     *&#xD;
     * This is the desired total number, not the actual number which would&#xD;
     * take into account the number of existing ScoutingMissions.&#xD;
     *&#xD;
     * Current scheme for European AIs is to use up to three scouts in&#xD;
     * the early part of the game, then one.&#xD;
     *&#xD;
     * @return The desired number of scouts for this player.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NUoOoFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUoOoVJPEeiyW7NaN4qWdw" name="recruitAIUnitInEurope" method="_OLDgVFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPmVJPEeiyW7NaN4qWdw">
                    <body>Asks the server to recruit a unit in Europe on behalf of the AIPlayer.&#xD;
     *&#xD;
     * FIXME: Move this to a specialized Handler class (AIEurope?)&#xD;
     * FIXME: Give protected access?&#xD;
     *&#xD;
     * @param slot The migration slot to recruit from.&#xD;
     * @return The new AIUnit created by this action or null on failure.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NUoOolJPEeiyW7NaN4qWdw" name="slot">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ODITZlJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NUoOo1JPEeiyW7NaN4qWdw" name="getWishes" method="_OLDgWlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPm1JPEeiyW7NaN4qWdw">
                    <body>Gets the wishes for all this player's colonies, sorted by the&#xD;
     * {@link Wish#getValue value}.&#xD;
     *&#xD;
     * @return A list of wishes.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NUoOpFJPEeiyW7NaN4qWdw" type="_NWKfsFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NUoOpVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUo1sFJPEeiyW7NaN4qWdw" name="getNavalStrengthRatio" visibility="protected" method="_OLEHZlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPoFJPEeiyW7NaN4qWdw">
                    <body>Is this player lagging in naval strength?  Calculate the ratio&#xD;
     * of its naval strength to the average strength of other European&#xD;
     * colonial powers.&#xD;
     *&#xD;
     * @return The naval strength ratio, or negative if there are no other&#xD;
     *     European colonial nations.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NUpcwFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUqq4FJPEeiyW7NaN4qWdw" name="startWorking" method="_OLFVjVJPEeiyW7NaN4qWdw"/>
                <ownedOperation xmi:id="_NUsgEFJPEeiyW7NaN4qWdw" name="acceptTax" method="_OLHKsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NUsgEVJPEeiyW7NaN4qWdw" name="tax">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NUsgElJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUtHIlJPEeiyW7NaN4qWdw" name="acceptMercenaries" method="_OLHKs1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NUtHI1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NUtuMlJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_OLHKuFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NUtuM1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ODF3IFJPEeiyW7NaN4qWdw" name="updateTipMap" visibility="private" method="_OLAdFlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLioi1JPEeiyW7NaN4qWdw">
                    <body>Update the tip map with tips from a new colony.&#xD;
     *&#xD;
     * @param aic The new &lt;code>AIColony&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODF3IVJPEeiyW7NaN4qWdw" name="aic" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODF3IlJPEeiyW7NaN4qWdw" name="removeTileImprovementPlan" method="_OLBEFlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiojlJPEeiyW7NaN4qWdw">
                    <body>Remove a &lt;code>TileImprovementPlan&lt;/code> from the relevant colony.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODF3I1JPEeiyW7NaN4qWdw" name="plan" type="_NVvB4FJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODGeMFJPEeiyW7NaN4qWdw" name="requestsTransport" visibility="private" method="_OLBEHFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiokFJPEeiyW7NaN4qWdw">
                    <body>Checks if a transportable needs transport.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to check.&#xD;
     * @return True if no transport is already present or the&#xD;
     *     transportable is already aboard a carrier, and there is a&#xD;
     *     well defined source and destination location.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODGeMVJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODGeMlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ODGeM1JPEeiyW7NaN4qWdw" name="checkTransport" visibility="private" method="_OLBEH1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiokVJPEeiyW7NaN4qWdw">
                    <body>Checks that the carrier assigned to a transportable is has a&#xD;
     * transport mission and the transport is queued thereon.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> to check.&#xD;
     * @return True if all is well.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODGeNFJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODGeNVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ODHFQFJPEeiyW7NaN4qWdw" name="claimTransportable" method="_OLBrK1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiollJPEeiyW7NaN4qWdw">
                    <body>Allows a TransportMission to signal that it has taken responsibility&#xD;
     * for a TransportableAIObject.&#xD;
     *&#xD;
     * @param t The &lt;code>TransportableAIObject&lt;/code> being claimed.&#xD;
     * @return True if the transportable was claimed from the supply map.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODHFQVJPEeiyW7NaN4qWdw" name="t" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODHFQlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ODHsUFJPEeiyW7NaN4qWdw" name="completeWish" method="_OLCSRFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPk1JPEeiyW7NaN4qWdw">
                    <body>Notify that a wish has been completed.  Called from AIColony.&#xD;
     *&#xD;
     * @param w The &lt;code>Wish&lt;/code> to complete.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODHsUVJPEeiyW7NaN4qWdw" name="w" type="_NWKfsFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODITYFJPEeiyW7NaN4qWdw" name="consumeWorkerWish" method="_OLCSRlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPlFJPEeiyW7NaN4qWdw">
                    <body>Consume a WorkerWish, yielding a WishRealizationMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param ww The &lt;code>WorkerWish&lt;/code> to consume.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODITYVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODITYlJPEeiyW7NaN4qWdw" name="ww" type="_NWU3wFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODITY1JPEeiyW7NaN4qWdw" name="consumeGoodsWish" method="_OLCSSVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPlVJPEeiyW7NaN4qWdw">
                    <body>Consume a GoodsWish.&#xD;
     *&#xD;
     * @param aig The &lt;code>AIGoods&lt;/code> to use.&#xD;
     * @param gw The &lt;code>GoodsWish&lt;/code> to consume.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODITZFJPEeiyW7NaN4qWdw" name="aig" type="_NQ4XEFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODITZVJPEeiyW7NaN4qWdw" name="gw" type="_NVE6kFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODI6cFJPEeiyW7NaN4qWdw" name="getSimpleMission" method="_OLEHblJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPo1JPEeiyW7NaN4qWdw">
                    <body>Choose a mission for an AIUnit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to choose for.&#xD;
     * @return A suitable &lt;code>Mission&lt;/code>, or null if none found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODI6cVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHP-Y1JPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODJhgFJPEeiyW7NaN4qWdw" name="getCashInTreasureTrainMission" method="_OLEuc1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPpVJPEeiyW7NaN4qWdw">
                    <body>Gets a new CashInTreasureTrainMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODJhgVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHQldFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODJhglJPEeiyW7NaN4qWdw" name="getDefendSettlementMission" method="_OLEudlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPplJPEeiyW7NaN4qWdw">
                    <body>Gets a new DefendSettlementMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param relaxed Use a relaxed cost decider to choose the target.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODJhg1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODJhhFJPEeiyW7NaN4qWdw" name="relaxed">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHRMgFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODKIkFJPEeiyW7NaN4qWdw" name="getMissionaryMission" method="_OLEuelJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPp1JPEeiyW7NaN4qWdw">
                    <body>Gets a new MissionaryMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODKIkVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHRMgVJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODKvoFJPEeiyW7NaN4qWdw" name="getScoutingMission" method="_OLEuhVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPqlJPEeiyW7NaN4qWdw">
                    <body>Gets a new ScoutingMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODKvoVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHSao1JPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODKvolJPEeiyW7NaN4qWdw" name="getTransportMission" method="_OLEuiFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLj2oFJPEeiyW7NaN4qWdw">
                    <body>Gets a new TransportMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODKvo1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHSapFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODKvpFJPEeiyW7NaN4qWdw" name="getWishRealizationMission" method="_OLFVgFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLj2oVJPEeiyW7NaN4qWdw">
                    <body>Gets a new WishRealizationMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param wish An optional &lt;code>WorkerWish&lt;/code> to realize.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODKvpVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODKvplJPEeiyW7NaN4qWdw" name="wish" type="_NWU3wFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHTBsFJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODLWsFJPEeiyW7NaN4qWdw" name="getWorkInsideColonyMission" method="_OLFVhFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLj2olJPEeiyW7NaN4qWdw">
                    <body>Gets a WorkInsideColonyMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param aiColony An optional &lt;code>AIColony&lt;/code> to work at.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODLWsVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODLWslJPEeiyW7NaN4qWdw" name="aiColony" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHTBsVJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODLWs1JPEeiyW7NaN4qWdw" name="removeAIColony" method="_OLFVi1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_ODLWtFJPEeiyW7NaN4qWdw" name="aic" type="_NQeHYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGbfAFJPEeiyW7NaN4qWdw" name="EuropeanAIPlayer" method="_OK_19VJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OGcGEVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OGcGElJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLiogFJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>EuropeanAIPlayer&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-class.&#xD;
     * @param player The player that should be associated with this&#xD;
     *            &lt;code>AIPlayer&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGbfAVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGcGEFJPEeiyW7NaN4qWdw" name="player" type="_OBOO4lJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGcGE1JPEeiyW7NaN4qWdw" type="_NUg54FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGctIFJPEeiyW7NaN4qWdw" name="EuropeanAIPlayer" method="_OK_1-VJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OGctI1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OGctJFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLiogVJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIPlayer&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OGctIVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGctIlJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OGctJVJPEeiyW7NaN4qWdw" type="_NUg54FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OGdUMFJPEeiyW7NaN4qWdw" name="initializeFromSpecification" isStatic="true" method="_OK_1_VJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OGd7QVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OGd7QlJPEeiyW7NaN4qWdw" key="synchronized"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_OGd7QFJPEeiyW7NaN4qWdw" name="spec" type="_OAX6UVJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHAGwFJPEeiyW7NaN4qWdw" name="initializeMissions" visibility="private" method="_OK_1_1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLioglJPEeiyW7NaN4qWdw">
                    <body>Simple initialization of AI missions given that we know the starting&#xD;
     * conditions.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHAGwVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHAt0FJPEeiyW7NaN4qWdw" name="cheatGold" method="_OK_2AVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiog1JPEeiyW7NaN4qWdw">
                    <body>Cheat by adding gold to guarantee the player has a minimum amount.&#xD;
     *&#xD;
     * @param amount The minimum amount of gold required.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHAt0VJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHAt0lJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHAt01JPEeiyW7NaN4qWdw" name="cheat" visibility="private" method="_OLAdAFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiohFJPEeiyW7NaN4qWdw">
                    <body>Cheats for the AI.  Please try to centralize cheats here.&#xD;
     *&#xD;
     * FIXME: Remove when the AI is good enough.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHBU4FJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHBU4VJPEeiyW7NaN4qWdw" name="cheatUnit" visibility="private" method="_OLAdAlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiohVJPEeiyW7NaN4qWdw">
                    <body>Cheat-build a unit in Europe.&#xD;
     *&#xD;
     * @param rc A list of random choices to choose from.&#xD;
     * @param what A description of the unit.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return The &lt;code>AIUnit&lt;/code> built.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHBU4lJPEeiyW7NaN4qWdw" name="rc" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHBU41JPEeiyW7NaN4qWdw" name="what">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHBU5FJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHB78FJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHCjAVJPEeiyW7NaN4qWdw" name="cheatUnit" visibility="private" method="_OLAdB1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiohlJPEeiyW7NaN4qWdw">
                    <body>Cheat-build a unit in Europe.&#xD;
     *&#xD;
     * @param unitType The &lt;code>UnitType&lt;/code> to build.&#xD;
     * @param what A description of the unit.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return The &lt;code>AIUnit&lt;/code> built.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHCjAlJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHDKEFJPEeiyW7NaN4qWdw" name="what">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHDKEVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHDKElJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHDxIFJPEeiyW7NaN4qWdw" name="allocateTransportables" method="_OLAdDFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLioh1JPEeiyW7NaN4qWdw">
                    <body>Assign transportable units and goods to available carriers.&#xD;
     *&#xD;
     * These supply driven assignments supplement the demand driven&#xD;
     * calls inside TransportMission.&#xD;
     *&#xD;
     * @param transportables A list of &lt;code>TransportableAIObject&lt;/code>s to&#xD;
     *     allocated transport for.&#xD;
     * @param missions A list of &lt;code>TransportMission&lt;/code>s to potentially&#xD;
     *     assign more transportables to.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHDxIVJPEeiyW7NaN4qWdw" name="transportables" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHDxIlJPEeiyW7NaN4qWdw" name="missions" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHDxI1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHE_QVJPEeiyW7NaN4qWdw" name="bringGifts" visibility="private" method="_OLAdEFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLioiFJPEeiyW7NaN4qWdw">
                    <body>Brings gifts to nice players with nearby colonies.&#xD;
     *&#xD;
     * FIXME: European players can also bring gifts!  However, this&#xD;
     * might be folded into a trade mission, since European gifts are&#xD;
     * just a special case of trading.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHE_QlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHFmUFJPEeiyW7NaN4qWdw" name="demandTribute" visibility="private" method="_OLAdElJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLioiVJPEeiyW7NaN4qWdw">
                    <body>Demands goods from players with nearby colonies.&#xD;
     *&#xD;
     * FIXME: European players can also demand tribute!&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHFmUVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHGNYFJPEeiyW7NaN4qWdw" name="buildTipMap" method="_OLAdFFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLioilJPEeiyW7NaN4qWdw">
                    <body>Rebuilds a map of locations to TileImprovementPlans.&#xD;
     *&#xD;
     * Called by startWorking at the start of every turn.&#xD;
     * Public for the test suite.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHGNYVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHG0cFJPEeiyW7NaN4qWdw" name="getBestPlan" method="_OLBEEFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiojFJPEeiyW7NaN4qWdw">
                    <body>Gets the best plan for a tile from the tipMap.&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to lookup.&#xD;
     * @return The best plan for a tile.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHG0cVJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHG0clJPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHG0c1JPEeiyW7NaN4qWdw" name="getBestPlanTile" method="_OLBEE1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiojVJPEeiyW7NaN4qWdw">
                    <body>Gets the best plan for a colony from the tipMap.&#xD;
     *&#xD;
     * @param colony The &lt;code>Colony&lt;/code> to check.&#xD;
     * @return The tile with the best plan for a colony, or null if none found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHG0dFJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHG0dVJPEeiyW7NaN4qWdw" type="_OAYhYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHHbgFJPEeiyW7NaN4qWdw" name="updateTransport" method="_OLBEGFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLioj1JPEeiyW7NaN4qWdw">
                    <body>Update the transport of a unit following a target change.&#xD;
     *&#xD;
     * If the target has changed&#xD;
     * - drop all non-boarded transport unless the target is the same&#xD;
     * - dump boarded transport with no target&#xD;
     * - requeue all boarded transport unless the target is the same&#xD;
     *&#xD;
     * @param aiu The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param oldTarget The old target &lt;code>Location&lt;/code>.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHHbgVJPEeiyW7NaN4qWdw" name="aiu" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHHbglJPEeiyW7NaN4qWdw" name="oldTarget" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHHbg1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHICkFJPEeiyW7NaN4qWdw" name="getNeededWagons" method="_OLBrIFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLioklJPEeiyW7NaN4qWdw">
                    <body>Gets the needed wagons for a tile/contiguity.&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to derive the contiguity from.&#xD;
     * @return The number of wagons needed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHICkVJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHICklJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHIpoFJPEeiyW7NaN4qWdw" name="changeNeedWagon" visibility="private" method="_OLBrI1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiok1JPEeiyW7NaN4qWdw">
                    <body>Changes the needed wagons map for a specified tile/contiguity.&#xD;
     * If the change is zero, that is a special flag that a connected&#xD;
     * port is available, and thus that the map should be initialized&#xD;
     * for that contiguity.&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> to derive the contiguity from.&#xD;
     * @param amount The change to make.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHIpoVJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHIpolJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHIpo1JPEeiyW7NaN4qWdw" name="buildTransportMaps" visibility="private" method="_OLBrJlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiolFJPEeiyW7NaN4qWdw">
                    <body>Rebuild the transport maps.&#xD;
     * Count the number of transports requiring naval/land carriers.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHIppFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHJQsFJPEeiyW7NaN4qWdw" name="rearrangeColonies" visibility="private" method="_OLBrLlJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OHJ3wFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OHJ3wVJPEeiyW7NaN4qWdw" key="generic_container"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLiol1JPEeiyW7NaN4qWdw">
                    <body>Rearrange colonies, collecting workers that now need a&#xD;
     * WorkInsideColonyMission.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return A collection of &lt;code>AIUnit&lt;/code>s that need work.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHJQsVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHJQslJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OHJQs1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHJ3wlJPEeiyW7NaN4qWdw" name="suppressEuropeanTrade" visibility="private" method="_OLBrMlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiomFJPEeiyW7NaN4qWdw">
                    <body>Suppress European trade in a goods type.  A goods party and&#xD;
     * boycott is incoming.&#xD;
     *&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> to suppress.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHJ3w1JPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHJ3xFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHKe0FJPEeiyW7NaN4qWdw" name="getWorkerWishesAt" method="_OLCSMFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiomVJPEeiyW7NaN4qWdw">
                    <body>Gets a list of the wishes at a given location for a unit type.&#xD;
     *&#xD;
     * @param loc The &lt;code>Location&lt;/code> to look for wishes at.&#xD;
     * @param type The &lt;code>UnitType&lt;/code> to look for.&#xD;
     * @return A list of &lt;code>WorkerWish&lt;/code>es.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHKe0VJPEeiyW7NaN4qWdw" name="loc" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHKe0lJPEeiyW7NaN4qWdw" name="type" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHLF4FJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OHLF4VJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHLF4lJPEeiyW7NaN4qWdw" name="getGoodsWishesAt" method="_OLCSNVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLiomlJPEeiyW7NaN4qWdw">
                    <body>Gets a list of the wishes at a given location for a goods type.&#xD;
     *&#xD;
     * @param loc The &lt;code>Location&lt;/code> to look for wishes at.&#xD;
     * @param type The &lt;code>GoodsType&lt;/code> to look for.&#xD;
     * @return A list of &lt;code>GoodsWish&lt;/code>es.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHLs8FJPEeiyW7NaN4qWdw" name="loc" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHLs8VJPEeiyW7NaN4qWdw" name="type" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHLs8lJPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OHLs81JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHMUAFJPEeiyW7NaN4qWdw" name="getBestWorkerWish" method="_OLCSOlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPkFJPEeiyW7NaN4qWdw">
                    <body>Gets the best worker wish for a carrier unit.&#xD;
     *&#xD;
     * @param aiUnit The carrier &lt;code>AIUnit&lt;/code>.&#xD;
     * @param unitType The &lt;code>UnitType&lt;/code> to find a wish for.&#xD;
     * @return The best worker wish for the unit.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHMUAVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHMUAlJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHMUA1JPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHM7EFJPEeiyW7NaN4qWdw" name="getBestGoodsWish" method="_OLCSPlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPkVJPEeiyW7NaN4qWdw">
                    <body>Gets the best goods wish for a carrier unit.&#xD;
     *&#xD;
     * @param aiUnit The carrier &lt;code>AIUnit&lt;/code>.&#xD;
     * @param goodsType The &lt;code>GoodsType&lt;/code> to wish for.&#xD;
     * @return The best &lt;code>GoodsWish&lt;/code> for the unit.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHM7EVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHM7ElJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHM7E1JPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHM7FFJPEeiyW7NaN4qWdw" name="buildWishMaps" visibility="private" method="_OLCSQlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPklJPEeiyW7NaN4qWdw">
                    <body>Rebuilds the goods and worker wishes maps.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHM7FVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHNiIFJPEeiyW7NaN4qWdw" name="trainAIUnitInEurope" method="_OLDgV1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPmlJPEeiyW7NaN4qWdw">
                    <body>Helper function for server communication - Ask the server&#xD;
     * to train a unit in Europe on behalf of the AIGetPlayer().&#xD;
     *&#xD;
     * FIXME: Move this to a specialized Handler class (AIEurope?)&#xD;
     * FIXME: Give protected access?&#xD;
     *&#xD;
     * @return the new AIUnit created by this action. May be null.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHNiIVJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHNiIlJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHOJMFJPEeiyW7NaN4qWdw" name="determineStances" visibility="private" method="_OLDgXVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPnFJPEeiyW7NaN4qWdw">
                    <body>Determines the stances towards each player.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHOJMVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHOJMlJPEeiyW7NaN4qWdw" name="peaceHolds" visibility="private" method="_OLDgX1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPnVJPEeiyW7NaN4qWdw">
                    <body>See if a recent peace treaty still has force.&#xD;
     *&#xD;
     * @param p The &lt;code>Player&lt;/code> to check for a peace treaty with.&#xD;
     * @return True if peace gets another chance.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHOJM1JPEeiyW7NaN4qWdw" name="p" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHOwQFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHOwQVJPEeiyW7NaN4qWdw" name="getNationSummary" visibility="protected" method="_OLEHYFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPnlJPEeiyW7NaN4qWdw">
                    <body>Get a nation summary for another player.&#xD;
     *&#xD;
     * @param other The other &lt;code>Player&lt;/code> to get the summary for.&#xD;
     * @return The current &lt;code>NationSummary&lt;/code> for a player.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHOwQlJPEeiyW7NaN4qWdw" name="other" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHOwQ1JPEeiyW7NaN4qWdw" type="_OBf7sVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHOwRFJPEeiyW7NaN4qWdw" name="getStrengthRatio" visibility="protected" method="_OLEHY1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPn1JPEeiyW7NaN4qWdw">
                    <body>Get the land force strength ratio of this player with respect&#xD;
     * to another.&#xD;
     *&#xD;
     * @param other The other &lt;code>Player&lt;/code>.&#xD;
     * @return The strength ratio (strength/sum(strengths)).</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHPXUFJPEeiyW7NaN4qWdw" name="other" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHPXUVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHPXUlJPEeiyW7NaN4qWdw" name="rejectAgreement" visibility="private" method="_OLEHaFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPoVJPEeiyW7NaN4qWdw">
                    <body>Reject a trade agreement, except if a Franklin-derived stance&#xD;
     * is supplied.&#xD;
     *&#xD;
     * @param stance A stance &lt;code>TradeItem&lt;/code>.&#xD;
     * @param agreement The &lt;code>DiplomaticTrade&lt;/code> to reset.&#xD;
     * @return The &lt;code>TradeStatus&lt;/code> for the agreement.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHPXU1JPEeiyW7NaN4qWdw" name="stance" type="_ODBlsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHPXVFJPEeiyW7NaN4qWdw" name="agreement" type="_OBG6IFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHP-YFJPEeiyW7NaN4qWdw" type="_OBG6IlJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHP-YVJPEeiyW7NaN4qWdw" name="giveNormalMissions" visibility="protected" method="_OLEHbFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPolJPEeiyW7NaN4qWdw">
                    <body>Ensures all units have a mission.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHP-YlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHQlcFJPEeiyW7NaN4qWdw" name="getBuildColonyMission" method="_OLEHcVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPpFJPEeiyW7NaN4qWdw">
                    <body>Gets a new BuildColonyMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param target An optional target &lt;code>Location&lt;/code>.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHQlcVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHQlclJPEeiyW7NaN4qWdw" name="target" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHQlc1JPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHRMglJPEeiyW7NaN4qWdw" name="getPioneeringMission" method="_OLEufVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPqFJPEeiyW7NaN4qWdw">
                    <body>Gets a new PioneeringMission for a unit.&#xD;
     *&#xD;
     * FIXME: pioneers to make roads between colonies&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param target An optional target &lt;code>Location&lt;/code>.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHRzkFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHRzkVJPEeiyW7NaN4qWdw" name="target" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHRzklJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHRzk1JPEeiyW7NaN4qWdw" name="getPrivateerMission" method="_OLEugVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLjPqVJPEeiyW7NaN4qWdw">
                    <body>Gets a new PrivateerMission for a unit.&#xD;
     *&#xD;
     * @param aiUnit The &lt;code>AIUnit&lt;/code> to check.&#xD;
     * @param target An optional target &lt;code>Location&lt;/code>.&#xD;
     * @return A new mission, or null if impossible.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHSaoFJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHSaoVJPEeiyW7NaN4qWdw" name="target" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHSaolJPEeiyW7NaN4qWdw" type="_OAf2IVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHTBslJPEeiyW7NaN4qWdw" name="determineStance" visibility="protected" method="_OLFViFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHTBs1JPEeiyW7NaN4qWdw" name="other" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHTowFJPEeiyW7NaN4qWdw" type="_OCFxkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHUP0lJPEeiyW7NaN4qWdw" name="doMissions" visibility="protected" method="_OLFVjlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHUP01JPEeiyW7NaN4qWdw" name="aiUnits" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHUP1FJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHUP1VJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OHUP1lJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHVd8lJPEeiyW7NaN4qWdw" name="adjustMission" method="_OLFVk1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHVd81JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHVd9FJPEeiyW7NaN4qWdw" name="path" type="_OA--UVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHVd9VJPEeiyW7NaN4qWdw" name="type" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHWFAFJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHWFAVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHXTIFJPEeiyW7NaN4qWdw" name="indianDemand" method="_OLF8kFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHXTIVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHXTIlJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHXTI1JPEeiyW7NaN4qWdw" name="goods" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHXTJFJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHXTJVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHX6MFJPEeiyW7NaN4qWdw" name="acceptDiplomaticTrade" method="_OLGjoFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHX6MVJPEeiyW7NaN4qWdw" name="agreement" type="_OBG6IFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHX6MlJPEeiyW7NaN4qWdw" type="_OBG6IlJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHYhQ1JPEeiyW7NaN4qWdw" name="registerSellGoods" method="_OLGjo1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHYhRFJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHZvYFJPEeiyW7NaN4qWdw" name="buyProposition" method="_OLGjpVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHZvYVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHaWcFJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHaWcVJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHaWclJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHaWc1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHa9gFJPEeiyW7NaN4qWdw" name="sellProposition" method="_OLGjq1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHa9gVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHa9glJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHa9g1JPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHa9hFJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHbkkFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHcysFJPEeiyW7NaN4qWdw" name="selectFoundingFather" method="_OLHKtVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHcysVJPEeiyW7NaN4qWdw" name="ffs" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHcyslJPEeiyW7NaN4qWdw" type="_OBHhMVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NVE6kFJPEeiyW7NaN4qWdw" name="GoodsWish">
                <ownedComment xmi:id="_OLj2o1JPEeiyW7NaN4qWdw">
                  <body>Represents the need for goods within a &lt;code>Colony&lt;/code>.</body>
                </ownedComment>
                <generalization xmi:id="_ODW84FJPEeiyW7NaN4qWdw" general="_NWKfsFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJs1cFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMo0tFJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJs1cVJPEeiyW7NaN4qWdw" value="Logger.getLogger(GoodsWish.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJtchFJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMpbwVJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJuDkFJPEeiyW7NaN4qWdw" name="amountRequested" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJuDklJPEeiyW7NaN4qWdw" name="AMOUNT_REQUESTED_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJuqoFJPEeiyW7NaN4qWdw" value="&quot;amountRequested&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJuqoVJPEeiyW7NaN4qWdw" name="GOODS_TYPE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJuqolJPEeiyW7NaN4qWdw" value="&quot;goodsType&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJuqo1JPEeiyW7NaN4qWdw" name="TRANSPORTABLE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJvRsFJPEeiyW7NaN4qWdw" value="&quot;transportable&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLIY0FJPEeiyW7NaN4qWdw" name="GoodsWish" specification="_ODVuwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLIY0VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLIY0lJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLIY01JPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, id);&#xD;
&#xD;
     goodsType = null;&#xD;
     amountRequested = -1;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLIY1FJPEeiyW7NaN4qWdw" name="GoodsWish" specification="_OHiSQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLIY1VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLIY1lJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLIY11JPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLIY2FJPEeiyW7NaN4qWdw" name="amountRequested">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLIY2VJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLIY2lJPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(aiMain, getXMLElementTagName() + &quot;:&quot; + aiMain.getNextId());&#xD;
&#xD;
     if (destination == null) {&#xD;
         throw new NullPointerException(&quot;destination == null&quot;);&#xD;
     }&#xD;
&#xD;
     this.destination = destination;&#xD;
     setValue(value);&#xD;
     this.goodsType = goodsType;&#xD;
     this.amountRequested = amountRequested;&#xD;
     uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLIY21JPEeiyW7NaN4qWdw" name="GoodsWish" specification="_OHi5VlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLIY3FJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLIY3VJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLIY3lJPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, element);&#xD;
&#xD;
     uninitialized = goodsType == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLI_4FJPEeiyW7NaN4qWdw" name="GoodsWish" specification="_OHjgZFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLI_4VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLI_4lJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLI_41JPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
&#xD;
     uninitialized = goodsType == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLI_5FJPEeiyW7NaN4qWdw" name="update" specification="_OHkHc1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLI_5VJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLI_5lJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLI_51JPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.goodsType = goodsType;&#xD;
     this.amountRequested = amount;&#xD;
     setValue(value);&#xD;
     if (transportable != null) transportable.incrementTransportPriority();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLI_6FJPEeiyW7NaN4qWdw" name="shouldBeStored" specification="_NVGvwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLI_6VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLI_6lJPEeiyW7NaN4qWdw" name="getGoodsAmount" specification="_NVH94lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLI_61JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return amountRequested;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLI_7FJPEeiyW7NaN4qWdw" name="setGoodsAmount" specification="_NVH95FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLI_7VJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>amountRequested = amount;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLI_7lJPEeiyW7NaN4qWdw" name="satisfiedBy" specification="_OHkugFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLI_71JPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLI_8FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return goods.getType() == goodsType&#xD;
         &amp;&amp; goods.getAmount() >= amountRequested;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLI_8VJPEeiyW7NaN4qWdw" name="checkIntegrity" specification="_NVIk8VJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLI_8lJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLI_81JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = super.checkIntegrity(fix);&#xD;
     if (goodsType == null || amountRequested &lt;= 0) result = -1;&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLI_9FJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_OHlVklJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLI_9VJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeAttributes(xw);&#xD;
&#xD;
     xw.writeAttribute(GOODS_TYPE_TAG, goodsType);&#xD;
&#xD;
     xw.writeAttribute(AMOUNT_REQUESTED_TAG, amountRequested);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLI_9lJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OHmjsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLI_91JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readAttributes(xr);&#xD;
&#xD;
     final AIMain aiMain = getAIMain();&#xD;
     final Specification spec = getSpecification();&#xD;
&#xD;
     // Delegated from Wish&#xD;
     transportable = (xr.hasAttribute(TRANSPORTABLE_TAG))&#xD;
         ? xr.makeAIObject(aiMain, TRANSPORTABLE_TAG,&#xD;
                           AIGoods.class, (AIGoods)null, true)&#xD;
         : null;&#xD;
&#xD;
     goodsType = xr.getType(spec, GOODS_TYPE_TAG,&#xD;
                            GoodsType.class, (GoodsType)null);&#xD;
&#xD;
     amountRequested = xr.getAttribute(AMOUNT_REQUESTED_TAG,&#xD;
                                       GoodsContainer.CARGO_SIZE);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLJm8FJPEeiyW7NaN4qWdw" name="readChildren" specification="_OHnKwlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLJm8VJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readChildren(xr);&#xD;
&#xD;
     if (goodsType != null &amp;&amp; amountRequested > 0) uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLJm8lJPEeiyW7NaN4qWdw" name="toString" specification="_NVKaIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLJm81JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>LogBuilder lb = new LogBuilder(32);&#xD;
     lb.add(&quot;[&quot;, getId(),&#xD;
         &quot; &quot;, amountRequested,&#xD;
         &quot; &quot;, ((goodsType == null) ? &quot;null&quot; : goodsType.getSuffix()),&#xD;
         &quot; -> &quot;, destination,&#xD;
         &quot; (&quot;, getValue(), &quot;)]&quot;);&#xD;
     return lb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLJm9FJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_NVLoQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLJm9VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getXMLElementTagName(); </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLKOAFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_NVMPU1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLKOAVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return &quot;goodsWish&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NVGvwFJPEeiyW7NaN4qWdw" name="shouldBeStored" method="_OLI_6FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NVHW0FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVH94lJPEeiyW7NaN4qWdw" name="getGoodsAmount" method="_OLI_6lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLj2qlJPEeiyW7NaN4qWdw">
                    <body>Gets the amount of goods wished for.&#xD;
     *&#xD;
     * @return The amount of goods wished for.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NVH941JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVH95FJPEeiyW7NaN4qWdw" name="setGoodsAmount" method="_OLI_7FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLj2q1JPEeiyW7NaN4qWdw">
                    <body>Sets the amount of goods wished for.&#xD;
     * Called in AIColony when the colony needs to change the required goods&#xD;
     * amount.&#xD;
     *&#xD;
     * @param amount The new amount of goods wished for.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NVIk8FJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVIk8VJPEeiyW7NaN4qWdw" name="checkIntegrity" method="_OLI_8VJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NVJMAFJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NVJMAVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVKaIFJPEeiyW7NaN4qWdw" name="toString" method="_OLJm8lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NVKaIVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVLoQFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_OLJm9FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NVLoQVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVMPU1JPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_OLKOAFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLj2rVJPEeiyW7NaN4qWdw">
                    <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;goodsWish&quot;</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NVM2YFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ODVuwFJPEeiyW7NaN4qWdw" name="GoodsWish" method="_OLIY0FJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_ODWV0FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ODWV0VJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLj2pVJPEeiyW7NaN4qWdw">
                    <body>Creates a new uninitialized &lt;code>GoodsWish&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param id The object identifier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODVuwVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODVuwlJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ODWV0lJPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHiSQFJPEeiyW7NaN4qWdw" name="GoodsWish" method="_OLIY1FJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OHi5U1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OHi5VFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLj2plJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>GoodsWish&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param destination The &lt;code>Location&lt;/code> in which the&#xD;
     *       {@link Wish#getTransportable transportable} assigned to&#xD;
     *       this &lt;code>GoodsWish&lt;/code> will have to reach.&#xD;
     * @param value The value identifying the importance of&#xD;
     *       this &lt;code>Wish&lt;/code>.&#xD;
     * @param amountRequested The amount requested.&#xD;
     * @param goodsType The type of goods needed for releasing this wish&#xD;
     *       completly.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHiSQVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHiSQlJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHi5UFJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHi5UVJPEeiyW7NaN4qWdw" name="amountRequested">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHi5UlJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHi5VVJPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHi5VlJPEeiyW7NaN4qWdw" name="GoodsWish" method="_OLIY21JPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OHjgYVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OHjgYlJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLj2p1JPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>GoodsWish&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param element The root element for the XML-representation&#xD;
     *       of a &lt;code>Wish&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHi5V1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHjgYFJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHjgY1JPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHjgZFJPEeiyW7NaN4qWdw" name="GoodsWish" method="_OLI_4FJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OHkHcFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OHkHcVJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLj2qFJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>GoodsWish&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHjgZVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHjgZlJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHkHclJPEeiyW7NaN4qWdw" type="_NVE6kFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHkHc1JPEeiyW7NaN4qWdw" name="update" method="_OLI_5FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLj2qVJPEeiyW7NaN4qWdw">
                    <body>Updates this &lt;code>GoodsWish&lt;/code> with the given attributes.&#xD;
     *&#xD;
     * @param goodsType The &lt;code>GoodsType&lt;/code> to wish for.&#xD;
     * @param amount The amount of goods.&#xD;
     * @param value The urgency of the wish.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHkHdFJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHkHdVJPEeiyW7NaN4qWdw" name="amount">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHkHdlJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHkugFJPEeiyW7NaN4qWdw" name="satisfiedBy" method="_OLI_7lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLj2rFJPEeiyW7NaN4qWdw">
                    <body>Does some specified goods satisfy this wish?&#xD;
     *&#xD;
     * @param goods The &lt;code>Goods&lt;/code> to test.&#xD;
     * @return True if the goods type matches and amount is not less than&#xD;
     *     that requested.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHlVkFJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHlVkVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHlVklJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_OLI_9FJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHlVk1JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHmjsFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OLI_9lJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHmjsVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHnKwlJPEeiyW7NaN4qWdw" name="readChildren" visibility="protected" method="_OLJm8FJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHnx0FJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NVRH0FJPEeiyW7NaN4qWdw" name="NativeAIPlayer">
                <ownedComment xmi:id="_OLkdsFJPEeiyW7NaN4qWdw">
                  <body>Objects of this class contains AI-information for a single {@link&#xD;
Player} and is used for controlling this player.&#xD;
 *&#xD;
The method {@link #startWorking} gets called by the&#xD;
{@link AIInGameInputHandler} when it is this player's turn.</body>
                </ownedComment>
                <generalization xmi:id="_ODanQFJPEeiyW7NaN4qWdw" general="_NSHGIFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJvRsVJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMqC0VJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJv4wFJPEeiyW7NaN4qWdw" value="Logger.getLogger(NativeAIPlayer.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJv4wVJPEeiyW7NaN4qWdw" name="MAX_DISTANCE_TO_BRING_GIFTS" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJv4wlJPEeiyW7NaN4qWdw" value="5"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJwf0FJPEeiyW7NaN4qWdw" name="MAX_NUMBER_OF_GIFTS_BEING_DELIVERED" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJwf0VJPEeiyW7NaN4qWdw" value="1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJwf0lJPEeiyW7NaN4qWdw" name="MAX_DISTANCE_TO_MAKE_DEMANDS" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJwf01JPEeiyW7NaN4qWdw" value="5"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJwf1FJPEeiyW7NaN4qWdw" name="MAX_NUMBER_OF_DEMANDS" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJwf1VJPEeiyW7NaN4qWdw" value="1"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJwf1lJPEeiyW7NaN4qWdw" name="sessionRegister" visibility="private" isLeaf="true" type="_OBU8kFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMqp4VJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJxG4VJPEeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJxt8VJPEeiyW7NaN4qWdw" name="reasons" visibility="private" isLeaf="true" type="_OBU8klJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMrQ8VJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJyVAVJPEeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLKOAlJPEeiyW7NaN4qWdw" name="NativeAIPlayer" specification="_OHo_8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLKOA1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLKOBFJPEeiyW7NaN4qWdw" name="player" type="_OBOO4lJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLKOBVJPEeiyW7NaN4qWdw" type="_NVRH0FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, player);&#xD;
&#xD;
     uninitialized = getPlayer() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLKOBlJPEeiyW7NaN4qWdw" name="NativeAIPlayer" specification="_OHpnAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLKOB1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLKOCFJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLKOCVJPEeiyW7NaN4qWdw" type="_NVRH0FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
&#xD;
     uninitialized = getPlayer() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLKOClJPEeiyW7NaN4qWdw" name="initializeMissions" specification="_OHqOEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLKOC1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final AIMain aiMain = getAIMain();&#xD;
     final Player player = getPlayer();&#xD;
     lb.add(&quot;\n  Initialize&quot;);&#xD;
&#xD;
     // Give defensive missions up to the minimum expected defence,&#xD;
     // leave the rest with the default wander-hostile mission.&#xD;
     List&lt;Unit> units = new ArrayList&lt;>();&#xD;
     for (IndianSettlement is : player.getIndianSettlements()) {&#xD;
         units.clear();&#xD;
         units.addAll(is.getTile().getUnitList());&#xD;
         units.addAll(is.getUnitList());&#xD;
         while (units.size() > is.getRequiredDefenders()) {&#xD;
             Unit u = units.remove(0);&#xD;
             AIUnit aiu = getAIUnit(u);&#xD;
             Mission m = getWanderHostileMission(aiu);&#xD;
             if (m != null) lb.add(&quot; &quot;, m);&#xD;
         }&#xD;
         for (Unit u : units) {&#xD;
             AIUnit aiu = getAIUnit(u);&#xD;
             Mission m = getDefendSettlementMission(aiu, is);&#xD;
             if (m != null) lb.add(&quot; &quot;, m);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLK1EFJPEeiyW7NaN4qWdw" name="determineStances" specification="_OHqOElJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLK1EVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final ServerPlayer serverPlayer = (ServerPlayer)getPlayer();&#xD;
     lb.mark();&#xD;
&#xD;
     for (Player p : getGame().getLivePlayers(serverPlayer)) {&#xD;
         Stance newStance = determineStance(p);&#xD;
         if (newStance != serverPlayer.getStance(p)) {&#xD;
             getAIMain().getFreeColServer().getInGameController()&#xD;
                 .changeStance(serverPlayer, newStance, &#xD;
                               (ServerPlayer)p, true);&#xD;
             lb.add(&quot; &quot;, p.getDebugName(), &quot;->&quot;, newStance, &quot;, &quot;);&#xD;
         }&#xD;
     }&#xD;
     if (lb.grew(&quot;\n  Stance changes:&quot;)) lb.shrink(&quot;, &quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLK1ElJPEeiyW7NaN4qWdw" name="secureSettlements" specification="_OHq1IFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLK1E1JPEeiyW7NaN4qWdw" name="randoms">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLK1FFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLK1FVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>int randomIdx = 0;&#xD;
     List&lt;IndianSettlement> settlements&#xD;
         = getPlayer().getIndianSettlements();&#xD;
     for (IndianSettlement is : settlements) {&#xD;
         // Spread arms and horses between camps&#xD;
         // FIXME: maybe make this dependent on difficulty level?&#xD;
         int n = randoms[randomIdx++];&#xD;
         IndianSettlement settlement = settlements.get(n);&#xD;
         if (settlement != is) {&#xD;
             is.tradeGoodsWithSettlement(settlement);&#xD;
         }&#xD;
     }&#xD;
     for (IndianSettlement is : settlements) {&#xD;
         lb.mark();&#xD;
         equipBraves(is, lb);&#xD;
         secureIndianSettlement(is, lb);&#xD;
         if (lb.grew(&quot;\n  At &quot;, is.getName())) lb.shrink(&quot;, &quot;);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLK1FlJPEeiyW7NaN4qWdw" name="equipBraves" specification="_OHrcMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLK1F1JPEeiyW7NaN4qWdw" name="is" type="_ODAXkFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLK1GFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Specification spec = getSpecification();&#xD;
&#xD;
     // Find all the units&#xD;
     List&lt;Unit> units = is.getUnitList();&#xD;
     units.addAll(is.getTile().getUnitList());&#xD;
&#xD;
     // Prioritize promoting partially equipped units to full dragoon&#xD;
     Collections.sort(units,&#xD;
         getGame().getCombatModel().getMilitaryStrengthComparator());&#xD;
&#xD;
     boolean moreHorses = true, moreMuskets = true;&#xD;
     for (Unit u : units) {&#xD;
         Role r = is.canImproveUnitMilitaryRole(u);&#xD;
         if (r != null) {&#xD;
             Role old = u.getRole();&#xD;
             if (getAIUnit(u).equipForRole(r) &amp;&amp; u.getRole() != old) {&#xD;
                 lb.add(u, &quot; upgraded from &quot;, old.getSuffix(), &quot;, &quot;);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLK1GVJPEeiyW7NaN4qWdw" name="secureIndianSettlement" specification="_OHsDQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLK1GlJPEeiyW7NaN4qWdw" name="is" type="_ODAXkFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_OLK1G1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_OLK1HFJPEeiyW7NaN4qWdw" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLK1HVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final AIMain aiMain = getAIMain();&#xD;
     final Player player = getPlayer();&#xD;
     final CombatModel cm = getGame().getCombatModel();&#xD;
     final int minimumDefence = is.getType().getMinimumSize() - 1;&#xD;
     DefendSettlementMission dm;&#xD;
&#xD;
     // Collect native units and defenders&#xD;
     List&lt;Unit> units = new ArrayList&lt;>();&#xD;
     List&lt;Unit> defenders = new ArrayList&lt;>();&#xD;
     units.addAll(is.getUnitList());&#xD;
     units.addAll(is.getTile().getUnitList());&#xD;
     for (Unit u : is.getOwnedUnits()) {&#xD;
         if (!units.contains(u)) units.add(u);&#xD;
     }&#xD;
&#xD;
     // Collect the current defenders&#xD;
     for (Unit u : new ArrayList&lt;>(units)) {&#xD;
         AIUnit aiu = aiMain.getAIUnit(u);&#xD;
         if (aiu == null) {&#xD;
             units.remove(u);&#xD;
         } else if ((dm = aiu.getMission(DefendSettlementMission.class)) != null&#xD;
             &amp;&amp; dm.getTarget() == is) {&#xD;
             defenders.add(u);&#xD;
             units.remove(u);&#xD;
         } else if (Mission.invalidNewMissionReason(aiu) != null) {&#xD;
             units.remove(u);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Collect threats and other potential defenders&#xD;
     final HashMap&lt;Tile, Double> threats = new HashMap&lt;>();&#xD;
     Player enemy;&#xD;
     Tension tension;&#xD;
     for (Tile t : is.getTile().getSurroundingTiles(is.getRadius() + 1)) {&#xD;
         if (!t.isLand() || t.getUnitCount() == 0) {&#xD;
             ; // Do nothing&#xD;
         } else if ((enemy = t.getFirstUnit().getOwner()) == player) {&#xD;
             // Its one of ours!&#xD;
             for (Unit u : t.getUnitList()) {&#xD;
                 AIUnit aiu;&#xD;
                 if (defenders.contains(u) || units.contains(u)&#xD;
                     || (aiu = aiMain.getAIUnit(u)) == null) {&#xD;
                     ; // Do nothing&#xD;
                 } else if ((dm = aiu.getMission(DefendSettlementMission.class)) != null&#xD;
                     &amp;&amp; dm.getTarget() == is) {&#xD;
                     defenders.add(u);&#xD;
                 } else if (Mission.invalidNewMissionReason(aiu) == null) {&#xD;
                     units.add(u);&#xD;
                 }&#xD;
             }&#xD;
         } else if ((tension = is.getAlarm(enemy)) == null&#xD;
             || tension.getLevel().compareTo(Tension.Level.CONTENT) &lt;= 0) {&#xD;
             ; // Not regarded as a threat&#xD;
         } else {&#xD;
             // Evaluate the threat&#xD;
             double threshold, bonus, value = 0.0;&#xD;
             if (tension.getLevel().compareTo(Tension.Level.DISPLEASED) &lt;= 0) {&#xD;
                 threshold = 1.0;&#xD;
                 bonus = 0.0f;&#xD;
             } else {&#xD;
                 threshold = 0.0;&#xD;
                 bonus = (float)tension.getLevel().ordinal()&#xD;
                     - Tension.Level.CONTENT.ordinal();&#xD;
             }&#xD;
             value += t.getUnitList().stream()&#xD;
                 .filter(u -> cm.getOffencePower(u, is) > threshold)&#xD;
                 .mapToDouble(u -> cm.getOffencePower(u, is) + bonus).sum();&#xD;
             if (value > 0.0) threats.put(t, value);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Sort the available units by proximity to the settlement.&#xD;
     // Simulates favouring the first warriors found by outgoing messengers.&#xD;
     // Also favour units native to the settlement.&#xD;
     final int homeBonus = 3;&#xD;
     final Tile isTile = is.getTile();&#xD;
     final Comparator&lt;Unit> isComparator&#xD;
         = new Comparator&lt;Unit>() {&#xD;
             @Override&#xD;
             public int compare(Unit u1, Unit u2) {&#xD;
                 Tile t1 = u1.getTile();&#xD;
                 int s1 = t1.getDistanceTo(isTile);&#xD;
                 Tile t2 = u2.getTile();&#xD;
                 int s2 = t2.getDistanceTo(isTile);&#xD;
                 if (u1.getHomeIndianSettlement() == is) s1 -= homeBonus;&#xD;
                 if (u2.getHomeIndianSettlement() == is) s2 -= homeBonus;&#xD;
                 return s1 - s2;&#xD;
             }&#xD;
        };&#xD;
&#xD;
     // Do we need more or less defenders?&#xD;
     int needed = minimumDefence + threats.size();&#xD;
     if (defenders.size() &lt; needed) { // More needed, call some in.&#xD;
         Collections.sort(units, isComparator);&#xD;
         while (!units.isEmpty()) {&#xD;
             Unit u = units.remove(0);&#xD;
             AIUnit aiu = aiMain.getAIUnit(u);&#xD;
             Mission m = getDefendSettlementMission(aiu, is);&#xD;
             if (m != null) {&#xD;
                 lb.add(m, &quot;, &quot;);&#xD;
                 defenders.add(u);&#xD;
                 if (defenders.size() >= needed) break;&#xD;
             }&#xD;
         }&#xD;
     } else if (defenders.size() > needed) { // Less needed, release them&#xD;
         Collections.sort(defenders, isComparator);&#xD;
         Collections.reverse(defenders);&#xD;
         while (defenders.size() > needed) {&#xD;
             units.add(defenders.remove(0));&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Sort threat tiles by threat value.&#xD;
     List&lt;Tile> threatTiles = new ArrayList&lt;>(threats.keySet());&#xD;
     Collections.sort(threatTiles, new Comparator&lt;Tile>() {&#xD;
             @Override&#xD;
             public int compare(Tile t1, Tile t2) {&#xD;
                 return Double.compare(threats.get(t2),&#xD;
                         threats.get(t1));&#xD;
             }&#xD;
         });&#xD;
&#xD;
     if (!defenders.isEmpty()) {&#xD;
         lb.add(&quot; defend with:&quot;);&#xD;
         for (Unit u : defenders) lb.add(&quot; &quot;, u);&#xD;
         lb.add(&quot; minimum=&quot;, minimumDefence,&#xD;
                &quot; threats=&quot;, threats.size(), &quot;, &quot;);&#xD;
     }&#xD;
&#xD;
     // Assign units to attack the threats, greedily chosing closest unit.&#xD;
     while (!threatTiles.isEmpty() &amp;&amp; !units.isEmpty()) {&#xD;
         Tile tile = threatTiles.remove(0);&#xD;
         int bestDistance = Integer.MAX_VALUE;&#xD;
         Unit unit = null;&#xD;
         for (Unit u : units) {&#xD;
             AIUnit aiu = aiMain.getAIUnit(u);&#xD;
             if (UnitSeekAndDestroyMission.invalidReason(aiu,&#xD;
                     tile.getDefendingUnit(u)) != null) continue;&#xD;
             int distance = u.getTile().getDistanceTo(tile);&#xD;
             if (bestDistance > distance) {&#xD;
                 bestDistance = distance;&#xD;
                 unit = u;&#xD;
             }&#xD;
         }&#xD;
         if (unit == null) continue; // Declined to attack.&#xD;
         units.remove(unit);&#xD;
         AIUnit aiUnit = aiMain.getAIUnit(unit);&#xD;
         Unit target = tile.getDefendingUnit(unit);&#xD;
         Mission m = getSeekAndDestroyMission(aiUnit, target);&#xD;
         if (m != null) lb.add(m, &quot;, &quot;);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLK1HlJPEeiyW7NaN4qWdw" name="giveNormalMissions" specification="_OHsDRVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLK1H1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final AIMain aiMain = getAIMain();&#xD;
     final Player player = getPlayer();&#xD;
     final Specification spec = getSpecification();&#xD;
     final int turnNumber = getGame().getTurn().getNumber();&#xD;
     List&lt;AIUnit> aiUnits = getAIUnits();&#xD;
&#xD;
     lb.mark();&#xD;
     List&lt;AIUnit> done = new ArrayList&lt;>();&#xD;
     reasons.clear();&#xD;
     for (AIUnit aiUnit : aiUnits) {&#xD;
         final Unit unit = aiUnit.getUnit();&#xD;
         Mission m = aiUnit.getMission();&#xD;
         String reason = null;&#xD;
&#xD;
         if (unit.isUninitialized() || unit.isDisposed()) {&#xD;
             reasons.put(unit, &quot;Invalid&quot;);&#xD;
&#xD;
         } else if (m != null &amp;&amp; m.isValid() &amp;&amp; !m.isOneTime()) {&#xD;
             reasons.put(unit, &quot;Valid&quot;);&#xD;
&#xD;
         } else { // Unit needs a mission&#xD;
             continue;&#xD;
         }&#xD;
         done.add(aiUnit);&#xD;
     }&#xD;
     aiUnits.removeAll(done);&#xD;
     done.clear();&#xD;
&#xD;
     for (AIUnit aiUnit : aiUnits) {&#xD;
         final Unit unit = aiUnit.getUnit();&#xD;
         final Settlement settlement = unit.getSettlement();&#xD;
         final IndianSettlement is = unit.getHomeIndianSettlement();&#xD;
         Mission m = aiUnit.getMission();&#xD;
         &#xD;
         if (settlement != null &amp;&amp; settlement.getUnitCount()&#xD;
             + settlement.getTile().getUnitCount() &lt;= 1) {&#xD;
             // First see to local settlement defence&#xD;
             if (!(m instanceof DefendSettlementMission)&#xD;
                 || m.getTarget() != settlement) {&#xD;
                 m = getDefendSettlementMission(aiUnit, settlement);&#xD;
                 if (m == null) continue;&#xD;
                 lb.add(m, &quot;, &quot;);&#xD;
             }&#xD;
             reasons.put(unit, &quot;Defend-&quot; + settlement.getName());&#xD;
&#xD;
         } else if (is != null&#xD;
             &amp;&amp; is.canImproveUnitMilitaryRole(unit) != null) {&#xD;
             // Go home for new equipment if the home settlement has it&#xD;
             if (!(m instanceof DefendSettlementMission)&#xD;
                 || m.getTarget() != is) {&#xD;
                 m = getDefendSettlementMission(aiUnit, is);&#xD;
                 if (m == null) continue;&#xD;
                 lb.add(m, &quot;, &quot;);&#xD;
             }&#xD;
             reasons.put(unit, &quot;Equip-&quot; + is.getName());&#xD;
&#xD;
         } else {&#xD;
             // Go out looking for trouble&#xD;
             if (!(m instanceof UnitWanderHostileMission)) {&#xD;
                 m = getWanderHostileMission(aiUnit);&#xD;
                 if (m == null) continue;&#xD;
                 lb.add(m, &quot;, &quot;);&#xD;
             }&#xD;
             reasons.put(unit, &quot;Patrol&quot;);&#xD;
         }&#xD;
         done.add(aiUnit);&#xD;
     }&#xD;
     aiUnits.removeAll(done);&#xD;
     done.clear();&#xD;
&#xD;
     // Log&#xD;
     if (lb.grew(&quot;\n  Mission changes: &quot;)) lb.shrink(&quot;, &quot;);&#xD;
     if (!aiUnits.isEmpty()) {&#xD;
         lb.add(&quot;\n  Free Land Units:&quot;);&#xD;
         for (AIUnit aiu : aiUnits) lb.add(&quot; &quot;, aiu.getUnit());&#xD;
     }&#xD;
     lb.add(&quot;\n  Missions(settlements=&quot;,&#xD;
         player.getNumberOfSettlements(), &quot;)&quot;);&#xD;
     logMissions(reasons, lb);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLK1IFJPEeiyW7NaN4qWdw" name="bringGifts" specification="_OHsqUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLK1IVJPEeiyW7NaN4qWdw" name="randoms">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLK1IlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLK1I1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     final CostDecider cd = CostDeciders.numberOfLegalTiles();&#xD;
     final int giftProbability = getSpecification()&#xD;
         .getInteger(GameOptions.GIFT_PROBABILITY);&#xD;
     int randomIdx = 0;&#xD;
     lb.mark();&#xD;
&#xD;
     for (IndianSettlement is : player.getIndianSettlements()) {&#xD;
         // Do not bring gifts all the time.&#xD;
         if (randoms[randomIdx++] >= giftProbability) continue;&#xD;
&#xD;
         // Check if the settlement has anything to give.&#xD;
         Goods gift = is.getRandomGift(getAIRandom());&#xD;
         if (gift == null) continue;&#xD;
&#xD;
         // Check if there are available units, and if there are already&#xD;
         // enough missions in operation.&#xD;
         List&lt;Unit> availableUnits = new ArrayList&lt;>();&#xD;
         int alreadyAssignedUnits = 0;&#xD;
         for (Unit ou : is.getOwnedUnits()) {&#xD;
             AIUnit aiu = getAIUnit(ou);&#xD;
             if (aiu == null) {&#xD;
                 continue;&#xD;
             } else if (aiu.hasMission(IndianBringGiftMission.class)) {&#xD;
                 alreadyAssignedUnits++;&#xD;
             } else if (Mission.invalidNewMissionReason(aiu) == null) {&#xD;
                 availableUnits.add(ou);&#xD;
             }&#xD;
         }&#xD;
         if (alreadyAssignedUnits > MAX_NUMBER_OF_GIFTS_BEING_DELIVERED) {&#xD;
             lb.add(is.getName(), &quot; has &quot;, alreadyAssignedUnits, &#xD;
                    &quot; already, &quot;);&#xD;
             continue;&#xD;
         } else if (availableUnits.isEmpty()) {&#xD;
             lb.add(is.getName(), &quot; has no gift units, &quot;);&#xD;
             continue;&#xD;
         }&#xD;
         // Pick a random available capable unit.&#xD;
         Unit unit = null;&#xD;
         AIUnit aiUnit = null;&#xD;
         Tile home = is.getTile();&#xD;
         while (unit == null &amp;&amp; !availableUnits.isEmpty()) {&#xD;
             Unit u = availableUnits.get(randomInt(logger, &quot;Gift unit&quot;,&#xD;
                     getAIRandom(), availableUnits.size()));&#xD;
             availableUnits.remove(u);&#xD;
             aiUnit = getAIUnit(u);&#xD;
             if (IndianBringGiftMission.invalidReason(aiUnit) == null&#xD;
                 &amp;&amp; u.findPath(u.getTile(), home, null, cd) != null) {&#xD;
                 unit = u;&#xD;
             }&#xD;
         }&#xD;
         if (unit == null) {&#xD;
             lb.add(is.getName(), &quot; found no gift unit, &quot;);&#xD;
             continue;&#xD;
         }&#xD;
&#xD;
         // Collect nearby colonies.  Filter out ones which are uncontacted,&#xD;
         // unreachable or otherwise unsuitable.  Score the rest on alarm&#xD;
         // and distance.&#xD;
         List&lt;RandomChoice&lt;Colony>> nearbyColonies = new ArrayList&lt;>();&#xD;
         for (Tile t : home.getSurroundingTiles(MAX_DISTANCE_TO_BRING_GIFTS)) {&#xD;
             Colony c = t.getColony();&#xD;
             PathNode path;&#xD;
             if (c == null&#xD;
                 || !is.hasContacted(c.getOwner())&#xD;
                 || IndianBringGiftMission.invalidReason(aiUnit, c) != null&#xD;
                 || (path = unit.findPath(home, c.getTile(),&#xD;
                                          null, cd)) == null) continue;&#xD;
             int alarm = Math.max(1, is.getAlarm(c.getOwner()).getValue());&#xD;
             nearbyColonies.add(new RandomChoice&lt;>(c,&#xD;
                     1000000 / alarm / path.getTotalTurns()));&#xD;
         }&#xD;
&#xD;
         // If there are any suitable colonies, pick a random one&#xD;
         // to send a gift to.&#xD;
         if (nearbyColonies.isEmpty()) {&#xD;
             lb.add(is.getName(), &quot; found no gift colonies, &quot;);&#xD;
             continue;&#xD;
         }&#xD;
         Colony target = RandomChoice.getWeightedRandom(logger,&#xD;
             &quot;Choose gift colony&quot;, nearbyColonies, getAIRandom());&#xD;
         if (target == null) {&#xD;
             throw new IllegalStateException(&quot;No gift target!?!&quot;);&#xD;
         }&#xD;
&#xD;
         // Send the unit.&#xD;
         Mission m = new IndianBringGiftMission(getAIMain(), aiUnit, target);&#xD;
         lb.add(m, &quot; gift from &quot;, is.getName(),&#xD;
                &quot; to &quot;, target.getName(), &quot;, &quot;);&#xD;
     }&#xD;
     if (lb.grew(&quot;\n  Gifts: &quot;)) lb.shrink(&quot;, &quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLK1JFJPEeiyW7NaN4qWdw" name="demandTribute" specification="_OHtRYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLK1JVJPEeiyW7NaN4qWdw" name="randoms">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLK1JlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLK1J1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     final CostDecider cd = CostDeciders.numberOfLegalTiles();&#xD;
     final int demandProbability = getSpecification()&#xD;
         .getInteger(GameOptions.DEMAND_PROBABILITY);&#xD;
     int randomIdx = 0;&#xD;
     lb.mark();&#xD;
&#xD;
     for (IndianSettlement is : player.getIndianSettlements()) {&#xD;
         // Do not demand tribute all of the time.&#xD;
         if (randoms[randomIdx++] >= demandProbability) continue;&#xD;
&#xD;
         // Check if there are available units, and if there are already&#xD;
         // enough missions in operation.&#xD;
         List&lt;Unit> availableUnits = new ArrayList&lt;>();&#xD;
         int alreadyAssignedUnits = 0;&#xD;
         for (Unit ou : is.getOwnedUnits()) {&#xD;
             AIUnit aiu = getAIUnit(ou);&#xD;
             if (Mission.invalidNewMissionReason(aiu) == null) {&#xD;
                 if (aiu.hasMission(IndianDemandMission.class)) {&#xD;
                     alreadyAssignedUnits++;&#xD;
                 } else {&#xD;
                     availableUnits.add(ou);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         if (alreadyAssignedUnits > MAX_NUMBER_OF_DEMANDS) {&#xD;
             lb.add(is.getName(), &quot; has &quot;, alreadyAssignedUnits,&#xD;
                    &quot; already, &quot;);&#xD;
             continue;&#xD;
         } else if (availableUnits.isEmpty()) {&#xD;
             lb.add(is.getName(), &quot; has no demand units, &quot;);&#xD;
             continue;&#xD;
         }&#xD;
         // Pick a random available capable unit.&#xD;
         Tile home = is.getTile();&#xD;
         Unit unit = null;&#xD;
         AIUnit aiUnit = null;&#xD;
         while (unit == null &amp;&amp; !availableUnits.isEmpty()) {&#xD;
             Unit u = availableUnits.get(randomInt(logger, &quot;Demand unit&quot;,&#xD;
                     getAIRandom(), availableUnits.size()));&#xD;
             availableUnits.remove(u);&#xD;
             aiUnit = getAIUnit(u);&#xD;
             if (IndianDemandMission.invalidReason(aiUnit) == null&#xD;
                 &amp;&amp; u.findPath(u.getTile(), home, null, cd) != null) {&#xD;
                 unit = u;&#xD;
             }&#xD;
         }&#xD;
         if (unit == null) {&#xD;
             lb.add(is.getName(), &quot; found no demand unit, &quot;);&#xD;
             continue;&#xD;
         }&#xD;
&#xD;
         // Collect nearby colonies.  Filter out ones which are unreachable&#xD;
         // or with which the settlement is on adequate terms.&#xD;
         List&lt;RandomChoice&lt;Colony>> nearbyColonies = new ArrayList&lt;>();&#xD;
         for (Tile t : home.getSurroundingTiles(MAX_DISTANCE_TO_MAKE_DEMANDS)) {&#xD;
             Colony c = t.getColony();&#xD;
             PathNode path;&#xD;
             if (c == null&#xD;
                 || !is.hasContacted(c.getOwner())&#xD;
                 || IndianDemandMission.invalidReason(aiUnit, c) != null&#xD;
                 || (path = unit.findPath(home, c.getTile(),&#xD;
                                          null, cd)) == null) continue;&#xD;
             int alarm = is.getAlarm(c.getOwner()).getValue();&#xD;
             int defence = c.getUnitCount() + ((c.getStockade() == null) ? 1&#xD;
                 : (c.getStockade().getLevel() * 10));&#xD;
             int weight = 1 + alarm * (1000000 / defence&#xD;
                                               / path.getTotalTurns());&#xD;
             nearbyColonies.add(new RandomChoice&lt;>(c, weight));&#xD;
         }&#xD;
         // If there are any suitable colonies, pick one to demand from.&#xD;
         // Sometimes a random one, sometimes the weakest, sometimes the&#xD;
         // most annoying.&#xD;
         if (nearbyColonies.isEmpty()) {&#xD;
             lb.add(is.getName(), &quot; found no demand colonies, &quot;);&#xD;
             continue;&#xD;
         }&#xD;
         Colony target = RandomChoice.getWeightedRandom(logger,&#xD;
             &quot;Choose demand colony&quot;, nearbyColonies, getAIRandom());&#xD;
         if (target == null) {&#xD;
             lb.add(is.getName(), &quot; found no demand target, &quot;);&#xD;
             continue;&#xD;
         }&#xD;
&#xD;
         // Send the unit.&#xD;
         Mission m = new IndianDemandMission(getAIMain(), aiUnit, target);&#xD;
         lb.add(&quot;At &quot;, is.getName(), &quot; &quot;, m,&#xD;
                &quot; will demand of &quot;, target, &quot;, &quot;);&#xD;
     }&#xD;
     if (lb.grew(&quot;\n  Tribute: &quot;)) lb.shrink(&quot;, &quot;);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLK1KFJPEeiyW7NaN4qWdw" name="getShipTradePenalties" specification="_NVTkEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLK1KVJPEeiyW7NaN4qWdw" name="sense">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLK1KlJPEeiyW7NaN4qWdw" type="_OCqZUVJPEeiyW7NaN4qWdw" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLK1K1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Specification spec = getSpecification();&#xD;
     int penalty = spec.getInteger(GameOptions.SHIP_TRADE_PENALTY);&#xD;
     Set&lt;Modifier> result = new HashSet&lt;>();&#xD;
     for (Modifier m : spec.getModifiers(Modifier.SHIP_TRADE_PENALTY)) {&#xD;
         Modifier n = new Modifier(m);&#xD;
         n.setValue((sense) ? penalty : -penalty);&#xD;
         result.add(n);&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLK1LFJPEeiyW7NaN4qWdw" name="abortInvalidMissions" specification="_NVULIFJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>for (AIUnit au : getAIUnits()) {&#xD;
         Mission mission = au.getMission();&#xD;
         String reason = (mission == null) ? null : mission.invalidReason();&#xD;
         if (reason != null) au.setMission(null);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLK1LVJPEeiyW7NaN4qWdw" name="startWorking" specification="_NVULIVJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     final Turn turn = getGame().getTurn();&#xD;
     final int nSettlements = player.getNumberOfSettlements();&#xD;
     final Random air = getAIRandom();&#xD;
&#xD;
     LogBuilder lb = new LogBuilder(1024);&#xD;
     lb.add(player.getDebugName(), &quot; in &quot;, turn, &quot;/&quot;, turn.getNumber());&#xD;
&#xD;
     sessionRegister.clear();&#xD;
     clearAIUnits();&#xD;
&#xD;
     determineStances(lb);&#xD;
     List&lt;AIUnit> more;&#xD;
     if (turn.isFirstTurn()) {&#xD;
         initializeMissions(lb);&#xD;
         more = getAIUnits();&#xD;
     } else {&#xD;
         int[] randoms;&#xD;
         abortInvalidMissions();&#xD;
         randoms = randomInts(logger, &quot;Trades&quot;, air,&#xD;
                              nSettlements, nSettlements);&#xD;
         secureSettlements(randoms, lb);&#xD;
         randoms = randomInts(logger, &quot;Gifts&quot;, air, 100, nSettlements);&#xD;
         bringGifts(randoms, lb);&#xD;
         randoms = randomInts(logger, &quot;Tribute&quot;, air, 100, nSettlements);&#xD;
         demandTribute(randoms, lb);&#xD;
         giveNormalMissions(lb);&#xD;
         more = doMissions(getAIUnits(), lb);&#xD;
     }&#xD;
&#xD;
     if (!more.isEmpty()) {&#xD;
         abortInvalidMissions();&#xD;
         giveNormalMissions(lb);&#xD;
         doMissions(more, lb);&#xD;
     }&#xD;
     clearAIUnits();&#xD;
     lb.log(logger, Level.FINEST);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLLcIFJPEeiyW7NaN4qWdw" name="adjustMission" specification="_OHt4cVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLLcIVJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLLcIlJPEeiyW7NaN4qWdw" name="path" type="_OA--UVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLLcI1JPEeiyW7NaN4qWdw" name="type" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLLcJFJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLLcJVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (type == DefendSettlementMission.class) {&#xD;
         // Reduce value in proportion to the number of active defenders.&#xD;
         Settlement settlement = (Settlement)DefendSettlementMission&#xD;
             .extractTarget(aiUnit, path);&#xD;
         value -= 75 * getSettlementDefenders(settlement);&#xD;
&#xD;
     } else if (type == UnitSeekAndDestroyMission.class) {&#xD;
         // Natives prefer to attack when DISPLEASED.&#xD;
         Location target = UnitSeekAndDestroyMission&#xD;
             .extractTarget(aiUnit, path);&#xD;
         Player targetPlayer = (target instanceof Ownable)&#xD;
             ? ((Ownable)target).getOwner()&#xD;
             : null;&#xD;
         IndianSettlement is = aiUnit.getUnit().getHomeIndianSettlement();&#xD;
         if (targetPlayer != null&#xD;
             &amp;&amp; is != null &amp;&amp; is.getAlarm(targetPlayer) != null) {&#xD;
             value += is.getAlarm(targetPlayer).getValue()&#xD;
                 - Tension.Level.DISPLEASED.getLimit();&#xD;
         }&#xD;
     }&#xD;
&#xD;
     return value;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLLcJlJPEeiyW7NaN4qWdw" name="registerSellGoods" specification="_OHvGklJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLLcJ1JPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>String goldKey = &quot;tradeGold#&quot; + goods.getType().getId()&#xD;
         + &quot;#&quot; + goods.getAmount() + &quot;#&quot; + goods.getLocation().getId();&#xD;
     sessionRegister.put(goldKey, null);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLLcKFJPEeiyW7NaN4qWdw" name="buyProposition" specification="_OHw7wFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLLcKVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLLcKlJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLLcK1JPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLLcLFJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLLcLVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>logger.finest(&quot;Entering method buyProposition&quot;);&#xD;
     Specification spec = getSpecification();&#xD;
     IndianSettlement is = (IndianSettlement) settlement;&#xD;
     Player buyer = unit.getOwner();&#xD;
     String goldKey = &quot;tradeGold#&quot; + goods.getType().getId()&#xD;
         + &quot;#&quot; + goods.getAmount() + &quot;#&quot; + settlement.getId();&#xD;
     String hagglingKey = &quot;tradeHaggling#&quot; + unit.getId();&#xD;
     int price;&#xD;
     Integer registered = sessionRegister.get(goldKey);&#xD;
     if (registered == null) {&#xD;
         price = is.getPriceToSell(goods);&#xD;
         switch (is.getAlarm(buyer).getLevel()) {&#xD;
         case HAPPY: case CONTENT:&#xD;
             break;&#xD;
         case DISPLEASED:&#xD;
             price *= 2;&#xD;
             break;&#xD;
         default:&#xD;
             return NetworkConstants.NO_TRADE_HOSTILE;&#xD;
         }&#xD;
         Set&lt;Modifier> modifiers = new HashSet&lt;>();&#xD;
         if (is.hasMissionary(buyer)&#xD;
             &amp;&amp; spec.getBoolean(GameOptions.ENHANCED_MISSIONARIES)) {&#xD;
             Unit u = is.getMissionary();&#xD;
             modifiers.addAll(u.getMissionaryTradeModifiers(false));&#xD;
         }&#xD;
         if (unit.isNaval()) {&#xD;
             modifiers.addAll(getShipTradePenalties(false));&#xD;
         }&#xD;
         price = (int)FeatureContainer.applyModifiers((float)price,&#xD;
             getGame().getTurn(), modifiers);&#xD;
         sessionRegister.put(goldKey, price);&#xD;
         return price;&#xD;
     }&#xD;
     price = registered;&#xD;
     if (price &lt; 0 || price == gold) return price;&#xD;
     if (gold &lt; (price * 9) / 10) {&#xD;
         logger.warning(&quot;Cheating attempt: sending offer too low&quot;);&#xD;
         sessionRegister.put(goldKey, -1);&#xD;
         return NetworkConstants.NO_TRADE;&#xD;
     }&#xD;
&#xD;
     int haggling = 1;&#xD;
     if (sessionRegister.containsKey(hagglingKey)) {&#xD;
         haggling = sessionRegister.get(hagglingKey);&#xD;
     }&#xD;
     if (randomInt(logger, &quot;Haggle-buy&quot;, getAIRandom(), 3 + haggling) >= 3) {&#xD;
         sessionRegister.put(goldKey, -1);&#xD;
         return NetworkConstants.NO_TRADE_HAGGLE;&#xD;
     }&#xD;
     sessionRegister.put(goldKey, gold);&#xD;
     sessionRegister.put(hagglingKey, haggling + 1);&#xD;
     return gold;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLLcLlJPEeiyW7NaN4qWdw" name="sellProposition" specification="_OHyJ4FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLLcL1JPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLLcMFJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLLcMVJPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLLcMlJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLLcM1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>logger.finest(&quot;Entering method sellProposition&quot;);&#xD;
     Specification spec = getSpecification();&#xD;
     IndianSettlement is = (IndianSettlement) settlement;&#xD;
     Player seller = unit.getOwner();&#xD;
     String goldKey = &quot;tradeGold#&quot; + goods.getType().getId()&#xD;
         + &quot;#&quot; + goods.getAmount() + &quot;#&quot; + unit.getId()&#xD;
         + &quot;#&quot; + settlement.getId();&#xD;
     String hagglingKey = &quot;tradeHaggling#&quot; + unit.getId();&#xD;
     int price;&#xD;
     if (sessionRegister.containsKey(goldKey)) {&#xD;
         price = sessionRegister.get(goldKey);&#xD;
     } else {&#xD;
         price = is.getPriceToBuy(goods);&#xD;
         switch (is.getAlarm(seller).getLevel()) {&#xD;
         case HAPPY: case CONTENT:&#xD;
             break;&#xD;
         case DISPLEASED:&#xD;
             price /= 2;&#xD;
             break;&#xD;
         case ANGRY:&#xD;
             if (!goods.getType().isMilitaryGoods())&#xD;
                 return NetworkConstants.NO_TRADE_HOSTILE;&#xD;
             price /= 2;&#xD;
             break;&#xD;
         default:&#xD;
             return NetworkConstants.NO_TRADE_HOSTILE;&#xD;
         }&#xD;
         Set&lt;Modifier> modifiers = new HashSet&lt;>();&#xD;
         if (is.hasMissionary(seller)&#xD;
             &amp;&amp; spec.getBoolean(GameOptions.ENHANCED_MISSIONARIES)) {&#xD;
             Unit u = is.getMissionary();&#xD;
             modifiers.addAll(u.getMissionaryTradeModifiers(true));&#xD;
         }&#xD;
         if (unit.isNaval()) {&#xD;
             modifiers.addAll(getShipTradePenalties(true));&#xD;
         }&#xD;
         price = (int)FeatureContainer.applyModifiers((float)price,&#xD;
             getGame().getTurn(), modifiers);&#xD;
         if (price &lt;= 0) return 0;&#xD;
         sessionRegister.put(goldKey, price);&#xD;
     }&#xD;
     if (gold &lt; 0 || price == gold) return price;&#xD;
     if (gold > (price * 11) / 10) {&#xD;
         logger.warning(&quot;Cheating attempt: haggling request too high&quot;);&#xD;
         sessionRegister.put(goldKey, -1);&#xD;
         return NetworkConstants.NO_TRADE;&#xD;
     }&#xD;
     int haggling = 1;&#xD;
     if (sessionRegister.containsKey(hagglingKey)) {&#xD;
         haggling = sessionRegister.get(hagglingKey);&#xD;
     }&#xD;
     if (randomInt(logger, &quot;Haggle-sell&quot;, getAIRandom(), 3 + haggling) >= 3) {&#xD;
         sessionRegister.put(goldKey, -1);&#xD;
         return NetworkConstants.NO_TRADE_HAGGLE;&#xD;
     }&#xD;
     sessionRegister.put(goldKey, gold);&#xD;
     sessionRegister.put(hagglingKey, haggling + 1);&#xD;
     return gold;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLLcNFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_NVUyMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLLcNVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getXMLElementTagName(); </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NVTkEFJPEeiyW7NaN4qWdw" name="getShipTradePenalties" visibility="private" method="_OLK1KFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkdu1JPEeiyW7NaN4qWdw">
                    <body>Gets the appropriate ship trade penalties.&#xD;
     *&#xD;
     * @param sense The sense to apply the modifiers.&#xD;
     * @return The ship trade penalties.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NVTkEVJPEeiyW7NaN4qWdw" name="sense">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NVTkElJPEeiyW7NaN4qWdw" type="_OCqZUVJPEeiyW7NaN4qWdw" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NVTkE1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVULIFJPEeiyW7NaN4qWdw" name="abortInvalidMissions" method="_OLK1LFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkdvFJPEeiyW7NaN4qWdw">
                    <body>Aborts all the missions which are no longer valid.&#xD;
     *&#xD;
     * Public for the test suite.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NVULIVJPEeiyW7NaN4qWdw" name="startWorking" method="_OLK1LVJPEeiyW7NaN4qWdw"/>
                <ownedOperation xmi:id="_NVUyMFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_OLLcNFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NVVZQFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHo_8FJPEeiyW7NaN4qWdw" name="NativeAIPlayer" method="_OLKOAlJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OHo_81JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OHo_9FJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLkdsVJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIPlayer&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-class.&#xD;
     * @param player The player that should be associated with this&#xD;
     *            &lt;code>AIPlayer&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHo_8VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHo_8lJPEeiyW7NaN4qWdw" name="player" type="_OBOO4lJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHo_9VJPEeiyW7NaN4qWdw" type="_NVRH0FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHpnAFJPEeiyW7NaN4qWdw" name="NativeAIPlayer" method="_OLKOBlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OHpnA1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OHpnBFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLkdslJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>AIPlayer&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHpnAVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHpnAlJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHpnBVJPEeiyW7NaN4qWdw" type="_NVRH0FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHqOEFJPEeiyW7NaN4qWdw" name="initializeMissions" visibility="private" method="_OLKOClJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkds1JPEeiyW7NaN4qWdw">
                    <body>Simple initialization of AI missions given that we know the starting&#xD;
     * conditions.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code>  to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHqOEVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHqOElJPEeiyW7NaN4qWdw" name="determineStances" visibility="private" method="_OLK1EFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkdtFJPEeiyW7NaN4qWdw">
                    <body>Determines the stances towards each player.&#xD;
     * That is: should we declare war?&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHqOE1JPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHq1IFJPEeiyW7NaN4qWdw" name="secureSettlements" visibility="private" method="_OLK1ElJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkdtVJPEeiyW7NaN4qWdw">
                    <body>Takes the necessary actions to secure the settlements.&#xD;
     * This is done by making new military units or to give existing&#xD;
     * units new missions.&#xD;
     *&#xD;
     * @param randoms An array of random settlement indexes.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHq1IVJPEeiyW7NaN4qWdw" name="randoms">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OHq1I1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHq1IlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHrcMFJPEeiyW7NaN4qWdw" name="equipBraves" method="_OLK1FlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkdtlJPEeiyW7NaN4qWdw">
                    <body>Greedily equips braves with horses and muskets.&#xD;
     * Public for the test suite.&#xD;
     *&#xD;
     * @param is The &lt;code>IndianSettlement&lt;/code> where the equipping occurs.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHrcMVJPEeiyW7NaN4qWdw" name="is" type="_ODAXkFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHrcMlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHsDQFJPEeiyW7NaN4qWdw" name="secureIndianSettlement" method="_OLK1GVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkdt1JPEeiyW7NaN4qWdw">
                    <body>Takes the necessary actions to secure an indian settlement&#xD;
     * Public for the test suite.&#xD;
     *&#xD;
     * @param is The &lt;code>IndianSettlement&lt;/code> to secure.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHsDQVJPEeiyW7NaN4qWdw" name="is" type="_ODAXkFJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_OHsDQ1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_OHsDRFJPEeiyW7NaN4qWdw" key="final"/>
                    </eAnnotations>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHsDQlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHsDRVJPEeiyW7NaN4qWdw" name="giveNormalMissions" visibility="private" method="_OLK1HlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkduFJPEeiyW7NaN4qWdw">
                    <body>Gives a mission to all units.&#xD;
     *&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHsDRlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHsqUFJPEeiyW7NaN4qWdw" name="bringGifts" visibility="private" method="_OLK1IFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkduVJPEeiyW7NaN4qWdw">
                    <body>Brings gifts to nice players with nearby colonies.&#xD;
     *&#xD;
     * @param randoms An array of random percentages.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHsqUVJPEeiyW7NaN4qWdw" name="randoms">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OHsqU1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHsqUlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHtRYFJPEeiyW7NaN4qWdw" name="demandTribute" visibility="private" method="_OLK1JFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkdulJPEeiyW7NaN4qWdw">
                    <body>Demands tribute from nasty players with nearby colonies.&#xD;
     *&#xD;
     * @param randoms An array of random percentages.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OHtRYVJPEeiyW7NaN4qWdw" name="randoms">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OHt4cFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHtRYlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHt4cVJPEeiyW7NaN4qWdw" name="adjustMission" method="_OLLcIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHt4clJPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHt4c1JPEeiyW7NaN4qWdw" name="path" type="_OA--UVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHt4dFJPEeiyW7NaN4qWdw" name="type" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHufgFJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHufgVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHvGklJPEeiyW7NaN4qWdw" name="registerSellGoods" method="_OLLcJlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHvGk1JPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OHw7wFJPEeiyW7NaN4qWdw" name="buyProposition" method="_OLLcKFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHw7wVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHw7wlJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHw7w1JPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHw7xFJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHw7xVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OHyJ4FJPEeiyW7NaN4qWdw" name="sellProposition" method="_OLLcLlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OHyJ4VJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHyJ4lJPEeiyW7NaN4qWdw" name="settlement" type="_OA_lYVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHyJ41JPEeiyW7NaN4qWdw" name="goods" type="_OATB0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OHyJ5FJPEeiyW7NaN4qWdw" name="gold">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OHyJ5VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NVZDoFJPEeiyW7NaN4qWdw" name="ProductionCache">
                <ownedComment xmi:id="_OLkdvVJPEeiyW7NaN4qWdw">
                  <body>The production cache is intended to record all possible&#xD;
combinations of units producing goods in a colony's work&#xD;
locations. These entries are sorted, allowing fast retrieval of the&#xD;
most efficient way to produce a given type of goods.</body>
                </ownedComment>
                <ownedAttribute xmi:id="_OJ0KMFJPEeiyW7NaN4qWdw" name="colony" visibility="private" isLeaf="true" type="_OARzsVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMr4AFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OJ0KMlJPEeiyW7NaN4qWdw" name="units" isLeaf="true" type="_OAa9oVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMr4A1JPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJ0xQVJPEeiyW7NaN4qWdw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJ0xRVJPEeiyW7NaN4qWdw" name="colonyTiles" visibility="private" isLeaf="true" type="_OASawFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMsfEVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJ1_YFJPEeiyW7NaN4qWdw" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJ2mcVJPEeiyW7NaN4qWdw" name="entries" visibility="private" isLeaf="true" type="_OALGAVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMwJcVJPEeiyW7NaN4qWdw">
                  <qualifier xmi:id="_OJ4boVJPEeiyW7NaN4qWdw" type="_OJ30kVJPEeiyW7NaN4qWdw"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJ5CsFJPEeiyW7NaN4qWdw" name="assigned" visibility="private" isLeaf="true" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMwJdFJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJ5CsVJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJ5CslJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJ5pwFJPEeiyW7NaN4qWdw" name="reserved" visibility="private" isLeaf="true" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" isReadOnly="true" association="_OMxXkVJPEeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJ5pwVJPEeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJ5pwlJPEeiyW7NaN4qWdw" value="new ArrayList&lt;>()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJ5pxFJPEeiyW7NaN4qWdw" name="defaultComparator" visibility="private" isLeaf="true" isStatic="true" type="_OAKe8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMxXlFJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJ634VJPEeiyW7NaN4qWdw" value="new CacheEntryComparator()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJ634lJPEeiyW7NaN4qWdw" name="marketValueComparator" visibility="private" isLeaf="true" isStatic="true" type="_OAKe8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMxXl1JPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJ7e8VJPEeiyW7NaN4qWdw" value="new CacheEntryComparator() {&#xD;&#xA;            @Override&#xD;&#xA;            public int compareProduction(Entry entry1, Entry entry2) {&#xD;&#xA;                int production = entry2.getProduction() - entry1.getProduction();&#xD;&#xA;                Market market = entry1.getUnit().getOwner().getMarket();&#xD;&#xA;                if (market != null) {&#xD;&#xA;                    production = market.getSalePrice(entry2.getGoodsType(), entry2.getProduction())&#xD;&#xA;                        - market.getSalePrice(entry1.getGoodsType(), entry1.getProduction());&#xD;&#xA;                }&#xD;&#xA;                return production;&#xD;&#xA;            }&#xD;&#xA;        }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJ7e8lJPEeiyW7NaN4qWdw" name="unitCount" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OJ7e81JPEeiyW7NaN4qWdw" name="unitCounts" visibility="private" isLeaf="true" type="_OAaWkVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMylsVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJ8tEFJPEeiyW7NaN4qWdw" value="new TypeCountMap&lt;>()"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLMDM1JPEeiyW7NaN4qWdw" name="ProductionCache" specification="_OH0mIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLMDNFJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLMDNVJPEeiyW7NaN4qWdw" type="_NVZDoFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this.colony = colony;&#xD;
     this.units = new HashSet&lt;>(colony.getUnitList());&#xD;
     this.unitCount = units.size();&#xD;
     this.colonyTiles = new HashSet&lt;>();&#xD;
     // this assumes all colonists can be added to any tile&#xD;
     Unit someUnit = colony.getUnitList().get(0);&#xD;
     for (ColonyTile colonyTile : colony.getColonyTiles()) {&#xD;
         if (colonyTile.canAdd(someUnit)) {&#xD;
             colonyTiles.add(colonyTile);&#xD;
         }&#xD;
     }&#xD;
     this.entries = new HashMap&lt;>();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLMqQFJPEeiyW7NaN4qWdw" name="createEntries" specification="_OH1NM1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLMqQVJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLMqQlJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLMqQ1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>// FIXME: OO/generic&#xD;
     List&lt;Entry> result = new ArrayList&lt;>();&#xD;
     if (goodsType.isFarmed()) {&#xD;
         for (ColonyTile colonyTile : colonyTiles) {&#xD;
             Tile tile = colonyTile.getWorkTile();&#xD;
             if (tile.getPotentialProduction(goodsType, null) > 0&#xD;
                 || (tile.hasResource()&#xD;
                     &amp;&amp; !tile.getTileItemContainer().getResource().getType()&#xD;
                     .getModifiers(goodsType.getId()).isEmpty())) {&#xD;
                 for (Unit unit : units) {&#xD;
                     result.add(new Entry(goodsType, colonyTile, unit));&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     } else {&#xD;
         for (WorkLocation wl : colony.getWorkLocationsForProducing(goodsType)) {&#xD;
             if (!(wl instanceof Building)) continue;&#xD;
             Building building = (Building)wl;&#xD;
             if (building.getType().getWorkPlaces() > 0) {&#xD;
                 for (Unit unit : units) {&#xD;
                     result.add(new Entry(goodsType, building, unit));&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     Collections.sort(result, defaultComparator);&#xD;
     entries.put(goodsType, result);&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLMqRFJPEeiyW7NaN4qWdw" name="getUnitCount" specification="_OH10QFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLMqRVJPEeiyW7NaN4qWdw" name="buildingType" type="_OCpLMFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLMqRlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return unitCounts.getCount(buildingType);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLMqR1JPEeiyW7NaN4qWdw" name="decrementUnitCount" specification="_OH2bUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLMqSFJPEeiyW7NaN4qWdw" name="buildingType" type="_OCpLMFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLMqSVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Integer result = unitCounts.incrementCount(buildingType, -1);&#xD;
     return (result == null) ? 0 : result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLMqSlJPEeiyW7NaN4qWdw" name="getAssigned" specification="_NVaRwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLMqS1JPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLMqTFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return assigned;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLMqTVJPEeiyW7NaN4qWdw" name="getReserved" specification="_NVaRw1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLMqTlJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLMqT1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return reserved;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLMqUFJPEeiyW7NaN4qWdw" name="getEntries" specification="_OH3CYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLMqUVJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLMqUlJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLMqU1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;Entry> result = entries.get(goodsType);&#xD;
     if (result == null) {&#xD;
         result = createEntries(goodsType);&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLNRUFJPEeiyW7NaN4qWdw" name="getEntries" specification="_OH3CZFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLNRUVJPEeiyW7NaN4qWdw" name="goodsTypes" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLNRUlJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLNRU1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getEntries(goodsTypes, false);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLNRVFJPEeiyW7NaN4qWdw" name="getEntries" specification="_OH4QgVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLNRVVJPEeiyW7NaN4qWdw" name="goodsTypes" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLNRVlJPEeiyW7NaN4qWdw" name="useMarketValues">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLNRV1JPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLNRWFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>List&lt;Entry> result = new ArrayList&lt;>();&#xD;
     for (GoodsType goodsType : goodsTypes) {&#xD;
         result.addAll(getEntries(goodsType));&#xD;
     }&#xD;
     if (useMarketValues) {&#xD;
         Collections.sort(result, marketValueComparator);&#xD;
     } else {&#xD;
         Collections.sort(result, defaultComparator);&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLNRWVJPEeiyW7NaN4qWdw" name="assign" specification="_ODe4sFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLNRWlJPEeiyW7NaN4qWdw" name="entry" type="_NVa40FJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>ColonyTile colonyTile = null;&#xD;
     Building building = null;&#xD;
     if (entry.getWorkLocation() instanceof ColonyTile) {&#xD;
         colonyTile = (ColonyTile) entry.getWorkLocation();&#xD;
         colonyTiles.remove(colonyTile);&#xD;
     } else if (entry.getWorkLocation() instanceof Building) {&#xD;
         building = (Building) entry.getWorkLocation();&#xD;
         unitCounts.incrementCount(building.getType(), 1);&#xD;
     }&#xD;
     Unit unit = null;&#xD;
     if (!entry.isOtherExpert()) {&#xD;
         unit = entry.getUnit();&#xD;
         units.remove(unit);&#xD;
         assigned.add(entry);&#xD;
         removeEntries(unit, colonyTile, reserved);&#xD;
     } else {&#xD;
         if (colonyTile == null) {&#xD;
             if (unitCounts.getCount(building.getType()) == 1) {&#xD;
                 // only add building once&#xD;
                 reserved.addAll(entries.get(entry.getGoodsType()));&#xD;
             }&#xD;
         } else {&#xD;
             reserved.addAll(removeEntries(null, colonyTile, entries.get(entry.getGoodsType())));&#xD;
         }&#xD;
     }&#xD;
     // if work location is a colony tile, remove it from all other&#xD;
     // lists, because it only supports a single unit&#xD;
     for (List&lt;Entry> entryList : entries.values()) {&#xD;
         removeEntries(unit, colonyTile, entryList);&#xD;
     }&#xD;
     unitCount--;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLNRW1JPEeiyW7NaN4qWdw" name="removeEntries" specification="_OH6FsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLNRXFJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLNRXVJPEeiyW7NaN4qWdw" name="workLocation" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLNRXlJPEeiyW7NaN4qWdw" name="entryList" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLNRX1JPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLNRYFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Iterator&lt;Entry> entryIterator = entryList.iterator();&#xD;
     List&lt;Entry> removedEntries = new ArrayList&lt;>();&#xD;
     while (entryIterator.hasNext()) {&#xD;
         Entry entry = entryIterator.next();&#xD;
         if (entry.getUnit() == unit&#xD;
             || entry.getWorkLocation() == workLocation) {&#xD;
             removedEntries.add(entry);&#xD;
             entryIterator.remove();&#xD;
         }&#xD;
     }&#xD;
     return removedEntries;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NVaRwFJPEeiyW7NaN4qWdw" name="getAssigned" method="_OLMqSlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NVaRwVJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NVaRwlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVaRw1JPEeiyW7NaN4qWdw" name="getReserved" method="_OLMqTVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NVaRxFJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NVaRxVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ODe4sFJPEeiyW7NaN4qWdw" name="assign" method="_OLNRWVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkdvlJPEeiyW7NaN4qWdw">
                    <body>Assigns an entry. All conflicting entries, i.e. entries that&#xD;
     * refer to the same unit or colony tile, are removed from the&#xD;
     * cache.&#xD;
     *&#xD;
     * @param entry an &lt;code>Entry&lt;/code> value</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODe4sVJPEeiyW7NaN4qWdw" name="entry" type="_NVa40FJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OH0mIFJPEeiyW7NaN4qWdw" name="ProductionCache" method="_OLMDM1JPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OH1NMFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OH1NMVJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_OH0mIVJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OH1NMlJPEeiyW7NaN4qWdw" type="_NVZDoFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OH1NM1JPEeiyW7NaN4qWdw" name="createEntries" visibility="private" method="_OLMqQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OH1NNFJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OH1NNVJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OH1NNlJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OH10QFJPEeiyW7NaN4qWdw" name="getUnitCount" method="_OLMqRFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OH10QVJPEeiyW7NaN4qWdw" name="buildingType" type="_OCpLMFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OH10QlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OH2bUFJPEeiyW7NaN4qWdw" name="decrementUnitCount" method="_OLMqR1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OH2bUVJPEeiyW7NaN4qWdw" name="buildingType" type="_OCpLMFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OH2bUlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OH3CYFJPEeiyW7NaN4qWdw" name="getEntries" method="_OLMqUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OH3CYVJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OH3CYlJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OH3CY1JPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OH3CZFJPEeiyW7NaN4qWdw" name="getEntries" method="_OLNRUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OH3pcFJPEeiyW7NaN4qWdw" name="goodsTypes" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OH3pcVJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OH3pclJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OH4QgVJPEeiyW7NaN4qWdw" name="getEntries" method="_OLNRVFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OH4QglJPEeiyW7NaN4qWdw" name="goodsTypes" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OH4Qg1JPEeiyW7NaN4qWdw" name="useMarketValues">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OH4QhFJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OH4QhVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OH6FsFJPEeiyW7NaN4qWdw" name="removeEntries" isStatic="true" method="_OLNRW1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLkdv1JPEeiyW7NaN4qWdw">
                    <body>Removes all entries that refer to the unit or work location&#xD;
     * given from the given list of entries and returns them.&#xD;
     *&#xD;
     * @param unit a &lt;code>Unit&lt;/code>&#xD;
     * @param workLocation a &lt;code>WorkLocation&lt;/code>&#xD;
     * @param entryList a &lt;code>List&lt;/code> of &lt;code>Entry&lt;/code>s&#xD;
     * @return the &lt;code>Entry&lt;/code>s removed</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OH6FsVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OH6FslJPEeiyW7NaN4qWdw" name="workLocation" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OH6Fs1JPEeiyW7NaN4qWdw" name="entryList" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OH6FtFJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OH7T0FJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_NVa40FJPEeiyW7NaN4qWdw" name="Entry">
                  <eAnnotations xmi:id="_NVbf4FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_NVbf4VJPEeiyW7NaN4qWdw" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLkdwFJPEeiyW7NaN4qWdw">
                    <body>An Entry in the production cache represents a single unit&#xD;
     * producing goods in a certain work location. It records&#xD;
     * information on the type and amount of goods produced, as well&#xD;
     * as on whether the unit is an expert for producing this type of&#xD;
     * goods, or can be upgraded to one.&#xD;
     *</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_OJ8tElJPEeiyW7NaN4qWdw" name="goodsType" visibility="private" isLeaf="true" type="_OAUP8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMyltFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OJ9UIVJPEeiyW7NaN4qWdw" name="workLocation" visibility="private" isLeaf="true" type="_OAcLwlJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OMzz0VJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OJ97MFJPEeiyW7NaN4qWdw" name="unit" visibility="private" isLeaf="true" type="_OAa9oVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OM1B8FJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OJ97MlJPEeiyW7NaN4qWdw" name="production" visibility="private" isLeaf="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_OJ-iQVJPEeiyW7NaN4qWdw" name="isExpert" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJ_JUFJPEeiyW7NaN4qWdw" value="false"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_OJ_JUlJPEeiyW7NaN4qWdw" name="isOtherExpert" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJ_JU1JPEeiyW7NaN4qWdw" value="false"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_OJ_wYFJPEeiyW7NaN4qWdw" name="unitUpgrades" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJ_wYVJPEeiyW7NaN4qWdw" value="false"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_OJ_wY1JPEeiyW7NaN4qWdw" name="unitUpgradesToExpert" visibility="private">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_OJ_wZFJPEeiyW7NaN4qWdw" value="false"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLNRYVJPEeiyW7NaN4qWdw" name="Entry" specification="_OH9wEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLNRYlJPEeiyW7NaN4qWdw" name="g" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OLNRY1JPEeiyW7NaN4qWdw" name="w" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OLNRZFJPEeiyW7NaN4qWdw" name="u" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OLNRZVJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>goodsType = g;&#xD;
         workLocation = w;&#xD;
         unit = u;&#xD;
         production = w.getProductionOf(u, g);&#xD;
         GoodsType expertProduction = unit.getType().getExpertProduction();&#xD;
         if (expertProduction != null) {&#xD;
             if (expertProduction == goodsType) {&#xD;
                 isExpert = true;&#xD;
             } else {&#xD;
                 isOtherExpert = true;&#xD;
             }&#xD;
         } else {&#xD;
             for (UnitTypeChange change : unit.getType().getTypeChanges()) {&#xD;
                 if (change.asResultOf(ChangeType.EXPERIENCE)) {&#xD;
                     unitUpgrades = true;&#xD;
                     if (change.getNewUnitType().getExpertProduction() == goodsType) {&#xD;
                         unitUpgradesToExpert = true;&#xD;
                         break;&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLN4YFJPEeiyW7NaN4qWdw" name="getGoodsType" specification="_NVcG8FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLN4YVJPEeiyW7NaN4qWdw" type="_OAUP8VJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return goodsType;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLN4YlJPEeiyW7NaN4qWdw" name="getWorkLocation" specification="_NVcG8VJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLN4Y1JPEeiyW7NaN4qWdw" type="_OAcLwlJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return workLocation;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLN4ZFJPEeiyW7NaN4qWdw" name="getUnit" specification="_NVcuAFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLN4ZVJPEeiyW7NaN4qWdw" type="_OAa9oVJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>return unit;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLN4ZlJPEeiyW7NaN4qWdw" name="getProduction" specification="_NVcuAVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLN4Z1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return production;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLN4aFJPEeiyW7NaN4qWdw" name="isExpert" specification="_NVdVEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLN4aVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return isExpert;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLN4alJPEeiyW7NaN4qWdw" name="isOtherExpert" specification="_NVdVElJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLN4a1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return isOtherExpert;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLN4bFJPEeiyW7NaN4qWdw" name="unitUpgrades" specification="_NVd8IFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLN4bVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return unitUpgrades;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLN4blJPEeiyW7NaN4qWdw" name="unitUpgradesToExpert" specification="_NVd8IlJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLN4b1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return unitUpgradesToExpert;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLOfcFJPEeiyW7NaN4qWdw" name="toString" specification="_NVejMFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLOfcVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>StringBuilder sb = new StringBuilder(64);&#xD;
         sb.append(&quot;Cache entry: &quot;).append(unit.toString());&#xD;
         if (goodsType != null) {&#xD;
             sb.append(&quot; &quot;).append(goodsType.getSuffix());&#xD;
         }&#xD;
         if (workLocation instanceof ColonyTile) {&#xD;
             sb.append(workLocation.getTile().getType().getSuffix());&#xD;
         } else if (workLocation instanceof Building) {&#xD;
             sb.append(((Building)workLocation).getType().getSuffix());&#xD;
         }&#xD;
         sb.append(&quot;(&quot;).append(workLocation.getId()).append(&quot;) &quot;);&#xD;
         return sb.toString();&#xD;
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_NVcG8FJPEeiyW7NaN4qWdw" name="getGoodsType" method="_OLN4YFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_OLlEwFJPEeiyW7NaN4qWdw">
                      <body>Returns the type of goods produced.&#xD;
         *&#xD;
         * @return a &lt;code>GoodsType&lt;/code> value</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_OH--MFJPEeiyW7NaN4qWdw" type="_OAUP8VJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_NVcG8VJPEeiyW7NaN4qWdw" name="getWorkLocation" method="_OLN4YlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_OLlEwVJPEeiyW7NaN4qWdw">
                      <body>Returns the work location where goods are produced.&#xD;
         *&#xD;
         * @return a &lt;code>WorkLocation&lt;/code> value</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_OH_lQFJPEeiyW7NaN4qWdw" type="_OAcLwlJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_NVcuAFJPEeiyW7NaN4qWdw" name="getUnit" method="_OLN4ZFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_OLlEwlJPEeiyW7NaN4qWdw">
                      <body>Returns a unit producing goods in this work location.&#xD;
         *&#xD;
         * @return an &lt;code>Unit&lt;/code> value</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_OH_lQVJPEeiyW7NaN4qWdw" type="_OAa9oVJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_NVcuAVJPEeiyW7NaN4qWdw" name="getProduction" method="_OLN4ZlJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_OLlEw1JPEeiyW7NaN4qWdw">
                      <body>Returns the amount of goods produced.&#xD;
         *&#xD;
         * @return an &lt;code>int&lt;/code> value</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_NVcuAlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_NVdVEFJPEeiyW7NaN4qWdw" name="isExpert" method="_OLN4aFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_OLlExFJPEeiyW7NaN4qWdw">
                      <body>Returns true if the unit is an expert for producing the&#xD;
         * type of goods selected.&#xD;
         *&#xD;
         * @return a &lt;code>boolean&lt;/code> value</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_NVdVEVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_NVdVElJPEeiyW7NaN4qWdw" name="isOtherExpert" method="_OLN4alJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_OLlExVJPEeiyW7NaN4qWdw">
                      <body>Returns true if the unit is an expert for producing a type&#xD;
         * of goods other than the one selected.&#xD;
         *&#xD;
         * @return a &lt;code>boolean&lt;/code> value</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_NVdVE1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_NVd8IFJPEeiyW7NaN4qWdw" name="unitUpgrades" method="_OLN4bFJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_OLlExlJPEeiyW7NaN4qWdw">
                      <body>Returns true if the unit can be upgraded through experience.&#xD;
         *&#xD;
         * @return a &lt;code>boolean&lt;/code> value</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_NVd8IVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_NVd8IlJPEeiyW7NaN4qWdw" name="unitUpgradesToExpert" method="_OLN4blJPEeiyW7NaN4qWdw">
                    <ownedComment xmi:id="_OLlEx1JPEeiyW7NaN4qWdw">
                      <body>Returns true if the unit can be upgraded to an expert for&#xD;
         * producing the type of goods selected through experience.&#xD;
         *&#xD;
         * @return a &lt;code>boolean&lt;/code> value</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_NVd8I1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_NVejMFJPEeiyW7NaN4qWdw" name="toString" method="_OLOfcFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_NVejMVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_OH9wEFJPEeiyW7NaN4qWdw" name="Entry" method="_OLNRYVJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_OH-XI1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_OH-XJFJPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_OH-XIFJPEeiyW7NaN4qWdw" name="g" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OH-XIVJPEeiyW7NaN4qWdw" name="w" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OH-XIlJPEeiyW7NaN4qWdw" name="u" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OH-XJVJPEeiyW7NaN4qWdw" type="_NVa40FJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NVlQ4FJPEeiyW7NaN4qWdw" name="REFAIPlayer">
                <ownedComment xmi:id="_OLlEyFJPEeiyW7NaN4qWdw">
                  <body>Objects of this class contains AI-information for a single REF player.&#xD;
 *&#xD;
For now, mostly just the EuropeanAIPlayer, with a few tweaks.</body>
                </ownedComment>
                <generalization xmi:id="_ODk_UFJPEeiyW7NaN4qWdw" general="_NUg54FJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKA-gFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OM1pAFJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKA-gVJPEeiyW7NaN4qWdw" value="Logger.getLogger(REFAIPlayer.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKA-glJPEeiyW7NaN4qWdw" name="UNIT_USAD_THRESHOLD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKA-g1JPEeiyW7NaN4qWdw" value="5"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKDawFJPEeiyW7NaN4qWdw" name="seekAndDestroyRange" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKDawVJPEeiyW7NaN4qWdw" value="12"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKEB0FJPEeiyW7NaN4qWdw" name="targetMap" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <qualifier xmi:id="_OKF3AVJPEeiyW7NaN4qWdw" type="_OKFP8FJPEeiyW7NaN4qWdw"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKEB0VJPEeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPGhVJPEeiyW7NaN4qWdw" name="REFAIPlayer" specification="_OIIIIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLPGhlJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPGh1JPEeiyW7NaN4qWdw" name="player" type="_OBOO4lJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPGiFJPEeiyW7NaN4qWdw" type="_NVlQ4FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, player);&#xD;
&#xD;
     uninitialized = getPlayer() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPGiVJPEeiyW7NaN4qWdw" name="REFAIPlayer" specification="_OIIvNFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLPGilJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPGi1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPGjFJPEeiyW7NaN4qWdw" type="_NVlQ4FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
&#xD;
     uninitialized = getPlayer() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPGjVJPEeiyW7NaN4qWdw" name="findColonyTargets" specification="_ODkYQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLPGjlJPEeiyW7NaN4qWdw" name="aiu" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPGj1JPEeiyW7NaN4qWdw" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLPGkFJPEeiyW7NaN4qWdw" name="aiCarrier" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPGkVJPEeiyW7NaN4qWdw" type="_NVmfAFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLPGklJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     final Unit unit = aiu.getUnit();&#xD;
     final Unit carrier = aiCarrier.getUnit();&#xD;
     final List&lt;TargetTuple> targets = new ArrayList&lt;>();&#xD;
     for (Player p : player.getRebels()) {&#xD;
         for (Colony c : p.getColonies()) {&#xD;
             if (port &amp;&amp; !c.isConnectedPort()) continue;&#xD;
             PathNode path = unit.findPath(carrier, c, carrier, null);&#xD;
             if (path == null) continue;&#xD;
             int score = UnitSeekAndDestroyMission.scorePath(aiu, path);&#xD;
             targets.add(new TargetTuple(c, path, score));&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Increase score for drydock/s, musket and tools suppliers,&#xD;
     // but decrease for fortifications.&#xD;
     // FIXME: use Modifiers?&#xD;
     final int percentTwiddle = 20; // Perturb score by +/-20%&#xD;
     int[] twiddle = randomInts(logger, &quot;REF target twiddle&quot;,&#xD;
                                getAIRandom(), 2*percentTwiddle+1,&#xD;
                                targets.size());&#xD;
     int twidx = 0;&#xD;
     for (TargetTuple t : targets) {&#xD;
         t.score *= 0.01 * (101 - Math.min(100, t.colony.getSoL()));&#xD;
         for (Building b : t.colony.getBuildings()) {&#xD;
             if (b.getLevel() > 1) {&#xD;
                 if (b.hasAbility(Ability.REPAIR_UNITS)) t.score *= 1.5;&#xD;
                 for (AbstractGoods ag : b.getOutputs()) {&#xD;
                     if (ag.getType().isMilitaryGoods()) {&#xD;
                         t.score *= 2.0;&#xD;
                     } else if (ag.getType().isBuildingMaterial()&#xD;
                         &amp;&amp; ag.getType().isRefined()) {&#xD;
                         t.score *= 1.5;&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         int stockade = (!t.colony.hasStockade()) ? 0&#xD;
             : t.colony.getStockade().getLevel();&#xD;
         t.score *= (6 - stockade) / 6.0;&#xD;
         t.score *= 1.0 + 0.01 * (twiddle[twidx++] - percentTwiddle);&#xD;
     }&#xD;
     Collections.sort(targets);&#xD;
&#xD;
     LogBuilder lb = new LogBuilder(64);&#xD;
     lb.add(&quot;REF found colony targets:&quot;);&#xD;
     for (TargetTuple t : targets) lb.add(&quot; &quot;, t.colony, &quot;(&quot;, t.score, &quot;)&quot;);&#xD;
     lb.log(logger, Level.FINE);&#xD;
     return targets;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPGk1JPEeiyW7NaN4qWdw" name="initialize" specification="_NVo7QFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLPGlFJPEeiyW7NaN4qWdw" name="teleport">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLPGlVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>final AIMain aiMain = getAIMain();&#xD;
     final Random aiRandom = getAIRandom();&#xD;
     // Find a representative offensive land unit to use to search&#xD;
     // for the initial target.&#xD;
     AIUnit aiUnit = find(getAIUnits(), aiu -> !aiu.getUnit().isNaval()&#xD;
         &amp;&amp; aiu.getUnit().isOffensiveUnit());&#xD;
     if (aiUnit == null) {&#xD;
         logger.warning(&quot;REF has no army?!?&quot;);&#xD;
         return false;&#xD;
     }&#xD;
     final Unit unit = aiUnit.getUnit();&#xD;
     final Unit carrier = unit.getCarrier();&#xD;
     if (carrier == null) {&#xD;
         logger.warning(&quot;REF land unit not on a carrier: &quot; + unit);&#xD;
         return false;&#xD;
     }&#xD;
     final AIUnit aiCarrier = aiMain.getAIUnit(carrier);&#xD;
     if (aiCarrier == null) {&#xD;
         logger.warning(&quot;REF naval unit missing: &quot; + carrier);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     List&lt;TargetTuple> targets = findColonyTargets(aiUnit, true, aiCarrier);&#xD;
     if (targets.isEmpty()) {&#xD;
         logger.warning(&quot;REF found no targets.&quot;);&#xD;
         return false;&#xD;
     }&#xD;
&#xD;
     final Player rebel = targets.get(0).colony.getOwner();&#xD;
     double ratio = getStrengthRatio(rebel);&#xD;
     int n = targets.size();&#xD;
     LogBuilder lb = new LogBuilder(64);&#xD;
     lb.add(&quot;REF attacking &quot;, rebel.getName(), &quot; ratio=&quot;, ratio);&#xD;
&#xD;
     // For each target search from the target position to find a&#xD;
     // Tile to disembark to.  If teleporting in, the navy will&#xD;
     // appear at this location, otherwise at the best entry&#xD;
     // location for it.&#xD;
     int fail = 0;&#xD;
     for (int i = 0; i &lt; n; i++) {&#xD;
         final TargetTuple t = targets.get(i);&#xD;
         final GoalDecider gd = GoalDeciders&#xD;
             .getDisembarkGoalDecider(t.colony.getTile());&#xD;
         PathNode path = unit.search(t.entry, gd, null, 10, carrier);&#xD;
         if (path == null) {&#xD;
             t.disembarkTile = null;&#xD;
             fail++;&#xD;
         } else {&#xD;
             // Step forward to the point the unit is about to&#xD;
             // disembark.  This is where the carrier should teleport to.&#xD;
             t.disembarkTile = path.getTransportDropNode()&#xD;
                 .previous.getTile();&#xD;
         }&#xD;
     }&#xD;
     if (fail > 0) {&#xD;
         if (fail &lt; n) { // Drop targets without a decent disembark tile&#xD;
             lb.add(&quot; (&quot;);&#xD;
             int i = 0;&#xD;
             while (i &lt; targets.size()) {&#xD;
                 final TargetTuple t = targets.get(i);&#xD;
                 if (t.disembarkTile == null) {&#xD;
                     lb.add(&quot; &quot;, t.colony);&#xD;
                     targets.remove(i);&#xD;
                     n--;&#xD;
                 } else {&#xD;
                     i++;&#xD;
                 }&#xD;
             }&#xD;
             lb.add(&quot;)&quot;);&#xD;
         } else { // They were all bad, just use the existing simple path&#xD;
             for (int i = 0; i &lt; n; i++) {&#xD;
                 final TargetTuple t = targets.get(i);&#xD;
                 t.disembarkTile = t.path.getTransportDropNode()&#xD;
                     .previous.getTile();&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     // Reset N, now we have eliminated bad landing sites.&#xD;
     n = (ratio &lt; 1.0) ? 1 // Just go for one place&#xD;
         : (ratio &lt; 2.0) ? Math.min(2, targets.size())&#xD;
         : Math.min(3, targets.size());&#xD;
     lb.add(&quot; => #targets=&quot;, n);&#xD;
&#xD;
     if (!teleport) {&#xD;
         // Try to arrive on the map without being seen, while retaining&#xD;
         // a path to the disembark tile that is at worst one turn&#xD;
         // slower than the existing one.&#xD;
         GoalDecider stealthGD = GoalDeciders.getComposedGoalDecider(true,&#xD;
             GoalDeciders.getHighSeasGoalDecider(),&#xD;
             GoalDeciders.getStealthyGoalDecider(rebel));&#xD;
         for (int i = 0; i &lt; n; i++) {&#xD;
             final TargetTuple t = targets.get(i);&#xD;
             if (!rebel.canSee(t.entry)) continue;&#xD;
             PathNode path = carrier.search(t.disembarkTile, stealthGD,&#xD;
                 CostDeciders.avoidSettlementsAndBlockingUnits(),&#xD;
                 t.path.getTotalTurns() + 1, null);&#xD;
             if (path != null) {&#xD;
                 t.entry = path.getLastNode().getTile();&#xD;
                 t.score *= 1.5; // Prefer invisible paths&#xD;
             }&#xD;
         }&#xD;
         Collections.sort(targets); // Re-sort with new scores&#xD;
     }&#xD;
&#xD;
     // Give the land units seek-and-destroy missions for the&#xD;
     // target.  A valid target is needed before giving the carrier&#xD;
     // a valid transport missions.  Send roughly 2/3 of the force&#xD;
     // at the best target, decreasing from there.&#xD;
     List&lt;AIUnit> navy = new ArrayList&lt;>();&#xD;
     Iterator&lt;AIUnit> auIterator = getAIUnits().iterator();&#xD;
     int land = getPlayer().getNumberOfKingLandUnits();&#xD;
     int used;&#xD;
     Mission m;&#xD;
     for (int i = 0; i &lt; n; i++) {&#xD;
         if (!auIterator.hasNext()) break;&#xD;
         final TargetTuple t = targets.get(i);&#xD;
         lb.add(&quot;\n  Attack &quot;, t.colony, &quot; from &quot;, t.entry,&#xD;
                &quot; via &quot;, t.disembarkTile, &quot; with &quot;);&#xD;
         while (auIterator.hasNext()) {&#xD;
             AIUnit aiu = auIterator.next();&#xD;
             if (!aiu.getUnit().isNaval()) continue;&#xD;
             Unit ship = aiu.getUnit();&#xD;
             if (ship.isEmpty()) {&#xD;
                 navy.add(aiu);&#xD;
                 continue;&#xD;
             }&#xD;
             if (teleport) {&#xD;
                 ship.setEntryLocation(t.disembarkTile);&#xD;
             } else {&#xD;
                 ship.setEntryLocation(t.entry);&#xD;
             }&#xD;
             lb.add(&quot;[&quot;, ship);&#xD;
             lb.mark();&#xD;
             used = 0;&#xD;
             for (Unit u : aiu.getUnit().getUnitList()) {&#xD;
                 AIUnit laiu = aiMain.getAIUnit(u);&#xD;
                 m = getSeekAndDestroyMission(laiu, t.colony);&#xD;
                 if (m != null) lb.add(&quot; &quot;, m);&#xD;
                 used++;&#xD;
             }&#xD;
             m = getTransportMission(aiu);&#xD;
             lb.grew(&quot; &quot;, m);&#xD;
             lb.add(&quot; ]&quot;);&#xD;
             if (i &lt; n-1 &amp;&amp; used >= (int)Math.floor(land * 0.66)) {&#xD;
                 land -= used;&#xD;
                 break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Try to find some rebel naval units near the entry locations&#xD;
     // for the targets.&#xD;
     final List&lt;Unit> rebelNavy = new ArrayList&lt;>();&#xD;
     final GoalDecider navyGD = new GoalDecider() {&#xD;
             @Override&#xD;
             public PathNode getGoal() { return null; }&#xD;
             @Override&#xD;
             public boolean hasSubGoals() { return true; }&#xD;
             @Override&#xD;
             public boolean check(Unit unit, PathNode pathNode) {&#xD;
                 Tile tile = pathNode.getTile();&#xD;
                 if (tile != null &amp;&amp; !tile.isEmpty()&#xD;
                     &amp;&amp; !tile.isLand()&#xD;
                     &amp;&amp; rebel.owns(tile.getFirstUnit())) {&#xD;
                     for (Unit u : tile.getUnitList()) {&#xD;
                         if (u.isOffensiveUnit() &amp;&amp; u.isNaval()&#xD;
                             &amp;&amp; !rebelNavy.contains(u)) rebelNavy.add(u);&#xD;
                     }&#xD;
                 }&#xD;
                 return false;&#xD;
             }&#xD;
         };&#xD;
     for (int i = 0; i &lt; n; i++) {&#xD;
         carrier.search(targets.get(i).entry, navyGD, null,&#xD;
                        carrier.getInitialMovesLeft() * 2, null);&#xD;
     }&#xD;
&#xD;
     // Attack naval targets.&#xD;
     final Comparator&lt;Unit> militaryStrength&#xD;
         = getGame().getCombatModel().getMilitaryStrengthComparator();&#xD;
     Collections.sort(rebelNavy, militaryStrength);&#xD;
     Iterator&lt;Unit> ui = rebelNavy.iterator();&#xD;
     List&lt;Tile> entries = new ArrayList&lt;>();&#xD;
     entries.add(rebel.getEntryLocation().getTile());&#xD;
     while (!navy.isEmpty()) {&#xD;
         final AIUnit aiu = navy.remove(0);&#xD;
         final Unit u = aiu.getUnit();&#xD;
         final Unit enemy = (ui.hasNext()) ? ui.next() : null;&#xD;
         Tile start;&#xD;
         if (enemy == null) {&#xD;
             if ((m = getWanderHostileMission(aiu)) != null) {&#xD;
                 start = getRandomMember(logger, &quot;REF patrol entry&quot;,&#xD;
                                         entries, aiRandom);&#xD;
                 u.setEntryLocation(start);&#xD;
                 lb.add(&quot;\n  Patrol from &quot;, start, &quot; with &quot;, m);&#xD;
             }&#xD;
         } else {&#xD;
             if ((m = getSeekAndDestroyMission(aiu, enemy)) != null) {&#xD;
                 start = u.getBestEntryTile(enemy.getTile());&#xD;
                 u.setEntryLocation(start);&#xD;
                 entries.add(start);&#xD;
                 lb.add(&quot;\n  Suppress &quot;, enemy, &quot; from &quot;, start,&#xD;
                     &quot; with &quot;, m);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     lb.log(logger, Level.FINE);&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPGllJPEeiyW7NaN4qWdw" name="requireTransports" specification="_OILLcFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLPGl1JPEeiyW7NaN4qWdw" name="nt">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLPGmFJPEeiyW7NaN4qWdw" name="transports" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPGmVJPEeiyW7NaN4qWdw" name="privateers" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPGmlJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPGm1JPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLPGnFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Mission m;&#xD;
     List&lt;AIUnit> naval = new ArrayList&lt;>();&#xD;
     List&lt;AIUnit> result = new ArrayList&lt;>();&#xD;
     if (transports.size() &lt; nt) {&#xD;
         // Recruit privateers not currently chasing a unit.&#xD;
         // Collect privateers that are on the map.&#xD;
         for (AIUnit aiu : privateers) {&#xD;
             Location target = aiu.getMission().getTarget();&#xD;
             if (target instanceof Unit &amp;&amp; aiu.getUnit().hasTile()) {&#xD;
                 naval.add(aiu);&#xD;
             } else if ((m = getTransportMission(aiu)) != null) {&#xD;
                 lb.add(&quot; notarget &quot;, m);&#xD;
                 result.add(aiu);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     if (transports.size() &lt; nt) {&#xD;
         // Sort by longest distance to target&#xD;
         Collections.sort(naval, new Comparator&lt;AIUnit>() {&#xD;
                 @Override&#xD;
                 public int compare(AIUnit a1, AIUnit a2) {&#xD;
                     int d1 = a1.getMission(PrivateerMission.class)&#xD;
                         .getDistanceToTarget();&#xD;
                     int d2 = a2.getMission(PrivateerMission.class)&#xD;
                         .getDistanceToTarget();&#xD;
                     return d1 - d2;&#xD;
                 }&#xD;
             });&#xD;
         while (!naval.isEmpty()) {&#xD;
             AIUnit aiu = naval.remove(0);&#xD;
             int distance = aiu.getMission(PrivateerMission.class)&#xD;
                 .getDistanceToTarget();&#xD;
             if ((m = getTransportMission(aiu)) != null) {&#xD;
                 lb.add(&quot; REQUIRED &quot;, distance, &quot; &quot;, m);&#xD;
                 result.add(aiu);&#xD;
                 if (result.size() + transports.size() >= nt) break;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     privateers.removeAll(result);&#xD;
     transports.addAll(result);&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPtkFJPEeiyW7NaN4qWdw" name="determineStance" specification="_OINAoVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLPtkVJPEeiyW7NaN4qWdw" name="other" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPtklJPEeiyW7NaN4qWdw" type="_OCFxkVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     // The REF is always at war with its own rebels.&#xD;
     return (other.getREFPlayer() == player)&#xD;
         ? ((other.isRebel()) ? Stance.WAR : Stance.PEACE)&#xD;
         : (other.atWarWith(player)) ? Stance.WAR&#xD;
         : (!player.getRebels().isEmpty()) ? Stance.PEACE // Focus!&#xD;
         : super.determineStance(other);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPtk1JPEeiyW7NaN4qWdw" name="giveNormalMissions" specification="_OIOOwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLPtlFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     final Map&lt;Location, List&lt;AIUnit>> idlers = new HashMap&lt;>();&#xD;
     List&lt;AIUnit> privateers = new ArrayList&lt;>();&#xD;
     List&lt;AIUnit> transports = new ArrayList&lt;>();&#xD;
     List&lt;AIUnit> todo = new ArrayList&lt;>();&#xD;
     List&lt;AIUnit> land = new ArrayList&lt;>();&#xD;
     Mission m;&#xD;
     Colony colony;&#xD;
     lb.add(&quot;\n  REF mission changes:&quot;);&#xD;
&#xD;
     // Collect the REF units, the privateers, the transports, the&#xD;
     // unemployed navy, and the unemployed land units.&#xD;
     targetMap.clear();&#xD;
     for (AIUnit aiu : getAIUnits()) {&#xD;
         Unit u = aiu.getUnit();&#xD;
         if (u.isDisposed() || !u.hasAbility(Ability.REF_UNIT)) continue;&#xD;
         Mission mission = aiu.getMission();&#xD;
         if (u.isNaval()) {&#xD;
             if (mission == null || !mission.isValid()) {&#xD;
                 todo.add(aiu);&#xD;
             } else if (mission instanceof TransportMission) {&#xD;
                 transports.add(aiu);&#xD;
             } else if (mission instanceof PrivateerMission) {&#xD;
                 privateers.add(aiu);&#xD;
                 Location loc = mission.getTarget();&#xD;
                 if (loc != null) incrementMapCount(targetMap, loc);&#xD;
             } else {&#xD;
                 todo.add(aiu);&#xD;
             }&#xD;
         } else {&#xD;
             if (mission == null) {&#xD;
                 land.add(aiu);&#xD;
             } else if (mission instanceof DefendSettlementMission) {&#xD;
                 if (mission.isValid()) {&#xD;
                     colony = (Colony)mission.getTarget();&#xD;
                     // Bleed off excessive defenders.&#xD;
                     if (u.isAtLocation(colony)&#xD;
                         &amp;&amp; !colony.isBadlyDefended()&#xD;
                         &amp;&amp; randomInt(logger, &quot;REF defend &quot; + colony.getName(), &#xD;
                                      getAIRandom(), 3) == 0) {&#xD;
                         land.add(aiu);&#xD;
                     } else {&#xD;
                         incrementMapCount(targetMap, mission.getTarget());&#xD;
                     }                          &#xD;
                 } else {&#xD;
                     land.add(aiu);&#xD;
                 }                    &#xD;
             } else if (mission instanceof UnitSeekAndDestroyMission) {&#xD;
                 if (mission.isValid()) {&#xD;
                     incrementMapCount(targetMap, mission.getTarget());&#xD;
                     continue;&#xD;
                 }&#xD;
                 land.add(aiu);&#xD;
             } else {&#xD;
                 land.add(aiu);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Use free naval units as transports.&#xD;
     for (AIUnit aiu : todo) {&#xD;
         if ((m = getTransportMission(aiu)) != null) {&#xD;
             lb.add(&quot; &quot;, m);&#xD;
             transports.add(aiu);&#xD;
         }&#xD;
     }&#xD;
     todo.clear();&#xD;
&#xD;
     // Insist on a minimum number of transports.&#xD;
     int nt = Math.max(3, privateers.size() / 10);&#xD;
     requireTransports(nt, transports, privateers, lb);&#xD;
&#xD;
     // Use up the free land units:&#xD;
     // - mop up nearby hostile targets (but do not all rush after&#xD;
     //   one loose wagon!)&#xD;
     // - if idle at a well defended port, consider further attacks below&#xD;
     // - defend the closest settlement needing defence&#xD;
     // - defend the closest port&#xD;
     // - go idle in a port&#xD;
     for (AIUnit aiu : land) {&#xD;
         Location target = UnitSeekAndDestroyMission.findTarget(aiu, &#xD;
             seekAndDestroyRange, false);&#xD;
         if (target != null) {&#xD;
             int count = (targetMap.containsKey(target))&#xD;
                 ? targetMap.get(target) : 0;&#xD;
             if (target instanceof Unit&#xD;
                 &amp;&amp; count &lt; UNIT_USAD_THRESHOLD&#xD;
                 &amp;&amp; (m = getSeekAndDestroyMission(aiu, target)) != null) {&#xD;
                 lb.add(&quot; NEW-SEEK-&quot;, count, &quot; &quot;, m);&#xD;
                 incrementMapCount(targetMap, target);&#xD;
                 continue;&#xD;
             } else if (target instanceof Settlement&#xD;
                 &amp;&amp; (m = getSeekAndDestroyMission(aiu, target)) != null) {&#xD;
                 lb.add(&quot; NEW-SEEK &quot;, m);&#xD;
                 incrementMapCount(targetMap, target);&#xD;
                 continue;&#xD;
             } else {&#xD;
                 throw new RuntimeException(&quot;Bogus target: &quot; + target);&#xD;
             }&#xD;
         }&#xD;
&#xD;
         // Find units idle at a port&#xD;
         final Unit u = aiu.getUnit();&#xD;
         if (u.isInEurope()) {&#xD;
             appendToMapList(idlers, player.getEurope(), aiu);&#xD;
             continue;&#xD;
         } else if ((colony = u.getColony()) != null&#xD;
             &amp;&amp; colony.isConnectedPort()) {&#xD;
             appendToMapList(idlers, colony, aiu);&#xD;
             continue;&#xD;
         }&#xD;
&#xD;
         // Go defend the nearest colony needing defence&#xD;
         Colony best = u.getClosestColony(getBadlyDefended().stream()&#xD;
             .map(AIColony::getColony));&#xD;
         if (best != null&#xD;
             &amp;&amp; (m = getDefendSettlementMission(aiu, best)) != null) {&#xD;
             lb.add(&quot; GO-DEFEND-&quot;, best.getName(), &quot; &quot; , m);&#xD;
             incrementMapCount(targetMap, best);&#xD;
             continue;&#xD;
         }&#xD;
&#xD;
         // Just go defend the nearest port.  Once there and enough&#xD;
         // defenders are clearly allocated, some will be made available&#xD;
         // to launch new attacks.&#xD;
         PathNode path = u.findOurNearestPort();&#xD;
         colony = (path == null) ? null&#xD;
             : path.getLastNode().getTile().getColony();&#xD;
         if (colony != null&#xD;
             &amp;&amp; (m = getDefendSettlementMission(aiu, colony)) != null) {&#xD;
             lb.add(&quot; GOTO-&quot;, colony.getName(), &quot; &quot; , m);&#xD;
             incrementMapCount(targetMap, colony);&#xD;
             continue;&#xD;
         }&#xD;
&#xD;
         // Just go somewhere and idle.&#xD;
         m = getIdleAtSettlementMission(aiu);&#xD;
         lb.add(&quot; &quot;, m);&#xD;
     }&#xD;
&#xD;
     // Try to find new attacks for units left idling at ports.&#xD;
     if (!idlers.isEmpty()) {&#xD;
         // See what transport is present at a colony already.&#xD;
         requireTransports(0, transports, privateers, lb);&#xD;
         todo.clear();&#xD;
         Map&lt;Location, List&lt;AIUnit>> ready = new HashMap&lt;>();&#xD;
         for (AIUnit aiu : transports) {&#xD;
             TransportMission tm = aiu.getMission(TransportMission.class);&#xD;
             if (!tm.isEmpty()) continue;&#xD;
             Unit u = aiu.getUnit();&#xD;
             Location key;&#xD;
             if (u.isInEurope()&#xD;
                 &amp;&amp; idlers.containsKey(key = player.getEurope())) {&#xD;
                 appendToMapList(ready, key, aiu);&#xD;
             } else if ((key = u.getColony()) != null&#xD;
                 &amp;&amp; idlers.containsKey(key)) {&#xD;
                 appendToMapList(ready, key, aiu);&#xD;
             } else {&#xD;
                 todo.add(aiu);&#xD;
             }&#xD;
         }&#xD;
&#xD;
         // If there are idle units and carriers present at the&#xD;
         // same colony, load the carriers and launch new USAD&#xD;
         // missions with them.  Collect the ports that still&#xD;
         // contain idle units, and accumulate the amount of space&#xD;
         // needed to move the units.&#xD;
         List&lt;Location> idlePorts = new ArrayList&lt;>();&#xD;
         List&lt;AIUnit> aiCarriers = new ArrayList&lt;>();&#xD;
         int space = 0;&#xD;
         for (Entry&lt;Location, List&lt;AIUnit>> e : idlers.entrySet()) {&#xD;
             if (e.getValue() == null) continue;&#xD;
             aiCarriers.clear();&#xD;
             Location key = e.getKey();&#xD;
             if (!ready.containsKey(key)&#xD;
                 || ready.get(key).isEmpty()) continue; // No carrier here&#xD;
             landUnit: for (AIUnit aiu : e.getValue()) {&#xD;
                 for (AIUnit aiCarrier : ready.get(key)) {&#xD;
                     Unit carrier = aiCarrier.getUnit();&#xD;
                     if (carrier.canAdd(aiu.getUnit())&#xD;
                         &amp;&amp; aiu.joinTransport(carrier, null)) {&#xD;
                         if (!aiCarriers.contains(aiCarrier)) {&#xD;
                             aiCarriers.add(aiCarrier);&#xD;
                         }&#xD;
                         continue landUnit;&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
             if (aiCarriers.isEmpty()) continue; // Did not load&#xD;
&#xD;
             // Choose a target colony.  Pick a representative unit&#xD;
             // to plan with, but if it happens to have a target already&#xD;
             // keep that.&#xD;
             AIUnit found = null;&#xD;
             Colony target = null;&#xD;
             for (AIUnit aiCarrier : aiCarriers) {&#xD;
                 for (Unit u : aiCarrier.getUnit().getUnitList()) {&#xD;
                     if (u.hasAbility(Ability.REF_UNIT)&#xD;
                         &amp;&amp; (found = getAIUnit(u)) != null) break;&#xD;
                 }&#xD;
                 if (found != null&#xD;
                     &amp;&amp; (m = found.getMission()) != null&#xD;
                     &amp;&amp; m.isValid()&#xD;
                     &amp;&amp; m instanceof UnitSeekAndDestroyMission&#xD;
                     &amp;&amp; m.getTarget() instanceof Colony) {&#xD;
                     target = (Colony)m.getTarget();&#xD;
                     break;&#xD;
                 }&#xD;
             }&#xD;
             if (target == null) {&#xD;
                 AIUnit aiCarrier = getAIUnit(found.getUnit().getCarrier());&#xD;
                 List&lt;TargetTuple> ct = findColonyTargets(found, true,&#xD;
                                                          aiCarrier);&#xD;
                 if (ct.isEmpty()) {&#xD;
                     ct = findColonyTargets(found, false, aiCarrier);&#xD;
                 }&#xD;
                 if (!ct.isEmpty()) {&#xD;
                     target = ct.get(0).colony;&#xD;
                 }&#xD;
             }&#xD;
             if (target == null) continue; // No target for these idlers&#xD;
&#xD;
             // Send them to destroy the target&#xD;
             for (AIUnit aiCarrier : aiCarriers) {&#xD;
                 TransportMission tm&#xD;
                     = aiCarrier.getMission(TransportMission.class);&#xD;
                 AIUnit aiu;&#xD;
                 for (Unit u : aiCarrier.getUnit().getUnitList()) {&#xD;
                     if (u.hasAbility(Ability.REF_UNIT)&#xD;
                         &amp;&amp; (aiu = getAIUnit(u)) != null&#xD;
                         &amp;&amp; (m = getSeekAndDestroyMission(aiu, target)) != null) {&#xD;
                         lb.add(&quot; IDLER->&quot;, target, &quot; &quot;, m);&#xD;
                         tm.queueTransportable(aiu, false, lb);&#xD;
                         e.getValue().remove(aiu);&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             // Are there more idle units waiting here?&#xD;
             if (!e.getValue().isEmpty()) {&#xD;
                 idlePorts.add(key);&#xD;
                 space += e.getValue().stream()&#xD;
                     .mapToInt(aiu -> aiu.getUnit().getSpaceTaken()).sum();&#xD;
             }&#xD;
         }&#xD;
&#xD;
         if (!idlePorts.isEmpty()) {&#xD;
             // Do we need to switch more units from privateering&#xD;
             // to transport?&#xD;
             for (AIUnit aiu : todo) {&#xD;
                 space -= aiu.getUnit().getCargoCapacity()&#xD;
                     - aiu.getUnit().getCargoSpaceTaken();&#xD;
             }&#xD;
             nt = todo.size();&#xD;
             if (space &lt; 0) {&#xD;
                 nt += -space / 5 + 1; // Quick and dirty hack&#xD;
                 requireTransports(nt, todo, privateers, lb);&#xD;
             }&#xD;
&#xD;
             // Send transports to the idle ports, preferring the ones&#xD;
             // with the most units.&#xD;
             Collections.sort(idlePorts, new Comparator&lt;Location>() {&#xD;
                     @Override&#xD;
                     public int compare(Location l1, Location l2) {&#xD;
                         return idlers.get(l1).size() - idlers.get(l2).size();&#xD;
                     }&#xD;
                 });&#xD;
             boolean bad = false;&#xD;
             while (!bad &amp;&amp; !todo.isEmpty()) {&#xD;
                 for (Location l : idlePorts) {&#xD;
                     int bestValue = Unit.MANY_TURNS;&#xD;
                     AIUnit best = null;&#xD;
                     for (AIUnit aiu : todo) {&#xD;
                         int value = aiu.getUnit().getTurnsToReach(l);&#xD;
                         if (bestValue > value) {&#xD;
                             bestValue = value;&#xD;
                             best = aiu;&#xD;
                         }&#xD;
                     }&#xD;
                     if (best == null) {&#xD;
                         bad = true;&#xD;
                         continue;&#xD;
                     }&#xD;
                     todo.remove(best);&#xD;
                     best.getMission().setTarget(l);&#xD;
                     lb.add(&quot; retarget &quot;, best, &quot; to &quot;, l,&#xD;
                         &quot;(&quot;, idlers.get(l).size(), &quot;)&quot;);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Fall back to the normal EuropeanAI behaviour for remaining units.&#xD;
     super.giveNormalMissions(lb);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPtlVJPEeiyW7NaN4qWdw" name="startWorking" specification="_NVpiUlJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>final Player player = getPlayer();&#xD;
     if (!player.isWorkForREF()) {&#xD;
         logger.warning(&quot;No work for REF: &quot; + player);&#xD;
         return;&#xD;
     }&#xD;
&#xD;
     super.startWorking();&#xD;
&#xD;
     // Always allocate transport for all land units in Europe.&#xD;
     List&lt;TransportMission> transport = new ArrayList&lt;>();&#xD;
     List&lt;TransportableAIObject> land = new ArrayList&lt;>();&#xD;
     for (AIUnit aiu : getAIUnits()) {&#xD;
         final Unit u = aiu.getUnit();&#xD;
         if (u.isNaval()) {&#xD;
             if (aiu.hasMission(TransportMission.class)) {&#xD;
                 transport.add(aiu.getMission(TransportMission.class));&#xD;
             }&#xD;
         } else {&#xD;
             if (u.isInEurope()) land.add(aiu);&#xD;
         }&#xD;
     }&#xD;
     if (!land.isEmpty() &amp;&amp; !transport.isEmpty()) {&#xD;
         LogBuilder lb = new LogBuilder(256);&#xD;
         allocateTransportables(land, transport, lb);&#xD;
         lb.log(logger, Level.FINE);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPtllJPEeiyW7NaN4qWdw" name="adjustMission" specification="_OIO10lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLPtl1JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPtmFJPEeiyW7NaN4qWdw" name="path" type="_OA--UVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPtmVJPEeiyW7NaN4qWdw" name="type" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPtmlJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLPtm1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (value > 0) {&#xD;
         if (type == DefendSettlementMission.class) {&#xD;
             // REF garrisons thinly.&#xD;
             Location loc = DefendSettlementMission.extractTarget(aiUnit, path);&#xD;
             if (loc instanceof Colony &amp;&amp; !((Colony)loc).isBadlyDefended()) {&#xD;
                 return Integer.MIN_VALUE;&#xD;
             }&#xD;
         } else if (type == UnitSeekAndDestroyMission.class) {&#xD;
             Location target = UnitSeekAndDestroyMission&#xD;
                 .extractTarget(aiUnit, path);&#xD;
             if (target instanceof Settlement) {&#xD;
                 // Value connected settlements highly.&#xD;
                 // Initially, accept no others.&#xD;
                 if (((Settlement)target).isConnectedPort()) {&#xD;
                     value += 500;&#xD;
                 } else {&#xD;
                     if (getPlayer().getNumberOfSettlements() &lt;= 0) {&#xD;
                         return Integer.MIN_VALUE;&#xD;
                     }&#xD;
                 }&#xD;
             } else if (target instanceof Unit) {&#xD;
                 // Do not chase units until at least one colony is captured.&#xD;
                 if (getPlayer().getNumberOfSettlements() &lt;= 0) {&#xD;
                     return Integer.MIN_VALUE;&#xD;
                 }&#xD;
                 // Do not chase the same unit!&#xD;
                 if (any(getAIUnits().stream()&#xD;
                         .filter(aiu -> aiu != aiUnit)&#xD;
                         .map(aiu -> aiu.getMission(UnitSeekAndDestroyMission.class)),&#xD;
                         m -> m != null&#xD;
                             &amp;&amp; m.getTarget() instanceof Unit&#xD;
                             &amp;&amp; (Unit)m.getTarget() == target))&#xD;
                     return Integer.MIN_VALUE;&#xD;
                 // The REF is more interested in colonies.&#xD;
                 value /= 2;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return value;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NVo7QFJPEeiyW7NaN4qWdw" name="initialize" method="_OLPGk1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlEzVJPEeiyW7NaN4qWdw">
                    <body>Initialize the REF.&#xD;
     * - Find the initial target&#xD;
     * - Give valid missions to all the units&#xD;
     *&#xD;
     * Note that we can not rely on normal AI processing as the&#xD;
     * &quot;teleporting&quot; Col1-style REF needs to be placed on the map&#xD;
     * before its first turn starts, so the server should ask this&#xD;
     * AI where it should arrive on the map.&#xD;
     *&#xD;
     * Note also that to find a target we can not just call&#xD;
     * getMilitaryMission and aim for it as the getMilitaryMission&#xD;
     * scoring includes distance from starting point, which is what we&#xD;
     * are trying to determine.&#xD;
     * So, just choose the best coastal colony.&#xD;
     *&#xD;
     * FIXME: Mission assignment is done here because ATM the European&#xD;
     * AI is prone to send ships full of troops off to attack the&#xD;
     * rebel navy.  If this is fixed check if the normal mission&#xD;
     * assignment works and drop it from here.&#xD;
     *&#xD;
     * @param teleport &quot;Teleporting&quot; in is allowed.&#xD;
     * @return True if the initialization succeeds.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NVpiUFJPEeiyW7NaN4qWdw" name="teleport">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NVpiUVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVpiUlJPEeiyW7NaN4qWdw" name="startWorking" method="_OLPtlVJPEeiyW7NaN4qWdw"/>
                <ownedOperation xmi:id="_ODkYQFJPEeiyW7NaN4qWdw" name="findColonyTargets" visibility="private" method="_OLPGjVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlEzFJPEeiyW7NaN4qWdw">
                    <body>Find suitable colony targets.&#xD;
     *&#xD;
     * @param aiu The &lt;code>AIUnit&lt;/code> to search with.&#xD;
     * @param port If true, insist on the colonies being ports.&#xD;
     * @param aiCarrier The &lt;code>AIUnit&lt;/code> to use as a carrier.&#xD;
     * @return A list of &lt;code>TargetTuple&lt;/code> target choices.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODkYQVJPEeiyW7NaN4qWdw" name="aiu" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODkYQlJPEeiyW7NaN4qWdw" name="port">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ODkYQ1JPEeiyW7NaN4qWdw" name="aiCarrier" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODkYRFJPEeiyW7NaN4qWdw" type="_NVmfAFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ODkYRVJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OIIIIFJPEeiyW7NaN4qWdw" name="REFAIPlayer" method="_OLPGhVJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIIvMVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIIvMlJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLlEylJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>REFAIPlayer&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-class.&#xD;
     * @param player The player that should be associated with this&#xD;
     *            &lt;code>REFAIPlayer&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIIIIVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIIvMFJPEeiyW7NaN4qWdw" name="player" type="_OBOO4lJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIIvM1JPEeiyW7NaN4qWdw" type="_NVlQ4FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIIvNFJPEeiyW7NaN4qWdw" name="REFAIPlayer" method="_OLPGiVJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIJWQlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIJWQ1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLlEy1JPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>REFAIPlayer&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIJWQFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIJWQVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIJWRFJPEeiyW7NaN4qWdw" type="_NVlQ4FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OILLcFJPEeiyW7NaN4qWdw" name="requireTransports" visibility="private" method="_OLPGllJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlEzlJPEeiyW7NaN4qWdw">
                    <body>Require more transport missions, recruiting from the privateering&#xD;
     * missions.&#xD;
     *&#xD;
     * @param nt The number of transport missions required.&#xD;
     * @param transports The list of &lt;code>AIUnit&lt;/code>s with a transport&#xD;
     *     mission.&#xD;
     * @param privateers The list of &lt;code>AIUnit&lt;/code>s with a privateer&#xD;
     *     mission.&#xD;
     * @param lb A &lt;code>LogBuilder&lt;/code> to log to.&#xD;
     * @return A list of new &lt;code>AIUnit&lt;/code>s with transport missions.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OILLcVJPEeiyW7NaN4qWdw" name="nt">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OILLclJPEeiyW7NaN4qWdw" name="transports" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OILLc1JPEeiyW7NaN4qWdw" name="privateers" type="_OALGAVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OILLdFJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OILLdVJPEeiyW7NaN4qWdw" type="_NSoDgFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OILygFJPEeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OINAoVJPEeiyW7NaN4qWdw" name="determineStance" visibility="protected" method="_OLPtkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OINAolJPEeiyW7NaN4qWdw" name="other" type="_OAWFIVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OINnsFJPEeiyW7NaN4qWdw" type="_OCFxkVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIOOwFJPEeiyW7NaN4qWdw" name="giveNormalMissions" method="_OLPtk1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIOOwVJPEeiyW7NaN4qWdw" name="lb" type="_OAeA8VJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIO10lJPEeiyW7NaN4qWdw" name="adjustMission" method="_OLPtllJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIO101JPEeiyW7NaN4qWdw" name="aiUnit" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIO11FJPEeiyW7NaN4qWdw" name="path" type="_OA--UVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIO11VJPEeiyW7NaN4qWdw" name="type" type="_OE-GclJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIO11lJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OIPc4FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_NVmfAFJPEeiyW7NaN4qWdw" name="TargetTuple" visibility="private">
                  <eAnnotations xmi:id="_NVmfAVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_NVmfAlJPEeiyW7NaN4qWdw" key="static"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLlEyVJPEeiyW7NaN4qWdw">
                    <body>Container class for REF target colony information.</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_OKA-hFJPEeiyW7NaN4qWdw" name="colony" isLeaf="true" type="_OARzsVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OM2QEVJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OKBlkVJPEeiyW7NaN4qWdw" name="path" isLeaf="true" type="_OA--UVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OM3eMFJPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OKCMoVJPEeiyW7NaN4qWdw" name="score">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_OKCMo1JPEeiyW7NaN4qWdw" name="disembarkTile" type="_OAYhYFJPEeiyW7NaN4qWdw" association="_OM3eM1JPEeiyW7NaN4qWdw"/>
                  <ownedAttribute xmi:id="_OKCzsVJPEeiyW7NaN4qWdw" name="entry" type="_OAYhYFJPEeiyW7NaN4qWdw" association="_OM4FQFJPEeiyW7NaN4qWdw"/>
                  <interfaceRealization xmi:id="_OIDPoFJPEeiyW7NaN4qWdw" client="_NVmfAFJPEeiyW7NaN4qWdw" supplier="_OICBgFJPEeiyW7NaN4qWdw" contract="_OICBgFJPEeiyW7NaN4qWdw"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLOfclJPEeiyW7NaN4qWdw" name="TargetTuple" specification="_OIFE0FJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLOfc1JPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OLOfdFJPEeiyW7NaN4qWdw" name="path" type="_OA--UVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OLOfdVJPEeiyW7NaN4qWdw" name="score">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_OLOfdlJPEeiyW7NaN4qWdw" type="_NVmfAFJPEeiyW7NaN4qWdw" direction="return"/>
                    <language>java</language>
                    <body>this.colony = colony;&#xD;
         this.path = path;&#xD;
         this.score = score;&#xD;
         this.disembarkTile = null;&#xD;
         this.entry = null;&#xD;
         if (path != null) {&#xD;
             for (PathNode p = path; p != null; p = p.next) {&#xD;
                 Tile t = p.getTile();&#xD;
                 if (t != null) {&#xD;
                     this.entry = t;&#xD;
                     break;&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLOfd1JPEeiyW7NaN4qWdw" name="compareTo" specification="_ODjKIFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLOfeFJPEeiyW7NaN4qWdw" name="other" type="_NVmfAFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OLOfeVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>double cmp = other.score - score;&#xD;
         return (cmp &lt; 0.0) ? -1 : (cmp > 0.0) ? 1 : 0;&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPGgFJPEeiyW7NaN4qWdw" name="equals" specification="_OIG6AVJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLPGgVJPEeiyW7NaN4qWdw" name="other" type="_OIGS8FJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OLPGglJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (other instanceof TargetTuple) {&#xD;
             return this.compareTo((TargetTuple)other) == 0;&#xD;
         }&#xD;
         return super.equals(other);&#xD;
     </body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPGg1JPEeiyW7NaN4qWdw" name="hashCode" specification="_NVnGEFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OLPGhFJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>int hash = super.hashCode();&#xD;
         hash = 37 * hash + Utils.hashCode(colony);&#xD;
         hash = 37 * hash + Utils.hashCode(path);&#xD;
         hash = 37 * hash + Utils.hashCode(score);&#xD;
         hash = 37 * hash + Utils.hashCode(disembarkTile);&#xD;
         return 37 * hash + Utils.hashCode(entry);&#xD;
     </body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_NVnGEFJPEeiyW7NaN4qWdw" name="hashCode" method="_OLPGg1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_NVnGEVJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_ODjKIFJPEeiyW7NaN4qWdw" name="compareTo" method="_OLOfd1JPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_ODjKIVJPEeiyW7NaN4qWdw" name="other" type="_NVmfAFJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_ODjKIlJPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_OIFE0FJPEeiyW7NaN4qWdw" name="TargetTuple" method="_OLOfclJPEeiyW7NaN4qWdw">
                    <eAnnotations xmi:id="_OIFr4lJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_OIFr41JPEeiyW7NaN4qWdw" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_OIFE0VJPEeiyW7NaN4qWdw" name="colony" type="_OARzsVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OIFr4FJPEeiyW7NaN4qWdw" name="path" type="_OA--UVJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OIFr4VJPEeiyW7NaN4qWdw" name="score">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_OIFr5FJPEeiyW7NaN4qWdw" type="_NVmfAFJPEeiyW7NaN4qWdw" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_OIG6AVJPEeiyW7NaN4qWdw" name="equals" method="_OLPGgFJPEeiyW7NaN4qWdw">
                    <ownedParameter xmi:id="_OIG6AlJPEeiyW7NaN4qWdw" name="other" type="_OIGS8FJPEeiyW7NaN4qWdw"/>
                    <ownedParameter xmi:id="_OIG6A1JPEeiyW7NaN4qWdw" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NVvB4FJPEeiyW7NaN4qWdw" name="TileImprovementPlan">
                <ownedComment xmi:id="_OLlEz1JPEeiyW7NaN4qWdw">
                  <body>Represents a plan to improve a &lt;code>Tile&lt;/code> in some way.&#xD;
For instance by plowing or by building a road.&#xD;
 *&#xD;
@see Tile</body>
                </ownedComment>
                <generalization xmi:id="_ODopsFJPEeiyW7NaN4qWdw" general="_NWFnMFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKGeEFJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OM5TYVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKGeEVJPEeiyW7NaN4qWdw" value="Logger.getLogger(TileImprovementPlan.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKGeElJPEeiyW7NaN4qWdw" name="type" isLeaf="true" type="_OAYhYlJPEeiyW7NaN4qWdw" association="_OM5TZFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKGeE1JPEeiyW7NaN4qWdw" name="target" visibility="private" type="_OAYhYFJPEeiyW7NaN4qWdw" association="_OM7IkFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKHFIVJPEeiyW7NaN4qWdw" name="pioneer" isLeaf="true" type="_NSoDgFJPEeiyW7NaN4qWdw" association="_OM7voVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKHFIlJPEeiyW7NaN4qWdw" value="null"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKHsMFJPEeiyW7NaN4qWdw" name="PIONEER_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKHsMVJPEeiyW7NaN4qWdw" value="&quot;pioneer&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKHsMlJPEeiyW7NaN4qWdw" name="TARGET_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKHsM1JPEeiyW7NaN4qWdw" value="&quot;target&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKITQFJPEeiyW7NaN4qWdw" name="TYPE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKITQVJPEeiyW7NaN4qWdw" value="&quot;type&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPtnFJPEeiyW7NaN4qWdw" name="TileImprovementPlan" specification="_ODnbkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLPtnVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPtnlJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLPtn1JPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, id);&#xD;
&#xD;
     type = null;&#xD;
     target = null;&#xD;
     pioneer = null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLPtoFJPEeiyW7NaN4qWdw" name="TileImprovementPlan" specification="_OIRSEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLPtoVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPtolJPEeiyW7NaN4qWdw" name="target" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPto1JPEeiyW7NaN4qWdw" name="type" type="_OAYhYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLPtpFJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLPtpVJPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, getXMLElementTagName() + &quot;:&quot; + aiMain.getNextId());&#xD;
&#xD;
     this.target = target;&#xD;
     this.type = type;&#xD;
     this.pioneer = null;&#xD;
     setValue(value);&#xD;
     uninitialized = getType() == null || getTarget() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLQ7sFJPEeiyW7NaN4qWdw" name="TileImprovementPlan" specification="_OIR5JFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLQ7sVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLQ7slJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLQ7s1JPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, element);&#xD;
&#xD;
     uninitialized = getType() == null || getTarget() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLQ7tFJPEeiyW7NaN4qWdw" name="TileImprovementPlan" specification="_OISgM1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLQ7tVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLQ7tlJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLQ7t1JPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
&#xD;
     uninitialized = getType() == null || getTarget() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLQ7uFJPEeiyW7NaN4qWdw" name="getTarget" specification="_NVw3EFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLQ7uVJPEeiyW7NaN4qWdw" type="_OAYhYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return target;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLQ7ulJPEeiyW7NaN4qWdw" name="getBestTileImprovementType" specification="_OITuUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLQ7u1JPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLQ7vFJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLQ7vVJPEeiyW7NaN4qWdw" type="_OAYhYlJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>int bestValue = 0;&#xD;
     TileImprovementType bestType = null;&#xD;
     for (TileImprovementType impType&#xD;
              : tile.getSpecification().getTileImprovementTypeList()) {&#xD;
         if (!impType.isNatural()&#xD;
             &amp;&amp; impType.isTileTypeAllowed(tile.getType())&#xD;
             // FIXME: For now, disable any exotic non-Col1&#xD;
             // improvement types that expend more than one parcel&#xD;
             // of tools (e.g. plantForest), because&#xD;
             // PioneeringMission assumes this does not happen.&#xD;
             &amp;&amp; impType.getExpendedAmount() &lt;= 1&#xD;
             &amp;&amp; tile.getTileImprovement(impType) == null) {&#xD;
             int value = impType.getImprovementValue(tile, goodsType);&#xD;
             if (value > bestValue) {&#xD;
                 bestValue = value;&#xD;
                 bestType = impType;&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
     return bestType;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLQ7vlJPEeiyW7NaN4qWdw" name="update" specification="_OITuVFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLQ7v1JPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLQ7wFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>TileImprovementType type = getBestTileImprovementType(target, goodsType);&#xD;
     if (type == null) return false;&#xD;
     setType(type);&#xD;
     setValue(type.getImprovementValue(target, goodsType));&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLQ7wVJPEeiyW7NaN4qWdw" name="isComplete" specification="_NVxeIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLQ7wlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return target != null &amp;&amp; target.hasTileImprovement(getType());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLQ7w1JPEeiyW7NaN4qWdw" name="validate" specification="_NVxeIlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLQ7xFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (type == null) {&#xD;
         logger.warning(&quot;Removing typeless TileImprovementPlan&quot;);&#xD;
         dispose();&#xD;
         return false;&#xD;
     }&#xD;
     if (target == null) {&#xD;
         logger.warning(&quot;Removing targetless TileImprovementPlan&quot;);&#xD;
         dispose();&#xD;
         return false;&#xD;
     }&#xD;
     if (getPioneer() != null&#xD;
         &amp;&amp; (getPioneer().getUnit() == null&#xD;
             || getPioneer().getUnit().isDisposed())) {&#xD;
         logger.warning(&quot;Clearing broken pioneer for TileImprovementPlan&quot;);&#xD;
         setPioneer(null);&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLQ7xVJPEeiyW7NaN4qWdw" name="dispose" specification="_NVyFMFJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>this.pioneer = null;&#xD;
     super.dispose();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLQ7xlJPEeiyW7NaN4qWdw" name="checkIntegrity" specification="_NVysQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLQ7x1JPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLQ7yFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = super.checkIntegrity(fix);&#xD;
     if (pioneer != null) {&#xD;
         result = Math.min(result, pioneer.checkIntegrity(fix));&#xD;
     }&#xD;
     if (type == null || target == null) result = -1;&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLQ7yVJPEeiyW7NaN4qWdw" name="toXML" specification="_OIUVYVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLQ7ylJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>if (validate()) toXML(xw, getXMLTagName());&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLRiwFJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_OIVjgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLRiwVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeAttributes(xw);&#xD;
&#xD;
     xw.writeAttribute(TYPE_TAG, type);&#xD;
&#xD;
     xw.writeAttribute(TARGET_TAG, target);&#xD;
&#xD;
     if (pioneer != null &amp;&amp; pioneer.checkIntegrity(false) > 0) {&#xD;
         xw.writeAttribute(PIONEER_TAG, pioneer);&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLRiwlJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OIWKklJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLRiw1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readAttributes(xr);&#xD;
&#xD;
     final AIMain aiMain = getAIMain();&#xD;
     final Specification spec = getSpecification();&#xD;
     &#xD;
     type = xr.getType(spec, TYPE_TAG, &#xD;
                       TileImprovementType.class, (TileImprovementType)null);&#xD;
&#xD;
     pioneer = (xr.hasAttribute(PIONEER_TAG))&#xD;
         ? xr.makeAIObject(aiMain, PIONEER_TAG,&#xD;
                           AIUnit.class, (AIUnit)null, true)&#xD;
         : null;&#xD;
&#xD;
     target = xr.getAttribute(getGame(), TARGET_TAG,&#xD;
                              Tile.class, (Tile)null);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLRixFJPEeiyW7NaN4qWdw" name="readChildren" specification="_OIXYsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLRixVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readChildren(xr);&#xD;
&#xD;
     if (type != null &amp;&amp; target != null) uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLRixlJPEeiyW7NaN4qWdw" name="toString" specification="_NVz6YFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLRix1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuilder sb = new StringBuilder(32);&#xD;
     sb.append(&quot;[&quot;).append(getId())&#xD;
         .append(&quot; &quot;).append((type == null) ? &quot;null&quot; : type.getSuffix())&#xD;
         .append(&quot; at &quot;).append((target == null) ? &quot;null&quot;&#xD;
             : target.toShortString())&#xD;
         .append(&quot;/&quot;).append(getValue())&#xD;
         .append(&quot;]&quot;);&#xD;
     return sb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLRiyFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_NV0hclJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLRiyVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getXMLElementTagName(); </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLRiylJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_NV1IglJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLRiy1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return &quot;tileImprovementPlan&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NVw3EFJPEeiyW7NaN4qWdw" name="getTarget" isLeaf="true" method="_OLQ7uFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlE1FJPEeiyW7NaN4qWdw">
                    <body>Gets the target of this &lt;code>TileImprovementPlan&lt;/code>.&#xD;
     *&#xD;
     * @return The &lt;code>Tile&lt;/code> where&#xD;
     *     {@link #getPioneer pioneer} should make the&#xD;
     *     given {@link #getType improvement}.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OITHQ1JPEeiyW7NaN4qWdw" type="_OAYhYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NVxeIFJPEeiyW7NaN4qWdw" name="isComplete" method="_OLQ7wVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr0VJPEeiyW7NaN4qWdw">
                    <body>Is this improvement complete?&#xD;
     *&#xD;
     * @return True if the tile improvement has been completed.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NVxeIVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVxeIlJPEeiyW7NaN4qWdw" name="validate" method="_OLQ7w1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr0lJPEeiyW7NaN4qWdw">
                    <body>Weeds out a broken or obsolete tile improvement plan.&#xD;
     *&#xD;
     * @return True if the plan survives this check.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NVxeI1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVyFMFJPEeiyW7NaN4qWdw" name="dispose" method="_OLQ7xVJPEeiyW7NaN4qWdw"/>
                <ownedOperation xmi:id="_NVysQFJPEeiyW7NaN4qWdw" name="checkIntegrity" method="_OLQ7xlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NVysQVJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NVysQlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NVz6YFJPEeiyW7NaN4qWdw" name="toString" method="_OLRixlJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NVz6YVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NV0hclJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_OLRiyFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NV0hc1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NV1IglJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_OLRiylJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr01JPEeiyW7NaN4qWdw">
                    <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;tileImprovementPlan&quot;</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NV1Ig1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ODnbkFJPEeiyW7NaN4qWdw" name="TileImprovementPlan" method="_OLPtnFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_ODoColJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ODoCo1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLlE0FJPEeiyW7NaN4qWdw">
                    <body>Creates a new uninitialized &lt;code>TileImprovementPlan&lt;/code>&#xD;
     * from the given XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param id The object identifier.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *     during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODoCoFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODoCoVJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ODoCpFJPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIRSEFJPEeiyW7NaN4qWdw" name="TileImprovementPlan" method="_OLPtoFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIR5IVJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIR5IlJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLlE0VJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>TileImprovementPlan&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param target The target &lt;code>Tile&lt;/code> for the improvement.&#xD;
     * @param type The type of improvement.&#xD;
     * @param value The value identifying the importance of&#xD;
     *     this &lt;code>TileImprovementPlan&lt;/code> - a higher value&#xD;
     *     signals a higher importance.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIRSEVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIRSElJPEeiyW7NaN4qWdw" name="target" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIRSE1JPEeiyW7NaN4qWdw" name="type" type="_OAYhYlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIR5IFJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OIR5I1JPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIR5JFJPEeiyW7NaN4qWdw" name="TileImprovementPlan" method="_OLQ7sFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OISgMFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OISgMVJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLlE0lJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>TileImprovementPlan&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param element The root element for the XML-representation&#xD;
     *     of a &lt;code>Wish&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIR5JVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIR5JlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OISgMlJPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OISgM1JPEeiyW7NaN4qWdw" name="TileImprovementPlan" method="_OLQ7tFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OITHQFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OITHQVJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLlE01JPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>TileImprovementPlan&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *     during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OISgNFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OISgNVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OITHQlJPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OITuUFJPEeiyW7NaN4qWdw" name="getBestTileImprovementType" isStatic="true" method="_OLQ7ulJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlE1VJPEeiyW7NaN4qWdw">
                    <body>Gets the 'most effective' TileImprovementType allowed for a&#xD;
     * given tile and goods type.  Useful for AI in deciding the&#xD;
     * improvements to prioritize.&#xD;
     *&#xD;
     * @param tile The &lt;code>Tile&lt;/code> that will be improved.&#xD;
     * @param goodsType The &lt;code>GoodsType&lt;/code> to be prioritized.&#xD;
     * @return The best TileImprovementType available to be done.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OITuUVJPEeiyW7NaN4qWdw" name="tile" type="_OAYhYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OITuUlJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OITuU1JPEeiyW7NaN4qWdw" type="_OAYhYlJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OITuVFJPEeiyW7NaN4qWdw" name="update" method="_OLQ7vlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr0FJPEeiyW7NaN4qWdw">
                    <body>Updates this tile improvement plan to the best available for its&#xD;
     * tile and the specified goods type.&#xD;
     *&#xD;
     * @param goodsType The &lt;code>GoodsType&lt;/code> to be prioritized.&#xD;
     * @return True if the plan is still viable.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OITuVVJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIUVYFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OIUVYVJPEeiyW7NaN4qWdw" name="toXML" method="_OLQ7yVJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIUVYlJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIVjgFJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_OLRiwFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIVjgVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIWKklJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OLRiwlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIWKk1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIXYsFJPEeiyW7NaN4qWdw" name="readChildren" visibility="protected" method="_OLRixFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIXYsVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NV5Z8FJPEeiyW7NaN4qWdw" name="TransportableAIObject" isAbstract="true">
                <ownedComment xmi:id="_OLlr1FJPEeiyW7NaN4qWdw">
                  <body>A single item in a carrier's transport list.  Any {@link Locatable}&#xD;
which should be able to be transported by a carrier using the&#xD;
{@link net.sf.freecol.server.ai.mission.TransportMission}, &#xD;
should extend this class.&#xD;
 *&#xD;
@see net.sf.freecol.server.ai.mission.TransportMission</body>
                </ownedComment>
                <generalization xmi:id="_ODsUEFJPEeiyW7NaN4qWdw" general="_NWFnMFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKI6UFJPEeiyW7NaN4qWdw" name="IMPORTANT_DELIVERY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKI6UVJPEeiyW7NaN4qWdw" value="110"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKI6UlJPEeiyW7NaN4qWdw" name="FULL_DELIVERY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKI6U1JPEeiyW7NaN4qWdw" value="100"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKJhYFJPEeiyW7NaN4qWdw" name="TOOLS_FOR_COLONY_PRIORITY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKJhYVJPEeiyW7NaN4qWdw" value="10"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKJhYlJPEeiyW7NaN4qWdw" name="TOOLS_FOR_IMPROVEMENT" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKJhY1JPEeiyW7NaN4qWdw" value="10"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKJhZFJPEeiyW7NaN4qWdw" name="TOOLS_FOR_PIONEER" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKJhZVJPEeiyW7NaN4qWdw" value="90"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKJhZlJPEeiyW7NaN4qWdw" name="TOOLS_FOR_BUILDING" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKKIcFJPEeiyW7NaN4qWdw" value="100"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKKIcVJPEeiyW7NaN4qWdw" name="transport" isLeaf="true" type="_NSoDgFJPEeiyW7NaN4qWdw" association="_OM89wFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKKIclJPEeiyW7NaN4qWdw" name="TRANSPORT_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKKIc1JPEeiyW7NaN4qWdw" value="&quot;transport&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLRizFJPEeiyW7NaN4qWdw" name="TransportableAIObject" specification="_ODrF8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLRizVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLRizlJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLRiz1JPEeiyW7NaN4qWdw" type="_NV5Z8FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, id);&#xD;
&#xD;
     this.transport = null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLRi0FJPEeiyW7NaN4qWdw" name="TransportableAIObject" specification="_OIZN4FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLRi0VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLRi0lJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLRi01JPEeiyW7NaN4qWdw" type="_NV5Z8FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, element);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSJ0FJPEeiyW7NaN4qWdw" name="TransportableAIObject" specification="_OIZ08FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSJ0VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLSJ0lJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLSJ01JPEeiyW7NaN4qWdw" type="_NV5Z8FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSJ1FJPEeiyW7NaN4qWdw" name="getTransportPriority" specification="_NV6oEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSJ1VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getValue();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSJ1lJPEeiyW7NaN4qWdw" name="setTransportPriority" specification="_NV7PIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSJ11JPEeiyW7NaN4qWdw" name="transportPriority">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>setValue(transportPriority);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSJ2FJPEeiyW7NaN4qWdw" name="incrementTransportPriority" specification="_NV7PIlJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>setValue(getValue() + 1);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSJ2VJPEeiyW7NaN4qWdw" name="getSpaceTaken" specification="_NV7PI1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSJ2lJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>Locatable l = getTransportLocatable();&#xD;
     return (l == null) ? 0 : l.getSpaceTaken();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSJ21JPEeiyW7NaN4qWdw" name="dropTransport" specification="_NV7PJVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSJ3FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>AIUnit transport = getTransport();&#xD;
     if (transport != null) {&#xD;
         if (!transport.isDisposed()&#xD;
             &amp;&amp; getLocation() != transport.getUnit()) {&#xD;
             TransportMission tm&#xD;
                 = transport.getMission(TransportMission.class);&#xD;
             if (tm != null) tm.removeTransportable(this);&#xD;
         }&#xD;
         setTransport(null);&#xD;
     }&#xD;
     return getTransport() == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSJ3VJPEeiyW7NaN4qWdw" name="changeTransport" specification="_ODrtAFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSJ3lJPEeiyW7NaN4qWdw" name="aiCarrier" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLSJ31JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>// Get off any current carrier unless it is the new one.&#xD;
     Location now;&#xD;
     Locatable l = getTransportLocatable();&#xD;
     if (l != null &amp;&amp; (now = l.getLocation()) instanceof Unit&#xD;
         &amp;&amp; !(aiCarrier != null &amp;&amp; aiCarrier.getUnit() == now)) {&#xD;
         if (!leaveTransport()) return false;&#xD;
     }&#xD;
&#xD;
     AIUnit old = getTransport();&#xD;
     if (old != null) {&#xD;
         if (old == aiCarrier) return true;&#xD;
&#xD;
         TransportMission tm = old.getMission(TransportMission.class);&#xD;
         if (tm != null) tm.removeTransportable(this);&#xD;
     }&#xD;
     setTransport(null);&#xD;
     if (aiCarrier != null) {&#xD;
         //TransportMission tm = aiCarrier.getMission(TransportMission.class);&#xD;
         //if (tm != null) {&#xD;
         //    if (!tm.requeueTransportable(this)) return false;&#xD;
         //}&#xD;
         setTransport(aiCarrier);&#xD;
     }&#xD;
     return true;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSJ4FJPEeiyW7NaN4qWdw" name="getLocation" specification="_NV72MFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSJ4VJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>Locatable l = getTransportLocatable();&#xD;
     return (l == null) ? null : l.getLocation();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSJ4lJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_OIeGYVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSJ41JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeAttributes(xw);&#xD;
&#xD;
     if (transport != null) {&#xD;
         Unit u = transport.getUnit();&#xD;
         if (u != null &amp;&amp; !u.isDisposed()) {&#xD;
             xw.writeAttribute(TRANSPORT_TAG, u);&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSJ5FJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OIfUgFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSJ5VJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readAttributes(xr);&#xD;
&#xD;
     final AIMain aiMain = getAIMain();&#xD;
&#xD;
     transport = (xr.hasAttribute(TRANSPORT_TAG))&#xD;
         ? xr.makeAIObject(aiMain, TRANSPORT_TAG,&#xD;
                           AIUnit.class, (AIUnit)null, true)&#xD;
         : null;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NV6oEFJPEeiyW7NaN4qWdw" name="getTransportPriority" method="_OLSJ1FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr2FJPEeiyW7NaN4qWdw">
                    <body>Gets the priority of transporting this object to its destination.&#xD;
     *&#xD;
     * @return The priority of the transport.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NV6oEVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NV7PIFJPEeiyW7NaN4qWdw" name="setTransportPriority" method="_OLSJ1lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr2VJPEeiyW7NaN4qWdw">
                    <body>Sets the priority of getting this object to its destination.&#xD;
     *&#xD;
     * @param transportPriority The priority.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NV7PIVJPEeiyW7NaN4qWdw" name="transportPriority">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NV7PIlJPEeiyW7NaN4qWdw" name="incrementTransportPriority" isLeaf="true" method="_OLSJ2FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr2lJPEeiyW7NaN4qWdw">
                    <body>Increases the transport priority.</body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:id="_NV7PI1JPEeiyW7NaN4qWdw" name="getSpaceTaken" method="_OLSJ2VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr21JPEeiyW7NaN4qWdw">
                    <body>Gets the number of cargo slots taken by this transportable.&#xD;
     *&#xD;
     * @return The number of cargo slots taken.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NV7PJFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NV7PJVJPEeiyW7NaN4qWdw" name="dropTransport" method="_OLSJ21JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr3FJPEeiyW7NaN4qWdw">
                    <body>Drop the current transport, keeping the transport mission consistent.&#xD;
     *&#xD;
     * Public so AIPlayer.removeAIUnit can drop its responsibilities.&#xD;
     *&#xD;
     * @return True if the unit has no allocated transport.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NV7PJlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NV72MFJPEeiyW7NaN4qWdw" name="getLocation" method="_OLSJ4FJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr3lJPEeiyW7NaN4qWdw">
                    <body>Get the transportables location if any.&#xD;
     *&#xD;
     * @return The transportable &lt;code>Location&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIacAFJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NV72MVJPEeiyW7NaN4qWdw" name="getTransportLocatable" isAbstract="true">
                  <ownedComment xmi:id="_OLlr31JPEeiyW7NaN4qWdw">
                    <body>Gets the underlying locatable object which should be transported.&#xD;
     *&#xD;
     * @return The &lt;code>Locatable&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIacAVJPEeiyW7NaN4qWdw" type="_OA-XQVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NV8dQFJPEeiyW7NaN4qWdw" name="getTransportSource" isAbstract="true">
                  <ownedComment xmi:id="_OLlr4FJPEeiyW7NaN4qWdw">
                    <body>Get the source location for this transportable AI object.&#xD;
     * This is normally the location of the&#xD;
     * {@link #getTransportLocatable locatable}.&#xD;
     *&#xD;
     * @return The source &lt;code>Location&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIbDEFJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NV8dQVJPEeiyW7NaN4qWdw" name="getTransportDestination" isAbstract="true">
                  <ownedComment xmi:id="_OLlr4VJPEeiyW7NaN4qWdw">
                    <body>Get the destination location for this transportable AI object.&#xD;
     * This can be the target {@link net.sf.freecol.common.model.Tile}&#xD;
     * of the transport or the target of the mission.&#xD;
     *&#xD;
     * @return The destination &lt;code>Location&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIbDEVJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NV9rYFJPEeiyW7NaN4qWdw" name="canMove" isAbstract="true">
                  <ownedComment xmi:id="_OLmS4VJPEeiyW7NaN4qWdw">
                    <body>This transportable can move now.  Useful for units that may or&#xD;
     * may not have enough moves left to join or leave a carrier.&#xD;
     *&#xD;
     * @return True if the transportable can move.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NV-ScFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NV-5gFJPEeiyW7NaN4qWdw" name="leaveTransport" isAbstract="true">
                  <ownedComment xmi:id="_OLmS4lJPEeiyW7NaN4qWdw">
                    <body>This object leaves its current carrier unit by the most&#xD;
     * suitable means.&#xD;
     *&#xD;
     * @return True if the object successfully left the carrier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NV-5gVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NV_gkFJPEeiyW7NaN4qWdw" name="invalidReason" isAbstract="true">
                  <ownedComment xmi:id="_OLmS5VJPEeiyW7NaN4qWdw">
                    <body>Is there a reason to invalidate transporting this object?&#xD;
     *&#xD;
     * @return A reason to abort transport, or null if none found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NV_gkVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ODrF8FJPEeiyW7NaN4qWdw" name="TransportableAIObject" method="_OLRizFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_ODrF81JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ODrF9FJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLlr1VJPEeiyW7NaN4qWdw">
                    <body>Create a new uninitialized transportable AI object.&#xD;
     *&#xD;
     * @param aiMain an &lt;code>AIMain&lt;/code> value&#xD;
     * @param id The object identifier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODrF8VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODrF8lJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ODrF9VJPEeiyW7NaN4qWdw" type="_NV5Z8FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODrtAFJPEeiyW7NaN4qWdw" name="changeTransport" method="_OLSJ3VJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLlr3VJPEeiyW7NaN4qWdw">
                    <body>Change the allocated transport for this transportable to a different&#xD;
     * carrier unit.&#xD;
     *&#xD;
     * FIXME: partial attempt to maintain consistency of any carrier&#xD;
     * TransportMission lists, and disembark from the old carrier if&#xD;
     * possible.&#xD;
     *&#xD;
     * @param aiCarrier The new carrier &lt;code>AIUnit&lt;/code>.&#xD;
     * @return True if the transport was changed, false if the transportable&#xD;
     *     was unable to disembark from the old carrier or unable to be&#xD;
     *     added to the new carrier transport list.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODrtAVJPEeiyW7NaN4qWdw" name="aiCarrier" type="_NSoDgFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODrtAlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OIZN4FJPEeiyW7NaN4qWdw" name="TransportableAIObject" method="_OLRi0FJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIZN41JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIZN5FJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLlr1lJPEeiyW7NaN4qWdw">
                    <body>Creates a new transportable AI object from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param element The root element for the XML-representation &#xD;
     *     of the object.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIZN4VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIZN4lJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIZN5VJPEeiyW7NaN4qWdw" type="_NV5Z8FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIZ08FJPEeiyW7NaN4qWdw" name="TransportableAIObject" method="_OLSJ0FJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIZ081JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIZ09FJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLlr11JPEeiyW7NaN4qWdw">
                    <body>Creates a new transportable AI object from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIZ08VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIZ08lJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIZ09VJPEeiyW7NaN4qWdw" type="_NV5Z8FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIbDElJPEeiyW7NaN4qWdw" name="setTransportDestination" isAbstract="true">
                  <ownedComment xmi:id="_OLlr4lJPEeiyW7NaN4qWdw">
                    <body>Set the destination location for this transportable AI object.&#xD;
     *&#xD;
     * @param destination The destination &lt;code>Location&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIbDE1JPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIbqIFJPEeiyW7NaN4qWdw" name="getDeliveryPath" isAbstract="true">
                  <ownedComment xmi:id="_OLlr41JPEeiyW7NaN4qWdw">
                    <body>Get the path to deliver this transportable to its destination&#xD;
     * with a given carrier.&#xD;
     *&#xD;
     * @param carrier The carrier &lt;code>Unit&lt;/code> to use.&#xD;
     * @param dst The destination &lt;code>Location&lt;/code>, defaulting to the&#xD;
     *     transport destination if null.&#xD;
     * @return A path, or null if none found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIbqIVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIbqIlJPEeiyW7NaN4qWdw" name="dst" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIbqI1JPEeiyW7NaN4qWdw" type="_OA--UVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIcRMFJPEeiyW7NaN4qWdw" name="getIntermediatePath" isAbstract="true">
                  <ownedComment xmi:id="_OLlr5FJPEeiyW7NaN4qWdw">
                    <body>Get the path to make progress with this transport, for the&#xD;
     * carrier to either collect or deliver the transportable, albeit&#xD;
     * it need only improve the current situation rather than complete&#xD;
     * the delivery to the destination.&#xD;
     *&#xD;
     * @param carrier The carrier &lt;code>Unit&lt;/code> to use.&#xD;
     * @param dst The destination &lt;code>Location&lt;/code>, defaulting to the&#xD;
     *     transport destination if null.&#xD;
     * @return A path, or null if none found.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIcRMVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIcRMlJPEeiyW7NaN4qWdw" name="dst" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIcRM1JPEeiyW7NaN4qWdw" type="_OA--UVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIc4QFJPEeiyW7NaN4qWdw" name="carriableBy" isAbstract="true">
                  <ownedComment xmi:id="_OLmS4FJPEeiyW7NaN4qWdw">
                    <body>Can this transportable be carried by a given carrier unit?&#xD;
     *&#xD;
     * @param carrier The potential carrier &lt;code>Unit&lt;/code>.&#xD;
     * @return True if the unit can carry this transportable.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIc4QVJPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIc4QlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OIc4Q1JPEeiyW7NaN4qWdw" name="leaveTransport" isAbstract="true">
                  <ownedComment xmi:id="_OLmS41JPEeiyW7NaN4qWdw">
                    <body>This object leaves its current carrier unit.&#xD;
     *&#xD;
     * @param direction The &lt;code>Direction&lt;/code> to leave in, null&#xD;
     *     to leave in place.&#xD;
     * @return True if the object successfully left the carrier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIdfUFJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIdfUVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OIdfUlJPEeiyW7NaN4qWdw" name="joinTransport" isAbstract="true">
                  <ownedComment xmi:id="_OLmS5FJPEeiyW7NaN4qWdw">
                    <body>This object joins a carrier unit.&#xD;
     *&#xD;
     * @param carrier The carrier &lt;code>Unit&lt;/code> to join.&#xD;
     * @param direction The &lt;code>Direction&lt;/code> to move, null to join&#xD;
     *     a carrier in the same location.&#xD;
     * @return True if the object has joined tha carrier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIdfU1JPEeiyW7NaN4qWdw" name="carrier" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIdfVFJPEeiyW7NaN4qWdw" name="direction" type="_OAVeEVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIeGYFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OIeGYVJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_OLSJ4lJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIeGYlJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIfUgFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OLSJ5FJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIfUgVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NWFnMFJPEeiyW7NaN4qWdw" name="ValuedAIObject" isAbstract="true">
                <ownedComment xmi:id="_OLmS5lJPEeiyW7NaN4qWdw">
                  <body>Abstract class of AI object with a simple enclosed comparable&#xD;
integer value.</body>
                </ownedComment>
                <generalization xmi:id="_ODv-cFJPEeiyW7NaN4qWdw" general="_NR_xYFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKKvgFJPEeiyW7NaN4qWdw" name="valuedComparator" isLeaf="true" isStatic="true" type="_OAKe8VJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OM-L4FJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKL9oVJPEeiyW7NaN4qWdw" value="Comparator.comparingInt(ValuedAIObject::getValue).reversed()"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKL9olJPEeiyW7NaN4qWdw" name="value" isLeaf="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSw4FJPEeiyW7NaN4qWdw" name="ValuedAIObject" specification="_ODvXYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSw4VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLSw4lJPEeiyW7NaN4qWdw" type="_NWFnMFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSw41JPEeiyW7NaN4qWdw" name="ValuedAIObject" specification="_ODvXZVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSw5FJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLSw5VJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLSw5lJPEeiyW7NaN4qWdw" type="_NWFnMFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, id);&#xD;
&#xD;
     this.value = 0;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSw51JPEeiyW7NaN4qWdw" name="ValuedAIObject" specification="_OIhJsFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSw6FJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLSw6VJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLSw6lJPEeiyW7NaN4qWdw" type="_NWFnMFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, element);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSw61JPEeiyW7NaN4qWdw" name="ValuedAIObject" specification="_OIhwwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSw7FJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLSw7VJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLSw7lJPEeiyW7NaN4qWdw" type="_NWFnMFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSw71JPEeiyW7NaN4qWdw" name="compareTo" specification="_OIiX1VJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSw8FJPEeiyW7NaN4qWdw" name="other" type="_OBXY0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLSw8VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int cmp = 0;&#xD;
     if (other instanceof ValuedAIObject) {&#xD;
         ValuedAIObject vao = (ValuedAIObject)other;&#xD;
         cmp = vao.value - this.value;&#xD;
     }&#xD;
     if (cmp == 0) cmp = super.compareTo(other);&#xD;
     return cmp;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLSw8lJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_OIjl8lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLSw81JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeAttributes(xw);&#xD;
&#xD;
     xw.writeAttribute(VALUE_TAG, value);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLTX8FJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OIk0EFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLTX8VJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readAttributes(xr);&#xD;
&#xD;
     setValue(xr.getAttribute(VALUE_TAG, -1));&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ODvXYFJPEeiyW7NaN4qWdw" name="ValuedAIObject" method="_OLSw4FJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_ODvXYlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ODvXY1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ODvXYVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODvXZFJPEeiyW7NaN4qWdw" type="_NWFnMFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODvXZVJPEeiyW7NaN4qWdw" name="ValuedAIObject" method="_OLSw41JPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_ODvXaFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ODvXaVJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ODvXZlJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODvXZ1JPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ODvXalJPEeiyW7NaN4qWdw" type="_NWFnMFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIhJsFJPEeiyW7NaN4qWdw" name="ValuedAIObject" method="_OLSw51JPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIhJs1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIhJtFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_OIhJsVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIhJslJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIhJtVJPEeiyW7NaN4qWdw" type="_NWFnMFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIhwwFJPEeiyW7NaN4qWdw" name="ValuedAIObject" method="_OLSw61JPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIiX0lJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIiX01JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_OIiX0FJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIiX0VJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIiX1FJPEeiyW7NaN4qWdw" type="_NWFnMFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIiX1VJPEeiyW7NaN4qWdw" name="compareTo" method="_OLSw71JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIi-4FJPEeiyW7NaN4qWdw" name="other" type="_OBXY0VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIi-4VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OIjl8lJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_OLSw8lJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIjl81JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIk0EFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OLTX8FJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIk0EVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NWKfsFJPEeiyW7NaN4qWdw" name="Wish" isAbstract="true">
                <ownedComment xmi:id="_OLmS51JPEeiyW7NaN4qWdw">
                  <body>Represents a need for something at a given &lt;code>Location&lt;/code>.</body>
                </ownedComment>
                <generalization xmi:id="_ODyasFJPEeiyW7NaN4qWdw" general="_NWFnMFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKL9o1JPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_OM-y8FJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKL9pFJPEeiyW7NaN4qWdw" value="Logger.getLogger(Wish.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKL9pVJPEeiyW7NaN4qWdw" name="destination" visibility="protected" type="_OAU3AVJPEeiyW7NaN4qWdw" association="_OM_aAVJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKMksVJPEeiyW7NaN4qWdw" name="transportable" visibility="protected" type="_NV5Z8FJPEeiyW7NaN4qWdw" association="_ONABEVJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKNLwFJPEeiyW7NaN4qWdw" name="DESTINATION_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKNLwVJPEeiyW7NaN4qWdw" value="&quot;destination&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKNLwlJPEeiyW7NaN4qWdw" name="TRANSPORTABLE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKNLw1JPEeiyW7NaN4qWdw" value="&quot;transportable&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLTX8lJPEeiyW7NaN4qWdw" name="Wish" specification="_ODxMkFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLTX81JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLTX9FJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLTX9VJPEeiyW7NaN4qWdw" type="_NWKfsFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, id);&#xD;
&#xD;
     this.destination = null;&#xD;
     this.transportable = null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLTX9lJPEeiyW7NaN4qWdw" name="Wish" specification="_OImCMFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLTX91JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLTX-FJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLTX-VJPEeiyW7NaN4qWdw" type="_NWKfsFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, element);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLTX-lJPEeiyW7NaN4qWdw" name="Wish" specification="_OImpQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLTX-1JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLTX_FJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLTX_VJPEeiyW7NaN4qWdw" type="_NWKfsFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLTX_lJPEeiyW7NaN4qWdw" name="shouldBeStored" specification="_NWLt0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLTX_1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return transportable != null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLTYAFJPEeiyW7NaN4qWdw" name="getTransportable" specification="_NWLt0lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLTYAVJPEeiyW7NaN4qWdw" type="_NV5Z8FJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return transportable;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLTYAlJPEeiyW7NaN4qWdw" name="setTransportable" specification="_ODxzoVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLTYA1JPEeiyW7NaN4qWdw" name="transportable" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>this.transportable = transportable;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLTYBFJPEeiyW7NaN4qWdw" name="getDestination" specification="_NWLt01JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLTYBVJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return destination;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLT_AFJPEeiyW7NaN4qWdw" name="getDestinationAIColony" specification="_NWMU4FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLT_AVJPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>return (destination instanceof Colony)&#xD;
         ? getAIMain().getAIColony((Colony)destination)&#xD;
         : null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLT_AlJPEeiyW7NaN4qWdw" name="dispose" specification="_NWMU4VJPEeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>this.destination = null;&#xD;
     this.transportable = null;&#xD;
     super.dispose();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLT_A1JPEeiyW7NaN4qWdw" name="checkIntegrity" specification="_NWM78lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLT_BFJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLT_BVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = super.checkIntegrity(fix);&#xD;
     if (transportable != null) {&#xD;
         result = Math.min(result, &#xD;
                           transportable.checkIntegrity(fix));&#xD;
     }&#xD;
     if (destination == null&#xD;
         || ((FreeColGameObject)destination).isDisposed()) {&#xD;
         result = -1;&#xD;
     }&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLT_BlJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_OIn3YFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLT_B1JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeAttributes(xw);&#xD;
&#xD;
     // Write identifier, Location will match Object&#xD;
     if (destination != null) {&#xD;
         xw.writeAttribute(DESTINATION_TAG, destination.getId());&#xD;
&#xD;
         if (transportable != null) {&#xD;
             xw.writeAttribute(TRANSPORTABLE_TAG, transportable.getId());&#xD;
         }&#xD;
     }&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLT_CFJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OIoecFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLT_CVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readAttributes(xr);&#xD;
&#xD;
     final AIMain aiMain = getAIMain();&#xD;
&#xD;
     destination = xr.getLocationAttribute(aiMain.getGame(),&#xD;
                                           DESTINATION_TAG, false);&#xD;
&#xD;
     // Delegate transportable one level down&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NWLt0FJPEeiyW7NaN4qWdw" name="shouldBeStored" method="_OLTX_lJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLmS61JPEeiyW7NaN4qWdw">
                    <body>Checks if this &lt;code>Wish&lt;/code> needs to be stored in a savegame.&#xD;
     *&#xD;
     * @return True if it has been allocated a transportable.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NWLt0VJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NWLt0lJPEeiyW7NaN4qWdw" name="getTransportable" method="_OLTYAFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLmS7FJPEeiyW7NaN4qWdw">
                    <body>Gets the &lt;code>TransportableAIObject&lt;/code> assigned to this wish.&#xD;
     *&#xD;
     * @see #setTransportable&#xD;
     * @see net.sf.freecol.server.ai.mission.WishRealizationMission&#xD;
     * @return The &lt;code>TransportableAIObject&lt;/code> which will&#xD;
     *     realize this wish, or null if none has been assigned.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODxzoFJPEeiyW7NaN4qWdw" type="_NV5Z8FJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NWLt01JPEeiyW7NaN4qWdw" name="getDestination" method="_OLTYBFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLmS7lJPEeiyW7NaN4qWdw">
                    <body>Gets the destination of this &lt;code>Wish&lt;/code>.&#xD;
     *&#xD;
     * @return The &lt;code>Location&lt;/code> in which the&#xD;
     *     {@link #getTransportable transportable} assigned to&#xD;
     *     this &lt;code>Wish&lt;/code> will have to reach.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OInQUFJPEeiyW7NaN4qWdw" type="_OAU3AVJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NWMU4FJPEeiyW7NaN4qWdw" name="getDestinationAIColony" method="_OLT_AFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLmS71JPEeiyW7NaN4qWdw">
                    <body>Gets the destination AI colony, if any.&#xD;
     *&#xD;
     * @return The destination &lt;code>AIColony&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODxzo1JPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_NWMU4VJPEeiyW7NaN4qWdw" name="dispose" method="_OLT_AlJPEeiyW7NaN4qWdw"/>
                <ownedOperation xmi:id="_NWM78lJPEeiyW7NaN4qWdw" name="checkIntegrity" method="_OLT_A1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NWM781JPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NWM79FJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ODxMkFJPEeiyW7NaN4qWdw" name="Wish" method="_OLTX8lJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_ODxMk1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ODxMlFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLmS6FJPEeiyW7NaN4qWdw">
                    <body>Creates a new uninitialized &lt;code>Wish&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param id The object identifier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODxMkVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ODxMklJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ODxMlVJPEeiyW7NaN4qWdw" type="_NWKfsFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ODxzoVJPEeiyW7NaN4qWdw" name="setTransportable" method="_OLTYAlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLmS7VJPEeiyW7NaN4qWdw">
                    <body>Assigns a &lt;code>TransportableAIObject&lt;/code> to this &lt;code>Wish&lt;/code>.&#xD;
     *&#xD;
     * @param transportable The &lt;code>TransportableAIObject&lt;/code>&#xD;
     *     which should realize this wish.&#xD;
     * @see #getTransportable&#xD;
     * @see net.sf.freecol.server.ai.mission.WishRealizationMission</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ODxzolJPEeiyW7NaN4qWdw" name="transportable" type="_NV5Z8FJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OImCMFJPEeiyW7NaN4qWdw" name="Wish" method="_OLTX9lJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OImCM1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OImCNFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLmS6VJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>Wish&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param element The root element for the XML-representation &#xD;
     *       of a &lt;code>Wish&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OImCMVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OImCMlJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OImCNVJPEeiyW7NaN4qWdw" type="_NWKfsFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OImpQFJPEeiyW7NaN4qWdw" name="Wish" method="_OLTX-lJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OImpQ1JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OImpRFJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLmS6lJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>Wish&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OImpQVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OImpQlJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OImpRVJPEeiyW7NaN4qWdw" type="_NWKfsFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIn3YFJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_OLT_BlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIn3YVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIoecFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OLT_CFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIoecVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NWQmUFJPEeiyW7NaN4qWdw" name="WorkLocationPlan">
                <ownedComment xmi:id="_OLmS8FJPEeiyW7NaN4qWdw">
                  <body>Objects of this class contains AI-information for a single&#xD;
{@link net.sf.freecol.common.model.WorkLocation}.</body>
                </ownedComment>
                <generalization xmi:id="_ODzo0FJPEeiyW7NaN4qWdw" general="_NR_xYFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKNy0FJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_ONAoIVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKNy0VJPEeiyW7NaN4qWdw" value="Logger.getLogger(WorkLocationPlan.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKOZ41JPEeiyW7NaN4qWdw" name="workLocation" type="_OAcLwlJPEeiyW7NaN4qWdw" isReadOnly="true" association="_ONBPMVJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKOZ5FJPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw" association="_OLm58FJPEeiyW7NaN4qWdw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLUmEFJPEeiyW7NaN4qWdw" name="WorkLocationPlan" specification="_OIqToFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLUmEVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLUmElJPEeiyW7NaN4qWdw" name="workLocation" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLUmE1JPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLUmFFJPEeiyW7NaN4qWdw" type="_NWQmUFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain);&#xD;
&#xD;
     this.workLocation = workLocation;&#xD;
     this.goodsType = goodsType;&#xD;
&#xD;
     uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLUmFVJPEeiyW7NaN4qWdw" name="WorkLocationPlan" specification="_OIqTp1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLUmFlJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLUmF1JPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLUmGFJPEeiyW7NaN4qWdw" type="_NWQmUFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, element);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLUmGVJPEeiyW7NaN4qWdw" name="isFoodPlan" specification="_NWRNYFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLUmGlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return goodsType.isFoodType();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLUmG1JPEeiyW7NaN4qWdw" name="toString" specification="_NWR0cVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLUmHFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>StringBuilder sb = new StringBuilder(32);&#xD;
     sb.append(&quot;[&quot;).append(getId())&#xD;
         .append(&quot; &quot;).append(goodsType.getSuffix())&#xD;
         .append(&quot; at &quot;).append(workLocation.getId())&#xD;
         .append(&quot;]&quot;);&#xD;
     return sb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLUmHVJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_NWSbglJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLUmHlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getXMLElementTagName(); </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLUmH1JPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_NWTCklJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLUmIFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return &quot;workLocationPlan&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NWRNYFJPEeiyW7NaN4qWdw" name="isFoodPlan" method="_OLUmGVJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLm59FJPEeiyW7NaN4qWdw">
                    <body>Is this a food producing plan?&#xD;
     *&#xD;
     * @return True if this plan produces food.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NWR0cFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NWR0cVJPEeiyW7NaN4qWdw" name="toString" method="_OLUmG1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NWR0clJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NWSbglJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_OLUmHVJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NWSbg1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NWTCklJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_OLUmH1JPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLm59VJPEeiyW7NaN4qWdw">
                    <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;workLocationPlan&quot;</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NWTCk1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OIqToFJPEeiyW7NaN4qWdw" name="WorkLocationPlan" method="_OLUmEFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIqTpFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIqTpVJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLm58lJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>WorkLocationPlan&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param workLocation The &lt;code>WorkLocation&lt;/code> to create&#xD;
     *      a plan for.&#xD;
     * @param goodsType The goodsType to be produced on the&#xD;
     *      &lt;code>workLocation&lt;/code> using this plan.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIqToVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIqTolJPEeiyW7NaN4qWdw" name="workLocation" type="_OAcLwlJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIqTo1JPEeiyW7NaN4qWdw" name="goodsType" type="_OAUP8VJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIqTplJPEeiyW7NaN4qWdw" type="_NWQmUFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIqTp1JPEeiyW7NaN4qWdw" name="WorkLocationPlan" method="_OLUmFVJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIq6slJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIq6s1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLm581JPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>WorkLocationPlan&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param element An &lt;code>Element&lt;/code> containing an&#xD;
     *      XML-representation of this object.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIq6sFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIq6sVJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIq6tFJPEeiyW7NaN4qWdw" type="_NWQmUFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_NWU3wFJPEeiyW7NaN4qWdw" name="WorkerWish">
                <ownedComment xmi:id="_OLm59lJPEeiyW7NaN4qWdw">
                  <body>Represents the need for a worker within a &lt;code>Colony&lt;/code>.</body>
                </ownedComment>
                <generalization xmi:id="_OD1eAFJPEeiyW7NaN4qWdw" general="_NWKfsFJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKPA8FJPEeiyW7NaN4qWdw" name="logger" visibility="private" isLeaf="true" isStatic="true" type="_OAM7MFJPEeiyW7NaN4qWdw" isReadOnly="true" association="_ONB2QVJPEeiyW7NaN4qWdw">
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKPA8VJPEeiyW7NaN4qWdw" value="Logger.getLogger(WorkerWish.class.getName())"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKPoBFJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw" isReadOnly="true" association="_ONCdUVJPEeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_OKPoBVJPEeiyW7NaN4qWdw" name="expertNeeded" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKQPEVJPEeiyW7NaN4qWdw" name="EXPERT_NEEDED_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKQ2IFJPEeiyW7NaN4qWdw" value="&quot;expertNeeded&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKQ2IVJPEeiyW7NaN4qWdw" name="TRANSPORTABLE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKQ2IlJPEeiyW7NaN4qWdw" value="&quot;transportable&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_OKQ2I1JPEeiyW7NaN4qWdw" name="UNIT_TYPE_TAG" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_OKQ2JFJPEeiyW7NaN4qWdw" value="&quot;unitType&quot;"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLVNIFJPEeiyW7NaN4qWdw" name="WorkerWish" specification="_OD028FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLVNIVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLVNIlJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLVNI1JPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, id);&#xD;
&#xD;
     unitType = null;&#xD;
     expertNeeded = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLVNJFJPEeiyW7NaN4qWdw" name="WorkerWish" specification="_OIrhwFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLVNJVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLVNJlJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLVNJ1JPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLVNKFJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLVNKVJPEeiyW7NaN4qWdw" name="expertNeeded">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLVNKlJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this(aiMain, getXMLElementTagName() + &quot;:&quot; + aiMain.getNextId());&#xD;
&#xD;
     if (destination == null) {&#xD;
         throw new NullPointerException(&quot;destination == null&quot;);&#xD;
     }&#xD;
&#xD;
     this.destination = destination;&#xD;
     setValue(value);&#xD;
     this.unitType = unitType;&#xD;
     this.expertNeeded = expertNeeded;&#xD;
     uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLVNK1JPEeiyW7NaN4qWdw" name="WorkerWish" specification="_OIsI0FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLVNLFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLVNLVJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLVNLlJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, element);&#xD;
&#xD;
     uninitialized = unitType == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLVNL1JPEeiyW7NaN4qWdw" name="WorkerWish" specification="_OIsI1lJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLVNMFJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLVNMVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLVNMlJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>super(aiMain, xr);&#xD;
&#xD;
     uninitialized = unitType == null;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLV0MFJPEeiyW7NaN4qWdw" name="update" specification="_OIsv41JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLV0MVJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLV0MlJPEeiyW7NaN4qWdw" name="expertNeeded">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLV0M1JPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>setValue(value);&#xD;
     this.unitType = unitType;&#xD;
     this.expertNeeded = expertNeeded;&#xD;
     if (transportable != null) transportable.setTransportPriority(value);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLV0NFJPEeiyW7NaN4qWdw" name="satisfiedBy" specification="_OItW8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLV0NVJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OLV0NlJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return (expertNeeded) &#xD;
         ? unit.getType() == unitType&#xD;
         : unit.getType().isNaval() == unitType.isNaval();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLV0N1JPEeiyW7NaN4qWdw" name="checkIntegrity" specification="_NWWs8FJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLV0OFJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OLV0OVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int result = super.checkIntegrity(fix);&#xD;
     if (unitType == null) result = -1;&#xD;
     return result;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLV0OlJPEeiyW7NaN4qWdw" name="writeAttributes" specification="_OIt-AFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLV0O1JPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.writeAttributes(xw);&#xD;
&#xD;
     xw.writeAttribute(UNIT_TYPE_TAG, unitType);&#xD;
&#xD;
     xw.writeAttribute(EXPERT_NEEDED_TAG, expertNeeded);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLV0PFJPEeiyW7NaN4qWdw" name="readAttributes" specification="_OIulEFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLV0PVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readAttributes(xr);&#xD;
&#xD;
     final AIMain aiMain = getAIMain();&#xD;
     final Specification spec = getSpecification();&#xD;
&#xD;
     // Delegated from Wish&#xD;
     transportable = (xr.hasAttribute(TRANSPORTABLE_TAG))&#xD;
         ? xr.makeAIObject(aiMain, TRANSPORTABLE_TAG,&#xD;
                           AIUnit.class, (AIUnit)null, true)&#xD;
         : null;&#xD;
&#xD;
     unitType = xr.getType(spec, UNIT_TYPE_TAG,&#xD;
                           UnitType.class, (UnitType)null);&#xD;
     &#xD;
     expertNeeded = xr.getAttribute(EXPERT_NEEDED_TAG, false);&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLV0PlJPEeiyW7NaN4qWdw" name="readChildren" specification="_OIvMIFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLV0P1JPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <language>java</language>
                  <body>super.readChildren(xr);&#xD;
&#xD;
     if (unitType != null) uninitialized = false;&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLV0QFJPEeiyW7NaN4qWdw" name="toString" specification="_NWX7EFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLV0QVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>LogBuilder lb = new LogBuilder(64);&#xD;
     lb.add(&quot;[&quot;, getId(),&#xD;
         &quot; &quot;, ((unitType == null) ? &quot;null&quot; : unitType.getSuffix()),&#xD;
         ((expertNeeded) ? &quot;/expert&quot; : &quot;&quot;),&#xD;
         &quot; -> &quot;, destination, &quot; (&quot;, getValue(), &quot;)]&quot;);&#xD;
     return lb.toString();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLWbQFJPEeiyW7NaN4qWdw" name="getXMLTagName" specification="_NWYiJFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLWbQVJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return getXMLElementTagName(); </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_OLWbQlJPEeiyW7NaN4qWdw" name="getXMLElementTagName" specification="_NWZJNFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OLWbQ1JPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return &quot;workerWish&quot;;&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_NWWs8FJPEeiyW7NaN4qWdw" name="checkIntegrity" method="_OLV0N1JPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NWWs8VJPEeiyW7NaN4qWdw" name="fix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_NWXUAFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NWX7EFJPEeiyW7NaN4qWdw" name="toString" method="_OLV0QFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NWYiIFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NWYiJFJPEeiyW7NaN4qWdw" name="getXMLTagName" method="_OLWbQFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_NWZJMFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_NWZJNFJPEeiyW7NaN4qWdw" name="getXMLElementTagName" isStatic="true" method="_OLWbQlJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLnhA1JPEeiyW7NaN4qWdw">
                    <body>Gets the tag name of the root element representing this object.&#xD;
     *&#xD;
     * @return &quot;workerWish&quot;</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_NWZwQFJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OD028FJPEeiyW7NaN4qWdw" name="WorkerWish" method="_OLVNIFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OD0281JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OD029FJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLm5-FJPEeiyW7NaN4qWdw">
                    <body>Creates a new uninitialized &lt;code>WorkerWish&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param id The object identifier.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OD028VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OD028lJPEeiyW7NaN4qWdw" name="id">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OD029VJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIrhwFJPEeiyW7NaN4qWdw" name="WorkerWish" method="_OLVNJFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIrhxlJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIrhx1JPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLm5-VJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>WorkerWish&lt;/code>.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param destination The &lt;code>Location&lt;/code> in which the&#xD;
     *       {@link Wish#getTransportable transportable} assigned to&#xD;
     *       this &lt;code>WorkerWish&lt;/code> will have to reach.&#xD;
     * @param value The value identifying the importance of&#xD;
     *       this &lt;code>Wish&lt;/code>.&#xD;
     * @param unitType The type of unit needed for releasing this wish&#xD;
     *       completely.&#xD;
     * @param expertNeeded Determines wether the &lt;code>unitType&lt;/code> is&#xD;
     *       required or not.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIrhwVJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIrhwlJPEeiyW7NaN4qWdw" name="destination" type="_OAU3AVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIrhw1JPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OIrhxFJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIrhxVJPEeiyW7NaN4qWdw" name="expertNeeded">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OIrhyFJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIsI0FJPEeiyW7NaN4qWdw" name="WorkerWish" method="_OLVNK1JPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIsI01JPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIsI1FJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLm5-lJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>WorkerWish&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param element The root element for the XML-representation &#xD;
     *       of a &lt;code>Wish&lt;/code>.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIsI0VJPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIsI0lJPEeiyW7NaN4qWdw" name="element" type="_OAkHkVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIsI1VJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIsI1lJPEeiyW7NaN4qWdw" name="WorkerWish" method="_OLVNL1JPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_OIsv4FJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_OIsv4VJPEeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedComment xmi:id="_OLnhAFJPEeiyW7NaN4qWdw">
                    <body>Creates a new &lt;code>WorkerWish&lt;/code> from the given&#xD;
     * XML-representation.&#xD;
     *&#xD;
     * @param aiMain The main AI-object.&#xD;
     * @param xr The input stream containing the XML.&#xD;
     * @throws XMLStreamException if a problem was encountered&#xD;
     *      during parsing.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIsI11JPEeiyW7NaN4qWdw" name="aiMain" type="_NRhQQFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIsI2FJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIsv4lJPEeiyW7NaN4qWdw" type="_NWU3wFJPEeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIsv41JPEeiyW7NaN4qWdw" name="update" method="_OLV0MFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLnhAVJPEeiyW7NaN4qWdw">
                    <body>Updates this &lt;code>WorkerWish&lt;/code> with the given attributes.&#xD;
     *&#xD;
     * @param unitType The &lt;code>UnitType&lt;/code> to wish for.&#xD;
     * @param expertNeeded Is an expert unit required?&#xD;
     * @param value The urgency of the wish.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OIsv5FJPEeiyW7NaN4qWdw" name="unitType" type="_OAbksVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OIsv5VJPEeiyW7NaN4qWdw" name="expertNeeded">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_OIsv5lJPEeiyW7NaN4qWdw" name="value">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OItW8FJPEeiyW7NaN4qWdw" name="satisfiedBy" method="_OLV0NFJPEeiyW7NaN4qWdw">
                  <ownedComment xmi:id="_OLnhAlJPEeiyW7NaN4qWdw">
                    <body>Does a specified unit satisfy this wish?&#xD;
     *&#xD;
     * @param unit The &lt;code>Unit&lt;/code> to test.&#xD;
     * @return True if the unit either matches exactly if expertRequired,&#xD;
     *     or at least matches in a land/naval sense if not.</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_OItW8VJPEeiyW7NaN4qWdw" name="unit" type="_OAa9oVJPEeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_OItW8lJPEeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_OIt-AFJPEeiyW7NaN4qWdw" name="writeAttributes" visibility="protected" method="_OLV0OlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIt-AVJPEeiyW7NaN4qWdw" name="xw" type="_OAOwYlJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIulEFJPEeiyW7NaN4qWdw" name="readAttributes" visibility="protected" method="_OLV0PFJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIulEVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_OIvMIFJPEeiyW7NaN4qWdw" name="readChildren" visibility="protected" method="_OLV0PlJPEeiyW7NaN4qWdw" raisedException="_OAOJUFJPEeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_OIvMIVJPEeiyW7NaN4qWdw" name="xr" type="_OAOwYFJPEeiyW7NaN4qWdw"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_OE9fY1JPEeiyW7NaN4qWdw" name="T"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OJ30kVJPEeiyW7NaN4qWdw" name="GoodsType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OKFP8FJPEeiyW7NaN4qWdw" name="Location"/>
              <packagedElement xmi:type="uml:Association" xmi:id="_OLm58FJPEeiyW7NaN4qWdw" name="" memberEnd="_OKOZ5FJPEeiyW7NaN4qWdw _OLm58VJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OLm58VJPEeiyW7NaN4qWdw" name="" type="_NWQmUFJPEeiyW7NaN4qWdw" association="_OLm58FJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMGCIFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMGCIVJPEeiyW7NaN4qWdw _OI4WEFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMGCIVJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMGCIFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMHQQFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMHQQVJPEeiyW7NaN4qWdw _OI49I1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMHQQVJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMHQQFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMH3UVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMH3UlJPEeiyW7NaN4qWdw _OI5kMlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMH3UlJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMH3UVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMIeYVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMIeYlJPEeiyW7NaN4qWdw _OI6LQFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMIeYlJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMIeYVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMJFcVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMJFclJPEeiyW7NaN4qWdw _OI6yUFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMJFclJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMJFcVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMJFdFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMJFdVJPEeiyW7NaN4qWdw _OI7ZZFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMJFdVJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMJFdFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMJsgVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMJsglJPEeiyW7NaN4qWdw _OI8AdVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMJsglJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMJsgVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMKTkVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMKTklJPEeiyW7NaN4qWdw _OI8ngVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMKTklJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMKTkVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMK6oVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMK6olJPEeiyW7NaN4qWdw _OI8nhFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMK6olJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMK6oVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMK6pFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMK6pVJPEeiyW7NaN4qWdw _OI9OlFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMK6pVJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMK6pFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMLhsVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMLhslJPEeiyW7NaN4qWdw _OI91oVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMLhslJPEeiyW7NaN4qWdw" name="" type="_NQeHYFJPEeiyW7NaN4qWdw" association="_OMLhsVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMMIwVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMMIwlJPEeiyW7NaN4qWdw _OJA48FJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMMIwlJPEeiyW7NaN4qWdw" name="" type="_NQ4XEFJPEeiyW7NaN4qWdw" association="_OMMIwVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMMv0VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMMv0lJPEeiyW7NaN4qWdw _OJBgAFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMMv0lJPEeiyW7NaN4qWdw" name="" type="_NQ4XEFJPEeiyW7NaN4qWdw" association="_OMMv0VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMMv1FJPEeiyW7NaN4qWdw" name="" memberEnd="_OMMv1VJPEeiyW7NaN4qWdw _OJBgAVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMMv1VJPEeiyW7NaN4qWdw" name="" type="_NQ4XEFJPEeiyW7NaN4qWdw" association="_OMMv1FJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMNW4VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMNW4lJPEeiyW7NaN4qWdw _OJCuIFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMNW4lJPEeiyW7NaN4qWdw" name="" type="_NRYtYFJPEeiyW7NaN4qWdw" association="_OMNW4VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMN98VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMN98lJPEeiyW7NaN4qWdw _OJCuIlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMN98lJPEeiyW7NaN4qWdw" name="" type="_NRYtYFJPEeiyW7NaN4qWdw" association="_OMN98VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMOlAFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMOlAVJPEeiyW7NaN4qWdw _OJCuJFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMOlAVJPEeiyW7NaN4qWdw" name="" type="_NRYtYFJPEeiyW7NaN4qWdw" association="_OMOlAFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMOlA1JPEeiyW7NaN4qWdw" name="" memberEnd="_OMOlBFJPEeiyW7NaN4qWdw _OJCuJlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMOlBFJPEeiyW7NaN4qWdw" name="" type="_NRYtYFJPEeiyW7NaN4qWdw" association="_OMOlA1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMPMEVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMPMElJPEeiyW7NaN4qWdw _OJDVMVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMPMElJPEeiyW7NaN4qWdw" name="" type="_NRhQQFJPEeiyW7NaN4qWdw" association="_OMPMEVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMPzIVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMPzIlJPEeiyW7NaN4qWdw _OJD8QVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMPzIlJPEeiyW7NaN4qWdw" name="" type="_NRhQQFJPEeiyW7NaN4qWdw" association="_OMPzIVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMQaMFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMQaMVJPEeiyW7NaN4qWdw _OJEjUlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMQaMVJPEeiyW7NaN4qWdw" name="" type="_NRhQQFJPEeiyW7NaN4qWdw" association="_OMQaMFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMQaM1JPEeiyW7NaN4qWdw" name="" memberEnd="_OMQaNFJPEeiyW7NaN4qWdw _OJFxclJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMQaNFJPEeiyW7NaN4qWdw" name="" type="_NRvSsFJPEeiyW7NaN4qWdw" association="_OMQaM1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMRBQVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMRBQlJPEeiyW7NaN4qWdw _OJGYgFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMRBQlJPEeiyW7NaN4qWdw" name="" type="_NR_xYFJPEeiyW7NaN4qWdw" association="_OMRBQVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMRoUFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMRoUVJPEeiyW7NaN4qWdw _OJG_lVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMRoUVJPEeiyW7NaN4qWdw" name="" type="_NR_xYFJPEeiyW7NaN4qWdw" association="_OMRoUFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMRoU1JPEeiyW7NaN4qWdw" name="" memberEnd="_OMRoVFJPEeiyW7NaN4qWdw _OJHmo1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMRoVFJPEeiyW7NaN4qWdw" name="" type="_NSHGIFJPEeiyW7NaN4qWdw" association="_OMRoU1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMSPYVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMSPYlJPEeiyW7NaN4qWdw _OJINsVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMSPYlJPEeiyW7NaN4qWdw" name="" type="_NSHGIFJPEeiyW7NaN4qWdw" association="_OMSPYVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMS2cFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMS2cVJPEeiyW7NaN4qWdw _OJI0wlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMS2cVJPEeiyW7NaN4qWdw" name="" type="_NSHGIFJPEeiyW7NaN4qWdw" association="_OMS2cFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMS2c1JPEeiyW7NaN4qWdw" name="" memberEnd="_OMS2dFJPEeiyW7NaN4qWdw _OJJb0FJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMS2dFJPEeiyW7NaN4qWdw" name="" type="_NSHGIFJPEeiyW7NaN4qWdw" association="_OMS2c1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMTdgVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMTdglJPEeiyW7NaN4qWdw _OJJb0lJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMTdglJPEeiyW7NaN4qWdw" name="" type="_NSHGIFJPEeiyW7NaN4qWdw" association="_OMTdgVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMTdhFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMTdhVJPEeiyW7NaN4qWdw _OJJb1FJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMTdhVJPEeiyW7NaN4qWdw" name="" type="_NSHGIFJPEeiyW7NaN4qWdw" association="_OMTdhFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMUEkVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMUEklJPEeiyW7NaN4qWdw _OJL4EFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMUEklJPEeiyW7NaN4qWdw" name="" type="_NSoDgFJPEeiyW7NaN4qWdw" association="_OMUEkVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMUElFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMUElVJPEeiyW7NaN4qWdw _OJL4ElJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMUElVJPEeiyW7NaN4qWdw" name="" type="_NSoDgFJPEeiyW7NaN4qWdw" association="_OMUElFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMUroVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMUrolJPEeiyW7NaN4qWdw _OJMfIlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMUrolJPEeiyW7NaN4qWdw" name="" type="_NSoDgFJPEeiyW7NaN4qWdw" association="_OMUroVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMUrpFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMUrpVJPEeiyW7NaN4qWdw _OJNGMFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMUrpVJPEeiyW7NaN4qWdw" name="" type="_NSoDgFJPEeiyW7NaN4qWdw" association="_OMUrpFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMVSsVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMVSslJPEeiyW7NaN4qWdw _OJO7YFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMVSslJPEeiyW7NaN4qWdw" name="" type="_NS_28FJPEeiyW7NaN4qWdw" association="_OMVSsVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMV5wFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMV5wVJPEeiyW7NaN4qWdw _OJPic1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMV5wVJPEeiyW7NaN4qWdw" name="" type="_NTBsIVJPEeiyW7NaN4qWdw" association="_OMV5wFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMWg0VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMWg0lJPEeiyW7NaN4qWdw _OJQwk1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMWg0lJPEeiyW7NaN4qWdw" name="" type="_NS_28FJPEeiyW7NaN4qWdw" association="_OMWg0VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMXH4VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMXH4lJPEeiyW7NaN4qWdw _OJRXoFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMXH4lJPEeiyW7NaN4qWdw" name="" type="_NS_28FJPEeiyW7NaN4qWdw" association="_OMXH4VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMXu8VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMXu8lJPEeiyW7NaN4qWdw _OJRXo1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMXu8lJPEeiyW7NaN4qWdw" name="" type="_NS_28FJPEeiyW7NaN4qWdw" association="_OMXu8VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMXu9FJPEeiyW7NaN4qWdw" name="" memberEnd="_OMXu9VJPEeiyW7NaN4qWdw _OJR-sFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMXu9VJPEeiyW7NaN4qWdw" name="" type="_NS_28FJPEeiyW7NaN4qWdw" association="_OMXu9FJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMY9EFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMY9EVJPEeiyW7NaN4qWdw _OJUa8FJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMY9EVJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMY9EFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMY9E1JPEeiyW7NaN4qWdw" name="" memberEnd="_OMY9FFJPEeiyW7NaN4qWdw _OJVpEFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMY9FFJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMY9E1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMZkIVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMZkIlJPEeiyW7NaN4qWdw _OJVpElJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMZkIlJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMZkIVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMaLMFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMaLMVJPEeiyW7NaN4qWdw _OJVpFFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMaLMVJPEeiyW7NaN4qWdw" name="" type="_NUNX4FJPEeiyW7NaN4qWdw" association="_OMaLMFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMaLM1JPEeiyW7NaN4qWdw" name="" memberEnd="_OMaLNFJPEeiyW7NaN4qWdw _OJW3M1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMaLNFJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMaLM1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMayQVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMayQlJPEeiyW7NaN4qWdw _OJXeQlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMayQlJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMayQVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMayRFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMayRVJPEeiyW7NaN4qWdw _OJYFUFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMayRVJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMayRFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMbZUVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMbZUlJPEeiyW7NaN4qWdw _OJYFVFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMbZUlJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMbZUVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMcAYVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMcAYlJPEeiyW7NaN4qWdw _OJYsYFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMcAYlJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMcAYVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMcAZFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMcAZVJPEeiyW7NaN4qWdw _OJYsZFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMcAZVJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMcAZFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMcncVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMcnclJPEeiyW7NaN4qWdw _OJZTclJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMcnclJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMcncVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMdOgFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMdOgVJPEeiyW7NaN4qWdw _OJZTdlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMdOgVJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMdOgFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMdOg1JPEeiyW7NaN4qWdw" name="" memberEnd="_OMdOhFJPEeiyW7NaN4qWdw _OJZ6g1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMdOhFJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMdOg1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMd1kVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMd1klJPEeiyW7NaN4qWdw _OJahkFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMd1klJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMd1kVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMd1lFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMd1lVJPEeiyW7NaN4qWdw _OJahlFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMd1lVJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMd1lFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMecoVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMecolJPEeiyW7NaN4qWdw _OJbIoVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMecolJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMecoVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMfDsVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMfDslJPEeiyW7NaN4qWdw _OJbIpVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMfDslJPEeiyW7NaN4qWdw" name="" type="_NUKUkFJPEeiyW7NaN4qWdw" association="_OMfDsVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMfDtFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMfDtVJPEeiyW7NaN4qWdw _OJezAFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMfDtVJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMfDtFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMfqwVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMfqwlJPEeiyW7NaN4qWdw _OJfaGFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMfqwlJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMfqwVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMg44FJPEeiyW7NaN4qWdw" name="" memberEnd="_OMg44VJPEeiyW7NaN4qWdw _OJgBIlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMg44VJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMg44FJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMg441JPEeiyW7NaN4qWdw" name="" memberEnd="_OMg45FJPEeiyW7NaN4qWdw _OJgoMlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMg45FJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMg441JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMhf8VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMhf8lJPEeiyW7NaN4qWdw _OJjrgFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMhf8lJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMhf8VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMiHAVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMiHAlJPEeiyW7NaN4qWdw _OJjrg1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMiHAlJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMiHAVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMkjQFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMkjQVJPEeiyW7NaN4qWdw _OJjrhlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMkjQVJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMkjQFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMlxYFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMlxYVJPEeiyW7NaN4qWdw _OJkSk1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMlxYVJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMlxYFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMlxY1JPEeiyW7NaN4qWdw" name="" memberEnd="_OMlxZFJPEeiyW7NaN4qWdw _OJk5o1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMlxZFJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMlxY1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMmYcVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMmYclJPEeiyW7NaN4qWdw _OJmHwVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMmYclJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMmYcVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMm_gVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMm_glJPEeiyW7NaN4qWdw _OJmHxVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMm_glJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMm_gVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMnmkVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMnmklJPEeiyW7NaN4qWdw _OJnV4FJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMnmklJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMnmkVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMoNoVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMoNolJPEeiyW7NaN4qWdw _OJn88VJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMoNolJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMoNoVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMo0sVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMo0slJPEeiyW7NaN4qWdw _OJokAVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMo0slJPEeiyW7NaN4qWdw" name="" type="_NUg54FJPEeiyW7NaN4qWdw" association="_OMo0sVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMo0tFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMo0tVJPEeiyW7NaN4qWdw _OJs1cFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMo0tVJPEeiyW7NaN4qWdw" name="" type="_NVE6kFJPEeiyW7NaN4qWdw" association="_OMo0tFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMpbwVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMpbwlJPEeiyW7NaN4qWdw _OJtchFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMpbwlJPEeiyW7NaN4qWdw" name="" type="_NVE6kFJPEeiyW7NaN4qWdw" association="_OMpbwVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMqC0VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMqC0lJPEeiyW7NaN4qWdw _OJvRsVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMqC0lJPEeiyW7NaN4qWdw" name="" type="_NVRH0FJPEeiyW7NaN4qWdw" association="_OMqC0VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMqp4VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMqp4lJPEeiyW7NaN4qWdw _OJwf1lJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMqp4lJPEeiyW7NaN4qWdw" name="" type="_NVRH0FJPEeiyW7NaN4qWdw" association="_OMqp4VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMrQ8VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMrQ8lJPEeiyW7NaN4qWdw _OJxt8VJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMrQ8lJPEeiyW7NaN4qWdw" name="" type="_NVRH0FJPEeiyW7NaN4qWdw" association="_OMrQ8VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMr4AFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMr4AVJPEeiyW7NaN4qWdw _OJ0KMFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMr4AVJPEeiyW7NaN4qWdw" name="" type="_NVZDoFJPEeiyW7NaN4qWdw" association="_OMr4AFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMr4A1JPEeiyW7NaN4qWdw" name="" memberEnd="_OMr4BFJPEeiyW7NaN4qWdw _OJ0KMlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMr4BFJPEeiyW7NaN4qWdw" name="" type="_NVZDoFJPEeiyW7NaN4qWdw" association="_OMr4A1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMsfEVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMsfElJPEeiyW7NaN4qWdw _OJ0xRVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMsfElJPEeiyW7NaN4qWdw" name="" type="_NVZDoFJPEeiyW7NaN4qWdw" association="_OMsfEVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMwJcVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMwJclJPEeiyW7NaN4qWdw _OJ2mcVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMwJclJPEeiyW7NaN4qWdw" name="" type="_NVZDoFJPEeiyW7NaN4qWdw" association="_OMwJcVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMwJdFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMwJdVJPEeiyW7NaN4qWdw _OJ5CsFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMwJdVJPEeiyW7NaN4qWdw" name="" type="_NVZDoFJPEeiyW7NaN4qWdw" association="_OMwJdFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMxXkVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMxXklJPEeiyW7NaN4qWdw _OJ5pwFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMxXklJPEeiyW7NaN4qWdw" name="" type="_NVZDoFJPEeiyW7NaN4qWdw" association="_OMxXkVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMxXlFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMxXlVJPEeiyW7NaN4qWdw _OJ5pxFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMxXlVJPEeiyW7NaN4qWdw" name="" type="_NVZDoFJPEeiyW7NaN4qWdw" association="_OMxXlFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMxXl1JPEeiyW7NaN4qWdw" name="" memberEnd="_OMxXmFJPEeiyW7NaN4qWdw _OJ634lJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMxXmFJPEeiyW7NaN4qWdw" name="" type="_NVZDoFJPEeiyW7NaN4qWdw" association="_OMxXl1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMylsVJPEeiyW7NaN4qWdw" name="" memberEnd="_OMylslJPEeiyW7NaN4qWdw _OJ7e81JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMylslJPEeiyW7NaN4qWdw" name="" type="_NVZDoFJPEeiyW7NaN4qWdw" association="_OMylsVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMyltFJPEeiyW7NaN4qWdw" name="" memberEnd="_OMyltVJPEeiyW7NaN4qWdw _OJ8tElJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMyltVJPEeiyW7NaN4qWdw" name="" type="_NVa40FJPEeiyW7NaN4qWdw" association="_OMyltFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OMzz0VJPEeiyW7NaN4qWdw" name="" memberEnd="_OMzz0lJPEeiyW7NaN4qWdw _OJ9UIVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OMzz0lJPEeiyW7NaN4qWdw" name="" type="_NVa40FJPEeiyW7NaN4qWdw" association="_OMzz0VJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM1B8FJPEeiyW7NaN4qWdw" name="" memberEnd="_OM1B8VJPEeiyW7NaN4qWdw _OJ97MFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM1B8VJPEeiyW7NaN4qWdw" name="" type="_NVa40FJPEeiyW7NaN4qWdw" association="_OM1B8FJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM1pAFJPEeiyW7NaN4qWdw" name="" memberEnd="_OM1pAVJPEeiyW7NaN4qWdw _OKA-gFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM1pAVJPEeiyW7NaN4qWdw" name="" type="_NVlQ4FJPEeiyW7NaN4qWdw" association="_OM1pAFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM2QEVJPEeiyW7NaN4qWdw" name="" memberEnd="_OM2QElJPEeiyW7NaN4qWdw _OKA-hFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM2QElJPEeiyW7NaN4qWdw" name="" type="_NVmfAFJPEeiyW7NaN4qWdw" association="_OM2QEVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM3eMFJPEeiyW7NaN4qWdw" name="" memberEnd="_OM3eMVJPEeiyW7NaN4qWdw _OKBlkVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM3eMVJPEeiyW7NaN4qWdw" name="" type="_NVmfAFJPEeiyW7NaN4qWdw" association="_OM3eMFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM3eM1JPEeiyW7NaN4qWdw" name="" memberEnd="_OM3eNFJPEeiyW7NaN4qWdw _OKCMo1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM3eNFJPEeiyW7NaN4qWdw" name="" type="_NVmfAFJPEeiyW7NaN4qWdw" association="_OM3eM1JPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM4FQFJPEeiyW7NaN4qWdw" name="" memberEnd="_OM4FQVJPEeiyW7NaN4qWdw _OKCzsVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM4FQVJPEeiyW7NaN4qWdw" name="" type="_NVmfAFJPEeiyW7NaN4qWdw" association="_OM4FQFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM5TYVJPEeiyW7NaN4qWdw" name="" memberEnd="_OM5TYlJPEeiyW7NaN4qWdw _OKGeEFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM5TYlJPEeiyW7NaN4qWdw" name="" type="_NVvB4FJPEeiyW7NaN4qWdw" association="_OM5TYVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM5TZFJPEeiyW7NaN4qWdw" name="" memberEnd="_OM5TZVJPEeiyW7NaN4qWdw _OKGeElJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM5TZVJPEeiyW7NaN4qWdw" name="" type="_NVvB4FJPEeiyW7NaN4qWdw" association="_OM5TZFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM7IkFJPEeiyW7NaN4qWdw" name="" memberEnd="_OM7IkVJPEeiyW7NaN4qWdw _OKGeE1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM7IkVJPEeiyW7NaN4qWdw" name="" type="_NVvB4FJPEeiyW7NaN4qWdw" association="_OM7IkFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM7voVJPEeiyW7NaN4qWdw" name="" memberEnd="_OM7volJPEeiyW7NaN4qWdw _OKHFIVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM7volJPEeiyW7NaN4qWdw" name="" type="_NVvB4FJPEeiyW7NaN4qWdw" association="_OM7voVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM89wFJPEeiyW7NaN4qWdw" name="" memberEnd="_OM89wVJPEeiyW7NaN4qWdw _OKKIcVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM89wVJPEeiyW7NaN4qWdw" name="" type="_NV5Z8FJPEeiyW7NaN4qWdw" association="_OM89wFJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM-L4FJPEeiyW7NaN4qWdw" name="" memberEnd="_OM-L4VJPEeiyW7NaN4qWdw _OKKvgFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM-L4VJPEeiyW7NaN4qWdw" name="" type="_NWFnMFJPEeiyW7NaN4qWdw" association="_OM-L4FJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM-y8FJPEeiyW7NaN4qWdw" name="" memberEnd="_OM-y8VJPEeiyW7NaN4qWdw _OKL9o1JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM-y8VJPEeiyW7NaN4qWdw" name="" type="_NWKfsFJPEeiyW7NaN4qWdw" association="_OM-y8FJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_OM_aAVJPEeiyW7NaN4qWdw" name="" memberEnd="_OM_aAlJPEeiyW7NaN4qWdw _OKL9pVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_OM_aAlJPEeiyW7NaN4qWdw" name="" type="_NWKfsFJPEeiyW7NaN4qWdw" association="_OM_aAVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_ONABEVJPEeiyW7NaN4qWdw" name="" memberEnd="_ONABElJPEeiyW7NaN4qWdw _OKMksVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_ONABElJPEeiyW7NaN4qWdw" name="" type="_NWKfsFJPEeiyW7NaN4qWdw" association="_ONABEVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_ONAoIVJPEeiyW7NaN4qWdw" name="" memberEnd="_ONAoIlJPEeiyW7NaN4qWdw _OKNy0FJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_ONAoIlJPEeiyW7NaN4qWdw" name="" type="_NWQmUFJPEeiyW7NaN4qWdw" association="_ONAoIVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_ONBPMVJPEeiyW7NaN4qWdw" name="" memberEnd="_ONBPMlJPEeiyW7NaN4qWdw _OKOZ41JPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_ONBPMlJPEeiyW7NaN4qWdw" name="" type="_NWQmUFJPEeiyW7NaN4qWdw" association="_ONBPMVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_ONB2QVJPEeiyW7NaN4qWdw" name="" memberEnd="_ONB2QlJPEeiyW7NaN4qWdw _OKPA8FJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_ONB2QlJPEeiyW7NaN4qWdw" name="" type="_NWU3wFJPEeiyW7NaN4qWdw" association="_ONB2QVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_ONCdUVJPEeiyW7NaN4qWdw" name="" memberEnd="_ONCdUlJPEeiyW7NaN4qWdw _OKPoBFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_ONCdUlJPEeiyW7NaN4qWdw" name="" type="_NWU3wFJPEeiyW7NaN4qWdw" association="_ONCdUVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_ONDEYVJPEeiyW7NaN4qWdw" name="" memberEnd="_ONDEYlJPEeiyW7NaN4qWdw _OLflMVJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_ONDEYlJPEeiyW7NaN4qWdw" name="" type="_NTBsIVJPEeiyW7NaN4qWdw" association="_ONDEYVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_ONDrcVJPEeiyW7NaN4qWdw" name="" memberEnd="_ONDrclJPEeiyW7NaN4qWdw _OLflNFJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_ONDrclJPEeiyW7NaN4qWdw" name="" type="_NTBsIVJPEeiyW7NaN4qWdw" association="_ONDrcVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Association" xmi:id="_ONESgVJPEeiyW7NaN4qWdw" name="" memberEnd="_ONESglJPEeiyW7NaN4qWdw _OLgMQlJPEeiyW7NaN4qWdw">
                <ownedEnd xmi:id="_ONESglJPEeiyW7NaN4qWdw" name="" type="_NTBsIVJPEeiyW7NaN4qWdw" association="_ONESgVJPEeiyW7NaN4qWdw"/>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_NK8HIFJPEeiyW7NaN4qWdw" name="model">
              <packagedElement xmi:type="uml:Class" xmi:id="_OBOO4lJPEeiyW7NaN4qWdw" name="ServerPlayer"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_NLqf4FJPEeiyW7NaN4qWdw" name="networking">
              <packagedElement xmi:type="uml:Class" xmi:id="_OCHmwVJPEeiyW7NaN4qWdw" name="DummyConnection"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_OBOO4FJPEeiyW7NaN4qWdw" name="FreeColServer"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_NKZ7olJPEeiyW7NaN4qWdw" name="common">
            <packagedElement xmi:type="uml:Package" xmi:id="_NKZ7o1JPEeiyW7NaN4qWdw" name="io">
              <packagedElement xmi:type="uml:Class" xmi:id="_OAOwYFJPEeiyW7NaN4qWdw" name="FreeColXMLReader"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAOwYlJPEeiyW7NaN4qWdw" name="FreeColXMLWriter"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_NKZ7pFJPEeiyW7NaN4qWdw" name="model">
              <packagedElement xmi:type="uml:Package" xmi:id="_NK7gEFJPEeiyW7NaN4qWdw" name="DiplomaticTrade">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_OBG6IlJPEeiyW7NaN4qWdw" name="TradeStatus"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_NK7gEVJPEeiyW7NaN4qWdw" name="Monarch">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_OBIvUVJPEeiyW7NaN4qWdw" name="MonarchAction"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_NLQ3QFJPEeiyW7NaN4qWdw" name="Unit">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_OBgiwVJPEeiyW7NaN4qWdw" name="UnitState"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_NMUAIFJPEeiyW7NaN4qWdw" name="UnitTypeChange">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_OCtcoVJPEeiyW7NaN4qWdw" name="ChangeType"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_NMipoFJPEeiyW7NaN4qWdw" name="Player">
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_ODAXklJPEeiyW7NaN4qWdw" name="PlayerType"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_NMipoVJPEeiyW7NaN4qWdw" name="pathfinding">
                <packagedElement xmi:type="uml:Class" xmi:id="_ODCMwVJPEeiyW7NaN4qWdw" name="CostDeciders"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_ODCz0VJPEeiyW7NaN4qWdw" name="GoalDeciders"/>
                <packagedElement xmi:type="uml:Interface" xmi:id="_ODZZIVJPEeiyW7NaN4qWdw" name="CostDecider"/>
                <packagedElement xmi:type="uml:Interface" xmi:id="_ODh8AFJPEeiyW7NaN4qWdw" name="GoalDecider"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAPXcVJPEeiyW7NaN4qWdw" name="Ability"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAP-gVJPEeiyW7NaN4qWdw" name="AbstractGoods"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAQlkVJPEeiyW7NaN4qWdw" name="BuildableType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OARMoFJPEeiyW7NaN4qWdw" name="Building"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OARzsVJPEeiyW7NaN4qWdw" name="Colony"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OASawFJPEeiyW7NaN4qWdw" name="ColonyTile"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OASawlJPEeiyW7NaN4qWdw" name="Europe"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OATB0VJPEeiyW7NaN4qWdw" name="Goods"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OATo4VJPEeiyW7NaN4qWdw" name="GoodsContainer"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAUP8VJPEeiyW7NaN4qWdw" name="GoodsType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAU3AVJPEeiyW7NaN4qWdw" name="Location"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAU3A1JPEeiyW7NaN4qWdw" name="Map"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_OAVeEVJPEeiyW7NaN4qWdw" name="Direction"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAWFIVJPEeiyW7NaN4qWdw" name="Player"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAWsMVJPEeiyW7NaN4qWdw" name="Role"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAXTQVJPEeiyW7NaN4qWdw" name="ProductionInfo"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAX6UVJPEeiyW7NaN4qWdw" name="Specification"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAYhYFJPEeiyW7NaN4qWdw" name="Tile"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAYhYlJPEeiyW7NaN4qWdw" name="TileImprovementType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAZvgVJPEeiyW7NaN4qWdw" name="TileType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAZvg1JPEeiyW7NaN4qWdw" name="Turn"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAaWkVJPEeiyW7NaN4qWdw" name="TypeCountMap"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAa9oVJPEeiyW7NaN4qWdw" name="Unit"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAbksVJPEeiyW7NaN4qWdw" name="UnitType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAcLwFJPEeiyW7NaN4qWdw" name="UnitWas"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAcLwlJPEeiyW7NaN4qWdw" name="WorkLocation"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OA9JIFJPEeiyW7NaN4qWdw" name="FreeColGameObject"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OA9wMVJPEeiyW7NaN4qWdw" name="Game"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_OA-XQVJPEeiyW7NaN4qWdw" name="Locatable"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OA--UVJPEeiyW7NaN4qWdw" name="PathNode"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OA_lYVJPEeiyW7NaN4qWdw" name="Settlement"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBG6IFJPEeiyW7NaN4qWdw" name="DiplomaticTrade"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBHhMVJPEeiyW7NaN4qWdw" name="FoundingFather"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBIIQVJPEeiyW7NaN4qWdw" name="Market"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_OBWxwFJPEeiyW7NaN4qWdw" name="FreeColGameObjectListener"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBXY0VJPEeiyW7NaN4qWdw" name="FreeColObject"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBf7sVJPEeiyW7NaN4qWdw" name="NationSummary"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_OCFxkVJPEeiyW7NaN4qWdw" name="Stance"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OCGYoVJPEeiyW7NaN4qWdw" name="Tension"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OCR-0FJPEeiyW7NaN4qWdw" name="UnitLocation"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OCpLMFJPEeiyW7NaN4qWdw" name="BuildingType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OCqZUVJPEeiyW7NaN4qWdw" name="Modifier"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OCrncVJPEeiyW7NaN4qWdw" name="NationType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OCsOgVJPEeiyW7NaN4qWdw" name="Scope"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OC9UQVJPEeiyW7NaN4qWdw" name="FeatureContainer"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OC97UVJPEeiyW7NaN4qWdw" name="GameOptions"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OC_JcVJPEeiyW7NaN4qWdw" name="GoldTradeItem"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OC_wgFJPEeiyW7NaN4qWdw" name="HistoryEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ODAXkFJPEeiyW7NaN4qWdw" name="IndianSettlement"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ODA-oVJPEeiyW7NaN4qWdw" name="StanceTradeItem"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ODBlsVJPEeiyW7NaN4qWdw" name="TradeItem"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ODYLAFJPEeiyW7NaN4qWdw" name="CombatModel"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_ODYyEVJPEeiyW7NaN4qWdw" name="Ownable"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ODdqkFJPEeiyW7NaN4qWdw" name="UnitTypeChange"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_NKaisFJPEeiyW7NaN4qWdw" name="networking">
              <packagedElement xmi:type="uml:Interface" xmi:id="_OAcy0VJPEeiyW7NaN4qWdw" name="NetworkConstants"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBJWYFJPEeiyW7NaN4qWdw" name="ChooseFoundingFatherMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBJWYlJPEeiyW7NaN4qWdw" name="Connection"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBJ9cVJPEeiyW7NaN4qWdw" name="DOMMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBKkgVJPEeiyW7NaN4qWdw" name="DiplomacyMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBKkg1JPEeiyW7NaN4qWdw" name="FirstContactMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBLLkVJPEeiyW7NaN4qWdw" name="IndianDemandMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBLyoVJPEeiyW7NaN4qWdw" name="LootCargoMessage"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_OBMZsFJPEeiyW7NaN4qWdw" name="MessageHandler"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBMZslJPEeiyW7NaN4qWdw" name="MonarchActionMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBNAwVJPEeiyW7NaN4qWdw" name="NewLandNameMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBNn0VJPEeiyW7NaN4qWdw" name="NewRegionNameMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBhJ0VJPEeiyW7NaN4qWdw" name="AttackMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBhw4VJPEeiyW7NaN4qWdw" name="BuildColonyMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBiX8VJPEeiyW7NaN4qWdw" name="CashInTreasureTrainMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBi_AVJPEeiyW7NaN4qWdw" name="ChangeStateMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBi_A1JPEeiyW7NaN4qWdw" name="ChangeWorkImprovementTypeMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBjmEVJPEeiyW7NaN4qWdw" name="ChangeWorkTypeMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBkNIVJPEeiyW7NaN4qWdw" name="ClaimLandMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBk0MVJPEeiyW7NaN4qWdw" name="ClearSpecialityMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBlbQFJPEeiyW7NaN4qWdw" name="CloseTransactionMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBlbQlJPEeiyW7NaN4qWdw" name="DeliverGiftMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBmCUVJPEeiyW7NaN4qWdw" name="DisbandUnitMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBmpYVJPEeiyW7NaN4qWdw" name="DisembarkMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBnQcVJPEeiyW7NaN4qWdw" name="EmbarkMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBoekFJPEeiyW7NaN4qWdw" name="EmigrateUnitMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBpFoVJPEeiyW7NaN4qWdw" name="EquipForRoleMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBqTwFJPEeiyW7NaN4qWdw" name="GetNationSummaryMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBq60VJPEeiyW7NaN4qWdw" name="GetTransactionMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBsI8FJPEeiyW7NaN4qWdw" name="LoadGoodsMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBswAVJPEeiyW7NaN4qWdw" name="MissionaryMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBtXEVJPEeiyW7NaN4qWdw" name="MoveMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBulMVJPEeiyW7NaN4qWdw" name="MoveToMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBxBcFJPEeiyW7NaN4qWdw" name="PutOutsideColonyMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OByPkVJPEeiyW7NaN4qWdw" name="RearrangeColonyMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBzdsVJPEeiyW7NaN4qWdw" name="ScoutSpeakToChiefMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OB0EwVJPEeiyW7NaN4qWdw" name="SetBuildQueueMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OB0r0FJPEeiyW7NaN4qWdw" name="TrainUnitInEuropeMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OB0r0lJPEeiyW7NaN4qWdw" name="UnloadGoodsMessage"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OB1S4VJPEeiyW7NaN4qWdw" name="WorkMessage"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_NKaisVJPEeiyW7NaN4qWdw" name="util">
              <packagedElement xmi:type="uml:Class" xmi:id="_OAdZ4VJPEeiyW7NaN4qWdw" name="CollectionUtils"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OAeA8VJPEeiyW7NaN4qWdw" name="LogBuilder"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBXY01JPEeiyW7NaN4qWdw" name="RandomUtils"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OBX_4VJPEeiyW7NaN4qWdw" name="StringUtils"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_OCG_sVJPEeiyW7NaN4qWdw" name="Utils"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_ODDa4FJPEeiyW7NaN4qWdw" name="RandomChoice"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_NMiCkFJPEeiyW7NaN4qWdw" name="i18n">
              <packagedElement xmi:type="uml:Class" xmi:id="_OC8tMFJPEeiyW7NaN4qWdw" name="Messages"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_OBfUoVJPEeiyW7NaN4qWdw" name="FreeColException"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_OBGTEFJPEeiyW7NaN4qWdw" name="FreeCol"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_NKZUkFJPEeiyW7NaN4qWdw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_NKZUkVJPEeiyW7NaN4qWdw" name="beans">
        <packagedElement xmi:type="uml:Class" xmi:id="_OAHboFJPEeiyW7NaN4qWdw" name="PropertyChangeEvent"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_OAICsVJPEeiyW7NaN4qWdw" name="PropertyChangeListener"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_NKZUklJPEeiyW7NaN4qWdw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_NKZUk1JPEeiyW7NaN4qWdw" name="logging">
          <packagedElement xmi:type="uml:Class" xmi:id="_OAMUIVJPEeiyW7NaN4qWdw" name="Level"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_OAM7MFJPEeiyW7NaN4qWdw" name="Logger"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_NKZUlFJPEeiyW7NaN4qWdw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_OAM7MlJPEeiyW7NaN4qWdw" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_NLEqAFJPEeiyW7NaN4qWdw" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_OBVjoVJPEeiyW7NaN4qWdw" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_OAIpwVJPEeiyW7NaN4qWdw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_OAJQ0VJPEeiyW7NaN4qWdw" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_OAJ34VJPEeiyW7NaN4qWdw" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_OAKe8VJPEeiyW7NaN4qWdw" name="Comparator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_OAKe81JPEeiyW7NaN4qWdw" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_OALGAVJPEeiyW7NaN4qWdw" name="List"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_OALtEVJPEeiyW7NaN4qWdw" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_OBU8kFJPEeiyW7NaN4qWdw" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_OBU8klJPEeiyW7NaN4qWdw" name="Map"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_OCEjcFJPEeiyW7NaN4qWdw" name="Iterator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_OCFKgVJPEeiyW7NaN4qWdw" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_OCfaMFJPEeiyW7NaN4qWdw" name="Locale"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_NLQQMFJPEeiyW7NaN4qWdw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_OBetkFJPEeiyW7NaN4qWdw" name="IOException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_OE-GcVJPEeiyW7NaN4qWdw" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_OE-GclJPEeiyW7NaN4qWdw" name="Class"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_OICBgFJPEeiyW7NaN4qWdw" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_OIGS8FJPEeiyW7NaN4qWdw" name="Object"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_NKZUlVJPEeiyW7NaN4qWdw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_NKZ7oFJPEeiyW7NaN4qWdw" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_NKZ7oVJPEeiyW7NaN4qWdw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_OAOJUFJPEeiyW7NaN4qWdw" name="XMLStreamException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_OBWKsVJPEeiyW7NaN4qWdw" name="XMLStreamConstants"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_NKbJwFJPEeiyW7NaN4qWdw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_NKbJwVJPEeiyW7NaN4qWdw" name="w3c">
        <packagedElement xmi:type="uml:Package" xmi:id="_NKbJwlJPEeiyW7NaN4qWdw" name="dom">
          <packagedElement xmi:type="uml:Interface" xmi:id="_OAkHkVJPEeiyW7NaN4qWdw" name="Element"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_OBO18VJPEeiyW7NaN4qWdw" name="NodeList"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_NMFWolJPEeiyW7NaN4qWdw" name="ProductionCache">
      <packagedElement xmi:type="uml:Class" xmi:id="_OCdlAFJPEeiyW7NaN4qWdw" name="Entry"/>
    </packagedElement>
    <profileApplication xmi:id="_Lh5Fs1JPEeiyW7NaN4qWdw">
      <eAnnotations xmi:id="_Lh5FtFJPEeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_Lh5swFJPEeiyW7NaN4qWdw" base_Package="_K_0TYFJPEeiyW7NaN4qWdw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQnRUlJPEeiyW7NaN4qWdw" base_Element="_NQnRUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NQn4YFJPEeiyW7NaN4qWdw" base_Element="_NQnRUVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NQn4YVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQofclJPEeiyW7NaN4qWdw" base_Element="_NQn4YlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NQofc1JPEeiyW7NaN4qWdw" base_Element="_NQn4YlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NQofdFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NQptklJPEeiyW7NaN4qWdw" base_Element="_NQptkFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NQqUoFJPEeiyW7NaN4qWdw" base_Element="_NQptkFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NQqUoVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRKD4FJPEeiyW7NaN4qWdw" base_Element="_NRJc01JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRKq8FJPEeiyW7NaN4qWdw" base_Element="_NRJc01JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRKq8VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRKq81JPEeiyW7NaN4qWdw" base_Element="_NRKq8lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRLSAFJPEeiyW7NaN4qWdw" base_Element="_NRKq8lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRLSAVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRLSA1JPEeiyW7NaN4qWdw" base_Element="_NRLSAlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRL5EFJPEeiyW7NaN4qWdw" base_Element="_NRLSAlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRL5EVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRNHMVJPEeiyW7NaN4qWdw" base_Element="_NRMgIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRNHMlJPEeiyW7NaN4qWdw" base_Element="_NRMgIFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRNuQFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRNuQ1JPEeiyW7NaN4qWdw" base_Element="_NRNuQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRNuRFJPEeiyW7NaN4qWdw" base_Element="_NRNuQVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRNuRVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRO8YFJPEeiyW7NaN4qWdw" base_Element="_NROVUFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRO8YVJPEeiyW7NaN4qWdw" base_Element="_NROVUFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRO8YlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRO8ZFJPEeiyW7NaN4qWdw" base_Element="_NRO8Y1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRPjcFJPEeiyW7NaN4qWdw" base_Element="_NRO8Y1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRPjcVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRQKgFJPEeiyW7NaN4qWdw" base_Element="_NRPjclJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRQKgVJPEeiyW7NaN4qWdw" base_Element="_NRPjclJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRQKglJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRRYoFJPEeiyW7NaN4qWdw" base_Element="_NRQxkFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRRYoVJPEeiyW7NaN4qWdw" base_Element="_NRQxkFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRRYolJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRR_sFJPEeiyW7NaN4qWdw" base_Element="_NRRYo1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRR_sVJPEeiyW7NaN4qWdw" base_Element="_NRRYo1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRR_slJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NRmIwFJPEeiyW7NaN4qWdw" genericsValue="String, String" base_Element="_NRlhsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRmv0lJPEeiyW7NaN4qWdw" base_Element="_NRmv0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRnW4FJPEeiyW7NaN4qWdw" base_Element="_NRmv0FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRnW4VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRnW41JPEeiyW7NaN4qWdw" base_Element="_NRnW4lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRnW5FJPEeiyW7NaN4qWdw" base_Element="_NRnW4lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRn98FJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRolAlJPEeiyW7NaN4qWdw" base_Element="_NRolAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NRolA1JPEeiyW7NaN4qWdw" base_Element="_NRolAFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NRolBFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NRxu81JPEeiyW7NaN4qWdw" base_Element="_NRxu8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_NRyWAVJPEeiyW7NaN4qWdw" base_Element="_NRxu8lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSCNpVJPEeiyW7NaN4qWdw" base_Element="_NSCNpFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSC0sFJPEeiyW7NaN4qWdw" base_Element="_NSCNpFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSC0sVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NSYL4FJPEeiyW7NaN4qWdw" genericsValue="AIUnit" base_Element="_NSXk01JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSaBElJPEeiyW7NaN4qWdw" base_Element="_NSZaAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSaBE1JPEeiyW7NaN4qWdw" base_Element="_NSZaAFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSaBFFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSuKIVJPEeiyW7NaN4qWdw" base_Element="_NStjElJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSuKIlJPEeiyW7NaN4qWdw" base_Element="_NStjElJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSuKI1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSuxMFJPEeiyW7NaN4qWdw" base_Element="_NSuKJFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSuxMVJPEeiyW7NaN4qWdw" base_Element="_NSuKJFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSuxMlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSvYQFJPEeiyW7NaN4qWdw" base_Element="_NSuxM1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSvYQVJPEeiyW7NaN4qWdw" base_Element="_NSuxM1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSvYQlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSvYRFJPEeiyW7NaN4qWdw" base_Element="_NSvYQ1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSv_UFJPEeiyW7NaN4qWdw" base_Element="_NSvYQ1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSv_UVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSwmYVJPEeiyW7NaN4qWdw" base_Element="_NSv_UlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSwmYlJPEeiyW7NaN4qWdw" base_Element="_NSv_UlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSwmY1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSxNcFJPEeiyW7NaN4qWdw" base_Element="_NSwmZFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSxNcVJPEeiyW7NaN4qWdw" base_Element="_NSwmZFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSxNclJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSx0glJPEeiyW7NaN4qWdw" base_Element="_NSx0gFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSx0g1JPEeiyW7NaN4qWdw" base_Element="_NSx0gFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSx0hFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSybkVJPEeiyW7NaN4qWdw" base_Element="_NSybkFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSybklJPEeiyW7NaN4qWdw" base_Element="_NSybkFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSybk1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NSzpsFJPEeiyW7NaN4qWdw" base_Element="_NSzCoFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NSzpsVJPEeiyW7NaN4qWdw" base_Element="_NSzCoFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NSzpslJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NS0QwlJPEeiyW7NaN4qWdw" base_Element="_NS0QwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NS030FJPEeiyW7NaN4qWdw" base_Element="_NS0QwFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NS030VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NS031FJPEeiyW7NaN4qWdw" base_Element="_NS030lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NS1e4FJPEeiyW7NaN4qWdw" base_Element="_NS030lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NS1e4VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NT-uYVJPEeiyW7NaN4qWdw" base_Element="_NT-HUlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NT-uYlJPEeiyW7NaN4qWdw" base_Element="_NT-HUlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NT-uY1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NUOmAVJPEeiyW7NaN4qWdw" base_Element="_NUN-8lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NUPNEFJPEeiyW7NaN4qWdw" base_Element="_NUN-8lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NUPNEVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_NUTegFJPEeiyW7NaN4qWdw" genericsValue="GoodsType, Map&lt;WorkLocation, Integer>" base_Element="_NUS3cVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NUWh0VJPEeiyW7NaN4qWdw" base_Element="_NUV6wFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NUWh0lJPEeiyW7NaN4qWdw" base_Element="_NUV6wFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NUWh01JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NUrR8FJPEeiyW7NaN4qWdw" base_Element="_NUqq4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NUrR8VJPEeiyW7NaN4qWdw" base_Element="_NUqq4FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NUrR8lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NUsgE1JPEeiyW7NaN4qWdw" base_Element="_NUsgEFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NUtHIFJPEeiyW7NaN4qWdw" base_Element="_NUsgEFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NUtHIVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NUtHJFJPEeiyW7NaN4qWdw" base_Element="_NUtHIlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NUtuMFJPEeiyW7NaN4qWdw" base_Element="_NUtHIlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NUtuMVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NUtuNFJPEeiyW7NaN4qWdw" base_Element="_NUtuMlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NUuVQFJPEeiyW7NaN4qWdw" base_Element="_NUtuMlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NUuVQVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVHW0VJPEeiyW7NaN4qWdw" base_Element="_NVGvwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVH94FJPEeiyW7NaN4qWdw" base_Element="_NVGvwFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVH94VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVJMAlJPEeiyW7NaN4qWdw" base_Element="_NVIk8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVJzEFJPEeiyW7NaN4qWdw" base_Element="_NVIk8VJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVJzEVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVLBMFJPEeiyW7NaN4qWdw" base_Element="_NVKaIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVLBMVJPEeiyW7NaN4qWdw" base_Element="_NVKaIFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVLBMlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVMPUFJPEeiyW7NaN4qWdw" base_Element="_NVLoQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVMPUVJPEeiyW7NaN4qWdw" base_Element="_NVLoQFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVMPUlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVULIlJPEeiyW7NaN4qWdw" base_Element="_NVULIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVULI1JPEeiyW7NaN4qWdw" base_Element="_NVULIVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVULJFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVVZQVJPEeiyW7NaN4qWdw" base_Element="_NVUyMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVVZQlJPEeiyW7NaN4qWdw" base_Element="_NVUyMFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVVZQ1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVejMlJPEeiyW7NaN4qWdw" base_Element="_NVejMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVejM1JPEeiyW7NaN4qWdw" base_Element="_NVejMFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVejNFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVnGElJPEeiyW7NaN4qWdw" base_Element="_NVnGEFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVntIFJPEeiyW7NaN4qWdw" base_Element="_NVnGEFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVntIVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVqJYFJPEeiyW7NaN4qWdw" base_Element="_NVpiUlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVqJYVJPEeiyW7NaN4qWdw" base_Element="_NVpiUlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVqJYlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVyFMVJPEeiyW7NaN4qWdw" base_Element="_NVyFMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVyFMlJPEeiyW7NaN4qWdw" base_Element="_NVyFMFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVyFM1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVysQ1JPEeiyW7NaN4qWdw" base_Element="_NVysQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NVzTUFJPEeiyW7NaN4qWdw" base_Element="_NVysQFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NVzTUVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NVz6YlJPEeiyW7NaN4qWdw" base_Element="_NVz6YFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NV0hcFJPEeiyW7NaN4qWdw" base_Element="_NVz6YFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NV0hcVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NV0hdFJPEeiyW7NaN4qWdw" base_Element="_NV0hclJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NV1IgFJPEeiyW7NaN4qWdw" base_Element="_NV0hclJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NV1IgVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWMU4lJPEeiyW7NaN4qWdw" base_Element="_NWMU4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NWM78FJPEeiyW7NaN4qWdw" base_Element="_NWMU4VJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NWM78VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWNjAFJPEeiyW7NaN4qWdw" base_Element="_NWM78lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NWNjAVJPEeiyW7NaN4qWdw" base_Element="_NWM78lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NWNjAlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWR0c1JPEeiyW7NaN4qWdw" base_Element="_NWR0cVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NWSbgFJPEeiyW7NaN4qWdw" base_Element="_NWR0cVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NWSbgVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWSbhFJPEeiyW7NaN4qWdw" base_Element="_NWSbglJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NWTCkFJPEeiyW7NaN4qWdw" base_Element="_NWSbglJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NWTCkVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWXUAVJPEeiyW7NaN4qWdw" base_Element="_NWWs8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NWXUAlJPEeiyW7NaN4qWdw" base_Element="_NWWs8FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NWXUA1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWYiIVJPEeiyW7NaN4qWdw" base_Element="_NWX7EFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NWYiIlJPEeiyW7NaN4qWdw" base_Element="_NWX7EFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NWYiI1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_NWZJMVJPEeiyW7NaN4qWdw" base_Element="_NWYiJFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_NWZJMlJPEeiyW7NaN4qWdw" base_Element="_NWYiJFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_NWZJM1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_OAICsFJPEeiyW7NaN4qWdw" base_Element="_OAHboFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAIpwFJPEeiyW7NaN4qWdw" base_Element="_OAICsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAJQ0FJPEeiyW7NaN4qWdw" base_Element="_OAIpwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAJ34FJPEeiyW7NaN4qWdw" base_Element="_OAJQ0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAKe8FJPEeiyW7NaN4qWdw" base_Element="_OAJ34VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAKe8lJPEeiyW7NaN4qWdw" base_Element="_OAKe8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OALGAFJPEeiyW7NaN4qWdw" base_Element="_OAKe81JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OALtEFJPEeiyW7NaN4qWdw" base_Element="_OALGAVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAMUIFJPEeiyW7NaN4qWdw" base_Element="_OALtEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAMUIlJPEeiyW7NaN4qWdw" base_Element="_OAMUIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAM7MVJPEeiyW7NaN4qWdw" base_Element="_OAM7MFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OANiQFJPEeiyW7NaN4qWdw" base_Element="_OAM7MlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAOJUVJPEeiyW7NaN4qWdw" base_Element="_OAOJUFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAOwYVJPEeiyW7NaN4qWdw" base_Element="_OAOwYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAPXcFJPEeiyW7NaN4qWdw" base_Element="_OAOwYlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAP-gFJPEeiyW7NaN4qWdw" base_Element="_OAPXcVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAQlkFJPEeiyW7NaN4qWdw" base_Element="_OAP-gVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAQlklJPEeiyW7NaN4qWdw" base_Element="_OAQlkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OARzsFJPEeiyW7NaN4qWdw" base_Element="_OARMoFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OARzslJPEeiyW7NaN4qWdw" base_Element="_OARzsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OASawVJPEeiyW7NaN4qWdw" base_Element="_OASawFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OATB0FJPEeiyW7NaN4qWdw" base_Element="_OASawlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OATo4FJPEeiyW7NaN4qWdw" base_Element="_OATB0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAUP8FJPEeiyW7NaN4qWdw" base_Element="_OATo4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAU3AFJPEeiyW7NaN4qWdw" base_Element="_OAUP8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAU3AlJPEeiyW7NaN4qWdw" base_Element="_OAU3AVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAVeEFJPEeiyW7NaN4qWdw" base_Element="_OAU3A1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAWFIFJPEeiyW7NaN4qWdw" base_Element="_OAVeEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAWsMFJPEeiyW7NaN4qWdw" base_Element="_OAWFIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAXTQFJPEeiyW7NaN4qWdw" base_Element="_OAWsMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAX6UFJPEeiyW7NaN4qWdw" base_Element="_OAXTQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAX6UlJPEeiyW7NaN4qWdw" base_Element="_OAX6UVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAYhYVJPEeiyW7NaN4qWdw" base_Element="_OAYhYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAZvgFJPEeiyW7NaN4qWdw" base_Element="_OAYhYlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAZvglJPEeiyW7NaN4qWdw" base_Element="_OAZvgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAaWkFJPEeiyW7NaN4qWdw" base_Element="_OAZvg1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAa9oFJPEeiyW7NaN4qWdw" base_Element="_OAaWkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAbksFJPEeiyW7NaN4qWdw" base_Element="_OAa9oVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAbkslJPEeiyW7NaN4qWdw" base_Element="_OAbksVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAcLwVJPEeiyW7NaN4qWdw" base_Element="_OAcLwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAcy0FJPEeiyW7NaN4qWdw" base_Element="_OAcLwlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAdZ4FJPEeiyW7NaN4qWdw" base_Element="_OAcy0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAeA8FJPEeiyW7NaN4qWdw" base_Element="_OAdZ4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAeoAFJPEeiyW7NaN4qWdw" base_Element="_OAeA8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAeoAlJPEeiyW7NaN4qWdw" base_Element="_OAeoAVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAfPEFJPEeiyW7NaN4qWdw" base_Element="_OAeoA1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAf2IFJPEeiyW7NaN4qWdw" base_Element="_OAfPEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAgdMFJPEeiyW7NaN4qWdw" base_Element="_OAf2IVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAgdMlJPEeiyW7NaN4qWdw" base_Element="_OAgdMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAhEQVJPEeiyW7NaN4qWdw" base_Element="_OAhEQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAhrUFJPEeiyW7NaN4qWdw" base_Element="_OAhEQlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAiSYFJPEeiyW7NaN4qWdw" base_Element="_OAhrUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAi5cFJPEeiyW7NaN4qWdw" base_Element="_OAiSYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAi5clJPEeiyW7NaN4qWdw" base_Element="_OAi5cVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAkHkFJPEeiyW7NaN4qWdw" base_Element="_OAjggFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OAkuoFJPEeiyW7NaN4qWdw" base_Element="_OAkHkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OA9wMFJPEeiyW7NaN4qWdw" base_Element="_OA9JIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OA-XQFJPEeiyW7NaN4qWdw" base_Element="_OA9wMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OA--UFJPEeiyW7NaN4qWdw" base_Element="_OA-XQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OA_lYFJPEeiyW7NaN4qWdw" base_Element="_OA--UVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OA_lYlJPEeiyW7NaN4qWdw" base_Element="_OA_lYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBGTEVJPEeiyW7NaN4qWdw" base_Element="_OBGTEFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBG6IVJPEeiyW7NaN4qWdw" base_Element="_OBG6IFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBHhMFJPEeiyW7NaN4qWdw" base_Element="_OBG6IlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBIIQFJPEeiyW7NaN4qWdw" base_Element="_OBHhMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBIvUFJPEeiyW7NaN4qWdw" base_Element="_OBIIQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBIvUlJPEeiyW7NaN4qWdw" base_Element="_OBIvUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBJWYVJPEeiyW7NaN4qWdw" base_Element="_OBJWYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBJ9cFJPEeiyW7NaN4qWdw" base_Element="_OBJWYlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBKkgFJPEeiyW7NaN4qWdw" base_Element="_OBJ9cVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBKkglJPEeiyW7NaN4qWdw" base_Element="_OBKkgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBLLkFJPEeiyW7NaN4qWdw" base_Element="_OBKkg1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBLyoFJPEeiyW7NaN4qWdw" base_Element="_OBLLkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBLyolJPEeiyW7NaN4qWdw" base_Element="_OBLyoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBMZsVJPEeiyW7NaN4qWdw" base_Element="_OBMZsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBNAwFJPEeiyW7NaN4qWdw" base_Element="_OBMZslJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBNn0FJPEeiyW7NaN4qWdw" base_Element="_OBNAwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBNn0lJPEeiyW7NaN4qWdw" base_Element="_OBNn0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBOO4VJPEeiyW7NaN4qWdw" base_Element="_OBOO4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBO18FJPEeiyW7NaN4qWdw" base_Element="_OBOO4lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBO18lJPEeiyW7NaN4qWdw" base_Element="_OBO18VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBU8kVJPEeiyW7NaN4qWdw" base_Element="_OBU8kFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBVjoFJPEeiyW7NaN4qWdw" base_Element="_OBU8klJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBWKsFJPEeiyW7NaN4qWdw" base_Element="_OBVjoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBWKslJPEeiyW7NaN4qWdw" base_Element="_OBWKsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBXY0FJPEeiyW7NaN4qWdw" base_Element="_OBWxwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBXY0lJPEeiyW7NaN4qWdw" base_Element="_OBXY0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBX_4FJPEeiyW7NaN4qWdw" base_Element="_OBXY01JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBYm8FJPEeiyW7NaN4qWdw" base_Element="_OBX_4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBfUoFJPEeiyW7NaN4qWdw" base_Element="_OBetkFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBf7sFJPEeiyW7NaN4qWdw" base_Element="_OBfUoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBgiwFJPEeiyW7NaN4qWdw" base_Element="_OBf7sVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBhJ0FJPEeiyW7NaN4qWdw" base_Element="_OBgiwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBhw4FJPEeiyW7NaN4qWdw" base_Element="_OBhJ0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBiX8FJPEeiyW7NaN4qWdw" base_Element="_OBhw4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBi_AFJPEeiyW7NaN4qWdw" base_Element="_OBiX8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBi_AlJPEeiyW7NaN4qWdw" base_Element="_OBi_AVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBjmEFJPEeiyW7NaN4qWdw" base_Element="_OBi_A1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBkNIFJPEeiyW7NaN4qWdw" base_Element="_OBjmEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBk0MFJPEeiyW7NaN4qWdw" base_Element="_OBkNIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBk0MlJPEeiyW7NaN4qWdw" base_Element="_OBk0MVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBlbQVJPEeiyW7NaN4qWdw" base_Element="_OBlbQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBmCUFJPEeiyW7NaN4qWdw" base_Element="_OBlbQlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBmpYFJPEeiyW7NaN4qWdw" base_Element="_OBmCUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBnQcFJPEeiyW7NaN4qWdw" base_Element="_OBmpYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBn3gFJPEeiyW7NaN4qWdw" base_Element="_OBnQcVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBpFoFJPEeiyW7NaN4qWdw" base_Element="_OBoekFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBpssFJPEeiyW7NaN4qWdw" base_Element="_OBpFoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBq60FJPEeiyW7NaN4qWdw" base_Element="_OBqTwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBrh4FJPEeiyW7NaN4qWdw" base_Element="_OBq60VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBswAFJPEeiyW7NaN4qWdw" base_Element="_OBsI8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBtXEFJPEeiyW7NaN4qWdw" base_Element="_OBswAVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBulMFJPEeiyW7NaN4qWdw" base_Element="_OBtXEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBvzUFJPEeiyW7NaN4qWdw" base_Element="_OBulMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OByPkFJPEeiyW7NaN4qWdw" base_Element="_OBxBcFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OBzdsFJPEeiyW7NaN4qWdw" base_Element="_OByPkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OB0EwFJPEeiyW7NaN4qWdw" base_Element="_OBzdsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OB0EwlJPEeiyW7NaN4qWdw" base_Element="_OB0EwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OB0r0VJPEeiyW7NaN4qWdw" base_Element="_OB0r0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OB1S4FJPEeiyW7NaN4qWdw" base_Element="_OB0r0lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OB158FJPEeiyW7NaN4qWdw" base_Element="_OB1S4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCFKgFJPEeiyW7NaN4qWdw" base_Element="_OCEjcFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCFxkFJPEeiyW7NaN4qWdw" base_Element="_OCFKgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCGYoFJPEeiyW7NaN4qWdw" base_Element="_OCFxkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCG_sFJPEeiyW7NaN4qWdw" base_Element="_OCGYoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCG_slJPEeiyW7NaN4qWdw" base_Element="_OCG_sVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCHmwFJPEeiyW7NaN4qWdw" base_Element="_OCG_s1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCIN0FJPEeiyW7NaN4qWdw" base_Element="_OCHmwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OCJb8lJPEeiyW7NaN4qWdw" base_Element="_OCJb8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCSl4FJPEeiyW7NaN4qWdw" base_Element="_OCR-0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCTM8FJPEeiyW7NaN4qWdw" base_Element="_OCSl4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCT0AFJPEeiyW7NaN4qWdw" base_Element="_OCTM8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCUbEFJPEeiyW7NaN4qWdw" base_Element="_OCT0AVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCUbElJPEeiyW7NaN4qWdw" base_Element="_OCUbEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCVCIFJPEeiyW7NaN4qWdw" base_Element="_OCUbE1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCVpMFJPEeiyW7NaN4qWdw" base_Element="_OCVCIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCeMEFJPEeiyW7NaN4qWdw" base_Element="_OCdlAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OCezJFJPEeiyW7NaN4qWdw" base_Element="_OCezIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OCezJVJPEeiyW7NaN4qWdw" base_Element="_OCezIFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OCezJlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_OCgBQFJPEeiyW7NaN4qWdw" base_Element="_OCfaMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCqZUFJPEeiyW7NaN4qWdw" base_Element="_OCpLMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCrncFJPEeiyW7NaN4qWdw" base_Element="_OCqZUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCsOgFJPEeiyW7NaN4qWdw" base_Element="_OCrncVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCtcoFJPEeiyW7NaN4qWdw" base_Element="_OCsOgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OCuDsFJPEeiyW7NaN4qWdw" base_Element="_OCtcoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OC9UQFJPEeiyW7NaN4qWdw" base_Element="_OC8tMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OC97UFJPEeiyW7NaN4qWdw" base_Element="_OC9UQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OC_JcFJPEeiyW7NaN4qWdw" base_Element="_OC97UVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OC_JclJPEeiyW7NaN4qWdw" base_Element="_OC_JcVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OC_wgVJPEeiyW7NaN4qWdw" base_Element="_OC_wgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODAXkVJPEeiyW7NaN4qWdw" base_Element="_ODAXkFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODA-oFJPEeiyW7NaN4qWdw" base_Element="_ODAXklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODBlsFJPEeiyW7NaN4qWdw" base_Element="_ODA-oVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODCMwFJPEeiyW7NaN4qWdw" base_Element="_ODBlsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODCz0FJPEeiyW7NaN4qWdw" base_Element="_ODCMwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODCz0lJPEeiyW7NaN4qWdw" base_Element="_ODCz0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODDa4VJPEeiyW7NaN4qWdw" base_Element="_ODDa4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ODLWtVJPEeiyW7NaN4qWdw" base_Element="_ODLWs1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_ODL9wFJPEeiyW7NaN4qWdw" base_Element="_ODLWs1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_ODL9wVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ODYyEFJPEeiyW7NaN4qWdw" base_Element="_ODYLAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODZZIFJPEeiyW7NaN4qWdw" base_Element="_ODYyEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODaAMFJPEeiyW7NaN4qWdw" base_Element="_ODZZIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODeRoFJPEeiyW7NaN4qWdw" base_Element="_ODdqkFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ODijEFJPEeiyW7NaN4qWdw" base_Element="_ODh8AFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ODjKI1JPEeiyW7NaN4qWdw" base_Element="_ODjKIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_ODjKJFJPEeiyW7NaN4qWdw" base_Element="_ODjKIFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_ODjKJVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_OEPtsFJPEeiyW7NaN4qWdw" genericsValue="AIGoods" base_Element="_OEPGo1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OEUmMFJPEeiyW7NaN4qWdw" genericsValue="TileImprovementPlan" base_Element="_OET_IlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEVNQlJPEeiyW7NaN4qWdw" base_Element="_OEVNQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEVNQ1JPEeiyW7NaN4qWdw" base_Element="_OEVNQFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEVNRFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEV0UlJPEeiyW7NaN4qWdw" base_Element="_OEV0UFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEXCcFJPEeiyW7NaN4qWdw" base_Element="_OEV0UFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEXCcVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEXpgFJPEeiyW7NaN4qWdw" base_Element="_OEXCclJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEXpgVJPEeiyW7NaN4qWdw" base_Element="_OEXCclJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEXpglJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEYQkFJPEeiyW7NaN4qWdw" base_Element="_OEXpg1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEYQkVJPEeiyW7NaN4qWdw" base_Element="_OEXpg1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEYQklJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEY3olJPEeiyW7NaN4qWdw" base_Element="_OEY3oFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEY3o1JPEeiyW7NaN4qWdw" base_Element="_OEY3oFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEY3pFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEeXMlJPEeiyW7NaN4qWdw" base_Element="_OEeXMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEeXM1JPEeiyW7NaN4qWdw" base_Element="_OEeXMFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEeXNFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEe-RFJPEeiyW7NaN4qWdw" base_Element="_OEe-QFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEe-RVJPEeiyW7NaN4qWdw" base_Element="_OEe-QFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEflUFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEgMYFJPEeiyW7NaN4qWdw" base_Element="_OEflUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEgMYVJPEeiyW7NaN4qWdw" base_Element="_OEflUVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEgMYlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEgzcVJPEeiyW7NaN4qWdw" base_Element="_OEgMY1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEgzclJPEeiyW7NaN4qWdw" base_Element="_OEgMY1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEgzc1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEhagFJPEeiyW7NaN4qWdw" base_Element="_OEgzdFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEhagVJPEeiyW7NaN4qWdw" base_Element="_OEgzdFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEhaglJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEiBkVJPEeiyW7NaN4qWdw" base_Element="_OEhag1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEiBklJPEeiyW7NaN4qWdw" base_Element="_OEhag1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEiBk1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEjPsFJPEeiyW7NaN4qWdw" base_Element="_OEiooFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEjPsVJPEeiyW7NaN4qWdw" base_Element="_OEiooFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEjPslJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEkd0FJPEeiyW7NaN4qWdw" base_Element="_OEj2wFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEkd0VJPEeiyW7NaN4qWdw" base_Element="_OEj2wFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEkd0lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OElE4lJPEeiyW7NaN4qWdw" base_Element="_OElE4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OElr8FJPEeiyW7NaN4qWdw" base_Element="_OElE4FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OElr8VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEmTAFJPEeiyW7NaN4qWdw" base_Element="_OElr8lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEmTAVJPEeiyW7NaN4qWdw" base_Element="_OElr8lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEmTAlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEm6EFJPEeiyW7NaN4qWdw" base_Element="_OEmTA1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEm6EVJPEeiyW7NaN4qWdw" base_Element="_OEmTA1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEm6ElJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEqkdVJPEeiyW7NaN4qWdw" base_Element="_OEp9YlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OErLgFJPEeiyW7NaN4qWdw" base_Element="_OEp9YlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OErLgVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OErylFJPEeiyW7NaN4qWdw" base_Element="_OErykFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEsZoFJPEeiyW7NaN4qWdw" base_Element="_OErykVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEsZoVJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OEsZolJPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLb631JPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEtnwFJPEeiyW7NaN4qWdw" base_Element="_OEtAsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEtnwVJPEeiyW7NaN4qWdw" base_Element="_OEtAsVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEtnwlJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OEtnw1JPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLch4FJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEuO1FJPEeiyW7NaN4qWdw" base_Element="_OEuO0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEu14FJPEeiyW7NaN4qWdw" base_Element="_OEuO0VJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEu14VJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OEu14lJPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLch4VJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEvc8FJPEeiyW7NaN4qWdw" base_Element="_OEu141JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEvc8VJPEeiyW7NaN4qWdw" base_Element="_OEu15FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEwEAFJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OEwEAVJPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLch4lJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEygQVJPEeiyW7NaN4qWdw" base_Element="_OEx5MFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OEygQlJPEeiyW7NaN4qWdw" base_Element="_OEx5MVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OEygQ1JPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OEzHUFJPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLch41JPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OEzuYlJPEeiyW7NaN4qWdw" base_Element="_OEzHUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OE0VcFJPEeiyW7NaN4qWdw" base_Element="_OEzHUlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OE0VcVJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OE0VclJPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLch5FJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OE08hFJPEeiyW7NaN4qWdw" base_Element="_OE08gFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OE1jkFJPEeiyW7NaN4qWdw" base_Element="_OE08gVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OE1jkVJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OE1jklJPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLch5VJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OE2xsFJPEeiyW7NaN4qWdw" base_Element="_OE2KoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OE2xsVJPEeiyW7NaN4qWdw" base_Element="_OE2KolJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OE2xslJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OE2xs1JPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLch51JPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OE3_0FJPEeiyW7NaN4qWdw" base_Element="_OE3YwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OE3_0VJPEeiyW7NaN4qWdw" base_Element="_OE3YwVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OE3_0lJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OE3_01JPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLch6FJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OE5N8FJPEeiyW7NaN4qWdw" base_Element="_OE4m4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OE5N8VJPEeiyW7NaN4qWdw" base_Element="_OE4m4VJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OE5N8lJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OE5N81JPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLch6VJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_OE-GcFJPEeiyW7NaN4qWdw" base_Element="_OE9fY1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OE-tgFJPEeiyW7NaN4qWdw" base_Element="_OE-GclJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_OE_UkFJPEeiyW7NaN4qWdw" typeParameterDeclarationValue="T extends AIObject" base_Operation="_OE-tgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OE_UklJPEeiyW7NaN4qWdw" base_Element="_OE-tgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OE_7oFJPEeiyW7NaN4qWdw" genericsValue="T" base_Element="_OE-tg1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFBw0lJPEeiyW7NaN4qWdw" base_Element="_OFBJw1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFBw01JPEeiyW7NaN4qWdw" base_Element="_OFBJw1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFCX4FJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFC-8FJPEeiyW7NaN4qWdw" base_Element="_OFCX4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFC-8VJPEeiyW7NaN4qWdw" base_Element="_OFCX4VJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFC-8lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFDmAlJPEeiyW7NaN4qWdw" base_Element="_OFDmAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFENEFJPEeiyW7NaN4qWdw" base_Element="_OFDmAFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFENEVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFENFFJPEeiyW7NaN4qWdw" base_Element="_OFENElJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFE0IFJPEeiyW7NaN4qWdw" base_Element="_OFENElJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFE0IVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFE0JFJPEeiyW7NaN4qWdw" base_Element="_OFE0IlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFFbMFJPEeiyW7NaN4qWdw" base_Element="_OFE0IlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFFbMVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFFbNFJPEeiyW7NaN4qWdw" base_Element="_OFFbMlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFGCQFJPEeiyW7NaN4qWdw" base_Element="_OFFbMlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFGCQVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFGCRFJPEeiyW7NaN4qWdw" base_Element="_OFGCQlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFGpUFJPEeiyW7NaN4qWdw" base_Element="_OFGCQlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFGpUVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFKTtVJPEeiyW7NaN4qWdw" base_Element="_OFKTsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_OFK6wFJPEeiyW7NaN4qWdw" base_Element="_OFKTs1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OFQaVVJPEeiyW7NaN4qWdw" genericsValue="Goods" base_Element="_OFQaU1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OFSPgFJPEeiyW7NaN4qWdw" genericsValue="Unit" base_Element="_OFRoc1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OFS2lFJPEeiyW7NaN4qWdw" genericsValue="BuildableType" base_Element="_OFS2klJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OFayY1JPEeiyW7NaN4qWdw" genericsValue="Unit, String" base_Element="_OFayYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OFd1sVJPEeiyW7NaN4qWdw" genericsValue="AIUnit" base_Element="_OFcnklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OFhgEVJPEeiyW7NaN4qWdw" genericsValue="FoundingFather" base_Element="_OFg5AlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFiHIlJPEeiyW7NaN4qWdw" base_Element="_OFiHIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFiHI1JPEeiyW7NaN4qWdw" base_Element="_OFiHIFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFiHJFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFiuMlJPEeiyW7NaN4qWdw" base_Element="_OFiuMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFiuM1JPEeiyW7NaN4qWdw" base_Element="_OFiuMFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFiuNFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFjVQlJPEeiyW7NaN4qWdw" base_Element="_OFjVQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFjVQ1JPEeiyW7NaN4qWdw" base_Element="_OFjVQFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFjVRFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_OFm_o1JPEeiyW7NaN4qWdw" typeParameterDeclarationValue="T extends Mission" base_Operation="_OFm_oVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFnmsFJPEeiyW7NaN4qWdw" base_Element="_OFm_oVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OFnmsVJPEeiyW7NaN4qWdw" genericsValue="T" base_Element="_OFm_olJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_OFoNwlJPEeiyW7NaN4qWdw" typeParameterDeclarationValue="T extends Mission" base_Operation="_OFoNwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFoNxFJPEeiyW7NaN4qWdw" base_Element="_OFoNwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OFo00FJPEeiyW7NaN4qWdw" genericsValue="T" base_Element="_OFoNwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFsfMVJPEeiyW7NaN4qWdw" base_Element="_OFrRE1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFsfMlJPEeiyW7NaN4qWdw" base_Element="_OFrRE1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFsfM1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFtGQ1JPEeiyW7NaN4qWdw" base_Element="_OFsfNFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFttUFJPEeiyW7NaN4qWdw" base_Element="_OFsfNFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFttUVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFuUYlJPEeiyW7NaN4qWdw" base_Element="_OFuUYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFuUY1JPEeiyW7NaN4qWdw" base_Element="_OFuUYFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFuUZFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFvig1JPEeiyW7NaN4qWdw" base_Element="_OFvigFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFwJkFJPEeiyW7NaN4qWdw" base_Element="_OFvigFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFwJkVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFwwoVJPEeiyW7NaN4qWdw" base_Element="_OFwJklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFwwolJPEeiyW7NaN4qWdw" base_Element="_OFwJklJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFwwo1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFx-wVJPEeiyW7NaN4qWdw" base_Element="_OFwwpFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFx-wlJPEeiyW7NaN4qWdw" base_Element="_OFwwpFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFx-w1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFzM4FJPEeiyW7NaN4qWdw" base_Element="_OFx-xFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFzM4VJPEeiyW7NaN4qWdw" base_Element="_OFx-xFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFzM4lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OFzz8FJPEeiyW7NaN4qWdw" base_Element="_OFzM41JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OFzz8VJPEeiyW7NaN4qWdw" base_Element="_OFzM41JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OFzz8lJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OF1CEFJPEeiyW7NaN4qWdw" base_Element="_OF0bAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OF1CEVJPEeiyW7NaN4qWdw" base_Element="_OF0bAFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OF1CElJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OF1pIVJPEeiyW7NaN4qWdw" base_Element="_OF1CE1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OF1pIlJPEeiyW7NaN4qWdw" base_Element="_OF1CE1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OF1pI1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_OF4scFJPEeiyW7NaN4qWdw" genericsValue="ProductionCache.Entry" base_Element="_OF3eUFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OGABMFJPEeiyW7NaN4qWdw" genericsValue="Cargo" base_Element="_OF-zF1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OGJLIFJPEeiyW7NaN4qWdw" genericsValue="GoodsType, Map&lt;WorkLocation, Integer>" base_Element="_OGIkE1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OGKZQFJPEeiyW7NaN4qWdw" genericsValue="GoodsType, Map&lt;WorkLocation, Integer>" base_Element="_OGJyMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OGNckFJPEeiyW7NaN4qWdw" genericsValue="GoodsType, Map&lt;WorkLocation, Integer>" base_Element="_OGM1gVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OGODolJPEeiyW7NaN4qWdw" genericsValue="GoodsType, Map&lt;WorkLocation, Integer>" base_Element="_OGNcklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OGP40FJPEeiyW7NaN4qWdw" genericsValue="Unit" base_Element="_OGOqslJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OGQf4lJPEeiyW7NaN4qWdw" genericsValue="WorkLocationPlan" base_Element="_OGQf4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OGSVEFJPEeiyW7NaN4qWdw" genericsValue="Unit" base_Element="_OGRuAlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OGUxUFJPEeiyW7NaN4qWdw" genericsValue="Unit" base_Element="_OGTjMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OGd7Q1JPEeiyW7NaN4qWdw" base_Element="_OGdUMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OHCjAFJPEeiyW7NaN4qWdw" genericsValue="RandomChoice&lt;UnitType>" base_Element="_OHBU4lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OHEYMFJPEeiyW7NaN4qWdw" genericsValue="TransportableAIObject" base_Element="_OHDxIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OHE_QFJPEeiyW7NaN4qWdw" genericsValue="TransportMission" base_Element="_OHDxIlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHTowVJPEeiyW7NaN4qWdw" base_Element="_OHTBslJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHUP0FJPEeiyW7NaN4qWdw" base_Element="_OHTBslJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHUP0VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHU24FJPEeiyW7NaN4qWdw" base_Element="_OHUP0lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OHU24VJPEeiyW7NaN4qWdw" genericsValue="AIUnit" base_Element="_OHUP01JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHVd8FJPEeiyW7NaN4qWdw" base_Element="_OHUP0lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHVd8VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHWFAlJPEeiyW7NaN4qWdw" base_Element="_OHVd8lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHWFA1JPEeiyW7NaN4qWdw" base_Element="_OHVd8lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHWFBFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHXTJlJPEeiyW7NaN4qWdw" base_Element="_OHXTIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHXTJ1JPEeiyW7NaN4qWdw" base_Element="_OHXTIFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHXTKFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHYhQFJPEeiyW7NaN4qWdw" base_Element="_OHX6MFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHYhQVJPEeiyW7NaN4qWdw" base_Element="_OHX6MFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHYhQlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHZIUFJPEeiyW7NaN4qWdw" base_Element="_OHYhQ1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHZIUVJPEeiyW7NaN4qWdw" base_Element="_OHYhQ1JPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHZIUlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHaWdFJPEeiyW7NaN4qWdw" base_Element="_OHZvYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHaWdVJPEeiyW7NaN4qWdw" base_Element="_OHZvYFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHaWdlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHbkkVJPEeiyW7NaN4qWdw" base_Element="_OHa9gFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHbkklJPEeiyW7NaN4qWdw" base_Element="_OHa9gFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHbkk1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHcys1JPEeiyW7NaN4qWdw" base_Element="_OHcysFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OHdZwFJPEeiyW7NaN4qWdw" genericsValue="FoundingFather" base_Element="_OHcysVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHdZwVJPEeiyW7NaN4qWdw" base_Element="_OHcysFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHdZwlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHl8oFJPEeiyW7NaN4qWdw" base_Element="_OHlVklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHl8oVJPEeiyW7NaN4qWdw" base_Element="_OHlVklJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHl8olJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHmjslJPEeiyW7NaN4qWdw" base_Element="_OHmjsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHnKwFJPEeiyW7NaN4qWdw" base_Element="_OHmjsFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHnKwVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHnx0VJPEeiyW7NaN4qWdw" base_Element="_OHnKwlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHnx0lJPEeiyW7NaN4qWdw" base_Element="_OHnKwlJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHnx01JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_OHq1JFJPEeiyW7NaN4qWdw" dimensions="1" base_Element="_OHq1IVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_OHsqVFJPEeiyW7NaN4qWdw" base_Element="_OHsqUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHufglJPEeiyW7NaN4qWdw" base_Element="_OHt4cVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHvGkFJPEeiyW7NaN4qWdw" base_Element="_OHt4cVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHvGkVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHvtoFJPEeiyW7NaN4qWdw" base_Element="_OHvGklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHwUsFJPEeiyW7NaN4qWdw" base_Element="_OHvGklJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHwUsVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHw7xlJPEeiyW7NaN4qWdw" base_Element="_OHw7wFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHxi0FJPEeiyW7NaN4qWdw" base_Element="_OHw7wFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHxi0VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OHyJ5lJPEeiyW7NaN4qWdw" base_Element="_OHyJ4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OHyw8FJPEeiyW7NaN4qWdw" base_Element="_OHyJ4FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OHyw8VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_OH4QgFJPEeiyW7NaN4qWdw" genericsValue="GoodsType" base_Element="_OH3pcFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OH43kFJPEeiyW7NaN4qWdw" genericsValue="GoodsType" base_Element="_OH4QglJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OH764FJPEeiyW7NaN4qWdw" genericsValue="Entry" base_Element="_OH6Fs1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OICokFJPEeiyW7NaN4qWdw" base_Element="_OICBgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OID2sFJPEeiyW7NaN4qWdw" genericsValue="TargetTuple" base_Element="_OIDPoFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OIG6AFJPEeiyW7NaN4qWdw" base_Element="_OIGS8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIHhEFJPEeiyW7NaN4qWdw" base_Element="_OIG6AVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIHhEVJPEeiyW7NaN4qWdw" base_Element="_OIG6AVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIHhElJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_OIMZkFJPEeiyW7NaN4qWdw" genericsValue="AIUnit" base_Element="_OILLclJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OINAoFJPEeiyW7NaN4qWdw" genericsValue="AIUnit" base_Element="_OILLc1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OINnsVJPEeiyW7NaN4qWdw" base_Element="_OINAoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OINnslJPEeiyW7NaN4qWdw" base_Element="_OINAoVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OINns1JPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIOOwlJPEeiyW7NaN4qWdw" base_Element="_OIOOwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIO10FJPEeiyW7NaN4qWdw" base_Element="_OIOOwFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIO10VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIPc4VJPEeiyW7NaN4qWdw" base_Element="_OIO10lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIPc4lJPEeiyW7NaN4qWdw" base_Element="_OIO10lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIQD8FJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIU8cFJPEeiyW7NaN4qWdw" base_Element="_OIUVYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIU8cVJPEeiyW7NaN4qWdw" base_Element="_OIUVYVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIU8clJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIVjglJPEeiyW7NaN4qWdw" base_Element="_OIVjgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIWKkFJPEeiyW7NaN4qWdw" base_Element="_OIVjgFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIWKkVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIWxoFJPEeiyW7NaN4qWdw" base_Element="_OIWKklJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIWxoVJPEeiyW7NaN4qWdw" base_Element="_OIWKklJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIWxolJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIXYslJPEeiyW7NaN4qWdw" base_Element="_OIXYsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIX_wFJPEeiyW7NaN4qWdw" base_Element="_OIXYsFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIX_wVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIetcFJPEeiyW7NaN4qWdw" base_Element="_OIeGYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIetcVJPEeiyW7NaN4qWdw" base_Element="_OIeGYVJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIetclJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIf7kFJPEeiyW7NaN4qWdw" base_Element="_OIfUgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIf7kVJPEeiyW7NaN4qWdw" base_Element="_OIfUgFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIf7klJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIi-4lJPEeiyW7NaN4qWdw" base_Element="_OIiX1VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIjl8FJPEeiyW7NaN4qWdw" base_Element="_OIiX1VJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIjl8VJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIkNAFJPEeiyW7NaN4qWdw" base_Element="_OIjl8lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIkNAVJPEeiyW7NaN4qWdw" base_Element="_OIjl8lJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIkNAlJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIk0ElJPEeiyW7NaN4qWdw" base_Element="_OIk0EFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIlbIFJPEeiyW7NaN4qWdw" base_Element="_OIk0EFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIlbIVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIn3YlJPEeiyW7NaN4qWdw" base_Element="_OIn3YFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIn3Y1JPEeiyW7NaN4qWdw" base_Element="_OIn3YFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIn3ZFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIoeclJPEeiyW7NaN4qWdw" base_Element="_OIoecFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIpFgFJPEeiyW7NaN4qWdw" base_Element="_OIoecFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIpFgVJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIt-AlJPEeiyW7NaN4qWdw" base_Element="_OIt-AFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIt-A1JPEeiyW7NaN4qWdw" base_Element="_OIt-AFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIt-BFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIulElJPEeiyW7NaN4qWdw" base_Element="_OIulEFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIulE1JPEeiyW7NaN4qWdw" base_Element="_OIulEFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIulFFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OIvMIlJPEeiyW7NaN4qWdw" base_Element="_OIvMIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OIvMI1JPEeiyW7NaN4qWdw" base_Element="_OIvMIFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OIvMJFJPEeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OI49JFJPEeiyW7NaN4qWdw" base_Element="_OI49I1JPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_OI5kMFJPEeiyW7NaN4qWdw" name="getColony" isLeaf="true" method="_OKVHkFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_OI5kMVJPEeiyW7NaN4qWdw" type="_OARzsVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OI5kNFJPEeiyW7NaN4qWdw" base_Element="_OI5kMlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OI6LQVJPEeiyW7NaN4qWdw" base_Element="_OI6LQFJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_OI6LRFJPEeiyW7NaN4qWdw" name="getExportGoods" method="_OKVuoVJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_OI6LRVJPEeiyW7NaN4qWdw" type="_NQ4XEFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI6LRlJPEeiyW7NaN4qWdw" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OI6yUVJPEeiyW7NaN4qWdw" base_Element="_OI6yUFJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_OI7ZYVJPEeiyW7NaN4qWdw" name="getWishes" method="_OKVupFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_OI7ZYlJPEeiyW7NaN4qWdw" type="_NWKfsFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI7ZY1JPEeiyW7NaN4qWdw" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OI7ZZVJPEeiyW7NaN4qWdw" base_Element="_OI7ZZFJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_OI8AclJPEeiyW7NaN4qWdw" name="getTileImprovementPlans" method="_OKWVsFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_OI8Ac1JPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OI8AdFJPEeiyW7NaN4qWdw" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OI8ngFJPEeiyW7NaN4qWdw" base_Element="_OI8AdVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OI9OlVJPEeiyW7NaN4qWdw" genericsValue="Unit" base_Element="_OI9OlFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OI-csFJPEeiyW7NaN4qWdw" genericsValue="Unit" base_Element="_OI91oVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJBgAlJPEeiyW7NaN4qWdw" base_Element="_OJBgAVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJCuI1JPEeiyW7NaN4qWdw" base_Element="_OJCuIlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJCuJVJPEeiyW7NaN4qWdw" base_Element="_OJCuJFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJDVMFJPEeiyW7NaN4qWdw" base_Element="_OJCuJlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJD8QlJPEeiyW7NaN4qWdw" base_Element="_OJD8QVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJD8RFJPEeiyW7NaN4qWdw" base_Element="_OJD8Q1JPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_OJEjUFJPEeiyW7NaN4qWdw" name="getNextId" method="_OKhU0FJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_OJEjUVJPEeiyW7NaN4qWdw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJEjVFJPEeiyW7NaN4qWdw" base_Element="_OJEjUlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJG_kVJPEeiyW7NaN4qWdw" base_Element="_OJGYgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OJG_klJPEeiyW7NaN4qWdw" base_Element="_OJGYgFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OJG_k1JPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OJG_lFJPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLdI-lJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJG_llJPEeiyW7NaN4qWdw" base_Element="_OJG_lVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJHmolJPEeiyW7NaN4qWdw" base_Element="_OJHmoFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJI0wFJPEeiyW7NaN4qWdw" genericsValue="AIUnit" base_Element="_OJINsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJI0w1JPEeiyW7NaN4qWdw" base_Element="_OJI0wlJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_OJI0xFJPEeiyW7NaN4qWdw" name="getPlayer" method="_OKqewFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_OJI0xVJPEeiyW7NaN4qWdw" type="_OAWFIVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJJb0VJPEeiyW7NaN4qWdw" base_Element="_OJJb0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJJb01JPEeiyW7NaN4qWdw" base_Element="_OJJb0lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJKC4VJPEeiyW7NaN4qWdw" base_Element="_OJJb1FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJL4E1JPEeiyW7NaN4qWdw" base_Element="_OJL4ElJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_OJMfIFJPEeiyW7NaN4qWdw" name="getUnit" isLeaf="true" method="_OKuwMFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_OJMfIVJPEeiyW7NaN4qWdw" type="_OAa9oVJPEeiyW7NaN4qWdw" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJNGMlJPEeiyW7NaN4qWdw" base_Element="_OJNGMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_OJPidFJPEeiyW7NaN4qWdw" base_Property="_OJPic1JPEeiyW7NaN4qWdw" siblings="_OLflMVJPEeiyW7NaN4qWdw _OLflNFJPEeiyW7NaN4qWdw _OLgMQlJPEeiyW7NaN4qWdw" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJQJgFJPEeiyW7NaN4qWdw" base_Element="_OJPic1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJQJglJPEeiyW7NaN4qWdw" base_Element="_OJQJgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJQwkFJPEeiyW7NaN4qWdw" base_Element="_OJQJg1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJQwklJPEeiyW7NaN4qWdw" base_Element="_OJQwkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJRXpVJPEeiyW7NaN4qWdw" base_Element="_OJRXo1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJR-sVJPEeiyW7NaN4qWdw" base_Element="_OJR-sFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJVCBFJPEeiyW7NaN4qWdw" base_Element="_OJVCA1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJVpEVJPEeiyW7NaN4qWdw" base_Element="_OJVpEFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJVpE1JPEeiyW7NaN4qWdw" base_Element="_OJVpElJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJWQIFJPEeiyW7NaN4qWdw" base_Element="_OJVpFFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJWQIlJPEeiyW7NaN4qWdw" base_Element="_OJWQIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJW3MFJPEeiyW7NaN4qWdw" base_Element="_OJWQI1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJW3MlJPEeiyW7NaN4qWdw" base_Element="_OJW3MVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJXeQVJPEeiyW7NaN4qWdw" base_Element="_OJW3M1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJXeQ1JPEeiyW7NaN4qWdw" genericsValue="BuildPlan" base_Element="_OJXeQlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJYFU1JPEeiyW7NaN4qWdw" base_Element="_OJYFUFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJYFV1JPEeiyW7NaN4qWdw" base_Element="_OJYFVFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJYsY1JPEeiyW7NaN4qWdw" base_Element="_OJYsYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJZTcVJPEeiyW7NaN4qWdw" base_Element="_OJYsZFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJZTdVJPEeiyW7NaN4qWdw" base_Element="_OJZTclJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJZ6glJPEeiyW7NaN4qWdw" base_Element="_OJZTdlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJZ6hlJPEeiyW7NaN4qWdw" base_Element="_OJZ6g1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJahk1JPEeiyW7NaN4qWdw" base_Element="_OJahkFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJbIoFJPEeiyW7NaN4qWdw" base_Element="_OJahlFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJbIpFJPEeiyW7NaN4qWdw" base_Element="_OJbIoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJbvsFJPEeiyW7NaN4qWdw" base_Element="_OJbIpVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJgBIFJPEeiyW7NaN4qWdw" genericsValue="AIUnit" base_Element="_OJfaGFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJgoMFJPEeiyW7NaN4qWdw" genericsValue="AIUnit" base_Element="_OJgBIlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJhPQFJPEeiyW7NaN4qWdw" genericsValue="AIUnit" base_Element="_OJgoMlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJhPQ1JPEeiyW7NaN4qWdw" base_Element="_OJhPQlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJh2UVJPEeiyW7NaN4qWdw" base_Element="_OJh2UFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJh2U1JPEeiyW7NaN4qWdw" base_Element="_OJh2UlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJidYFJPEeiyW7NaN4qWdw" base_Element="_OJh2VFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJidYlJPEeiyW7NaN4qWdw" base_Element="_OJidYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJidZFJPEeiyW7NaN4qWdw" base_Element="_OJidY1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJjEcVJPEeiyW7NaN4qWdw" base_Element="_OJjEcFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJjrglJPEeiyW7NaN4qWdw" base_Element="_OJjrgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJjrhVJPEeiyW7NaN4qWdw" base_Element="_OJjrg1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJkSkFJPEeiyW7NaN4qWdw" genericsValue="String, Integer" base_Element="_OJjrhlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJkSklJPEeiyW7NaN4qWdw" base_Element="_OJjrhlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJk5oFJPEeiyW7NaN4qWdw" genericsValue="Tile, TileImprovementPlan" base_Element="_OJkSk1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJk5olJPEeiyW7NaN4qWdw" base_Element="_OJkSk1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJlgsFJPEeiyW7NaN4qWdw" genericsValue="Location, List&lt;Wish>" base_Element="_OJk5o1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJmHwFJPEeiyW7NaN4qWdw" base_Element="_OJk5o1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJmHxFJPEeiyW7NaN4qWdw" base_Element="_OJmHwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJmu0FJPEeiyW7NaN4qWdw" genericsValue="GoodsType, List&lt;GoodsWish>" base_Element="_OJmHxVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJmu0lJPEeiyW7NaN4qWdw" base_Element="_OJmHxVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJnV4VJPEeiyW7NaN4qWdw" genericsValue="UnitType, List&lt;WorkerWish>" base_Element="_OJnV4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJn88FJPEeiyW7NaN4qWdw" base_Element="_OJnV4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJn88lJPEeiyW7NaN4qWdw" genericsValue="Integer, Integer" base_Element="_OJn88VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJokAFJPEeiyW7NaN4qWdw" base_Element="_OJn88VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJokAlJPEeiyW7NaN4qWdw" base_Element="_OJokAVJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_OJpLEFJPEeiyW7NaN4qWdw" name="getBadlyDefended" visibility="protected" method="_OK_18lJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_OJpLEVJPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJpLElJPEeiyW7NaN4qWdw" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJpyIVJPEeiyW7NaN4qWdw" base_Element="_OJpLE1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJqZMFJPEeiyW7NaN4qWdw" base_Element="_OJpyIlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJrAQVJPEeiyW7NaN4qWdw" base_Element="_OJqZMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJrARFJPEeiyW7NaN4qWdw" base_Element="_OJrAQlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJtcgFJPEeiyW7NaN4qWdw" base_Element="_OJs1cFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OJtcgVJPEeiyW7NaN4qWdw" base_Element="_OJs1cFJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OJtcglJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OJtcg1JPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLj2pFJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJuDkVJPEeiyW7NaN4qWdw" base_Element="_OJuDkFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJxG4FJPEeiyW7NaN4qWdw" genericsValue="String, Integer" base_Element="_OJwf1lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJxt8FJPEeiyW7NaN4qWdw" base_Element="_OJwf1lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJyVAFJPEeiyW7NaN4qWdw" genericsValue="Unit, String" base_Element="_OJxt8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJy8EFJPEeiyW7NaN4qWdw" base_Element="_OJxt8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ0KMVJPEeiyW7NaN4qWdw" base_Element="_OJ0KMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ0xQFJPEeiyW7NaN4qWdw" base_Element="_OJ0KMlJPEeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_OJ0xQlJPEeiyW7NaN4qWdw" name="getUnits" method="_OLMDMFJPEeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_OJ0xQ1JPEeiyW7NaN4qWdw" type="_OAa9oVJPEeiyW7NaN4qWdw" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OJ0xRFJPEeiyW7NaN4qWdw" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ2mcFJPEeiyW7NaN4qWdw" base_Element="_OJ0xRVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJ3NgFJPEeiyW7NaN4qWdw" genericsValue="Entry" base_Element="_OJ2mcVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ30kFJPEeiyW7NaN4qWdw" base_Element="_OJ2mcVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OJ4boFJPEeiyW7NaN4qWdw" base_Element="_OJ30kVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ5Cs1JPEeiyW7NaN4qWdw" base_Element="_OJ5CsFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ5pw1JPEeiyW7NaN4qWdw" base_Element="_OJ5pwFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJ634FJPEeiyW7NaN4qWdw" genericsValue="Entry" base_Element="_OJ5pxFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJ7e8FJPEeiyW7NaN4qWdw" genericsValue="Entry" base_Element="_OJ634lJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OJ8GAFJPEeiyW7NaN4qWdw" genericsValue="BuildingType" base_Element="_OJ7e81JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ8tEVJPEeiyW7NaN4qWdw" base_Element="_OJ7e81JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ9UIFJPEeiyW7NaN4qWdw" base_Element="_OJ8tElJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ9UIlJPEeiyW7NaN4qWdw" base_Element="_OJ9UIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ97MVJPEeiyW7NaN4qWdw" base_Element="_OJ97MFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ-iQFJPEeiyW7NaN4qWdw" base_Element="_OJ97MlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ_JUVJPEeiyW7NaN4qWdw" base_Element="_OJ-iQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ_JVFJPEeiyW7NaN4qWdw" base_Element="_OJ_JUlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OJ_wYlJPEeiyW7NaN4qWdw" base_Element="_OJ_wYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKAXcFJPEeiyW7NaN4qWdw" base_Element="_OJ_wY1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKBlkFJPEeiyW7NaN4qWdw" base_Element="_OKA-hFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKCMoFJPEeiyW7NaN4qWdw" base_Element="_OKBlkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKCMolJPEeiyW7NaN4qWdw" base_Element="_OKCMoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKCzsFJPEeiyW7NaN4qWdw" base_Element="_OKCMo1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKCzslJPEeiyW7NaN4qWdw" base_Element="_OKCzsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKEB0lJPEeiyW7NaN4qWdw" base_Element="_OKEB0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OKF3AFJPEeiyW7NaN4qWdw" base_Element="_OKFP8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKHFIFJPEeiyW7NaN4qWdw" base_Element="_OKGeE1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_OKL9oFJPEeiyW7NaN4qWdw" genericsValue="ValuedAIObject" base_Element="_OKKvgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKMksFJPEeiyW7NaN4qWdw" base_Element="_OKL9pVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKMkslJPEeiyW7NaN4qWdw" base_Element="_OKMksVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKNy0lJPEeiyW7NaN4qWdw" base_Element="_OKNy0FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OKOZ4FJPEeiyW7NaN4qWdw" base_Element="_OKNy0FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OKOZ4VJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OKOZ4lJPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLmS8VJPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKPoAFJPEeiyW7NaN4qWdw" base_Element="_OKPA8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_OKPoAVJPEeiyW7NaN4qWdw" base_Element="_OKPA8FJPEeiyW7NaN4qWdw">
    <annotations xmi:id="_OKPoAlJPEeiyW7NaN4qWdw" name="SuppressWarnings">
      <annotationParameters xmi:id="_OKPoA1JPEeiyW7NaN4qWdw" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_OLm591JPEeiyW7NaN4qWdw" value="&quot;unused&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OKQPEFJPEeiyW7NaN4qWdw" base_Element="_OKPoBVJPEeiyW7NaN4qWdw"/>
  <uml:OpaqueBehavior xmi:id="_OKVHkFJPEeiyW7NaN4qWdw" name="getColony" specification="_OI5kMFJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OKVuoFJPEeiyW7NaN4qWdw" type="_OARzsVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return colony;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_OKVuoVJPEeiyW7NaN4qWdw" name="getExportGoods" specification="_OI6LRFJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OKVuolJPEeiyW7NaN4qWdw" type="_NQ4XEFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKVuo1JPEeiyW7NaN4qWdw" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>synchronized (exportGoods) {&#xD;
         // firePropertyChanges can hit exportGoods&#xD;
         return new ArrayList&lt;>(exportGoods);&#xD;
     }&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_OKVupFJPEeiyW7NaN4qWdw" name="getWishes" specification="_OI7ZYVJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OKVupVJPEeiyW7NaN4qWdw" type="_NWKfsFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKVuplJPEeiyW7NaN4qWdw" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return new ArrayList&lt;>(wishes);&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_OKWVsFJPEeiyW7NaN4qWdw" name="getTileImprovementPlans" specification="_OI8AclJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OKWVsVJPEeiyW7NaN4qWdw" type="_NVvB4FJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OKWVslJPEeiyW7NaN4qWdw" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return new ArrayList&lt;>(tileImprovementPlans);&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_OKhU0FJPEeiyW7NaN4qWdw" name="getNextId" specification="_OJEjUFJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OKhU0VJPEeiyW7NaN4qWdw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>String id = &quot;am&quot; + Integer.toString(nextId);&#xD;
     nextId++;&#xD;
     return id;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_OKqewFJPEeiyW7NaN4qWdw" name="getPlayer" specification="_OJI0xFJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OKqewVJPEeiyW7NaN4qWdw" type="_OAWFIVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return player;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_OKuwMFJPEeiyW7NaN4qWdw" name="getUnit" specification="_OJMfIFJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OKuwMVJPEeiyW7NaN4qWdw" type="_OAa9oVJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return this.unit;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_OK021FJPEeiyW7NaN4qWdw" name="isCollection" specification="_NTBFF1JPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OK021VJPEeiyW7NaN4qWdw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>return this == LOAD || this == PICKUP;&#xD;
     </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_OK8LkFJPEeiyW7NaN4qWdw" name="getProfileTypeFromSize" specification="_NUMw0FJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OK8LkVJPEeiyW7NaN4qWdw" name="size">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <ownedParameter xmi:id="_OK8LklJPEeiyW7NaN4qWdw" type="_NULisFJPEeiyW7NaN4qWdw" direction="return"/>
    <language>java</language>
    <body>return (size &lt;= 1) ? ProfileType.OUTPOST&#xD;
             : (size &lt;= 2) ? ProfileType.SMALL&#xD;
             : (size &lt;= 4) ? ProfileType.MEDIUM&#xD;
             : (size &lt;= 8) ? ProfileType.LARGE&#xD;
             : ProfileType.CAPITAL;&#xD;
     </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_OK_18lJPEeiyW7NaN4qWdw" name="getBadlyDefended" specification="_OJpLEFJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OK_181JPEeiyW7NaN4qWdw" type="_NQeHYFJPEeiyW7NaN4qWdw" isOrdered="true" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OK_19FJPEeiyW7NaN4qWdw" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return badlyDefended;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_OLMDMFJPEeiyW7NaN4qWdw" name="getUnits" specification="_OJ0xQlJPEeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_OLMDMVJPEeiyW7NaN4qWdw" type="_OAa9oVJPEeiyW7NaN4qWdw" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_OLMDMlJPEeiyW7NaN4qWdw" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>return units;&#xD;
 </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_OLflMlJPEeiyW7NaN4qWdw" base_Property="_OLflMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OLflM1JPEeiyW7NaN4qWdw" base_Element="_OLflMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_OLgMQFJPEeiyW7NaN4qWdw" base_Property="_OLflNFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OLgMQVJPEeiyW7NaN4qWdw" base_Element="_OLflNFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_OLgMQ1JPEeiyW7NaN4qWdw" base_Property="_OLgMQlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_OLgMRFJPEeiyW7NaN4qWdw" base_Element="_OLgMQlJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMGpMFJPEeiyW7NaN4qWdw" base_Element="_OMGCIFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMH3UFJPEeiyW7NaN4qWdw" base_Element="_OMHQQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMIeYFJPEeiyW7NaN4qWdw" base_Element="_OMH3UVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMJFcFJPEeiyW7NaN4qWdw" base_Element="_OMIeYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMJFc1JPEeiyW7NaN4qWdw" base_Element="_OMJFcVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMJsgFJPEeiyW7NaN4qWdw" base_Element="_OMJFdFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMKTkFJPEeiyW7NaN4qWdw" base_Element="_OMJsgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMK6oFJPEeiyW7NaN4qWdw" base_Element="_OMKTkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMK6o1JPEeiyW7NaN4qWdw" base_Element="_OMK6oVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMLhsFJPEeiyW7NaN4qWdw" base_Element="_OMK6pFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMMIwFJPEeiyW7NaN4qWdw" base_Element="_OMLhsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMMv0FJPEeiyW7NaN4qWdw" base_Element="_OMMIwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMMv01JPEeiyW7NaN4qWdw" base_Element="_OMMv0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMNW4FJPEeiyW7NaN4qWdw" base_Element="_OMMv1FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMN98FJPEeiyW7NaN4qWdw" base_Element="_OMNW4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMN981JPEeiyW7NaN4qWdw" base_Element="_OMN98VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMOlAlJPEeiyW7NaN4qWdw" base_Element="_OMOlAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMPMEFJPEeiyW7NaN4qWdw" base_Element="_OMOlA1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMPzIFJPEeiyW7NaN4qWdw" base_Element="_OMPMEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMPzI1JPEeiyW7NaN4qWdw" base_Element="_OMPzIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMQaMlJPEeiyW7NaN4qWdw" base_Element="_OMQaMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMRBQFJPEeiyW7NaN4qWdw" base_Element="_OMQaM1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMRBQ1JPEeiyW7NaN4qWdw" base_Element="_OMRBQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMRoUlJPEeiyW7NaN4qWdw" base_Element="_OMRoUFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMSPYFJPEeiyW7NaN4qWdw" base_Element="_OMRoU1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMSPY1JPEeiyW7NaN4qWdw" base_Element="_OMSPYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMS2clJPEeiyW7NaN4qWdw" base_Element="_OMS2cFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMTdgFJPEeiyW7NaN4qWdw" base_Element="_OMS2c1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMTdg1JPEeiyW7NaN4qWdw" base_Element="_OMTdgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMUEkFJPEeiyW7NaN4qWdw" base_Element="_OMTdhFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMUEk1JPEeiyW7NaN4qWdw" base_Element="_OMUEkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMUroFJPEeiyW7NaN4qWdw" base_Element="_OMUElFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMUro1JPEeiyW7NaN4qWdw" base_Element="_OMUroVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMVSsFJPEeiyW7NaN4qWdw" base_Element="_OMUrpFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMVSs1JPEeiyW7NaN4qWdw" base_Element="_OMVSsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMWg0FJPEeiyW7NaN4qWdw" base_Element="_OMV5wFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMXH4FJPEeiyW7NaN4qWdw" base_Element="_OMWg0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMXu8FJPEeiyW7NaN4qWdw" base_Element="_OMXH4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMXu81JPEeiyW7NaN4qWdw" base_Element="_OMXu8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMYWAFJPEeiyW7NaN4qWdw" base_Element="_OMXu9FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMY9ElJPEeiyW7NaN4qWdw" base_Element="_OMY9EFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMZkIFJPEeiyW7NaN4qWdw" base_Element="_OMY9E1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMZkI1JPEeiyW7NaN4qWdw" base_Element="_OMZkIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMaLMlJPEeiyW7NaN4qWdw" base_Element="_OMaLMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMayQFJPEeiyW7NaN4qWdw" base_Element="_OMaLM1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMayQ1JPEeiyW7NaN4qWdw" base_Element="_OMayQVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMbZUFJPEeiyW7NaN4qWdw" base_Element="_OMayRFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMcAYFJPEeiyW7NaN4qWdw" base_Element="_OMbZUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMcAY1JPEeiyW7NaN4qWdw" base_Element="_OMcAYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMcncFJPEeiyW7NaN4qWdw" base_Element="_OMcAZFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMcnc1JPEeiyW7NaN4qWdw" base_Element="_OMcncVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMdOglJPEeiyW7NaN4qWdw" base_Element="_OMdOgFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMd1kFJPEeiyW7NaN4qWdw" base_Element="_OMdOg1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMd1k1JPEeiyW7NaN4qWdw" base_Element="_OMd1kVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMecoFJPEeiyW7NaN4qWdw" base_Element="_OMd1lFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMfDsFJPEeiyW7NaN4qWdw" base_Element="_OMecoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMfDs1JPEeiyW7NaN4qWdw" base_Element="_OMfDsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMfqwFJPEeiyW7NaN4qWdw" base_Element="_OMfDtFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMgR0FJPEeiyW7NaN4qWdw" base_Element="_OMfqwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMg44lJPEeiyW7NaN4qWdw" base_Element="_OMg44FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMhf8FJPEeiyW7NaN4qWdw" base_Element="_OMg441JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMiHAFJPEeiyW7NaN4qWdw" base_Element="_OMhf8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMiHA1JPEeiyW7NaN4qWdw" base_Element="_OMiHAVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMlKUFJPEeiyW7NaN4qWdw" base_Element="_OMkjQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMlxYlJPEeiyW7NaN4qWdw" base_Element="_OMlxYFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMmYcFJPEeiyW7NaN4qWdw" base_Element="_OMlxY1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMm_gFJPEeiyW7NaN4qWdw" base_Element="_OMmYcVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMnmkFJPEeiyW7NaN4qWdw" base_Element="_OMm_gVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMoNoFJPEeiyW7NaN4qWdw" base_Element="_OMnmkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMo0sFJPEeiyW7NaN4qWdw" base_Element="_OMoNoVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMo0s1JPEeiyW7NaN4qWdw" base_Element="_OMo0sVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMpbwFJPEeiyW7NaN4qWdw" base_Element="_OMo0tFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMqC0FJPEeiyW7NaN4qWdw" base_Element="_OMpbwVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMqp4FJPEeiyW7NaN4qWdw" base_Element="_OMqC0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMrQ8FJPEeiyW7NaN4qWdw" base_Element="_OMqp4VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMrQ81JPEeiyW7NaN4qWdw" base_Element="_OMrQ8VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMr4AlJPEeiyW7NaN4qWdw" base_Element="_OMr4AFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMsfEFJPEeiyW7NaN4qWdw" base_Element="_OMr4A1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMwJcFJPEeiyW7NaN4qWdw" base_Element="_OMsfEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMwJc1JPEeiyW7NaN4qWdw" base_Element="_OMwJcVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMxXkFJPEeiyW7NaN4qWdw" base_Element="_OMwJdFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMxXk1JPEeiyW7NaN4qWdw" base_Element="_OMxXkVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMxXllJPEeiyW7NaN4qWdw" base_Element="_OMxXlFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMylsFJPEeiyW7NaN4qWdw" base_Element="_OMxXl1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMyls1JPEeiyW7NaN4qWdw" base_Element="_OMylsVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMzz0FJPEeiyW7NaN4qWdw" base_Element="_OMyltFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OMzz01JPEeiyW7NaN4qWdw" base_Element="_OMzz0VJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM1B8lJPEeiyW7NaN4qWdw" base_Element="_OM1B8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM2QEFJPEeiyW7NaN4qWdw" base_Element="_OM1pAFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM2QE1JPEeiyW7NaN4qWdw" base_Element="_OM2QEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM3eMlJPEeiyW7NaN4qWdw" base_Element="_OM3eMFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM3eNVJPEeiyW7NaN4qWdw" base_Element="_OM3eM1JPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM5TYFJPEeiyW7NaN4qWdw" base_Element="_OM4FQFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM5TY1JPEeiyW7NaN4qWdw" base_Element="_OM5TYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM6hgFJPEeiyW7NaN4qWdw" base_Element="_OM5TZFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM7voFJPEeiyW7NaN4qWdw" base_Element="_OM7IkFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM8WsFJPEeiyW7NaN4qWdw" base_Element="_OM7voVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM9k0FJPEeiyW7NaN4qWdw" base_Element="_OM89wFJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM-L4lJPEeiyW7NaN4qWdw" base_Element="_OM-L4FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_OM_aAFJPEeiyW7NaN4qWdw" base_Element="_OM-y8FJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ONABEFJPEeiyW7NaN4qWdw" base_Element="_OM_aAVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ONAoIFJPEeiyW7NaN4qWdw" base_Element="_ONABEVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ONBPMFJPEeiyW7NaN4qWdw" base_Element="_ONAoIVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ONB2QFJPEeiyW7NaN4qWdw" base_Element="_ONBPMVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ONCdUFJPEeiyW7NaN4qWdw" base_Element="_ONB2QVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ONDEYFJPEeiyW7NaN4qWdw" base_Element="_ONCdUVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ONDrcFJPEeiyW7NaN4qWdw" base_Element="_ONDEYVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ONESgFJPEeiyW7NaN4qWdw" base_Element="_ONDrcVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ONE5kFJPEeiyW7NaN4qWdw" base_Element="_ONESgVJPEeiyW7NaN4qWdw"/>
  <UMLLabProfile:Patch xmi:id="_U8rlIFJPEeiyW7NaN4qWdw" base_Element="_NUKUkFJPEeiyW7NaN4qWdw" patchText="@@ -4100,32 +4100,35 @@&#xA;         %7D%0D%0A    %7D&#xA;+;%0D%0A&#xA;     private Prof&#xA;@@ -5199,16 +5199,19 @@&#xA; %7D%0D%0A    %7D&#xA;+;%0D%0A&#xA;     priv&#xA;" conflicting="false"/>
</xmi:XMI>
