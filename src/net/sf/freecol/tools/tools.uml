<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_t9aMwFJREeiyW7NaN4qWdw" name="tools">
    <eAnnotations xmi:id="_uKUnYFJREeiyW7NaN4qWdw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_uKUnYVJREeiyW7NaN4qWdw" source="codegen">
        <details xmi:id="_uKVOcFJREeiyW7NaN4qWdw" key="codegenDirectory" value="/COSC442-FinalProject/src"/>
        <details xmi:id="_urxuoFJREeiyW7NaN4qWdw" key="AssociatedSourceCode" value="/COSC442-FinalProject/src/net/sf/freecol/tools/ColonizationMapReader.java;1445690180/1;/COSC442-FinalProject/src/net/sf/freecol/tools/SaveGameValidator.java;2714168367/1;/COSC442-FinalProject/src/net/sf/freecol/tools/DesktopEntry.java;1445949510/1;/COSC442-FinalProject/src/net/sf/freecol/tools/FSGConverter.java;1124480571/1;/COSC442-FinalProject/src/net/sf/freecol/tools/FlagTest.java;1435326685/1;/COSC442-FinalProject/src/net/sf/freecol/tools/ForestMaker.java;3205608798/1;/COSC442-FinalProject/src/net/sf/freecol/tools/GenerateDocumentation.java;394286681/1;/COSC442-FinalProject/src/net/sf/freecol/tools/InstallerTranslations.java;2328876098/1;/COSC442-FinalProject/src/net/sf/freecol/tools/MapConverter.java;2937458325/1;/COSC442-FinalProject/src/net/sf/freecol/tools/MergeTranslations.java;2072544086/1;/COSC442-FinalProject/src/net/sf/freecol/tools/RiverMaker.java;4089204310/1;/COSC442-FinalProject/src/net/sf/freecol/tools/ColonizationSaveGameReader.java;3444433324/1;/COSC442-FinalProject/src/net/sf/freecol/tools/TranslationReport.java;3377585208/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_ub11MFJREeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_ub11MVJREeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_ub11MlJREeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_ub11M1JREeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_ub11NFJREeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_ub2cQFJREeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_ub2cQVJREeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_ub2cQlJREeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_ub2cQ1JREeiyW7NaN4qWdw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_ubblgFJREeiyW7NaN4qWdw" name="net">
      <packagedElement xmi:type="uml:Package" xmi:id="_ubblgVJREeiyW7NaN4qWdw" name="sf">
        <packagedElement xmi:type="uml:Package" xmi:id="_ubblglJREeiyW7NaN4qWdw" name="freecol">
          <packagedElement xmi:type="uml:Package" xmi:id="_ubczoFJREeiyW7NaN4qWdw" name="tools">
            <packagedElement xmi:type="uml:Class" xmi:id="_ucU9YFJREeiyW7NaN4qWdw" name="ColonizationMapReader">
              <ownedComment xmi:id="_ukW4AFJREeiyW7NaN4qWdw">
                <body>Just pass the name of a Colonization map file (with extension &quot;.MP&quot;).&#xD;
 *&#xD;
The map file starts with a six-byte header. Byte zero encodes the&#xD;
map width, byte two encodes the map height. The function of the&#xD;
other bytes is unknown, their values, however, are fixed. The&#xD;
header is followed by three &quot;layers&quot;, each the size of the map. The&#xD;
first &quot;layer&quot; encodes the terrain type. The function of the other&#xD;
layers is unknown. They are filled with zero bytes.&#xD;
 *&#xD;
It seems that the least significant three bits encode the basic&#xD;
terrain type, the next two bits encode the forest overlay and&#xD;
the special tile types ice, ocean and sea lanes. The three most&#xD;
significant bits encode combinations of the hill, mountain and&#xD;
river overlays.&#xD;
 *&#xD;
bits 0-2: tile type&#xD;
bit 3 (8): forest&#xD;
bit 4 (16): forest&#xD;
bits 3+4 (24): special, values larger than 26 are not defined&#xD;
 *&#xD;
bits 5-7: overlays&#xD;
0: nothing&#xD;
1: hill&#xD;
2: minor river&#xD;
3: hill + minor river (extremely rare)&#xD;
4: nothing&#xD;
5: mountain&#xD;
6: major river&#xD;
7: mountain + major river (never seen)&#xD;
 *&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ujG60FJREeiyW7NaN4qWdw" name="WIDTH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujG60VJREeiyW7NaN4qWdw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujHh4FJREeiyW7NaN4qWdw" name="HEIGHT" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujHh4VJREeiyW7NaN4qWdw" value="2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujHh4lJREeiyW7NaN4qWdw" name="tiletypes" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ujHh41JREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujHh5VJREeiyW7NaN4qWdw" value="{&#xD;&#xA;        't', // 0x00 tundra&#xD;&#xA;        'd', // 0x01 desert&#xD;&#xA;        'p', // 0x02 plains&#xD;&#xA;        'r', // 0x03 prairie&#xD;&#xA;        'g', // 0x04 grassland&#xD;&#xA;        'v', // 0x05 savannah&#xD;&#xA;        'm', // 0x06 marsh&#xD;&#xA;        's', // 0x07 swamp&#xD;&#xA;&#xD;&#xA;        'B', // 0x08 boreal (tundra with forest)&#xD;&#xA;        'S', // 0x09 scrub (desert with forest)&#xD;&#xA;        'M', // 0x0a mixed (plains with forest)&#xD;&#xA;        'L', // 0x0b broadleaf (prairie with forest)&#xD;&#xA;        'C', // 0x0c conifer (grassland with forest)&#xD;&#xA;        'T', // 0x0d tropical (savannah with forest)&#xD;&#xA;        'W', // 0x0e wetland (marsh with forest)&#xD;&#xA;        'R', // 0x0f rain (swamp with forest)&#xD;&#xA;&#xD;&#xA;        'B', // 0x10 boreal (tundra with forest)&#xD;&#xA;        'S', // 0x11 scrub (desert with forest)&#xD;&#xA;        'M', // 0x12 mixed (plains with forest)&#xD;&#xA;        'L', // 0x13 broadleaf (prairie with forest)&#xD;&#xA;        'C', // 0x14 conifer (grassland with forest)&#xD;&#xA;        'T', // 0x15 tropical (savannah with forest)&#xD;&#xA;        'W', // 0x16 wetland (marsh with forest)&#xD;&#xA;        'R', // 0x17 rain (swamp with forest)&#xD;&#xA;&#xD;&#xA;        '_', // 0x18 ice&#xD;&#xA;        '.', // 0x19 ocean&#xD;&#xA;        ':', // 0x1a sea lane&#xD;&#xA;        '?', // undefined&#xD;&#xA;        '?', // undefined&#xD;&#xA;        '?', // undefined&#xD;&#xA;        '?', // undefined&#xD;&#xA;        '?', // undefined&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujII8FJREeiyW7NaN4qWdw" name="header" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ujII8VJREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujII81JREeiyW7NaN4qWdw" value="{&#xD;&#xA;        58, 0, 72, 0, 4, 0&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujII9FJREeiyW7NaN4qWdw" name="layer1" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ujII9VJREeiyW7NaN4qWdw" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukOVIFJREeiyW7NaN4qWdw" name="main" specification="_ucU9YVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukOVIVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukOVIlJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (&quot;--palette&quot;.equals(args[0])) {&#xD;
         RandomAccessFile writer = new RandomAccessFile(args[1], &quot;rw&quot;);&#xD;
         byte width = 58;&#xD;
         byte height = 72;&#xD;
         int size = width * height * 3 + header.length;&#xD;
         layer1 = new byte[size];&#xD;
         for (int i = 0; i &lt; header.length; i++) {&#xD;
             layer1[i] = header[i];&#xD;
         }&#xD;
         Arrays.fill(layer1, header.length, header.length + width * height, (byte) 25); // fill with ocean&#xD;
         int ROWS = 32;&#xD;
         int COLUMNS = 8;&#xD;
         int offset = header.length + width + 1;&#xD;
         for (int y = 0; y &lt; ROWS; y++) {&#xD;
             for (int x = 0; x &lt; COLUMNS; x++) {&#xD;
                 byte value = (byte) (COLUMNS * y + x);&#xD;
                 if ((value &amp; 24) == 24 &amp;&amp; x > 2) {&#xD;
                     // undefined&#xD;
                     value = 26;&#xD;
                 }&#xD;
                 layer1[offset + x] = value;&#xD;
             }&#xD;
             offset += width;&#xD;
         }&#xD;
         writer.write(layer1);&#xD;
     } else {&#xD;
         RandomAccessFile reader = new RandomAccessFile(args[0], &quot;r&quot;);&#xD;
         reader.read(header);&#xD;
&#xD;
         System.out.println(String.format(&quot;Map width:  %02d&quot;, (int) header[WIDTH]));&#xD;
         System.out.println(String.format(&quot;Map height: %02d&quot;, (int) header[HEIGHT]));&#xD;
&#xD;
         int size = header[WIDTH] * header[HEIGHT];&#xD;
         layer1 = new byte[size];&#xD;
         reader.read(layer1);&#xD;
&#xD;
         int index = 0;&#xD;
         for (int y = 0; y &lt; header[HEIGHT]; y++) {&#xD;
             for (int x = 0; x &lt; header[WIDTH]; x++) {&#xD;
                 int decimal = layer1[index] &amp; 0xff;&#xD;
                 char terrain = tiletypes[decimal &amp; 31];&#xD;
                 int overlay = decimal >> 5;&#xD;
                 switch(overlay) {&#xD;
                 case 1: terrain = '^'; // hill&#xD;
                     break;&#xD;
                 case 2: terrain = '~'; // minor river&#xD;
                     break;&#xD;
                 case 3: terrain = 'x'; // hill + minor river&#xD;
                     break;&#xD;
                 case 5: terrain = '*'; // mountain&#xD;
                     break;&#xD;
                 case 6: terrain = '='; // major river&#xD;
                     break;&#xD;
                 case 7: terrain = 'X'; // mountain + major river&#xD;
                     break;&#xD;
                 default:&#xD;
                     break;&#xD;
                 };&#xD;
                 System.out.print(terrain);&#xD;
                 index++;&#xD;
             }&#xD;
             System.out.println(&quot;\n&quot;);&#xD;
         }&#xD;
         System.out.println(&quot;\n&quot;);&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ucU9YVJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukOVIFJREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucU9YlJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucVkcFJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ucVkcVJREeiyW7NaN4qWdw" name="SaveGameValidator">
              <ownedComment xmi:id="_ukW4AVJREeiyW7NaN4qWdw">
                <body>Validate a saved game.</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukO8MFJREeiyW7NaN4qWdw" name="main" specification="_ucWLgFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukO8MVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukO8MlJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>SchemaFactory factory = SchemaFactory.newInstance(&quot;http://www.w3.org/2001/XMLSchema&quot;);&#xD;
     File schemaLocation = new File(&quot;schema/data/data-savedGame.xsd&quot;);&#xD;
     Schema schema = factory.newSchema(schemaLocation);&#xD;
     Validator saveGameValidator = schema.newValidator();&#xD;
&#xD;
     List&lt;File> allFiles = new ArrayList&lt;>();&#xD;
     FileFilter ff = FreeColSavegameFile.getFileFilter();&#xD;
     for (String name : args) {&#xD;
         File file = new File(name);&#xD;
         if (file.exists()) {&#xD;
             if (file.isDirectory()) {&#xD;
                 for (File fsg : file.listFiles(ff)) {&#xD;
                     allFiles.add(fsg);&#xD;
                 }&#xD;
             } else if (ff.accept(file)) {&#xD;
                 allFiles.add(file);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
&#xD;
     for (File file : allFiles) {&#xD;
         System.out.println(&quot;Processing file &quot; + file.getPath());&#xD;
         try {&#xD;
             FreeColSavegameFile mapFile = new FreeColSavegameFile(file);&#xD;
             saveGameValidator.validate(new StreamSource(mapFile.getSavegameInputStream()));&#xD;
             System.out.println(&quot;Successfully validated &quot; + file.getName());&#xD;
         } catch (SAXParseException e) {&#xD;
             System.out.println(e.getMessage() &#xD;
                                + &quot; at line=&quot; + e.getLineNumber() &#xD;
                                + &quot; column=&quot; + e.getColumnNumber());&#xD;
         } catch (IOException | SAXException e) {&#xD;
             System.out.println(&quot;Failed to read &quot; + file.getName());&#xD;
         }&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ucWLgFJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukO8MFJREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucWLgVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucWLglJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ucWykFJREeiyW7NaN4qWdw" name="DesktopEntry">
              <ownedComment xmi:id="_ukW4AlJREeiyW7NaN4qWdw">
                <body>Generate a desktop entry file.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ujIwAVJREeiyW7NaN4qWdw" name="SOURCE_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" type="_uhyFIFJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukbwgFJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujIwAlJREeiyW7NaN4qWdw" value="new File(&quot;data&quot;, &quot;strings&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujIwA1JREeiyW7NaN4qWdw" name="GENERIC_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujIwBFJREeiyW7NaN4qWdw" value="&quot;freecol.desktopEntry.GenericName&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujIwBVJREeiyW7NaN4qWdw" name="COMMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujJXEFJREeiyW7NaN4qWdw" value="&quot;freecol.desktopEntry.Comment&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukO8M1JREeiyW7NaN4qWdw" name="main" specification="_ucWykVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukO8NFJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukO8NVJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>try (FileWriter result = new FileWriter(new File(args[0]))) {&#xD;
         result.append(&quot;[Desktop Entry]\n&quot;);&#xD;
         result.append(&quot;Version=1.0\n&quot;);&#xD;
         result.append(&quot;Type=Application\n&quot;);&#xD;
         result.append(&quot;Name=FreeCol\n&quot;);&#xD;
         result.append(&quot;Exec=freecol\n&quot;);&#xD;
         result.append(&quot;Icon=data/freecol.png\n&quot;);&#xD;
         result.append(&quot;Categories=Game;StrategyGame;\n&quot;);&#xD;
         &#xD;
         String[] sourceFiles = SOURCE_DIRECTORY.list(new FilenameFilter() {&#xD;
             @Override&#xD;
             public boolean accept(File dir, String name) {&#xD;
                 return name.startsWith(&quot;FreeColMessages&quot;)&#xD;
                         &amp;&amp; name.endsWith(&quot;.properties&quot;);&#xD;
             }&#xD;
         });&#xD;
         &#xD;
         for (String name : sourceFiles) {&#xD;
             &#xD;
             System.out.println(&quot;Processing source file: &quot; + name);&#xD;
             &#xD;
             String languageCode = null;&#xD;
             if (name.startsWith(&quot;FreeColMessages_&quot;)) {&#xD;
                 int index = name.indexOf('.', 16);&#xD;
                 languageCode = name.substring(16, index)&#xD;
                         .replace('-', '@');&#xD;
             }&#xD;
             &#xD;
             boolean foundGenericName = false;&#xD;
             boolean foundComment = false;&#xD;
             File sourceFile = new File(SOURCE_DIRECTORY, name);&#xD;
             FileReader fileReader = new FileReader(sourceFile);&#xD;
             BufferedReader bufferedReader = new BufferedReader(fileReader);&#xD;
             String line = bufferedReader.readLine();&#xD;
             while (line != null) {&#xD;
                 int index = line.indexOf('=');&#xD;
                 if (index >= 0) {&#xD;
                     String key = line.substring(0, index).trim();&#xD;
                     if (null != key) switch (key) {&#xD;
                         case GENERIC_NAME:&#xD;
                             result.append(&quot;GenericName&quot;);&#xD;
                             foundGenericName = true;&#xD;
                             break;&#xD;
                         case COMMENT:&#xD;
                             result.append(&quot;Comment&quot;);&#xD;
                             foundComment = true;&#xD;
                             break;&#xD;
                         default:&#xD;
                             line = bufferedReader.readLine();&#xD;
                             continue;&#xD;
                     }&#xD;
                     if (languageCode != null) {&#xD;
                         result.append(&quot;[&quot; + languageCode + &quot;]&quot;);&#xD;
                     }&#xD;
                     result.append(&quot;=&quot;);&#xD;
                     result.append(line.substring(index + 1).trim());&#xD;
                     result.append(&quot;\n&quot;);&#xD;
                     if (foundGenericName &amp;&amp; foundComment) {&#xD;
                         break;&#xD;
                     }&#xD;
                 }&#xD;
                 line = bufferedReader.readLine();&#xD;
             }&#xD;
         }&#xD;
         &#xD;
         result.flush();&#xD;
     }&#xD;
&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ucWykVJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukO8M1JREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucXZoFJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucYAsFJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ucYAsVJREeiyW7NaN4qWdw" name="FSGConverter">
              <ownedComment xmi:id="_ukW4A1JREeiyW7NaN4qWdw">
                <body>Class for converting FreeCol Savegames (fsg-files).&#xD;
&#xD;
@see #getFSGConverter()</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ujJXEVJREeiyW7NaN4qWdw" name="singleton" visibility="private" isStatic="true" type="_ucYAsVJREeiyW7NaN4qWdw" association="_ukcXkVJREeiyW7NaN4qWdw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukO8NlJREeiyW7NaN4qWdw" name="FSGConverter" specification="_ucYAslJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukO8N1JREeiyW7NaN4qWdw" type="_ucYAsVJREeiyW7NaN4qWdw" direction="return"/>
                <language>java</language>
                <body>// Nothing to initialize;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukO8OFJREeiyW7NaN4qWdw" name="getFSGConverter" specification="_ucYnwFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukO8OVJREeiyW7NaN4qWdw" type="_ucYAsVJREeiyW7NaN4qWdw" direction="return"/>
                <language>java</language>
                <body>// Using lazy initialization:       &#xD;
     if (singleton == null) {&#xD;
         singleton = new FSGConverter();&#xD;
     }&#xD;
     return singleton;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukO8OlJREeiyW7NaN4qWdw" name="convertToXML" specification="_uivucFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukO8O1JREeiyW7NaN4qWdw" name="in" type="_uhyFIFJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_ukO8PFJREeiyW7NaN4qWdw" name="out" type="_uhyFIFJREeiyW7NaN4qWdw"/>
                <language>java</language>
                <body>try (&#xD;
         FileInputStream fis = new FileInputStream(in);&#xD;
         FileOutputStream fos = new FileOutputStream(out);&#xD;
     ) {&#xD;
         convertToXML(fis, fos);&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukPjQFJREeiyW7NaN4qWdw" name="convertToXML" specification="_uiwVgFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukPjQVJREeiyW7NaN4qWdw" name="in" type="_uh72IVJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_ukPjQlJREeiyW7NaN4qWdw" name="out" type="_uh72I1JREeiyW7NaN4qWdw"/>
                <language>java</language>
                <body>try {&#xD;
         in = new BufferedInputStream(in);&#xD;
         out = new BufferedOutputStream(out);&#xD;
         &#xD;
         // Automatically detect savegame compression:&#xD;
         in.mark(10);&#xD;
         byte[] buf = new byte[5];&#xD;
         in.read(buf, 0, 5);&#xD;
         in.reset();&#xD;
         if (!&quot;&lt;?xml&quot;.equals(new String(buf, &quot;UTF-8&quot;))) {&#xD;
             in =  new BufferedInputStream(new GZIPInputStream(in));&#xD;
         }&#xD;
&#xD;
         // Support for XML comments has not been added:&#xD;
         int indent = 0;&#xD;
         int i;      &#xD;
         while ((i = in.read()) != -1) {&#xD;
             char c = (char) i;&#xD;
             if (c == '&lt;') {&#xD;
                 i = in.read();&#xD;
                 char b = (char) i;&#xD;
                 if (b == '/') {&#xD;
                     indent -= 4;&#xD;
                 }&#xD;
                 for (int h=0; h&lt;indent; h++) {&#xD;
                     out.write(' ');&#xD;
                 }&#xD;
                 out.write(c);&#xD;
                 if (b != '\n' &amp;&amp; b != '\r') {&#xD;
                     out.write(b);&#xD;
                 }&#xD;
                 if (b != '/' &amp;&amp; b != '?') {&#xD;
                     indent += 4;&#xD;
                 }&#xD;
             } else if (c == '/') {&#xD;
                 out.write(c);&#xD;
                 i = in.read();&#xD;
                 c = (char) i;&#xD;
                 if (c == '>') {&#xD;
                     indent -= 4;&#xD;
                     out.write(c);&#xD;
                     out.write('\n');&#xD;
                 }&#xD;
             } else if (c == '>') {&#xD;
                 out.write(c);&#xD;
                 out.write('\n');&#xD;
             } else if (c != '\n' &amp;&amp; c != '\r') {&#xD;
                 out.write(c);&#xD;
             }           &#xD;
         }&#xD;
&#xD;
     } finally {&#xD;
         in.close();&#xD;
         out.close();&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukPjQ1JREeiyW7NaN4qWdw" name="printUsage" specification="_ucYnwVJREeiyW7NaN4qWdw">
                <language>java</language>
                <body>System.out.println(&quot;A program for converting FreeCol Savegames.&quot;);&#xD;
     System.out.println();&#xD;
     System.out.println(&quot;Usage: java -cp FreeCol.jar net.sf.freecol.tools.FSGConverter [-][-]output:xml FSG_FILE [OUTPUT_FILE]&quot;);&#xD;
     System.out.println();&#xD;
     System.out.println(&quot;output:xml \tThe output will be indented XML.&quot;);&#xD;
     System.out.println();&#xD;
     System.out.println(&quot;The output file will get the same name as FSG_FILE if not specified (with \&quot;.fsg\&quot; replaced with \&quot;.xml\&quot;).&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukPjRFJREeiyW7NaN4qWdw" name="main" specification="_ucZO0FJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukPjRVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukPjRlJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (args.length >= 2 &amp;&amp; args[0].endsWith(&quot;output:xml&quot;)) {&#xD;
         File in = new File(args[1]);&#xD;
         if (!in.exists()) {&#xD;
             printUsage();&#xD;
             System.exit(1);&#xD;
         }&#xD;
         File out;&#xD;
         if (args.length >= 3) {&#xD;
             out = new File(args[2]);&#xD;
         } else {&#xD;
             String filename = in.getName()&#xD;
                 .replaceAll(&quot;.&quot; + FreeCol.FREECOL_SAVE_EXTENSION, &quot;.xml&quot;);&#xD;
             if (filename.equals(in.getName())) {&#xD;
                 filename += &quot;.xml&quot;;&#xD;
             }&#xD;
             out = new File(filename);&#xD;
         }&#xD;
         try {&#xD;
             FSGConverter fsgc = FSGConverter.getFSGConverter();&#xD;
             fsgc.convertToXML(in, out);&#xD;
         } catch (IOException e) {&#xD;
             System.out.println(&quot;An error occured while converting the file.&quot;);&#xD;
             e.printStackTrace();&#xD;
             System.exit(1);&#xD;
         }&#xD;
     } else {&#xD;
         printUsage();&#xD;
         System.exit(1);&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ucYAslJREeiyW7NaN4qWdw" name="FSGConverter" visibility="private" method="_ukO8NlJREeiyW7NaN4qWdw">
                <eAnnotations xmi:id="_ucYAs1JREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ucYAtFJREeiyW7NaN4qWdw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_ukW4BFJREeiyW7NaN4qWdw">
                  <body>Creates an instance of &lt;code>FSGConverter&lt;/code></body>
                </ownedComment>
                <ownedParameter xmi:id="_ucYAtVJREeiyW7NaN4qWdw" type="_ucYAsVJREeiyW7NaN4qWdw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ucYnwFJREeiyW7NaN4qWdw" name="getFSGConverter" isStatic="true" method="_ukO8OFJREeiyW7NaN4qWdw">
                <ownedComment xmi:id="_ukXfEFJREeiyW7NaN4qWdw">
                  <body>Gets an object for converting FreeCol Savegames.&#xD;
     * @return The singleton object.</body>
                </ownedComment>
                <ownedParameter xmi:id="_uh9EQ1JREeiyW7NaN4qWdw" type="_ucYAsVJREeiyW7NaN4qWdw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ucYnwVJREeiyW7NaN4qWdw" name="printUsage" visibility="private" isStatic="true" method="_ukPjQ1JREeiyW7NaN4qWdw">
                <ownedComment xmi:id="_ukXfE1JREeiyW7NaN4qWdw">
                  <body>Prints the usage of this program to standard out.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ucZO0FJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukPjRFJREeiyW7NaN4qWdw">
                <ownedComment xmi:id="_ukXfFFJREeiyW7NaN4qWdw">
                  <body>An entry point for converting FreeCol Savegames.&#xD;
     * &#xD;
     * @param args The command-line parameters.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ucZO0VJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucZO0lJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_uivucFJREeiyW7NaN4qWdw" name="convertToXML" method="_ukO8OlJREeiyW7NaN4qWdw" raisedException="_uh7PEFJREeiyW7NaN4qWdw _uhysMVJREeiyW7NaN4qWdw">
                <ownedComment xmi:id="_ukXfEVJREeiyW7NaN4qWdw">
                  <body>Converts the given input file to an uncompressed and&#xD;
     * indented XML-file.&#xD;
     * &#xD;
     * &lt;br>&lt;br>&#xD;
     * &#xD;
     * Savegame compression is automatically detected, so using&#xD;
     * this method on an uncompressed savegame creates an&#xD;
     * indented version of that savegame.&#xD;
     * &#xD;
     * @param in The input file.&#xD;
     * @param out The output file. This file will be overwritten&#xD;
     *      if it already exists.&#xD;
     * @throws FileNotFoundException if the given input file could not be found.&#xD;
     * @throws IOException if thrown while reading or writing the files.</body>
                </ownedComment>
                <ownedParameter xmi:id="_uivucVJREeiyW7NaN4qWdw" name="in" type="_uhyFIFJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_uivuclJREeiyW7NaN4qWdw" name="out" type="_uhyFIFJREeiyW7NaN4qWdw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_uiwVgFJREeiyW7NaN4qWdw" name="convertToXML" method="_ukPjQFJREeiyW7NaN4qWdw" raisedException="_uhysMVJREeiyW7NaN4qWdw">
                <ownedComment xmi:id="_ukXfElJREeiyW7NaN4qWdw">
                  <body>Converts the data from the given input stream to an &#xD;
     * uncompressed and indented text to the output stream.&#xD;
     * Both streams are closed by this method.&#xD;
     * &#xD;
     * &lt;br>&lt;br>&#xD;
     * &#xD;
     * Savegame compression is automatically detected, so using&#xD;
     * this method on an uncompressed savegame creates an&#xD;
     * indented version of that savegame.&#xD;
     * &#xD;
     * @param in The input stream.&#xD;
     * @param out The output stream.&#xD;
     * &#xD;
     * @throws IOException if thrown while reading or writing the streams.</body>
                </ownedComment>
                <ownedParameter xmi:id="_uiwVgVJREeiyW7NaN4qWdw" name="in" type="_uh72IVJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_uiwVglJREeiyW7NaN4qWdw" name="out" type="_uh72I1JREeiyW7NaN4qWdw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ucac8FJREeiyW7NaN4qWdw" name="FlagTest">
              <generalization xmi:id="_uiz_5lJREeiyW7NaN4qWdw" general="_uiCj0VJREeiyW7NaN4qWdw"/>
              <ownedAttribute xmi:id="_ujJ-IFJREeiyW7NaN4qWdw" name="FLAGS" visibility="private" isLeaf="true" type="_uiFAEFJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukc-oVJREeiyW7NaN4qWdw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ujJ-IVJREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujJ-I1JREeiyW7NaN4qWdw" value="{&#xD;&#xA;        ConfirmDeclarationDialog.ENGLISH_FLAG,&#xD;&#xA;        ConfirmDeclarationDialog.SPANISH_FLAG,&#xD;&#xA;        ConfirmDeclarationDialog.FRENCH_FLAG,&#xD;&#xA;        ConfirmDeclarationDialog.DUTCH_FLAG,&#xD;&#xA;        ConfirmDeclarationDialog.PORTUGUESE_FLAG,&#xD;&#xA;        ConfirmDeclarationDialog.SWEDISH_FLAG,&#xD;&#xA;        ConfirmDeclarationDialog.DANISH_FLAG,&#xD;&#xA;        ConfirmDeclarationDialog.RUSSIAN_FLAG,&#xD;&#xA;        null // custom&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujKlMFJREeiyW7NaN4qWdw" name="FLAG_NAMES" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ujKlMVJREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujKlM1JREeiyW7NaN4qWdw" value="{&#xD;&#xA;        &quot;England&quot;, &quot;Spain&quot;, &quot;France&quot;, &quot;Netherlands&quot;,&#xD;&#xA;        &quot;Portugal&quot;, &quot;Sweden&quot;, &quot;Denmark&quot;, &quot;Russia&quot;, &quot;Custom&quot;&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujKlNFJREeiyW7NaN4qWdw" name="flag" visibility="private" type="_uiFAEFJREeiyW7NaN4qWdw" association="_ukc-pFJREeiyW7NaN4qWdw"/>
              <ownedAttribute xmi:id="_ujLMQVJREeiyW7NaN4qWdw" name="flags" visibility="private" isLeaf="true" type="_uiB8w1JREeiyW7NaN4qWdw" isReadOnly="true" association="_ukdlsVJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujLMQ1JREeiyW7NaN4qWdw" value="new JComboBox&lt;>(FLAG_NAMES)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujLzUVJREeiyW7NaN4qWdw" name="decoration" visibility="private" isLeaf="true" type="_uiB8w1JREeiyW7NaN4qWdw" isReadOnly="true" association="_ukeMwVJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujMaYVJREeiyW7NaN4qWdw" value="new JComboBox&lt;>(Decoration.values())"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujNBcFJREeiyW7NaN4qWdw" name="background" visibility="private" isLeaf="true" type="_uiB8w1JREeiyW7NaN4qWdw" isReadOnly="true" association="_ukez0lJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujnRIVJREeiyW7NaN4qWdw" value="new JComboBox&lt;>(Background.values())"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujnRI1JREeiyW7NaN4qWdw" name="union" visibility="private" isLeaf="true" type="_uiB8w1JREeiyW7NaN4qWdw" isReadOnly="true" association="_ukfa4VJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujn4MVJREeiyW7NaN4qWdw" value="new JComboBox&lt;>(UnionPosition.values())"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujofQVJREeiyW7NaN4qWdw" name="unionShape" visibility="private" isLeaf="true" type="_uiB8w1JREeiyW7NaN4qWdw" isReadOnly="true" association="_ukgB8VJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujpGUFJREeiyW7NaN4qWdw" value="new JComboBox&lt;>(UnionShape.values())"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujpGUlJREeiyW7NaN4qWdw" name="stars" visibility="private" isLeaf="true" type="_uiB8w1JREeiyW7NaN4qWdw" isReadOnly="true" association="_ukgpAFJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujptYVJREeiyW7NaN4qWdw" value="new JComboBox&lt;>(getNumbers(50))"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujptY1JREeiyW7NaN4qWdw" name="stripes" visibility="private" isLeaf="true" type="_uiB8w1JREeiyW7NaN4qWdw" isReadOnly="true" association="_ukgpA1JREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujqUcVJREeiyW7NaN4qWdw" value="new JComboBox&lt;>(getNumbers(13))"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujq7gVJREeiyW7NaN4qWdw" name="unionColor" visibility="private" isLeaf="true" type="_uiEZAVJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukhQEVJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujq7glJREeiyW7NaN4qWdw" value="new ColorButton(Color.BLUE)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujq7hFJREeiyW7NaN4qWdw" name="starColor" visibility="private" isLeaf="true" type="_uiEZAVJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukh3IVJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujswsFJREeiyW7NaN4qWdw" value="new ColorButton(Color.WHITE)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujtXwVJREeiyW7NaN4qWdw" name="decorationColor" visibility="private" isLeaf="true" type="_uiEZAVJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukh3JFJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujtXwlJREeiyW7NaN4qWdw" value="new ColorButton(Color.WHITE)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujt-0VJREeiyW7NaN4qWdw" name="backgroundColors" visibility="private" isLeaf="true" type="_uiEZAVJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukieMlJREeiyW7NaN4qWdw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ujul4FJREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujvM8VJREeiyW7NaN4qWdw" value="{&#xD;&#xA;        new ColorButton(null), new ColorButton(null), new ColorButton(null),&#xD;&#xA;        new ColorButton(null), new ColorButton(null), new ColorButton(null)&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujv0AVJREeiyW7NaN4qWdw" name="customComponents" visibility="private" isLeaf="true" type="_uh-5cVJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukjFQVJREeiyW7NaN4qWdw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ujv0AlJREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujwbEVJREeiyW7NaN4qWdw" value="{&#xD;&#xA;        background, decoration, union, unionShape,&#xD;&#xA;        stripes, unionColor, starColor, decorationColor,&#xD;&#xA;        backgroundColors[0], backgroundColors[1],&#xD;&#xA;        backgroundColors[2], backgroundColors[3],&#xD;&#xA;        backgroundColors[4], backgroundColors[5]&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujwbE1JREeiyW7NaN4qWdw" name="label" visibility="package" isLeaf="true" type="_uiDK4VJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukjFRFJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujxCIFJREeiyW7NaN4qWdw" value="new JLabel()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_uiw8kFJREeiyW7NaN4qWdw" client="_ucac8FJREeiyW7NaN4qWdw" supplier="_uiAHkVJREeiyW7NaN4qWdw" contract="_uiAHkVJREeiyW7NaN4qWdw"/>
              <interfaceRealization xmi:id="_uiw8kVJREeiyW7NaN4qWdw" client="_ucac8FJREeiyW7NaN4qWdw" supplier="_uiAuoVJREeiyW7NaN4qWdw" contract="_uiAuoVJREeiyW7NaN4qWdw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukPjR1JREeiyW7NaN4qWdw" name="FlagTest" specification="_ucbrEFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukPjSFJREeiyW7NaN4qWdw" type="_ucac8FJREeiyW7NaN4qWdw" direction="return"/>
                <language>java</language>
                <body>super(&quot;FlagTest&quot;);&#xD;
&#xD;
     setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
     setLayout(new MigLayout(&quot;wrap 2&quot;, &quot;[][fill]&quot;));&#xD;
     flags.addItemListener(this);&#xD;
     add(new JLabel(&quot;predefined flags&quot;));&#xD;
     add(flags);&#xD;
&#xD;
     background.addItemListener(this);&#xD;
     add(new JLabel(&quot;background&quot;));&#xD;
     add(background);&#xD;
&#xD;
     decoration.addItemListener(this);&#xD;
     add(new JLabel(&quot;decoration&quot;));&#xD;
     add(decoration);&#xD;
&#xD;
     union.addItemListener(this);&#xD;
     add(new JLabel(&quot;union position&quot;));&#xD;
     add(union);&#xD;
&#xD;
     unionShape.addItemListener(this);&#xD;
     add(new JLabel(&quot;union shape&quot;));&#xD;
     add(unionShape);&#xD;
&#xD;
     stars.setSelectedIndex(12);&#xD;
     stars.addItemListener(this);&#xD;
     add(new JLabel(&quot;number of stars&quot;));&#xD;
     add(stars);&#xD;
&#xD;
     stripes.setSelectedIndex(12);&#xD;
     stripes.addItemListener(this);&#xD;
     add(new JLabel(&quot;number of stripes&quot;));&#xD;
     add(stripes);&#xD;
&#xD;
     unionColor.addActionListener(this);&#xD;
     add(new JLabel(&quot;union color&quot;));&#xD;
     add(unionColor);&#xD;
&#xD;
     decorationColor.addActionListener(this);&#xD;
     add(new JLabel(&quot;decoration color&quot;));&#xD;
     add(decorationColor);&#xD;
&#xD;
     starColor.addActionListener(this);&#xD;
     add(new JLabel(&quot;star color&quot;));&#xD;
     add(starColor);&#xD;
&#xD;
     add(new JLabel(&quot;background colors&quot;));&#xD;
     for (int index = 0; index &lt; backgroundColors.length; index++) {&#xD;
         ColorButton button = backgroundColors[index];&#xD;
         button.addActionListener(this);&#xD;
         if (index == 0) {&#xD;
             add(button, &quot;split 3&quot;);&#xD;
         } else if (index % 3 == 0) {&#xD;
             add(button, &quot;skip, split 3&quot;);&#xD;
         } else {&#xD;
             add(button);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     add(label, &quot;width 200, height 100&quot;);&#xD;
&#xD;
     itemStateChanged(null);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukPjSVJREeiyW7NaN4qWdw" name="itemStateChanged" specification="_uiyxwFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukPjSlJREeiyW7NaN4qWdw" name="e" type="_uiAHk1JREeiyW7NaN4qWdw"/>
                <language>java</language>
                <body>Background newBackground = (Background) background.getSelectedItem();&#xD;
     Decoration newDecoration = (Decoration) decoration.getSelectedItem();&#xD;
     UnionPosition newPosition = (UnionPosition) union.getSelectedItem();&#xD;
     UnionShape newShape = (UnionShape) unionShape.getSelectedItem();&#xD;
     Flag newFlag = FLAGS[flags.getSelectedIndex()];&#xD;
     if (e == null || e.getSource() == flags) {&#xD;
         if (newFlag == null) {&#xD;
             // custom&#xD;
             enable(customComponents, true);&#xD;
         } else {&#xD;
             enable(customComponents, false);&#xD;
             flag = newFlag;&#xD;
             unionColor.setColor(flag.getUnionColor());&#xD;
             starColor.setColor(flag.getStarColor());&#xD;
             decorationColor.setColor(flag.getDecorationColor());&#xD;
             List&lt;Color> colors = flag.getBackgroundColors();&#xD;
             for (int index = 0; index &lt; backgroundColors.length; index++) {&#xD;
                 Color color = (index &lt; colors.size())&#xD;
                     ? colors.get(index) : null;&#xD;
                 backgroundColors[index].setColor(color);&#xD;
             }&#xD;
         }&#xD;
     } else {&#xD;
         if (newFlag == null) {&#xD;
             if (e.getSource() == decoration) {&#xD;
                 UnionPosition oldPosition = (UnionPosition) union.getSelectedItem();&#xD;
                 union.removeAllItems();&#xD;
                 for (UnionPosition position : newDecoration.unionPositions) {&#xD;
                     union.addItem(position);&#xD;
                 }&#xD;
                 union.setSelectedItem(oldPosition);&#xD;
             }&#xD;
             flag = new Flag(newBackground, newDecoration, newPosition, newShape);&#xD;
             flag.setStripes(stripes.getSelectedIndex() + 1);&#xD;
             setColors();&#xD;
         }&#xD;
         flag.setStars(stars.getSelectedIndex() + 1);&#xD;
     }&#xD;
     stripes.setEnabled(newBackground == Background.PALES&#xD;
                        || newBackground == Background.FESSES);&#xD;
&#xD;
     label.setIcon(new ImageIcon(flag.getImage()));&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukPjS1JREeiyW7NaN4qWdw" name="actionPerformed" specification="_uizY0lJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukPjTFJREeiyW7NaN4qWdw" name="ae" type="_uh_ggVJREeiyW7NaN4qWdw"/>
                <language>java</language>
                <body>ColorButton button = (ColorButton)ae.getSource();&#xD;
     Color color = JColorChooser&#xD;
         .showDialog(FlagTest.this,&#xD;
                     label.getText(),&#xD;
                     button.getBackground());&#xD;
     button.setColor(color);&#xD;
     setColors();&#xD;
     label.setIcon(new ImageIcon(flag.getImage()));&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukPjTVJREeiyW7NaN4qWdw" name="setColors" specification="_uccSIFJREeiyW7NaN4qWdw">
                <language>java</language>
                <body>flag.setUnionColor(unionColor.getColor());&#xD;
     flag.setStarColor(starColor.getColor());&#xD;
     flag.setDecorationColor(decorationColor.getColor());&#xD;
     List&lt;Color> colors = new ArrayList&lt;>();&#xD;
     for (ColorButton button : backgroundColors) {&#xD;
         Color color = button.getColor();&#xD;
         if (color != null) {&#xD;
             colors.add(color);&#xD;
         }&#xD;
         flag.setBackgroundColors(colors);&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukQKUFJREeiyW7NaN4qWdw" name="getNumbers" specification="_uccSIVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukQKUVJREeiyW7NaN4qWdw" name="count">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukQKUlJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukQKU1JREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>String[] result = new String[count];&#xD;
     for (int index = 0; index &lt; count; index++) {&#xD;
         result[index] = Integer.toString(index + 1);&#xD;
     }&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukQKVFJREeiyW7NaN4qWdw" name="enable" specification="_uiz_4lJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukQKVVJREeiyW7NaN4qWdw" name="components" type="_uh-5cVJREeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukQKVlJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukQKV1JREeiyW7NaN4qWdw" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>for (Component component : components) {&#xD;
         component.setEnabled(value);&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukQKWFJREeiyW7NaN4qWdw" name="main" specification="_ucc5MVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukQKWVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukQKWlJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>FlagTest frame = new FlagTest();&#xD;
&#xD;
     // display the window&#xD;
     frame.pack();&#xD;
     frame.setVisible(true);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ucbrEFJREeiyW7NaN4qWdw" name="FlagTest" method="_ukPjR1JREeiyW7NaN4qWdw">
                <eAnnotations xmi:id="_ucbrEVJREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ucbrElJREeiyW7NaN4qWdw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ucbrE1JREeiyW7NaN4qWdw" type="_ucac8FJREeiyW7NaN4qWdw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_uccSIFJREeiyW7NaN4qWdw" name="setColors" visibility="private" method="_ukPjTVJREeiyW7NaN4qWdw"/>
              <ownedOperation xmi:id="_uccSIVJREeiyW7NaN4qWdw" name="getNumbers" isLeaf="true" method="_ukQKUFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uccSIlJREeiyW7NaN4qWdw" name="count">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_uccSI1JREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uccSJFJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ucc5MVJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukQKWFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucc5MlJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucc5M1JREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_uiyxwFJREeiyW7NaN4qWdw" name="itemStateChanged" method="_ukPjSVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uiyxwVJREeiyW7NaN4qWdw" name="e" type="_uiAHk1JREeiyW7NaN4qWdw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_uizY0lJREeiyW7NaN4qWdw" name="actionPerformed" method="_ukPjS1JREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uizY01JREeiyW7NaN4qWdw" name="ae" type="_uh_ggVJREeiyW7NaN4qWdw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_uiz_4lJREeiyW7NaN4qWdw" name="enable" visibility="private" method="_ukQKVFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uiz_41JREeiyW7NaN4qWdw" name="components" type="_uh-5cVJREeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uiz_5VJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_uiz_5FJREeiyW7NaN4qWdw" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_uchKoFJREeiyW7NaN4qWdw" name="ForestMaker">
              <ownedComment xmi:id="_ukXfFVJREeiyW7NaN4qWdw">
                <body>Generate forest tiles.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ujyQQFJREeiyW7NaN4qWdw" name="DESTDIR" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujyQQVJREeiyW7NaN4qWdw" value="&quot;data/rules/classic/resources/images/forest&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujy3UFJREeiyW7NaN4qWdw" name="BASE_WIDTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujy3UVJREeiyW7NaN4qWdw" value="128"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujy3UlJREeiyW7NaN4qWdw" name="BASE_HEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujy3U1JREeiyW7NaN4qWdw" value="64"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujy3VFJREeiyW7NaN4qWdw" name="MARGIN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujzeYFJREeiyW7NaN4qWdw" value="20"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujzeYVJREeiyW7NaN4qWdw" name="TREES" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujzeYlJREeiyW7NaN4qWdw" value="60"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujzeY1JREeiyW7NaN4qWdw" name="RIVER_HEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ujzeZFJREeiyW7NaN4qWdw" value="8"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ujzeZVJREeiyW7NaN4qWdw" name="RIVER_WIDTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj0FcFJREeiyW7NaN4qWdw" value="2 * RIVER_HEIGHT"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj0FcVJREeiyW7NaN4qWdw" name="HALF_WIDTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj0FclJREeiyW7NaN4qWdw" value="BASE_WIDTH / 2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj0sgFJREeiyW7NaN4qWdw" name="HALF_HEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj0sgVJREeiyW7NaN4qWdw" value="BASE_HEIGHT / 2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj0sglJREeiyW7NaN4qWdw" name="LIMIT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uj0sg1JREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj1TkVJREeiyW7NaN4qWdw" value="{&#xD;&#xA;        HALF_WIDTH, HALF_WIDTH, -HALF_WIDTH, -HALF_WIDTH&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj1TklJREeiyW7NaN4qWdw" name="SLOPE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uj1Tk1JREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj16oVJREeiyW7NaN4qWdw" value="{&#xD;&#xA;        -0.5, 0.5, -0.5, 0.5&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj2hsFJREeiyW7NaN4qWdw" name="POWERS_OF_TWO" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uj2hsVJREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj2hs1JREeiyW7NaN4qWdw" value="{ 1, 2, 4, 8 }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj3IwFJREeiyW7NaN4qWdw" name="drawBorders" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj3IwVJREeiyW7NaN4qWdw" value="true"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj3IwlJREeiyW7NaN4qWdw" name="drawTrees" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj3Iw1JREeiyW7NaN4qWdw" value="true"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukRYcFJREeiyW7NaN4qWdw" name="main" specification="_uckN8FJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukRYcVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukRYclJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (args.length == 0) {&#xD;
         System.out.println(&quot;Usage: ForestMaker &lt;directory>...&quot;);&#xD;
         System.out.println(&quot;Directory name should match a directory in&quot;);&#xD;
         System.out.println(&quot;   &quot; + DESTDIR);&#xD;
         System.exit(1);&#xD;
     }&#xD;
&#xD;
     String riverName = &quot;data/rules/classic/resources/images/terrain/&quot;&#xD;
         + &quot;ocean/center0.png&quot;;&#xD;
     BufferedImage river = ImageIO.read(new File(riverName));&#xD;
     // grab a rectangle completely filled with water&#xD;
     river = river.getSubimage(44, 22, 40, 20);&#xD;
     Rectangle2D rectangle = new Rectangle(0, 0, river.getWidth(), river.getHeight());&#xD;
     TexturePaint texture = new TexturePaint(river, rectangle);&#xD;
&#xD;
     for (String arg : args) {&#xD;
         File sourceDirectory = new File(arg);&#xD;
         if (!sourceDirectory.exists()) {&#xD;
             System.out.println(&quot;Source directory &quot; + arg + &quot; does not exist.&quot;);&#xD;
             continue;&#xD;
         }&#xD;
         String baseName = sourceDirectory.getName();&#xD;
         File destinationDirectory = new File(DESTDIR, baseName);&#xD;
         if (!destinationDirectory.exists()) {&#xD;
             System.out.println(&quot;Destination directory &quot; + destinationDirectory.getPath()&#xD;
                                + &quot; does not exist.&quot;);&#xD;
             continue;&#xD;
         }&#xD;
         File[] imageFiles = sourceDirectory.listFiles();&#xD;
         if (imageFiles == null) {&#xD;
             System.out.println(&quot;No images found in source directory &quot; + arg + &quot;.&quot;);&#xD;
             continue;&#xD;
         } else {&#xD;
             System.out.println(imageFiles.length + &quot; images found in source directory &quot;&#xD;
                                + arg + &quot;.&quot;);&#xD;
         }&#xD;
         List&lt;BufferedImage> images = new ArrayList&lt;>(imageFiles.length);&#xD;
         int maximumHeight = 0;&#xD;
         for (File imageFile : imageFiles) {&#xD;
             if (imageFile.isFile() &amp;&amp; imageFile.canRead()) {&#xD;
                 try {&#xD;
                     BufferedImage image = ImageIO.read(imageFile);&#xD;
                     images.add(image);&#xD;
                     if (image.getHeight() > maximumHeight) {&#xD;
                         maximumHeight = image.getHeight();&#xD;
                     }&#xD;
                 } catch(IOException e) {&#xD;
                     System.out.println(&quot;Unable to load image &quot; + imageFile.getName() + &quot;:\n&quot;);&#xD;
                     e.printStackTrace();&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         int numberOfImages = images.size();&#xD;
         Random random = new Random(1492);&#xD;
&#xD;
         /**&#xD;
          * In order to ensure that trees do not occlude the rivers&#xD;
          * on other tiles, we must move the rivers to the top NE&#xD;
          * and NW edges of the tile.&#xD;
          *&#xD;
          * If we consider two adjoining edges of the diamond to be&#xD;
          * vectors, any point within the diamond can be generated&#xD;
          * as the addition of these two vectors, suitably scaled.&#xD;
          * For the sake of convenience, we choose the two edges&#xD;
          * that will be shortened if a river is present, i.e. the&#xD;
          * SE and SW edges, and move the origin to their&#xD;
          * intersection.&#xD;
          */&#xD;
         for (int index = 0; index &lt; 16; index++) {&#xD;
             BufferedImage base = new BufferedImage(BASE_WIDTH, BASE_HEIGHT + MARGIN,&#xD;
                                                    BufferedImage.TYPE_INT_ARGB);&#xD;
             Graphics2D g = base.createGraphics();&#xD;
             g.translate(HALF_WIDTH, BASE_HEIGHT + MARGIN);&#xD;
&#xD;
             g.setPaint(texture);&#xD;
             String counter = &quot;&quot;;&#xD;
             boolean[] branches = new boolean[4];&#xD;
             if (index > 0) {&#xD;
                 for (int i = 0; i &lt; POWERS_OF_TWO.length; i++) {&#xD;
                     if ((index &amp; POWERS_OF_TWO[i]) == POWERS_OF_TWO[i]) {&#xD;
                         branches[i] = true;&#xD;
                         counter += &quot;1&quot;;&#xD;
                     } else {&#xD;
                         counter += &quot;0&quot;;&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             // the two vectors that describe the diamond&#xD;
             Point right = new Point(HALF_WIDTH, -HALF_HEIGHT);&#xD;
             Point left = new Point(-HALF_WIDTH, -HALF_HEIGHT);&#xD;
             int treeCount = 0;&#xD;
             // make space for rivers&#xD;
             if (branches[0] || branches[2]) {&#xD;
                 left.translate(RIVER_WIDTH, RIVER_HEIGHT);&#xD;
                 treeCount++;&#xD;
             }&#xD;
             if (branches[1] || branches[3]) {&#xD;
                 right.translate(-RIVER_WIDTH, RIVER_HEIGHT);&#xD;
                 treeCount++;&#xD;
             }&#xD;
&#xD;
             if (drawBorders) {&#xD;
                 int dx = right.x + left.x;&#xD;
                 int dy = right.y + left.y;&#xD;
                 g.setColor(Color.RED);&#xD;
                 g.drawLine(0, 0, right.x, right.y);&#xD;
                 g.drawLine(right.x, right.y, dx, dy);&#xD;
                 g.drawLine(dx, dy, left.x, left.y);&#xD;
                 g.drawLine(left.x, left.y, 0, 0);&#xD;
             }&#xD;
&#xD;
             if (drawTrees) {&#xD;
                 List&lt;ImageLocation> trees = new ArrayList&lt;>(TREES);&#xD;
                 // reduce number of trees if river branches are present&#xD;
                 int numberOfTrees = (6 - treeCount) * TREES / 6;&#xD;
&#xD;
                 int count = 0;&#xD;
                 while (count &lt; numberOfTrees) {&#xD;
                     BufferedImage image = images.get(random.nextInt(numberOfImages));&#xD;
                     int width = image.getWidth();&#xD;
                     int height = image.getHeight();&#xD;
                     int halfWidth = width / 2;&#xD;
                     /**&#xD;
                      * Find a point for the root of the tree, that&#xD;
                      * is the center of the lower edge of the tree&#xD;
                      * image.&#xD;
                      */&#xD;
                     float a = random.nextFloat();&#xD;
                     float b = random.nextFloat();&#xD;
                     int x = (int) (a * right.x + b * left.x);&#xD;
                     int y = (int) (a * right.y + b * left.y);&#xD;
                     /**&#xD;
                      * Additional constraint: the left and right&#xD;
                      * edges of the tree image must be within the&#xD;
                      * tile bounds (this will fail if the tree&#xD;
                      * image is too large).&#xD;
                      */&#xD;
                     if (x - halfWidth &lt; - HALF_WIDTH) {&#xD;
                         x = -HALF_WIDTH + halfWidth; // left&#xD;
                     }&#xD;
                     if (x + halfWidth > HALF_WIDTH) {&#xD;
                         x = HALF_WIDTH - halfWidth; // right&#xD;
                     }&#xD;
                     /**&#xD;
                      * Additional constraint: the top edge of the&#xD;
                      * tree image must be within the tile bounds.&#xD;
                      */&#xD;
                     int crown = Math.max(y - height, -(BASE_HEIGHT + MARGIN));&#xD;
                     /**&#xD;
                      * Additional constraint: if there is a river&#xD;
                      * along the top right edge of the diamond,&#xD;
                      * the top right corner of the tree most not be&#xD;
                      * &quot;above&quot; the line defined by that edge.&#xD;
                      */&#xD;
                     if ((branches[1] || branches[3])&#xD;
                         &amp;&amp; crown &lt; -BASE_HEIGHT + RIVER_HEIGHT + (x + halfWidth) / 2) {&#xD;
                         continue;&#xD;
                     }&#xD;
                     /**&#xD;
                      * Additional constraint: if there is a river&#xD;
                      * along the top left edge of the diamond,&#xD;
                      * the top left corner of the tree most not be&#xD;
                      * &quot;above&quot; the line defined by that edge.&#xD;
                      */&#xD;
                     if ((branches[0] || branches[2])&#xD;
                         &amp;&amp; crown &lt; -BASE_HEIGHT + RIVER_HEIGHT - (x - halfWidth) / 2) {&#xD;
                         continue;&#xD;
                     }&#xD;
                     //System.out.println(&quot;x=&quot; + x + &quot;, y=&quot; + (y - height));&#xD;
                     trees.add(new ImageLocation(image, x - halfWidth, crown));&#xD;
                     count++;&#xD;
                 }&#xD;
&#xD;
                 // sort by y, x coordinate&#xD;
                 Collections.sort(trees);&#xD;
                 for (ImageLocation imageLocation : trees) {&#xD;
                     g.drawImage(imageLocation.image, imageLocation.x, imageLocation.y, null);&#xD;
                 }&#xD;
&#xD;
             }&#xD;
             g.dispose();&#xD;
&#xD;
             ImageIO.write(base, &quot;png&quot;, new File(destinationDirectory,&#xD;
                                                 sourceDirectory.getName() + counter + &quot;.png&quot;));&#xD;
&#xD;
         }&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukRYc1JREeiyW7NaN4qWdw" name="getY" specification="_uck1AFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukRYdFJREeiyW7NaN4qWdw" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukRYdVJREeiyW7NaN4qWdw" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukRYdlJREeiyW7NaN4qWdw" name="slope">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukRYd1JREeiyW7NaN4qWdw" name="newX">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukRYeFJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return (int) (y + slope * (newX - x));&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukRYeVJREeiyW7NaN4qWdw" name="getRandomY" specification="_ui5fcFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukRYelJREeiyW7NaN4qWdw" name="random" type="_uiOxEVJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_ukRYe1JREeiyW7NaN4qWdw" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukRYfFJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int height = HALF_HEIGHT - Math.abs(x) / 2;&#xD;
     return (height == 0) ? 0 : random.nextInt(2 * height) - height;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_uckN8FJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukRYcFJREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uckN8VJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uckN8lJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_uck1AFJREeiyW7NaN4qWdw" name="getY" visibility="private" isStatic="true" method="_ukRYc1JREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uck1AVJREeiyW7NaN4qWdw" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_uck1AlJREeiyW7NaN4qWdw" name="y">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_uck1A1JREeiyW7NaN4qWdw" name="slope">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_uck1BFJREeiyW7NaN4qWdw" name="newX">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_uck1BVJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ui5fcFJREeiyW7NaN4qWdw" name="getRandomY" visibility="private" isStatic="true" method="_ukRYeVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ui5fcVJREeiyW7NaN4qWdw" name="random" type="_uiOxEVJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_ui5fclJREeiyW7NaN4qWdw" name="x">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ui5fc1JREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_uchxsFJREeiyW7NaN4qWdw" name="ImageLocation" visibility="private">
                <eAnnotations xmi:id="_uchxsVJREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_uchxslJREeiyW7NaN4qWdw" key="static"/>
                </eAnnotations>
                <ownedAttribute xmi:id="_uj3IxFJREeiyW7NaN4qWdw" name="image" visibility="package" isLeaf="true" type="_uiM74FJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukjsUVJREeiyW7NaN4qWdw"/>
                <ownedAttribute xmi:id="_uj3v0VJREeiyW7NaN4qWdw" name="x" visibility="package" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_uj4W4FJREeiyW7NaN4qWdw" name="y" visibility="package" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <interfaceRealization xmi:id="_ui2cIVJREeiyW7NaN4qWdw" client="_uchxsFJREeiyW7NaN4qWdw" supplier="_ui11EFJREeiyW7NaN4qWdw" contract="_ui11EFJREeiyW7NaN4qWdw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukQxYFJREeiyW7NaN4qWdw" name="ImageLocation" specification="_ui3qQFJREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_ukQxYVJREeiyW7NaN4qWdw" name="image" type="_uiM74FJREeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ukQxYlJREeiyW7NaN4qWdw" name="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ukQxY1JREeiyW7NaN4qWdw" name="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ukQxZFJREeiyW7NaN4qWdw" type="_uchxsFJREeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this.image = image;&#xD;
         this.x = x;&#xD;
         this.y = y;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukQxZVJREeiyW7NaN4qWdw" name="compareTo" specification="_uiP_MFJREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_ukQxZlJREeiyW7NaN4qWdw" name="other" type="_uchxsFJREeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ukQxZ1JREeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int dy = other.y - this.y;&#xD;
         return (dy == 0) ? other.x - this.x : dy;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukQxaFJREeiyW7NaN4qWdw" name="equals" specification="_ui4RUVJREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_ukQxaVJREeiyW7NaN4qWdw" name="other" type="_ui3qR1JREeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ukQxalJREeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>if (other instanceof ImageLocation) {&#xD;
             return this.compareTo((ImageLocation)other) == 0;&#xD;
         }&#xD;
         return super.equals(other);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukQxa1JREeiyW7NaN4qWdw" name="hashCode" specification="_uciYwFJREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_ukQxbFJREeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>int hash = super.hashCode();&#xD;
         hash = 37 * hash + x;&#xD;
         hash = 37 * hash + y;&#xD;
         return 37 * hash + image.hashCode();&#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_uciYwFJREeiyW7NaN4qWdw" name="hashCode" method="_ukQxa1JREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_uciYwVJREeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_uiP_MFJREeiyW7NaN4qWdw" name="compareTo" method="_ukQxZVJREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_uiQmQFJREeiyW7NaN4qWdw" name="other" type="_uchxsFJREeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_uiQmQVJREeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ui3qQFJREeiyW7NaN4qWdw" name="ImageLocation" method="_ukQxYFJREeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_ui3qRFJREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ui3qRVJREeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ui3qQVJREeiyW7NaN4qWdw" name="image" type="_uiM74FJREeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ui3qQlJREeiyW7NaN4qWdw" name="x">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ui3qQ1JREeiyW7NaN4qWdw" name="y">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ui3qRlJREeiyW7NaN4qWdw" type="_uchxsFJREeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ui4RUVJREeiyW7NaN4qWdw" name="equals" method="_ukQxaFJREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_ui4RUlJREeiyW7NaN4qWdw" name="other" type="_ui3qR1JREeiyW7NaN4qWdw"/>
                  <ownedParameter xmi:id="_ui44YFJREeiyW7NaN4qWdw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ucnRQFJREeiyW7NaN4qWdw" name="GenerateDocumentation">
              <ownedComment xmi:id="_ukXfFlJREeiyW7NaN4qWdw">
                <body>Generate some documentation.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_uj5lAFJREeiyW7NaN4qWdw" name="STRING_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" type="_uhyFIFJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukkTYVJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj5lAVJREeiyW7NaN4qWdw" value="new File(&quot;data/strings&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj5lAlJREeiyW7NaN4qWdw" name="RULE_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" type="_uhyFIFJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukk6cVJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj5lA1JREeiyW7NaN4qWdw" value="new File(&quot;data/rules/classic&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj6MEFJREeiyW7NaN4qWdw" name="XSL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj6MEVJREeiyW7NaN4qWdw" value="&quot;specification.xsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj6MElJREeiyW7NaN4qWdw" name="DESTINATION_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" type="_uhyFIFJREeiyW7NaN4qWdw" isReadOnly="true" association="_uklhgFJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj6ME1JREeiyW7NaN4qWdw" value="new File(&quot;doc&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj6MFFJREeiyW7NaN4qWdw" name="resources" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <qualifier xmi:id="_uj6zIFJREeiyW7NaN4qWdw">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </qualifier>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj6MFVJREeiyW7NaN4qWdw" value="new HashMap&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj6zIVJREeiyW7NaN4qWdw" name="sourceFiles" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uj6zIlJREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj6zJFJREeiyW7NaN4qWdw" value="STRING_DIRECTORY.list(new FilenameFilter() {&#xD;&#xA;            @Override&#xD;&#xA;            public boolean accept(File dir, String name) {&#xD;&#xA;                return name.matches(&quot;FreeColMessages.*\\.properties&quot;);&#xD;&#xA;            }&#xD;&#xA;        })"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukR_gFJREeiyW7NaN4qWdw" name="main" specification="_ucn4UFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukR_gVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukR_glJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>System.setProperty(&quot;jaxp.debug&quot;, &quot;1&quot;);&#xD;
     if (args.length > 0) {&#xD;
         Arrays.sort(args);&#xD;
     }&#xD;
     readResources();&#xD;
     //generateTMX();&#xD;
     generateDocumentation(args);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukR_g1JREeiyW7NaN4qWdw" name="readResources" specification="_ucn4U1JREeiyW7NaN4qWdw">
                <language>java</language>
                <body>System.out.println(&quot;Processing source file: resources.properties&quot;);&#xD;
     File sourceFile = new File(RULE_DIRECTORY, &quot;resources.properties&quot;);&#xD;
     try (&#xD;
         FileReader fileReader = new FileReader(sourceFile);&#xD;
         BufferedReader bufferedReader = new BufferedReader(fileReader);&#xD;
     ) {&#xD;
         String line = bufferedReader.readLine();&#xD;
         while (line != null) {&#xD;
             int index = line.indexOf('=');&#xD;
             if (index >= 0) {&#xD;
                 String key = line.substring(0, index).trim();&#xD;
                 String value = line.substring(index + 1).trim();&#xD;
                 resources.put(key, value);&#xD;
             }&#xD;
             line = bufferedReader.readLine();&#xD;
         }&#xD;
     } catch (Exception e) {&#xD;
         e.printStackTrace();&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukR_hFJREeiyW7NaN4qWdw" name="generateTMX" specification="_ucofYFJREeiyW7NaN4qWdw">
                <language>java</language>
                <body>Map&lt;String, Map&lt;String, String>> translations = new HashMap&lt;>();&#xD;
&#xD;
     for (String name : sourceFiles) {&#xD;
&#xD;
         System.out.println(&quot;Processing source file: &quot; + name);&#xD;
&#xD;
         String languageCode = name.substring(15, name.length() - 11);&#xD;
         if (languageCode.isEmpty()) {&#xD;
             languageCode = &quot;en&quot;;&#xD;
         } else if ('_' == languageCode.charAt(0)) {&#xD;
             languageCode = languageCode.substring(1);&#xD;
         } else {&#xD;
             // don't know what to do&#xD;
             continue;&#xD;
         }&#xD;
&#xD;
         File sourceFile = new File(STRING_DIRECTORY, name);&#xD;
&#xD;
         try (&#xD;
             FileReader fileReader = new FileReader(sourceFile);&#xD;
             BufferedReader bufferedReader = new BufferedReader(fileReader);&#xD;
         ) {&#xD;
             String line = bufferedReader.readLine();&#xD;
             while (line != null) {&#xD;
                 int index = line.indexOf('=');&#xD;
                 if (index >= 0) {&#xD;
                     String key = line.substring(0, index).trim();&#xD;
                     String value = line.substring(index + 1).trim()&#xD;
                         .replace(&quot;&lt;&quot;, &quot;&amp;lt;&quot;).replace(&quot;>&quot;, &quot;&amp;gt;&quot;).replace(&quot;&amp;&quot;, &quot;&amp;amp;&quot;);&#xD;
                     Map&lt;String, String> map = translations.get(key);&#xD;
                     if (map == null) {&#xD;
                         map = new HashMap&lt;>();&#xD;
                         translations.put(key, map);&#xD;
                     }&#xD;
                     map.put(languageCode, value);&#xD;
                 }&#xD;
                 line = bufferedReader.readLine();&#xD;
             }&#xD;
         } catch (Exception e) {&#xD;
             // forget it&#xD;
         }&#xD;
     }&#xD;
     File destinationFile = new File(DESTINATION_DIRECTORY, &quot;freecol.tmx&quot;);&#xD;
     try (&#xD;
         FileWriter out = new FileWriter(destinationFile);&#xD;
     ) {&#xD;
         out.write(&quot;&lt;?xml version =\&quot;1.0\&quot; encoding=\&quot;UTF-8\&quot;?>\n&quot;);&#xD;
         out.write(&quot;&lt;tmx version=\&quot;1.4b\&quot;>\n&quot;);&#xD;
         out.write(&quot;&lt;body>\n&quot;);&#xD;
         for (Map.Entry&lt;String, Map&lt;String, String>> tu : translations.entrySet()) {&#xD;
             out.write(&quot;  &lt;tu tuid=\&quot;&quot; + tu.getKey() + &quot;\&quot;>\n&quot;);&#xD;
             for (Map.Entry&lt;String, String> tuv : tu.getValue().entrySet()) {&#xD;
                 out.write(&quot;    &lt;tuv xml:lang=\&quot;&quot; + tuv.getKey() + &quot;\&quot;>\n&quot;);&#xD;
                 out.write(&quot;      &lt;seg>&quot; + tuv.getValue() + &quot;&lt;/seg>\n&quot;);&#xD;
                 out.write(&quot;    &lt;/tuv>\n&quot;);&#xD;
             }&#xD;
             out.write(&quot;  &lt;/tu>\n&quot;);&#xD;
         }&#xD;
         out.write(&quot;&lt;/body>\n&quot;);&#xD;
         out.write(&quot;&lt;/tmx>\n&quot;);&#xD;
         out.flush();&#xD;
     } catch (Exception e) {&#xD;
         e.printStackTrace();&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukR_hVJREeiyW7NaN4qWdw" name="generateDocumentation" specification="_ucofYVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukR_hlJREeiyW7NaN4qWdw" name="languages">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukR_h1JREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>for (String name : sourceFiles) {&#xD;
&#xD;
         String languageCode = name.substring(15, name.length() - 11);&#xD;
         if (languageCode.isEmpty()) {&#xD;
             languageCode = &quot;en&quot;;&#xD;
         } else if ('_' == languageCode.charAt(0)) {&#xD;
             languageCode = languageCode.substring(1);&#xD;
             if (&quot;qqq&quot;.equals(languageCode)) {&#xD;
                 System.out.println(&quot;Skipping language code 'qqq'&quot;);&#xD;
                 continue;&#xD;
             }&#xD;
         } else {&#xD;
             // don't know what to do&#xD;
             continue;&#xD;
         }&#xD;
         if (languages.length == 0&#xD;
             || Arrays.binarySearch(languages, languageCode) >= 0) {&#xD;
             System.out.println(&quot;Generating localized documentation for language code &quot;&#xD;
                                + languageCode);&#xD;
&#xD;
             Messages.loadMessageBundle(Messages.getLocale(languageCode));&#xD;
             try {&#xD;
                 TransformerFactory factory = TransformerFactory.newInstance();&#xD;
                 Source xsl = new StreamSource(new File(&quot;doc&quot;, XSL));&#xD;
                 Transformer stylesheet;&#xD;
                 try {&#xD;
                     stylesheet = factory.newTransformer(xsl);&#xD;
                 } catch (TransformerException tce) {&#xD;
                     System.err.println(&quot;Problem with &quot; + XSL + &quot; at: &quot;&#xD;
                         + tce.getLocationAsString());&#xD;
                     tce.printStackTrace();&#xD;
                     continue;&#xD;
                 }&#xD;
&#xD;
                 Source request  = new StreamSource(new File(RULE_DIRECTORY, &quot;specification.xml&quot;));&#xD;
                 Result response = new StreamResult(new File(DESTINATION_DIRECTORY, &quot;specification_&quot;&#xD;
                                                             + languageCode + &quot;.html&quot;));&#xD;
                 stylesheet.transform(request, response);&#xD;
             }&#xD;
             catch (TransformerException e) {&#xD;
                 e.printStackTrace();&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukR_iFJREeiyW7NaN4qWdw" name="getResource" specification="_ucofZFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukR_iVJREeiyW7NaN4qWdw" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukR_ilJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return resources.get(key);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukR_i1JREeiyW7NaN4qWdw" name="localize" specification="_ucofZ1JREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukR_jFJREeiyW7NaN4qWdw" name="template">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukR_jVJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return Messages.message(template);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukSmkFJREeiyW7NaN4qWdw" name="localize" specification="_ucpGclJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukSmkVJREeiyW7NaN4qWdw" name="template">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukSmklJREeiyW7NaN4qWdw" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukSmk1JREeiyW7NaN4qWdw" name="number">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukSmlFJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>double num = Double.parseDouble(number);&#xD;
     StringTemplate stringTemplate = StringTemplate.template(template)&#xD;
         .addAmount(key, num);&#xD;
     return Messages.message(stringTemplate);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ucn4UFJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukR_gFJREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucn4UVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucn4UlJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ucn4U1JREeiyW7NaN4qWdw" name="readResources" visibility="private" isStatic="true" method="_ukR_g1JREeiyW7NaN4qWdw"/>
              <ownedOperation xmi:id="_ucofYFJREeiyW7NaN4qWdw" name="generateTMX" visibility="private" isStatic="true" method="_ukR_hFJREeiyW7NaN4qWdw"/>
              <ownedOperation xmi:id="_ucofYVJREeiyW7NaN4qWdw" name="generateDocumentation" isStatic="true" method="_ukR_hVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucofYlJREeiyW7NaN4qWdw" name="languages">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucofY1JREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ucofZFJREeiyW7NaN4qWdw" name="getResource" isStatic="true" method="_ukR_iFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucofZVJREeiyW7NaN4qWdw" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ucofZlJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ucofZ1JREeiyW7NaN4qWdw" name="localize" isStatic="true" method="_ukR_i1JREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucpGcFJREeiyW7NaN4qWdw" name="template">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ucpGcVJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ucpGclJREeiyW7NaN4qWdw" name="localize" isStatic="true" method="_ukSmkFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucpGc1JREeiyW7NaN4qWdw" name="template">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ucpGdFJREeiyW7NaN4qWdw" name="key">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ucpGdVJREeiyW7NaN4qWdw" name="number">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ucpGdlJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ucqUkFJREeiyW7NaN4qWdw" name="InstallerTranslations">
              <ownedComment xmi:id="_ukXfF1JREeiyW7NaN4qWdw">
                <body>Handle translations for the installer.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_uj7aMFJREeiyW7NaN4qWdw" name="SOURCE_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" type="_uhyFIFJREeiyW7NaN4qWdw" isReadOnly="true" association="_uklhg1JREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj7aMVJREeiyW7NaN4qWdw" value="new File(&quot;data/strings&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj8BQFJREeiyW7NaN4qWdw" name="MAIN_FILE" visibility="private" isLeaf="true" isStatic="true" type="_uhyFIFJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukmIkVJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj8BQVJREeiyW7NaN4qWdw" value="new File(SOURCE_DIRECTORY, &quot;FreeColMessages.properties&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj8BQlJREeiyW7NaN4qWdw" name="DESTINATION_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" type="_uhyFIFJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukmvoVJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj8BQ1JREeiyW7NaN4qWdw" value="new File(&quot;build/installer&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj8oUFJREeiyW7NaN4qWdw" name="LANGUAGE_CODES" visibility="private" isLeaf="true" isStatic="true" type="_uhyFIFJREeiyW7NaN4qWdw" isReadOnly="true" association="_uknWsFJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj8oUVJREeiyW7NaN4qWdw" value="new File(DESTINATION_DIRECTORY, &quot;iso-639-2.txt&quot;)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj8oUlJREeiyW7NaN4qWdw" name="IZPACK_CODES" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uj8oU1JREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj8oVVJREeiyW7NaN4qWdw" value="{&#xD;&#xA;        { &quot;ca&quot;, &quot;cat&quot;, &quot;Catalunyan&quot; },&#xD;&#xA;        { &quot;zh&quot;, &quot;chn&quot;, &quot;Chinese&quot; },&#xD;&#xA;        { &quot;cs&quot;, &quot;cze&quot;, &quot;Czech&quot; },&#xD;&#xA;        { &quot;da&quot;, &quot;dan&quot;, &quot;Danish&quot; },&#xD;&#xA;        { &quot;de&quot;, &quot;deu&quot;, &quot;German&quot; },&#xD;&#xA;        { &quot;en&quot;, &quot;eng&quot;, &quot;English&quot; },&#xD;&#xA;        { &quot;eu&quot;, &quot;eus&quot;, &quot;Basque&quot; },&#xD;&#xA;        { &quot;fi&quot;, &quot;fin&quot;, &quot;Finnish&quot; },&#xD;&#xA;        { &quot;fr&quot;, &quot;fra&quot;, &quot;French&quot; },&#xD;&#xA;        { &quot;gl&quot;, &quot;glg&quot;, &quot;Galician&quot; },&#xD;&#xA;        { &quot;hu&quot;, &quot;hun&quot;, &quot;Hungarian&quot; },&#xD;&#xA;        { &quot;it&quot;, &quot;ita&quot;, &quot;Italian&quot; },&#xD;&#xA;        { &quot;ja&quot;, &quot;jpn&quot;, &quot;Japanese&quot; },&#xD;&#xA;        { &quot;ms&quot;, &quot;mys&quot;, &quot;Malaysian&quot; },&#xD;&#xA;        { &quot;nl&quot;, &quot;ned&quot;, &quot;Nederlands&quot; },&#xD;&#xA;        { &quot;nn&quot;, &quot;nor&quot;, &quot;Norwegian&quot; },&#xD;&#xA;        { &quot;pl&quot;, &quot;pol&quot;, &quot;Polish&quot; },&#xD;&#xA;        { &quot;pt_BR&quot;, &quot;por&quot;, &quot;Portuguese (Brazilian)&quot; },&#xD;&#xA;        { &quot;pt_PT&quot;, &quot;prt&quot;, &quot;Portuguese (European)&quot; },&#xD;&#xA;        { &quot;ro&quot;, &quot;rom&quot;, &quot;Romanian&quot; },&#xD;&#xA;        { &quot;ru&quot;, &quot;rus&quot;, &quot;Russian&quot; },&#xD;&#xA;        { &quot;sr&quot;, &quot;scg&quot;, &quot;Serbian&quot; },&#xD;&#xA;        { &quot;es&quot;, &quot;spa&quot;, &quot;Spanish&quot; },&#xD;&#xA;        { &quot;sk&quot;, &quot;svk&quot;, &quot;Slovakian&quot; },&#xD;&#xA;        { &quot;sv&quot;, &quot;swe&quot;, &quot;Swedish&quot; },&#xD;&#xA;        { &quot;uk&quot;, &quot;ukr&quot;, &quot;Ukrainian&quot; }&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj9PYFJREeiyW7NaN4qWdw" name="KEYS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uj9PYVJREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj9PY1JREeiyW7NaN4qWdw" value="{&#xD;&#xA;        &quot;FreeCol&quot;,&#xD;&#xA;        &quot;FreeCol.description&quot;,&#xD;&#xA;        &quot;GameManual&quot;,&#xD;&#xA;        &quot;GameManual.description&quot;,&#xD;&#xA;        &quot;SourceCode&quot;,&#xD;&#xA;        &quot;SourceCode.description&quot;,&#xD;&#xA;        &quot;Music&quot;,&#xD;&#xA;        &quot;Music.description&quot;,&#xD;&#xA;        &quot;SoundEffects&quot;,&#xD;&#xA;        &quot;SoundEffects.description&quot;,&#xD;&#xA;        &quot;MovieClips&quot;,&#xD;&#xA;        &quot;MovieClips.description&quot;,&#xD;&#xA;        &quot;MovieClips.description2&quot;,&#xD;&#xA;        &quot;Location.Web&quot;,&#xD;&#xA;        &quot;FreeColLanguage&quot;,&#xD;&#xA;        &quot;FreeColLanguage.autodetect&quot;,&#xD;&#xA;        &quot;FreeColLanguage.description&quot;,&#xD;&#xA;        &quot;UserFiles&quot;,&#xD;&#xA;        &quot;UserFiles.home&quot;,&#xD;&#xA;        &quot;UserFiles.freecol&quot;,&#xD;&#xA;        &quot;UserFiles.other&quot;&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukSmlVJREeiyW7NaN4qWdw" name="main" specification="_ucq7oFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukSmllJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukSml1JREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
     if (!LANGUAGE_CODES.exists()) {&#xD;
         System.out.println(&quot;Language codes not found.&quot;);&#xD;
         System.exit(1);&#xD;
     }&#xD;
     */&#xD;
&#xD;
     if (!MAIN_FILE.exists()) {&#xD;
         System.out.println(&quot;Main input file not found.&quot;);&#xD;
         System.exit(1);&#xD;
     }&#xD;
&#xD;
     if (!DESTINATION_DIRECTORY.exists()) {&#xD;
         DESTINATION_DIRECTORY.mkdirs();&#xD;
     }&#xD;
&#xD;
     //Map&lt;String, String> languageMappings = readLanguageMappings(LANGUAGE_CODES);&#xD;
     Map&lt;String, String> languageMappings = new HashMap&lt;>();&#xD;
     for (String[] mapping : IZPACK_CODES) {&#xD;
         languageMappings.put(mapping[0], mapping[1]);&#xD;
     }&#xD;
     Map&lt;String, String> mainProperties = readFile(MAIN_FILE);&#xD;
     //Set&lt;String> languages = new HashSet&lt;String>();&#xD;
&#xD;
     String[] sourceFiles = SOURCE_DIRECTORY.list(new FilenameFilter() {&#xD;
             @Override&#xD;
             public boolean accept(File dir, String name) {&#xD;
                 return name.matches(&quot;FreeColMessages_.*\\.properties&quot;);&#xD;
             }&#xD;
         });&#xD;
&#xD;
     for (String name : sourceFiles) {&#xD;
&#xD;
         String languageCode = null;&#xD;
         int index = name.indexOf('.', 16);&#xD;
         if (index &lt; 0) {&#xD;
             continue;&#xD;
         } else {&#xD;
             languageCode = languageMappings.get(name.substring(16, index));&#xD;
             if (languageCode == null) {&#xD;
                 index = name.indexOf('_', 16);&#xD;
                 if (index &lt; 0) {&#xD;
                     continue;&#xD;
                 } else {&#xD;
                     languageCode = languageMappings.get(name.substring(16, index));&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
&#xD;
         if (languageCode == null) {&#xD;
             System.out.println(&quot;Skipping source file: &quot; + name);&#xD;
             continue;&#xD;
         }&#xD;
&#xD;
         System.out.println(&quot;Processing source file: &quot; + name);&#xD;
&#xD;
         File sourceFile = new File(SOURCE_DIRECTORY, name);&#xD;
         Map&lt;String, String> sourceProperties = readFile(sourceFile);&#xD;
         StringBuilder output = new StringBuilder();&#xD;
         output.append(&quot;&lt;?xml version = '1.0' encoding = 'UTF-8' standalone = 'yes'?>\n&quot;);&#xD;
         output.append(&quot;&lt;!-- ATTENTION: Do not modify this file directly,\n&quot;);&#xD;
         output.append(&quot;     modify the source file\n         &quot;);&#xD;
         output.append(sourceFile.getPath());&#xD;
         output.append(&quot;\n     instead. -->\n&quot;);&#xD;
         output.append(&quot;&lt;langpack>\n&quot;);&#xD;
&#xD;
         for (String key : KEYS) {&#xD;
             String longKey = &quot;installer.&quot; + key;&#xD;
             String value = sourceProperties.get(longKey);&#xD;
             if (value == null) {&#xD;
                 value = mainProperties.get(longKey);&#xD;
             }&#xD;
             output.append(&quot;    &lt;str id=\&quot;&quot;);&#xD;
             output.append(key);&#xD;
             output.append(&quot;\&quot; txt=\&quot;&quot;);&#xD;
             output.append(value);&#xD;
             output.append(&quot;\&quot; />\n&quot;);&#xD;
         }&#xD;
         output.append(&quot;&lt;/langpack>\n&quot;);&#xD;
         File destinationFile = new File(DESTINATION_DIRECTORY, &quot;lang.xml_&quot; + languageCode);&#xD;
         try (FileWriter out = new FileWriter(destinationFile)) {&#xD;
             out.write(output.toString());&#xD;
         }&#xD;
     }&#xD;
&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukSmmFJREeiyW7NaN4qWdw" name="readFile" specification="_ui77sFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukSmmVJREeiyW7NaN4qWdw" name="file" type="_uhyFIFJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_ukSmmlJREeiyW7NaN4qWdw" type="_uiTpkVJREeiyW7NaN4qWdw" direction="return"/>
                <language>java</language>
                <body>Map&lt;String, String> result = new HashMap&lt;>();&#xD;
     try (&#xD;
         FileReader fileReader = new FileReader(file);&#xD;
         BufferedReader bufferedReader = new BufferedReader(fileReader);&#xD;
     ) {&#xD;
         String line = bufferedReader.readLine();&#xD;
         while (line != null) {&#xD;
             int index = line.indexOf('=');&#xD;
             if (index >= 0) {&#xD;
                 result.put(line.substring(0, index), line.substring(index + 1));&#xD;
             }&#xD;
             line = bufferedReader.readLine();&#xD;
         }&#xD;
     } catch (Exception e) {&#xD;
         // forget it&#xD;
     }&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ucq7oFJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukSmlVJREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucq7oVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucq7olJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ui77sFJREeiyW7NaN4qWdw" name="readFile" visibility="private" isStatic="true" method="_ukSmmFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ui77sVJREeiyW7NaN4qWdw" name="file" type="_uhyFIFJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_ui8iwVJREeiyW7NaN4qWdw" type="_uiTpkVJREeiyW7NaN4qWdw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ucsJwFJREeiyW7NaN4qWdw" name="MapConverter">
              <ownedComment xmi:id="_ukYGIFJREeiyW7NaN4qWdw">
                <body>Convert map formats.</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukSmm1JREeiyW7NaN4qWdw" name="main" specification="_ucsJwVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukSmnFJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukSmnVJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>Specification specification = new FreeColTcFile(&quot;freecol&quot;).getSpecification();&#xD;
&#xD;
     for (String filename : args) {&#xD;
         File out = new File(filename);&#xD;
         if (out.exists()) {&#xD;
             try {&#xD;
                 String newName = filename + &quot;.old&quot;;&#xD;
                 File in = new File(newName);&#xD;
                 out.renameTo(in);&#xD;
                 System.out.println(&quot;Renamed &quot; + filename + &quot; to &quot; + newName + &quot;.&quot;);&#xD;
                 FreeColSavegameFile savegame = new FreeColSavegameFile(in);&#xD;
                 BufferedImage thumbnail = null;&#xD;
                 try {&#xD;
                     thumbnail = ImageIO.read(savegame.getInputStream(FreeColSavegameFile.THUMBNAIL_FILE));&#xD;
                     System.out.println(&quot;Loaded thumbnail.&quot;);&#xD;
                 } catch (FileNotFoundException e) {&#xD;
                     System.out.println(&quot;No thumbnail present.&quot;);&#xD;
                 }&#xD;
                 FreeColServer server&#xD;
                     = new FreeColServer(savegame, specification,&#xD;
                                         FreeCol.getServerPort(),&#xD;
                                         &quot;mapTransformer&quot;);&#xD;
                 System.out.println(&quot;Started server.&quot;);&#xD;
                 server.saveGame(out, null, thumbnail);&#xD;
                 System.out.println(&quot;Saved updated savegame.&quot;);&#xD;
                 server.shutdown();&#xD;
                 System.out.println(&quot;Shut down server.&quot;);&#xD;
             } catch (IOException | XMLStreamException | FreeColException e) {&#xD;
                 System.out.println(e);&#xD;
             }&#xD;
         }&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ucsJwVJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukSmm1JREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucsw0FJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucsw0VJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ucsw0lJREeiyW7NaN4qWdw" name="MergeTranslations">
              <ownedComment xmi:id="_ukYGIVJREeiyW7NaN4qWdw">
                <body>Merge some translation updates.</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukTNoFJREeiyW7NaN4qWdw" name="main" specification="_uctX4FJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukTNoVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukTNolJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>File sourceDirectory = new File(args[0]);&#xD;
     if (!sourceDirectory.isDirectory()) {&#xD;
         System.exit(1);&#xD;
     }&#xD;
&#xD;
     File targetDirectory = new File(args[1]);&#xD;
     if (!targetDirectory.isDirectory()) {&#xD;
         System.exit(1);&#xD;
     }&#xD;
&#xD;
     final String localeKey = args.length > 2 ? args[2] : &quot;&quot;;&#xD;
     String[] sourceFiles = sourceDirectory.list(new FilenameFilter() {&#xD;
             @Override&#xD;
             public boolean accept(File dir, String name) {&#xD;
                 return name.matches(&quot;FreeColMessages_&quot; + localeKey + &quot;.*\\.properties&quot;);&#xD;
             }&#xD;
         });&#xD;
     &#xD;
     for (String name : sourceFiles) {&#xD;
&#xD;
         System.out.println(&quot;Processing source file: &quot; + name);&#xD;
&#xD;
         File sourceFile = new File(sourceDirectory, name);&#xD;
         Map&lt;String, String> sourceProperties = readFile(sourceFile);&#xD;
&#xD;
         File targetFile = new File(targetDirectory, name);&#xD;
&#xD;
         if (targetFile.exists()) {&#xD;
             Map&lt;String, String> targetProperties = readFile(targetFile);&#xD;
&#xD;
             List&lt;Entry&lt;?,?>> missingProperties&#xD;
                 = sourceProperties.entrySet().stream()&#xD;
                 .filter(e -> !targetProperties.containsKey(e.getKey()))&#xD;
                 .collect(Collectors.toList());&#xD;
             if (!missingProperties.isEmpty()) {&#xD;
                 try (FileWriter out = new FileWriter(targetFile, true)) {&#xD;
                     out.write(&quot;### Merged from trunk on &quot;&#xD;
                             + DateFormat.getDateTimeInstance().format(new Date())&#xD;
                             + &quot; ###\n&quot;);&#xD;
                     for (Entry&lt;?,?> entry : missingProperties) {&#xD;
                         out.write((String) entry.getKey());&#xD;
                         out.write(&quot;=&quot;);&#xD;
                         out.write((String) entry.getValue());&#xD;
                         out.write(&quot;\n&quot;);&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         } else {&#xD;
             System.out.println(&quot;Copying &quot; + name + &quot; from trunk.&quot;);&#xD;
             FileWriter out;&#xD;
             try (FileReader in = new FileReader(sourceFile)) {&#xD;
                 out = new FileWriter(targetFile);&#xD;
                 int c;&#xD;
                 while ((c = in.read()) != -1) {&#xD;
                     out.write(c);&#xD;
                 }&#xD;
             }&#xD;
             out.close();&#xD;
&#xD;
         }&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukTNo1JREeiyW7NaN4qWdw" name="readFile" specification="_ui9J0FJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukTNpFJREeiyW7NaN4qWdw" name="file" type="_uhyFIFJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_ukTNpVJREeiyW7NaN4qWdw" type="_uiTpkVJREeiyW7NaN4qWdw" direction="return"/>
                <language>java</language>
                <body>Map&lt;String, String> result = new HashMap&lt;>();&#xD;
     try (&#xD;
         FileReader fileReader = new FileReader(file);&#xD;
         BufferedReader bufferedReader = new BufferedReader(fileReader); &#xD;
     ) {&#xD;
         String line = bufferedReader.readLine();&#xD;
         while (line != null) {&#xD;
             int index = line.indexOf('=');&#xD;
             if (index >= 0) {&#xD;
                 result.put(line.substring(0, index), line.substring(index + 1));&#xD;
             }&#xD;
             line = bufferedReader.readLine();&#xD;
         }&#xD;
     } catch (Exception e) {&#xD;
         // forget it&#xD;
     }&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_uctX4FJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukTNoFJREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uctX4VJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uctX4lJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ui9J0FJREeiyW7NaN4qWdw" name="readFile" visibility="private" isStatic="true" method="_ukTNo1JREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ui9J0VJREeiyW7NaN4qWdw" name="file" type="_uhyFIFJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_ui9w4VJREeiyW7NaN4qWdw" type="_uiTpkVJREeiyW7NaN4qWdw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_uct-8FJREeiyW7NaN4qWdw" name="RiverMaker">
              <ownedAttribute xmi:id="_uj9PZFJREeiyW7NaN4qWdw" name="BASE_WIDTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj92cFJREeiyW7NaN4qWdw" value="128"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj92cVJREeiyW7NaN4qWdw" name="BASE_HEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj92clJREeiyW7NaN4qWdw" value="64"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj92c1JREeiyW7NaN4qWdw" name="HALF_WIDTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj92dFJREeiyW7NaN4qWdw" value="BASE_WIDTH / 2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj92dVJREeiyW7NaN4qWdw" name="HALF_HEIGHT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj-dgFJREeiyW7NaN4qWdw" value="BASE_HEIGHT / 2"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj-dgVJREeiyW7NaN4qWdw" name="EDGE_LENGTH" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj-dglJREeiyW7NaN4qWdw" value="(float) Math.sqrt(HALF_WIDTH * HALF_WIDTH + HALF_HEIGHT * HALF_HEIGHT)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj-dg1JREeiyW7NaN4qWdw" name="DY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj-dhFJREeiyW7NaN4qWdw" value="4"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj-dhVJREeiyW7NaN4qWdw" name="DX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj_EkFJREeiyW7NaN4qWdw" value="2 * DY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj_EkVJREeiyW7NaN4qWdw" name="NE" visibility="private" isLeaf="true" isStatic="true" type="_uihsAVJREeiyW7NaN4qWdw" isReadOnly="true" association="_uknWs1JREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj_EklJREeiyW7NaN4qWdw" value="new Point2D.Float(HALF_WIDTH + DX, DY)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj_Ek1JREeiyW7NaN4qWdw" name="SE" visibility="private" isLeaf="true" isStatic="true" type="_uihsAVJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukn9wVJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj_ElFJREeiyW7NaN4qWdw" value="new Point2D.Float(BASE_WIDTH - DX, HALF_HEIGHT + DY)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj_ElVJREeiyW7NaN4qWdw" name="SW" visibility="private" isLeaf="true" isStatic="true" type="_uihsAVJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukok0VJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj_roFJREeiyW7NaN4qWdw" value="new Point2D.Float(DX, HALF_HEIGHT + DY)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj_roVJREeiyW7NaN4qWdw" name="NW" visibility="private" isLeaf="true" isStatic="true" type="_uihsAVJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukpL4FJREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj_rolJREeiyW7NaN4qWdw" value="new Point2D.Float(HALF_WIDTH - DX, DY)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj_ro1JREeiyW7NaN4qWdw" name="CENTER" visibility="private" isLeaf="true" isStatic="true" type="_uihsAVJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukpL41JREeiyW7NaN4qWdw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_uj_rpFJREeiyW7NaN4qWdw" value="new Point2D.Float(HALF_WIDTH, 2 * DY)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_uj_rpVJREeiyW7NaN4qWdw" name="POINTS" visibility="private" isLeaf="true" isStatic="true" type="_uihsAVJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukpy8VJREeiyW7NaN4qWdw">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uj_rplJREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukASsVJREeiyW7NaN4qWdw" value="{ NE, SE, SW, NW }"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukTNplJREeiyW7NaN4qWdw" name="main" specification="_ucumAFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukTNp1JREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukTNqFJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>String riverName = &quot;data/rules/classic/resources/images/terrain/&quot;&#xD;
         + &quot;ocean/center0.png&quot;;&#xD;
     String riverDir = &quot;data/rules/classic/resources/images/river&quot;;&#xD;
     BufferedImage river = ImageIO.read(new File(riverName));&#xD;
     // grab a rectangle completely filled with water&#xD;
     river = river.getSubimage(44, 22, 40, 20);&#xD;
     Rectangle2D rectangle = new Rectangle(0, 0, river.getWidth(), river.getHeight());&#xD;
     TexturePaint texture = new TexturePaint(river, rectangle);&#xD;
     Stroke minor = new BasicStroke(4);&#xD;
     Stroke major = new BasicStroke(6);&#xD;
&#xD;
     //         float seg = EDGE_LENGTH / 6;&#xD;
&#xD;
     // Path2D.Float straight = new Path2D.Float();&#xD;
     // straight.moveTo(0, 0);&#xD;
     // straight.quadTo(seg, 0, 2 * seg, -4);&#xD;
     // straight.quadTo(3 * seg, -8, 4 * seg, -4);&#xD;
     // straight.quadTo(5 * seg, 0, 6 * seg, 0);&#xD;
&#xD;
     // Path2D.Float bend = new Path2D.Float();&#xD;
     // bend.moveTo(0, 0);&#xD;
     // bend.lineTo(5 * seg, 0);&#xD;
     // bend.quadTo(EDGE_LENGTH, 0, EDGE_LENGTH, seg);&#xD;
     // bend.lineTo(EDGE_LENGTH, EDGE_LENGTH);&#xD;
&#xD;
     int[] branches = { 1, 0, 0, 0 };&#xD;
     for (int index = 1; index &lt; 81; index++) {&#xD;
         BufferedImage result = new BufferedImage(128, 64,&#xD;
                                                  BufferedImage.TYPE_INT_ARGB);&#xD;
         Graphics2D g = result.createGraphics();&#xD;
         g.setPaint(texture);&#xD;
         String name = getName(branches);&#xD;
         int count = branchCount(branches);&#xD;
         for (int branch = 0; branch &lt; branches.length; branch++) {&#xD;
             int size = branches[branch];&#xD;
             if (size > 0) {&#xD;
                 g.setStroke(size == 1 ? minor : major);&#xD;
                 int next = (branch + 1) % 4;&#xD;
                 int other = (branch + 2) % 4;&#xD;
                 Path2D.Float bend = new Path2D.Float();&#xD;
                 float px = (POINTS[branch].x + POINTS[other].x) / 2;&#xD;
                 float py = (POINTS[branch].y + POINTS[other].y) / 2;&#xD;
                 bend.moveTo(POINTS[branch].x, POINTS[branch].y);&#xD;
                 if (count == 1) {&#xD;
                     // single&#xD;
                     bend.lineTo(px, py);&#xD;
                     g.draw(bend);&#xD;
                     break;&#xD;
                 } else if (branches[other] > 0) {&#xD;
                     // or straight line&#xD;
                     bend.lineTo(px, py);&#xD;
                     bend.moveTo(POINTS[branch].x, POINTS[branch].y);&#xD;
                 }&#xD;
                 if (branches[next] > 0) {&#xD;
                     // bend, possibly around start&#xD;
                     bend.quadTo(CENTER.x, CENTER.y,&#xD;
                                 (POINTS[next].x + CENTER.x) / 2,&#xD;
                                 (POINTS[next].y + CENTER.y) / 2);&#xD;
                     bend.lineTo(POINTS[next].x, POINTS[next].y);&#xD;
                 }&#xD;
                 g.draw(bend);&#xD;
             }&#xD;
         }&#xD;
&#xD;
         /*&#xD;
         g.setStroke(stroke);&#xD;
         //bend.transform(AffineTransform.getRotateInstance(Math.PI/6));&#xD;
         //bend.transform(AffineTransform.getTranslateInstance(HALF_WIDTH, 0));&#xD;
         Path2D.Float path = new Path2D.Float();&#xD;
         float dx = (NW.x - SE.x)/6;&#xD;
         float dy = (NW.y - SE.y)/6;&#xD;
         path.moveTo(NW.x, NW.y);&#xD;
         //path.lineTo(SE.x, SE.y);&#xD;
         path.lineTo(SE.x - 16, SE.y - 8);&#xD;
         path.quadTo(BASE_WIDTH - 16, HALF_HEIGHT, SE.x - 16, SE.y + 8);&#xD;
         path.lineTo(SW.x, SW.y);&#xD;
         //path.moveTo(NE.x, NE.y);&#xD;
         //path.lineTo(SW.x, SW.y);&#xD;
         g.draw(path);&#xD;
         */&#xD;
         g.dispose();&#xD;
         ImageIO.write(result, &quot;png&quot;, new File(riverDir, &quot;river&quot; + name + &quot;.png&quot;));&#xD;
         branches = nextBranch(branches);&#xD;
     }&#xD;
&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukTNqVJREeiyW7NaN4qWdw" name="nextBranch" specification="_ucumA1JREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukTNqlJREeiyW7NaN4qWdw" name="branches">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukTNq1JREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukTNrFJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukTNrVJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>for (int index = 0; index &lt; branches.length; index++) {&#xD;
         if (branches[index] == 2) {&#xD;
             branches[index] = 0;&#xD;
         } else {&#xD;
             branches[index]++;&#xD;
             break;&#xD;
         }&#xD;
     }&#xD;
     return branches;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukTNrlJREeiyW7NaN4qWdw" name="branchCount" specification="_ucvNEFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukTNr1JREeiyW7NaN4qWdw" name="branches">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukTNsFJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukTNsVJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int result = 0;&#xD;
     for (int branche : branches) {&#xD;
         if (branche > 0) {&#xD;
             result++;&#xD;
         }&#xD;
     }&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukT0sFJREeiyW7NaN4qWdw" name="getName" specification="_ucvNFFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukT0sVJREeiyW7NaN4qWdw" name="branches">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukT0slJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukT0s1JREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String name = &quot;&quot;;&#xD;
     for (int branche : branches) {&#xD;
         name += Integer.toString(branche);&#xD;
     }&#xD;
     return name;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ucumAFJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukTNplJREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucumAVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucumAlJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ucumA1JREeiyW7NaN4qWdw" name="nextBranch" visibility="private" isStatic="true" method="_ukTNqVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucumBFJREeiyW7NaN4qWdw" name="branches">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucumCFJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ucumBVJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucumBlJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ucvNEFJREeiyW7NaN4qWdw" name="branchCount" visibility="private" isStatic="true" method="_ukTNrlJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucvNEVJREeiyW7NaN4qWdw" name="branches">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucvNE1JREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ucvNElJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ucvNFFJREeiyW7NaN4qWdw" name="getName" visibility="private" isStatic="true" method="_ukT0sFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ucvNFVJREeiyW7NaN4qWdw" name="branches">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucv0IFJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ucvNFlJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ucwbMFJREeiyW7NaN4qWdw" name="ColonizationSaveGameReader">
              <ownedAttribute xmi:id="_ukASslJREeiyW7NaN4qWdw" name="PLAYER_DATA" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukASs1JREeiyW7NaN4qWdw" value="0x9e"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ukA5wVJREeiyW7NaN4qWdw" name="COLONY_DATA" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukA5wlJREeiyW7NaN4qWdw" value="0x186"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ukA5xFJREeiyW7NaN4qWdw" name="NATIONS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukBg0FJREeiyW7NaN4qWdw" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukBg0lJREeiyW7NaN4qWdw" value="{&#xD;&#xA;        &quot;English&quot;, &quot;French&quot;, &quot;Spanish&quot;, &quot;Dutch&quot;&#xD;&#xA;    }"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ukKDsVJREeiyW7NaN4qWdw" name="data" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukKDslJREeiyW7NaN4qWdw" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukVC1lJREeiyW7NaN4qWdw" name="ColonizationSaveGameReader" specification="_uc1TsFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukVC11JREeiyW7NaN4qWdw" name="data">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukVC2FJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukVC2VJREeiyW7NaN4qWdw" type="_ucwbMFJREeiyW7NaN4qWdw" direction="return"/>
                <language>java</language>
                <body>this.data = data;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukVC2lJREeiyW7NaN4qWdw" name="main" specification="_uc16wFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukVC21JREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukVC3FJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>byte[] data;&#xD;
     try (RandomAccessFile reader = new RandomAccessFile(args[0], &quot;r&quot;)) {&#xD;
         data = new byte[(int) reader.length()];&#xD;
         reader.read(data);&#xD;
     }&#xD;
     new ColonizationSaveGameReader(data).run();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukVC3VJREeiyW7NaN4qWdw" name="run" specification="_uc16w1JREeiyW7NaN4qWdw">
                <language>java</language>
                <body>GameData gameData = new GameData(data);&#xD;
     gameData.print();&#xD;
     for (int index = 0; index &lt; 4; index++) {&#xD;
         System.out.println(&quot;Nation is &quot; + NATIONS[index]);&#xD;
         PlayerData playerData = new PlayerData(data, PLAYER_DATA +&#xD;
                                                index * PlayerData.LENGTH);&#xD;
         playerData.print();&#xD;
     }&#xD;
     int count = gameData.getNumberOfColonies();&#xD;
     for (int index = 0; index &lt; count; index++) {&#xD;
         ColonyData colonyData = new ColonyData(data, COLONY_DATA +&#xD;
                                                index * ColonyData.LENGTH);&#xD;
         colonyData.print();&#xD;
     }&#xD;
&#xD;
&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukVC3lJREeiyW7NaN4qWdw" name="getString" specification="_uc16xFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukVC31JREeiyW7NaN4qWdw" name="data">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukVC4FJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukVC4VJREeiyW7NaN4qWdw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukVC4lJREeiyW7NaN4qWdw" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukVC41JREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>byte[] bytes = Arrays.copyOfRange(data, start, start + length);&#xD;
     String value = new String(bytes);&#xD;
     int index = value.indexOf(0);&#xD;
     if (index &lt; 0) {&#xD;
         return value;&#xD;
     } else {&#xD;
         return value.substring(0, index);&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_uc1TsFJREeiyW7NaN4qWdw" name="ColonizationSaveGameReader" method="_ukVC1lJREeiyW7NaN4qWdw">
                <eAnnotations xmi:id="_uc1TslJREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_uc1Ts1JREeiyW7NaN4qWdw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_uc1TsVJREeiyW7NaN4qWdw" name="data">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uc1TtVJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_uc1TtFJREeiyW7NaN4qWdw" type="_ucwbMFJREeiyW7NaN4qWdw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_uc16wFJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukVC2lJREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uc16wVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uc16wlJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_uc16w1JREeiyW7NaN4qWdw" name="run" visibility="private" method="_ukVC3VJREeiyW7NaN4qWdw"/>
              <ownedOperation xmi:id="_uc16xFJREeiyW7NaN4qWdw" name="getString" isStatic="true" method="_ukVC3lJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uc16xVJREeiyW7NaN4qWdw" name="data">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uc2h0VJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_uc16xlJREeiyW7NaN4qWdw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_uc16x1JREeiyW7NaN4qWdw" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_uc2h0FJREeiyW7NaN4qWdw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ucxCQFJREeiyW7NaN4qWdw" name="GameData" visibility="private">
                <ownedAttribute xmi:id="_ukBg1FJREeiyW7NaN4qWdw" name="mapWidth" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukCH4VJREeiyW7NaN4qWdw" name="mapHeight" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukCH41JREeiyW7NaN4qWdw" name="numberOfColonies" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukDWAFJREeiyW7NaN4qWdw" name="difficulty" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukT0tlJREeiyW7NaN4qWdw" name="GameData" specification="_ucxCQVJREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_ukT0t1JREeiyW7NaN4qWdw" name="data">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukT0uFJREeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ukT0uVJREeiyW7NaN4qWdw" type="_ucxCQFJREeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>mapWidth = data[0xc];&#xD;
         mapHeight = data[0xe];&#xD;
         numberOfColonies = data[0x2e];&#xD;
         difficulty = data[0x36];&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukT0ulJREeiyW7NaN4qWdw" name="print" specification="_ucxpVVJREeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>System.out.println(&quot;Map size is &quot; + mapWidth + &quot; x &quot; + mapHeight);&#xD;
         System.out.println(&quot;Difficulty is &quot; + difficulty);&#xD;
         System.out.println(numberOfColonies + &quot; colonies found&quot;);&#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ucxCQVJREeiyW7NaN4qWdw" name="GameData" method="_ukT0tlJREeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_ucxpUVJREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ucxpUlJREeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ucxpUFJREeiyW7NaN4qWdw" name="data">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucxpVFJREeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ucxpU1JREeiyW7NaN4qWdw" type="_ucxCQFJREeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ucxpVVJREeiyW7NaN4qWdw" name="print" method="_ukT0ulJREeiyW7NaN4qWdw"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ucyQYFJREeiyW7NaN4qWdw" name="PlayerData" visibility="private">
                <ownedAttribute xmi:id="_ukD9EFJREeiyW7NaN4qWdw" name="LENGTH" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukD9EVJREeiyW7NaN4qWdw" value="52"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukD9ElJREeiyW7NaN4qWdw" name="newLandName" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukEkIFJREeiyW7NaN4qWdw" name="playerName" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukEkIlJREeiyW7NaN4qWdw" name="humanPlayer" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukUbwFJREeiyW7NaN4qWdw" name="PlayerData" specification="_ucyQYVJREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_ukUbwVJREeiyW7NaN4qWdw" name="data">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukUbwlJREeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ukUbw1JREeiyW7NaN4qWdw" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ukUbxFJREeiyW7NaN4qWdw" type="_ucyQYFJREeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>playerName = getString(data, offset, 23);&#xD;
         newLandName = getString(data, offset + 24, 23);&#xD;
         humanPlayer = (data[offset + 49] == 0);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukUbxVJREeiyW7NaN4qWdw" name="print" specification="_ucy3cFJREeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>System.out.println(&quot;Player name is &quot; + playerName&#xD;
                            + (humanPlayer ? &quot; [human]&quot; : &quot; [AI]&quot;));&#xD;
         System.out.println(&quot;New land name is &quot; + newLandName);&#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ucyQYVJREeiyW7NaN4qWdw" name="PlayerData" method="_ukUbwFJREeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_ucyQZFJREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ucyQZVJREeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ucyQYlJREeiyW7NaN4qWdw" name="data">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ucyQZ1JREeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ucyQY1JREeiyW7NaN4qWdw" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ucyQZlJREeiyW7NaN4qWdw" type="_ucyQYFJREeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ucy3cFJREeiyW7NaN4qWdw" name="print" method="_ukUbxVJREeiyW7NaN4qWdw"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ucy3cVJREeiyW7NaN4qWdw" name="ColonyData" visibility="private">
                <ownedAttribute xmi:id="_ukFLMVJREeiyW7NaN4qWdw" name="LENGTH" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukFLMlJREeiyW7NaN4qWdw" value="202"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukFLM1JREeiyW7NaN4qWdw" name="COLONIST_OCCUPATION" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukFLNFJREeiyW7NaN4qWdw" value="0x20"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukFyQFJREeiyW7NaN4qWdw" name="COLONIST_SPECIALITY" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukFyQVJREeiyW7NaN4qWdw" value="0x40"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukFyQlJREeiyW7NaN4qWdw" name="TILES" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukFyQ1JREeiyW7NaN4qWdw" value="0x70"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukFyRFJREeiyW7NaN4qWdw" name="x" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukGZUVJREeiyW7NaN4qWdw" name="y" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukGZU1JREeiyW7NaN4qWdw" name="numberOfColonists" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukHAYVJREeiyW7NaN4qWdw" name="name" visibility="private" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukHAY1JREeiyW7NaN4qWdw" name="colonists" visibility="private" isLeaf="true" type="_uc0FkFJREeiyW7NaN4qWdw" isReadOnly="true" association="_ukqaAVJREeiyW7NaN4qWdw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukHAZFJREeiyW7NaN4qWdw" value="*"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukUbxlJREeiyW7NaN4qWdw" name="ColonyData" specification="_uczegFJREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_ukUbx1JREeiyW7NaN4qWdw" name="data">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukUbyFJREeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ukUbyVJREeiyW7NaN4qWdw" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ukUbylJREeiyW7NaN4qWdw" type="_ucy3cVJREeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>x = data[offset];&#xD;
         y = data[offset + 1];&#xD;
         name = getString(data, offset + 2, offset + 25);&#xD;
         numberOfColonists = data[offset + 0x1f];&#xD;
         colonists = new Colonist[numberOfColonists];&#xD;
         for (int index = 0; index &lt; numberOfColonists; index++) {&#xD;
             int tile = -1;&#xD;
             for (int tileIndex = 0; tileIndex &lt; 8; tileIndex++) {&#xD;
                 if (data[offset + TILES + tileIndex] == index) {&#xD;
                     tile = tileIndex;&#xD;
                     break;&#xD;
                 }&#xD;
             }&#xD;
             colonists[index] = new Colonist(data[offset + COLONIST_OCCUPATION + index],&#xD;
                                             data[offset + COLONIST_SPECIALITY + index],&#xD;
                                             tile);&#xD;
         }&#xD;
&#xD;
&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukUby1JREeiyW7NaN4qWdw" name="print" specification="_uczeh1JREeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>System.out.println(name + &quot; [&quot; + x + &quot;, &quot; + y + &quot;], &quot;&#xD;
                            + numberOfColonists + &quot; colonists&quot;);&#xD;
         for (Colonist colonist : colonists) {&#xD;
             colonist.print();&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_uczegFJREeiyW7NaN4qWdw" name="ColonyData" method="_ukUbxlJREeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_uczeg1JREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_uczehFJREeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_uczegVJREeiyW7NaN4qWdw" name="data">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uczehlJREeiyW7NaN4qWdw" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_uczeglJREeiyW7NaN4qWdw" name="offset">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_uczehVJREeiyW7NaN4qWdw" type="_ucy3cVJREeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_uczeh1JREeiyW7NaN4qWdw" name="print" method="_ukUby1JREeiyW7NaN4qWdw"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_uc0FkFJREeiyW7NaN4qWdw" name="Colonist">
                <ownedAttribute xmi:id="_ukHnclJREeiyW7NaN4qWdw" name="OCCUPATION" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukHnc1JREeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukIOgVJREeiyW7NaN4qWdw" value="{&#xD;&#xA;            &quot;Farmer&quot;,&#xD;&#xA;            &quot;Sugar planter&quot;,&#xD;&#xA;            &quot;Tobacco planter&quot;,&#xD;&#xA;            &quot;Cotton planter&quot;,&#xD;&#xA;            &quot;Fur trapper&quot;,&#xD;&#xA;            &quot;Lumberjack&quot;,&#xD;&#xA;            &quot;Ore miner&quot;,&#xD;&#xA;            &quot;Silver miner&quot;,&#xD;&#xA;            &quot;Fisherman&quot;,&#xD;&#xA;            &quot;Distiller&quot;,&#xD;&#xA;            &quot;Tobacconist&quot;,&#xD;&#xA;            &quot;Weaver&quot;,&#xD;&#xA;            &quot;Fur Trader&quot;,&#xD;&#xA;            &quot;Carpenter&quot;,&#xD;&#xA;            &quot;Blacksmith&quot;,&#xD;&#xA;            &quot;Gunsmith&quot;,&#xD;&#xA;            &quot;Preacher&quot;,&#xD;&#xA;            &quot;Statesman&quot;,&#xD;&#xA;            &quot;Teacher&quot;,&#xD;&#xA;            &quot;&quot;,&#xD;&#xA;            &quot;Pioneer&quot;,&#xD;&#xA;            &quot;Veteran Soldier&quot;,&#xD;&#xA;            &quot;Scout&quot;,&#xD;&#xA;            &quot;Veteran Dragoon&quot;,&#xD;&#xA;            &quot;Missionary&quot;,&#xD;&#xA;            &quot;Indentured Servant&quot;,&#xD;&#xA;            &quot;Petty Criminal&quot;,&#xD;&#xA;            &quot;Indian convert&quot;,&#xD;&#xA;            &quot;Free colonist&quot;,&#xD;&#xA;            &quot;Armed brave&quot;,&#xD;&#xA;            &quot;Mounted brave&quot;&#xD;&#xA;        }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukIOg1JREeiyW7NaN4qWdw" name="TILES" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukI1kFJREeiyW7NaN4qWdw" value="*"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukI1klJREeiyW7NaN4qWdw" value="{&#xD;&#xA;            &quot;N&quot;, &quot;E&quot;, &quot;S&quot;, &quot;W&quot;, &quot;NW&quot;, &quot;NE&quot;, &quot;SE&quot;, &quot;SW&quot;&#xD;&#xA;        }"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukI1lFJREeiyW7NaN4qWdw" name="occupation" visibility="package" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukJcoVJREeiyW7NaN4qWdw" name="speciality" visibility="package" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukJco1JREeiyW7NaN4qWdw" name="tile" visibility="package" isLeaf="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukVC0FJREeiyW7NaN4qWdw" name="Colonist" specification="_uc0soFJREeiyW7NaN4qWdw">
                  <ownedParameter xmi:id="_ukVC0VJREeiyW7NaN4qWdw" name="occupation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ukVC0lJREeiyW7NaN4qWdw" name="speciality">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ukVC01JREeiyW7NaN4qWdw" name="tile">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ukVC1FJREeiyW7NaN4qWdw" type="_uc0FkFJREeiyW7NaN4qWdw" direction="return"/>
                  <language>java</language>
                  <body>this.occupation = occupation;&#xD;
         this.speciality = speciality;&#xD;
         this.tile = tile;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukVC1VJREeiyW7NaN4qWdw" name="print" specification="_uc0sp1JREeiyW7NaN4qWdw">
                  <language>java</language>
                  <body>String tileString = (tile >= 0)&#xD;
             ? &quot; [tile &quot; + TILES[tile] + &quot;]&quot; : &quot;&quot;;&#xD;
         System.out.println(OCCUPATION[speciality] + &quot; working as &quot;&#xD;
                            + OCCUPATION[occupation] + tileString);&#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_uc0soFJREeiyW7NaN4qWdw" name="Colonist" method="_ukVC0FJREeiyW7NaN4qWdw">
                  <eAnnotations xmi:id="_uc0spFJREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_uc0spVJREeiyW7NaN4qWdw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_uc0soVJREeiyW7NaN4qWdw" name="occupation">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_uc0solJREeiyW7NaN4qWdw" name="speciality">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_uc0so1JREeiyW7NaN4qWdw" name="tile">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_uc0splJREeiyW7NaN4qWdw" type="_uc0FkFJREeiyW7NaN4qWdw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_uc0sp1JREeiyW7NaN4qWdw" name="print" method="_ukVC1VJREeiyW7NaN4qWdw"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_uc4-EFJREeiyW7NaN4qWdw" name="TranslationReport">
              <ownedComment xmi:id="_ukYGIlJREeiyW7NaN4qWdw">
                <body>Document the state of the translations.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ukNHAVJREeiyW7NaN4qWdw" name="stars" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukNHAlJREeiyW7NaN4qWdw" value="&quot;*****************************************************************&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ukNHA1JREeiyW7NaN4qWdw" name="printSummary" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukNHBFJREeiyW7NaN4qWdw" value="true"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukVp4FJREeiyW7NaN4qWdw" name="main" specification="_uc6MMFJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukVp4VJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ukVp4lJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;LanguageStatsRecord> statistics = new ArrayList&lt;>();&#xD;
&#xD;
     //String dirName = &quot;src/net/sf/freecol.common.i18n/&quot;;&#xD;
     String dirName = args[0];&#xD;
     File directory = new File(dirName);&#xD;
     if (!directory.isDirectory()) {&#xD;
         System.exit(1);&#xD;
     }&#xD;
     final String localeKey = args.length > 1 ? args[1] : &quot;&quot;;&#xD;
     String[] languageFiles = directory.list(new FilenameFilter() {&#xD;
             @Override&#xD;
             public boolean accept(File dir, String name) {&#xD;
                 return name.matches(&quot;FreeColMessages_&quot; + localeKey + &quot;.*\\.properties&quot;);&#xD;
             }&#xD;
         });&#xD;
&#xD;
     File masterFile = new File(directory, &quot;FreeColMessages.properties&quot;);&#xD;
     Properties master = new Properties();&#xD;
     master.load(new FileInputStream(masterFile));&#xD;
     //System.out.println(&quot;*** Found master property file with &quot; + master.size() + &quot; properties.\n&quot;);&#xD;
&#xD;
     for (String name : languageFiles) {&#xD;
         LanguageStatsRecord lstat = new LanguageStatsRecord();&#xD;
         lstat.localFile = name;&#xD;
         File propertyFile = new File(directory, name);&#xD;
         Properties properties = new Properties();&#xD;
         properties.load(new FileInputStream(propertyFile));&#xD;
         System.out.println(name.length()+8 &lt; stars.length() ? stars.substring(0, name.length() + 8) : stars);&#xD;
         System.out.println(&quot;*** &quot; + name + &quot; ***&quot;);&#xD;
         System.out.println(name.length()+8 &lt; stars.length() ? stars.substring(0, name.length() + 8) : stars);&#xD;
&#xD;
         ArrayList&lt;String> missingKeys      = new ArrayList&lt;>();&#xD;
         ArrayList&lt;String> missingVariables = new ArrayList&lt;>();&#xD;
         ArrayList&lt;String> copiedFromMaster = new ArrayList&lt;>();&#xD;
         &#xD;
         for (Enumeration&lt;Object> keys = master.keys() ; keys.hasMoreElements()  ;)  {&#xD;
             String key = (String) keys.nextElement();&#xD;
             String value = properties.getProperty(key, null);&#xD;
             if (value == null) {&#xD;
                 missingKeys.add(key);&#xD;
             } else {&#xD;
                 String masterValue = master.getProperty(key);&#xD;
                 int lastIndex = 0;&#xD;
                 boolean inVariable = false;&#xD;
                 &#xD;
                 if (value.equalsIgnoreCase(masterValue)){&#xD;
                     // ignore some values which are most probably copies in many languages&#xD;
                     if (!key.contains(&quot;newColonyName&quot;)&#xD;
                             &amp;&amp; !(key.contains(&quot;foundingFather&quot;) &amp;&amp; key.contains(&quot;.birthAndDeath&quot;))&#xD;
                             &amp;&amp; !(key.contains(&quot;foundingFather&quot;) &amp;&amp; key.contains(&quot;.name&quot;)) ){&#xD;
                         copiedFromMaster.add(key);&#xD;
                     }&#xD;
                 }&#xD;
&#xD;
                 for (int index = 0; index &lt; masterValue.length() - 1; index++) {&#xD;
                     char current = masterValue.charAt(index);&#xD;
                     if (current == '%') {&#xD;
                         if (inVariable) {&#xD;
                             String var = masterValue.substring(lastIndex, index + 1);&#xD;
                             if (!value.contains(var)) {&#xD;
                                 missingVariables.add(key);&#xD;
                             }&#xD;
                             inVariable = false;&#xD;
                         } else {&#xD;
                             lastIndex = index;&#xD;
                             inVariable = true;&#xD;
                         }&#xD;
                     } else if (!Character.isLetterOrDigit(current)) {&#xD;
                         inVariable = false;&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         &#xD;
         if (!missingKeys.isEmpty()) {&#xD;
             System.out.println(&quot;** Total of &quot; + missingKeys.size() + &quot; properties missing:\n&quot;);&#xD;
             for (String key : sort(missingKeys)) {&#xD;
                 System.out.println(key + &quot;=&quot; + master.getProperty(key));&#xD;
             }&#xD;
             lstat.missingKeys = missingKeys.size();&#xD;
             System.out.println(&quot;&quot;);&#xD;
         } else {&#xD;
             System.out.println(&quot;** No properties missing.\n&quot;);&#xD;
         }&#xD;
         &#xD;
         if (!copiedFromMaster.isEmpty()){&#xD;
             System.out.println(&quot;** Total of &quot; + copiedFromMaster.size() + &quot; properties copied from master properties:\n&quot;);&#xD;
             for (String key : sort(copiedFromMaster)) {&#xD;
                 System.out.println(key + &quot;=&quot; + master.getProperty(key));&#xD;
             }&#xD;
             lstat.copiedKeys = copiedFromMaster.size();&#xD;
             System.out.println(&quot;&quot;);&#xD;
         } else {&#xD;
             System.out.println(&quot;** No properties copied.\n&quot;);&#xD;
         }&#xD;
&#xD;
         if (!missingVariables.isEmpty()) {&#xD;
             System.out.println(&quot;** Total of &quot; + missingVariables.size() + &quot; properties with missing variables:\n&quot;);&#xD;
             for (String key : sort(missingVariables)) {&#xD;
                 System.out.println(&quot;* CORRECT: &quot; + key + &quot;=&quot; + master.getProperty(key));&#xD;
                 System.out.println(&quot;INCORRECT: &quot; + key + &quot;=&quot; + properties.getProperty(key));&#xD;
             }&#xD;
             lstat.missingVariables = missingVariables.size();&#xD;
             System.out.println(&quot;&quot;);&#xD;
         } else {&#xD;
             System.out.println(&quot;** No properties with missing variables.\n&quot;);&#xD;
         }&#xD;
&#xD;
&#xD;
         ArrayList&lt;String> superfluousKeys = new ArrayList&lt;>();&#xD;
         ArrayList&lt;String> superfluousVariables = new ArrayList&lt;>();&#xD;
         for (Enumeration&lt;Object> keys = properties.keys() ; keys.hasMoreElements()  ;)  {&#xD;
             String key = (String) keys.nextElement();&#xD;
             String value = master.getProperty(key, null);&#xD;
             if (value == null) {&#xD;
                 superfluousKeys.add(key);&#xD;
             } else {&#xD;
                 String propertiesValue = properties.getProperty(key);&#xD;
                 int lastIndex = 0;&#xD;
                 boolean inVariable = false;&#xD;
&#xD;
                 for (int index = 0; index &lt; propertiesValue.length() - 1; index++) {&#xD;
                     char current = propertiesValue.charAt(index);&#xD;
                     if (current == '%') {&#xD;
                         if (inVariable) {&#xD;
                             String var = propertiesValue.substring(lastIndex, index + 1);&#xD;
                             if (!value.contains(var)) {&#xD;
                                 superfluousVariables.add(key);&#xD;
                             }&#xD;
                             inVariable = false;&#xD;
                         } else {&#xD;
                             lastIndex = index;&#xD;
                             inVariable = true;&#xD;
                         }&#xD;
                     } else if (!Character.isLetterOrDigit(current)) {&#xD;
                         inVariable = false;&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
&#xD;
         if (!superfluousKeys.isEmpty()) {&#xD;
             System.out.println(&quot;** Total of &quot; + superfluousKeys.size() + &quot; superfluous properties:\n&quot;);&#xD;
             for (String key : sort(superfluousKeys)) {&#xD;
                 System.out.println(key + &quot;=&quot; + properties.getProperty(key));&#xD;
             }&#xD;
             lstat.superfluousKeys = superfluousKeys.size();&#xD;
             System.out.println(&quot;&quot;);&#xD;
         } else {&#xD;
             System.out.println(&quot;** No superfluous properties.\n&quot;);&#xD;
         }&#xD;
         &#xD;
         if (!superfluousVariables.isEmpty()) {&#xD;
             System.out.println(&quot;** Total of &quot; + superfluousVariables.size() +&#xD;
                                &quot; properties with superfluous variables:\n&quot;);&#xD;
             for (String key : sort(superfluousVariables)) {&#xD;
                 System.out.println(&quot;* CORRECT: &quot; + key + &quot;=&quot; + master.getProperty(key));&#xD;
                 System.out.println(&quot;INCORRECT: &quot; + key + &quot;=&quot; + properties.getProperty(key));&#xD;
             }&#xD;
             lstat.superfluousVariables = superfluousVariables.size();&#xD;
             System.out.println(&quot;&quot;);&#xD;
         } else {&#xD;
             System.out.println(&quot;** No properties with superfluous variables.\n&quot;);&#xD;
         }&#xD;
&#xD;
         statistics.add(lstat);&#xD;
     }&#xD;
     &#xD;
     if (printSummary){&#xD;
         System.out.println(stars);&#xD;
         System.out.println(&quot;*** Summary of translation efforts (&quot; + master.size() + &quot; keys in master file) ***&quot;);&#xD;
         System.out.println(stars);&#xD;
         for (LanguageStatsRecord stats : statistics){&#xD;
             StringBuilder output = new StringBuilder();&#xD;
             output.append(shortenName(stats.localFile));&#xD;
             output.append(&quot;: &quot;);&#xD;
             output.append(prettyPrint(stats.missingKeys));&#xD;
             output.append(&quot; keys missing, &quot;);&#xD;
             output.append(prettyPrint(stats.missingVariables));&#xD;
             output.append(&quot; vars missing, &quot;);&#xD;
             output.append(prettyPrint(stats.copiedKeys));&#xD;
             output.append(&quot; entries copied, &quot;);&#xD;
             output.append(prettyPrint(stats.superfluousKeys));&#xD;
             output.append(&quot; redundant keys, &quot;);&#xD;
             output.append(prettyPrint(stats.superfluousVariables));&#xD;
             output.append(&quot; redundant vars. &quot;);&#xD;
             &#xD;
             float percentageDone =  (100 * (master.size() - (stats.missingKeys + stats.copiedKeys))) / (float) master.size();&#xD;
             percentageDone = Math.round(percentageDone*100)/100f;&#xD;
             output.append(percentageDone).append(&quot;% finished.&quot;);&#xD;
             &#xD;
             System.out.println(output.toString());&#xD;
         }&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukVp41JREeiyW7NaN4qWdw" name="shortenName" specification="_uc6MM1JREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukVp5FJREeiyW7NaN4qWdw" name="localFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukVp5VJREeiyW7NaN4qWdw" type="_ujCCUFJREeiyW7NaN4qWdw" direction="return"/>
                <language>java</language>
                <body>StringBuilder out = new StringBuilder(5);&#xD;
     String temp = localFile.substring(16, localFile.indexOf('.'));&#xD;
     if (temp.length() &lt; 5)&#xD;
         out.append(&quot;   &quot;);&#xD;
     out.append(temp);&#xD;
     return out;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukWQ8FJREeiyW7NaN4qWdw" name="prettyPrint" specification="_uc6zQVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukWQ8VJREeiyW7NaN4qWdw" name="number">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ukWQ8lJREeiyW7NaN4qWdw" type="_ujCCUFJREeiyW7NaN4qWdw" direction="return"/>
                <language>java</language>
                <body>StringBuilder output = new StringBuilder(4);&#xD;
     if (number &lt; 10)&#xD;
         output.append(&quot; &quot;);&#xD;
     if (number &lt; 100)&#xD;
         output.append(&quot; &quot;);&#xD;
     if (number &lt; 1000)&#xD;
         output.append(&quot; &quot;);&#xD;
     output.append(number);&#xD;
     return output;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ukWQ81JREeiyW7NaN4qWdw" name="sort" specification="_ujCpYVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ukWQ9FJREeiyW7NaN4qWdw" name="missingKeys" type="_uhzTQVJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_ukWQ9VJREeiyW7NaN4qWdw" type="_uioZsVJREeiyW7NaN4qWdw" direction="return"/>
                <language>java</language>
                <body>TreeSet&lt;String> sorted = new TreeSet&lt;>();&#xD;
     sorted.addAll(missingKeys);&#xD;
     return sorted;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_uc6MMFJREeiyW7NaN4qWdw" name="main" isStatic="true" method="_ukVp4FJREeiyW7NaN4qWdw" raisedException="_uiugUVJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uc6MMVJREeiyW7NaN4qWdw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uc6MMlJREeiyW7NaN4qWdw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_uc6MM1JREeiyW7NaN4qWdw" name="shortenName" visibility="private" isStatic="true" method="_ukVp41JREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uc6zQFJREeiyW7NaN4qWdw" name="localFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ujCCUlJREeiyW7NaN4qWdw" type="_ujCCUFJREeiyW7NaN4qWdw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_uc6zQVJREeiyW7NaN4qWdw" name="prettyPrint" visibility="private" isStatic="true" method="_ukWQ8FJREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_uc6zQlJREeiyW7NaN4qWdw" name="number">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ujCpYFJREeiyW7NaN4qWdw" type="_ujCCUFJREeiyW7NaN4qWdw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ujCpYVJREeiyW7NaN4qWdw" name="sort" visibility="private" isStatic="true" method="_ukWQ81JREeiyW7NaN4qWdw">
                <ownedParameter xmi:id="_ujCpYlJREeiyW7NaN4qWdw" name="missingKeys" type="_uhzTQVJREeiyW7NaN4qWdw"/>
                <ownedParameter xmi:id="_ujDQcVJREeiyW7NaN4qWdw" type="_uioZsVJREeiyW7NaN4qWdw" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_uc5lIFJREeiyW7NaN4qWdw" name="LanguageStatsRecord" visibility="private">
                <eAnnotations xmi:id="_uc5lIVJREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_uc5lIlJREeiyW7NaN4qWdw" key="static"/>
                </eAnnotations>
                <ownedAttribute xmi:id="_ukKqwFJREeiyW7NaN4qWdw" name="localFile" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukLR0FJREeiyW7NaN4qWdw" value="&quot;&quot;"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukLR0lJREeiyW7NaN4qWdw" name="missingKeys" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukLR01JREeiyW7NaN4qWdw" value="0"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukL44FJREeiyW7NaN4qWdw" name="missingVariables" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukL44VJREeiyW7NaN4qWdw" value="0"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukL441JREeiyW7NaN4qWdw" name="copiedKeys" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ukL45FJREeiyW7NaN4qWdw" value="0"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukMf8VJREeiyW7NaN4qWdw" name="superfluousVariables">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_ukMf81JREeiyW7NaN4qWdw" name="superfluousKeys">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedAttribute>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukbwgFJREeiyW7NaN4qWdw" name="" memberEnd="_ukbwgVJREeiyW7NaN4qWdw _ujIwAVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukbwgVJREeiyW7NaN4qWdw" name="" type="_ucWykFJREeiyW7NaN4qWdw" association="_ukbwgFJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukcXkVJREeiyW7NaN4qWdw" name="" memberEnd="_ukcXklJREeiyW7NaN4qWdw _ujJXEVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukcXklJREeiyW7NaN4qWdw" name="" type="_ucYAsVJREeiyW7NaN4qWdw" association="_ukcXkVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukc-oVJREeiyW7NaN4qWdw" name="" memberEnd="_ukc-olJREeiyW7NaN4qWdw _ujJ-IFJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukc-olJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukc-oVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukc-pFJREeiyW7NaN4qWdw" name="" memberEnd="_ukc-pVJREeiyW7NaN4qWdw _ujKlNFJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukc-pVJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukc-pFJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukdlsVJREeiyW7NaN4qWdw" name="" memberEnd="_ukdlslJREeiyW7NaN4qWdw _ujLMQVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukdlslJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukdlsVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukeMwVJREeiyW7NaN4qWdw" name="" memberEnd="_ukez0FJREeiyW7NaN4qWdw _ujLzUVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukez0FJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukeMwVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukez0lJREeiyW7NaN4qWdw" name="" memberEnd="_ukez01JREeiyW7NaN4qWdw _ujNBcFJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukez01JREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukez0lJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukfa4VJREeiyW7NaN4qWdw" name="" memberEnd="_ukfa4lJREeiyW7NaN4qWdw _ujnRI1JREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukfa4lJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukfa4VJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukgB8VJREeiyW7NaN4qWdw" name="" memberEnd="_ukgB8lJREeiyW7NaN4qWdw _ujofQVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukgB8lJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukgB8VJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukgpAFJREeiyW7NaN4qWdw" name="" memberEnd="_ukgpAVJREeiyW7NaN4qWdw _ujpGUlJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukgpAVJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukgpAFJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukgpA1JREeiyW7NaN4qWdw" name="" memberEnd="_ukgpBFJREeiyW7NaN4qWdw _ujptY1JREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukgpBFJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukgpA1JREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukhQEVJREeiyW7NaN4qWdw" name="" memberEnd="_ukhQElJREeiyW7NaN4qWdw _ujq7gVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukhQElJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukhQEVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukh3IVJREeiyW7NaN4qWdw" name="" memberEnd="_ukh3IlJREeiyW7NaN4qWdw _ujq7hFJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukh3IlJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukh3IVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukh3JFJREeiyW7NaN4qWdw" name="" memberEnd="_ukieMFJREeiyW7NaN4qWdw _ujtXwVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukieMFJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukh3JFJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukieMlJREeiyW7NaN4qWdw" name="" memberEnd="_ukieM1JREeiyW7NaN4qWdw _ujt-0VJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukieM1JREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukieMlJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukjFQVJREeiyW7NaN4qWdw" name="" memberEnd="_ukjFQlJREeiyW7NaN4qWdw _ujv0AVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukjFQlJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukjFQVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukjFRFJREeiyW7NaN4qWdw" name="" memberEnd="_ukjFRVJREeiyW7NaN4qWdw _ujwbE1JREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukjFRVJREeiyW7NaN4qWdw" name="" type="_ucac8FJREeiyW7NaN4qWdw" association="_ukjFRFJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukjsUVJREeiyW7NaN4qWdw" name="" memberEnd="_ukjsUlJREeiyW7NaN4qWdw _uj3IxFJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukjsUlJREeiyW7NaN4qWdw" name="" type="_uchxsFJREeiyW7NaN4qWdw" association="_ukjsUVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukkTYVJREeiyW7NaN4qWdw" name="" memberEnd="_ukkTYlJREeiyW7NaN4qWdw _uj5lAFJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukkTYlJREeiyW7NaN4qWdw" name="" type="_ucnRQFJREeiyW7NaN4qWdw" association="_ukkTYVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukk6cVJREeiyW7NaN4qWdw" name="" memberEnd="_ukk6clJREeiyW7NaN4qWdw _uj5lAlJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukk6clJREeiyW7NaN4qWdw" name="" type="_ucnRQFJREeiyW7NaN4qWdw" association="_ukk6cVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_uklhgFJREeiyW7NaN4qWdw" name="" memberEnd="_uklhgVJREeiyW7NaN4qWdw _uj6MElJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_uklhgVJREeiyW7NaN4qWdw" name="" type="_ucnRQFJREeiyW7NaN4qWdw" association="_uklhgFJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_uklhg1JREeiyW7NaN4qWdw" name="" memberEnd="_uklhhFJREeiyW7NaN4qWdw _uj7aMFJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_uklhhFJREeiyW7NaN4qWdw" name="" type="_ucqUkFJREeiyW7NaN4qWdw" association="_uklhg1JREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukmIkVJREeiyW7NaN4qWdw" name="" memberEnd="_ukmIklJREeiyW7NaN4qWdw _uj8BQFJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukmIklJREeiyW7NaN4qWdw" name="" type="_ucqUkFJREeiyW7NaN4qWdw" association="_ukmIkVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukmvoVJREeiyW7NaN4qWdw" name="" memberEnd="_ukmvolJREeiyW7NaN4qWdw _uj8BQlJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukmvolJREeiyW7NaN4qWdw" name="" type="_ucqUkFJREeiyW7NaN4qWdw" association="_ukmvoVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_uknWsFJREeiyW7NaN4qWdw" name="" memberEnd="_uknWsVJREeiyW7NaN4qWdw _uj8oUFJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_uknWsVJREeiyW7NaN4qWdw" name="" type="_ucqUkFJREeiyW7NaN4qWdw" association="_uknWsFJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_uknWs1JREeiyW7NaN4qWdw" name="" memberEnd="_uknWtFJREeiyW7NaN4qWdw _uj_EkVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_uknWtFJREeiyW7NaN4qWdw" name="" type="_uct-8FJREeiyW7NaN4qWdw" association="_uknWs1JREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukn9wVJREeiyW7NaN4qWdw" name="" memberEnd="_ukn9wlJREeiyW7NaN4qWdw _uj_Ek1JREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukn9wlJREeiyW7NaN4qWdw" name="" type="_uct-8FJREeiyW7NaN4qWdw" association="_ukn9wVJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukok0VJREeiyW7NaN4qWdw" name="" memberEnd="_ukok0lJREeiyW7NaN4qWdw _uj_ElVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukok0lJREeiyW7NaN4qWdw" name="" type="_uct-8FJREeiyW7NaN4qWdw" association="_ukok0VJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukpL4FJREeiyW7NaN4qWdw" name="" memberEnd="_ukpL4VJREeiyW7NaN4qWdw _uj_roVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukpL4VJREeiyW7NaN4qWdw" name="" type="_uct-8FJREeiyW7NaN4qWdw" association="_ukpL4FJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukpL41JREeiyW7NaN4qWdw" name="" memberEnd="_ukpL5FJREeiyW7NaN4qWdw _uj_ro1JREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukpL5FJREeiyW7NaN4qWdw" name="" type="_uct-8FJREeiyW7NaN4qWdw" association="_ukpL41JREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukpy8VJREeiyW7NaN4qWdw" name="" memberEnd="_ukpy8lJREeiyW7NaN4qWdw _uj_rpVJREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukpy8lJREeiyW7NaN4qWdw" name="" type="_uct-8FJREeiyW7NaN4qWdw" association="_ukpy8VJREeiyW7NaN4qWdw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_ukqaAVJREeiyW7NaN4qWdw" name="" memberEnd="_ukqaAlJREeiyW7NaN4qWdw _ukHAY1JREeiyW7NaN4qWdw">
              <ownedEnd xmi:id="_ukqaAlJREeiyW7NaN4qWdw" name="" type="_ucy3cVJREeiyW7NaN4qWdw" association="_ukqaAVJREeiyW7NaN4qWdw"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_ubeBxFJREeiyW7NaN4qWdw" name="common">
            <packagedElement xmi:type="uml:Package" xmi:id="_ubeBxVJREeiyW7NaN4qWdw" name="io">
              <packagedElement xmi:type="uml:Class" xmi:id="_uh2WkVJREeiyW7NaN4qWdw" name="FreeColSavegameFile"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_uia-UlJREeiyW7NaN4qWdw" name="FreeColTcFile"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_ubvHgFJREeiyW7NaN4qWdw" name="i18n">
              <packagedElement xmi:type="uml:Class" xmi:id="_uiXT8FJREeiyW7NaN4qWdw" name="Messages"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_ubvHgVJREeiyW7NaN4qWdw" name="model">
              <packagedElement xmi:type="uml:Class" xmi:id="_uiXT8lJREeiyW7NaN4qWdw" name="StringTemplate"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_uiblYVJREeiyW7NaN4qWdw" name="Specification"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_uia-UFJREeiyW7NaN4qWdw" name="FreeColException"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_ubjhUFJREeiyW7NaN4qWdw" name="client">
            <packagedElement xmi:type="uml:Package" xmi:id="_ubjhUVJREeiyW7NaN4qWdw" name="gui">
              <packagedElement xmi:type="uml:Package" xmi:id="_ubjhUlJREeiyW7NaN4qWdw" name="panel">
                <packagedElement xmi:type="uml:Package" xmi:id="_ubjhU1JREeiyW7NaN4qWdw" name="ConfirmDeclarationDialog">
                  <packagedElement xmi:type="uml:Class" xmi:id="_uiEZAVJREeiyW7NaN4qWdw" name="ColorButton"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Package" xmi:id="_ubjhVFJREeiyW7NaN4qWdw" name="Flag">
                  <packagedElement xmi:type="uml:Enumeration" xmi:id="_uiFAElJREeiyW7NaN4qWdw" name="Background"/>
                  <packagedElement xmi:type="uml:Enumeration" xmi:id="_uiFnIVJREeiyW7NaN4qWdw" name="Decoration"/>
                  <packagedElement xmi:type="uml:Enumeration" xmi:id="_uiGOMVJREeiyW7NaN4qWdw" name="UnionPosition"/>
                  <packagedElement xmi:type="uml:Enumeration" xmi:id="_uiG1QVJREeiyW7NaN4qWdw" name="UnionShape"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_uiDx8VJREeiyW7NaN4qWdw" name="ConfirmDeclarationDialog"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_uiFAEFJREeiyW7NaN4qWdw" name="Flag"/>
              </packagedElement>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_ub0AAFJREeiyW7NaN4qWdw" name="server">
            <packagedElement xmi:type="uml:Class" xmi:id="_uicMcVJREeiyW7NaN4qWdw" name="FreeColServer"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_uh9EQVJREeiyW7NaN4qWdw" name="FreeCol"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ubi6Q1JREeiyW7NaN4qWdw" name="miginfocom">
        <packagedElement xmi:type="uml:Package" xmi:id="_ubi6RFJREeiyW7NaN4qWdw" name="swing">
          <packagedElement xmi:type="uml:Class" xmi:id="_uiDK41JREeiyW7NaN4qWdw" name="MigLayout"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ubcMkFJREeiyW7NaN4qWdw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_ubcMkVJREeiyW7NaN4qWdw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_uhwP8FJREeiyW7NaN4qWdw" name="RandomAccessFile"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uhyFIFJREeiyW7NaN4qWdw" name="File"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_uhyFIlJREeiyW7NaN4qWdw" name="FileFilter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uhysMVJREeiyW7NaN4qWdw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh3ksVJREeiyW7NaN4qWdw" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh4LwVJREeiyW7NaN4qWdw" name="FileReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh4y0VJREeiyW7NaN4qWdw" name="FileWriter"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_uh4y01JREeiyW7NaN4qWdw" name="FilenameFilter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh6A8FJREeiyW7NaN4qWdw" name="BufferedInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh6A8lJREeiyW7NaN4qWdw" name="BufferedOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh6oAVJREeiyW7NaN4qWdw" name="FileInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh7PEFJREeiyW7NaN4qWdw" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh7PElJREeiyW7NaN4qWdw" name="FileOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh72IVJREeiyW7NaN4qWdw" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh72I1JREeiyW7NaN4qWdw" name="OutputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ubcMklJREeiyW7NaN4qWdw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_ubgeAFJREeiyW7NaN4qWdw" name="zip">
          <packagedElement xmi:type="uml:Class" xmi:id="_uh8dMVJREeiyW7NaN4qWdw" name="GZIPInputStream"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ub0nEVJREeiyW7NaN4qWdw" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_uieBoFJREeiyW7NaN4qWdw" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ub0nElJREeiyW7NaN4qWdw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_uieosVJREeiyW7NaN4qWdw" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_uhw3AFJREeiyW7NaN4qWdw" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uhzTQVJREeiyW7NaN4qWdw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_uhz6UVJREeiyW7NaN4qWdw" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiOKAlJREeiyW7NaN4qWdw" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiOxEVJREeiyW7NaN4qWdw" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiTCgFJREeiyW7NaN4qWdw" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_uiTpkVJREeiyW7NaN4qWdw" name="Map"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_uidakVJREeiyW7NaN4qWdw" name="Date"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_uimkgFJREeiyW7NaN4qWdw" name="Enumeration"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uinyoVJREeiyW7NaN4qWdw" name="Properties"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uioZsVJREeiyW7NaN4qWdw" name="TreeSet"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ubi6QFJREeiyW7NaN4qWdw" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_ubi6QVJREeiyW7NaN4qWdw" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_uh_ggVJREeiyW7NaN4qWdw" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_uiAHkVJREeiyW7NaN4qWdw" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_uiAHk1JREeiyW7NaN4qWdw" name="ItemEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_uiAuoVJREeiyW7NaN4qWdw" name="ItemListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ubpn8FJREeiyW7NaN4qWdw" name="geom">
          <packagedElement xmi:type="uml:Class" xmi:id="_uiLtwFJREeiyW7NaN4qWdw" name="Rectangle2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_uigd4FJREeiyW7NaN4qWdw" name="Path2D"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_uigd4lJREeiyW7NaN4qWdw" name="Point2D"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ubpn8VJREeiyW7NaN4qWdw" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_uiM74FJREeiyW7NaN4qWdw" name="BufferedImage"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh-SYFJREeiyW7NaN4qWdw" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uh-5cVJREeiyW7NaN4qWdw" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiMU0VJREeiyW7NaN4qWdw" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiM74lJREeiyW7NaN4qWdw" name="Point"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiNi8VJREeiyW7NaN4qWdw" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiOKAFJREeiyW7NaN4qWdw" name="TexturePaint"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uif20FJREeiyW7NaN4qWdw" name="BasicStroke"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_uihE8VJREeiyW7NaN4qWdw" name="Stroke"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ub0nEFJREeiyW7NaN4qWdw" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_uiczgFJREeiyW7NaN4qWdw" name="DateFormat"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_uiugUFJREeiyW7NaN4qWdw" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_uiugUVJREeiyW7NaN4qWdw" name="Exception"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_ui11EFJREeiyW7NaN4qWdw" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ui3qR1JREeiyW7NaN4qWdw" name="Object"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ujCCUFJREeiyW7NaN4qWdw" name="StringBuilder"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ubdasFJREeiyW7NaN4qWdw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_ubeBwFJREeiyW7NaN4qWdw" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_ubeBwVJREeiyW7NaN4qWdw" name="transform">
          <packagedElement xmi:type="uml:Package" xmi:id="_ubeBwlJREeiyW7NaN4qWdw" name="stream">
            <packagedElement xmi:type="uml:Class" xmi:id="_uh0hYFJREeiyW7NaN4qWdw" name="StreamSource"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_uiUQoVJREeiyW7NaN4qWdw" name="StreamResult"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_uiU3sVJREeiyW7NaN4qWdw" name="Result"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_uiU3s1JREeiyW7NaN4qWdw" name="Source"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_uiVewVJREeiyW7NaN4qWdw" name="Transformer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_uiWF0VJREeiyW7NaN4qWdw" name="TransformerException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_uiWs4VJREeiyW7NaN4qWdw" name="TransformerFactory"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ubeBw1JREeiyW7NaN4qWdw" name="validation">
          <packagedElement xmi:type="uml:Class" xmi:id="_uh1IcFJREeiyW7NaN4qWdw" name="Schema"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_uh1IclJREeiyW7NaN4qWdw" name="SchemaFactory"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_uh1vgVJREeiyW7NaN4qWdw" name="Validator"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ubzY8FJREeiyW7NaN4qWdw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_uiaXQFJREeiyW7NaN4qWdw" name="XMLStreamException"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ubi6QlJREeiyW7NaN4qWdw" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_uiBVsVJREeiyW7NaN4qWdw" name="ImageIcon"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiB8wVJREeiyW7NaN4qWdw" name="JColorChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiB8w1JREeiyW7NaN4qWdw" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiCj0VJREeiyW7NaN4qWdw" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_uiDK4VJREeiyW7NaN4qWdw" name="JLabel"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ubpn8lJREeiyW7NaN4qWdw" name="imageio">
        <packagedElement xmi:type="uml:Class" xmi:id="_uiPYIVJREeiyW7NaN4qWdw" name="ImageIO"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ubeBxlJREeiyW7NaN4qWdw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_ubeBx1JREeiyW7NaN4qWdw" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_ubeo0FJREeiyW7NaN4qWdw" name="sax">
          <packagedElement xmi:type="uml:Class" xmi:id="_uh2Wk1JREeiyW7NaN4qWdw" name="SAXException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_uh29oVJREeiyW7NaN4qWdw" name="SAXParseException"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ub2cRFJREeiyW7NaN4qWdw" name="Point2D">
      <packagedElement xmi:type="uml:Class" xmi:id="_uihsAVJREeiyW7NaN4qWdw" name="Float"/>
    </packagedElement>
    <profileApplication xmi:id="_uKVOcVJREeiyW7NaN4qWdw">
      <eAnnotations xmi:id="_uKVOclJREeiyW7NaN4qWdw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_uKVOc1JREeiyW7NaN4qWdw" base_Package="_t9aMwFJREeiyW7NaN4qWdw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Array xmi:id="_ucc5MFJREeiyW7NaN4qWdw" base_Element="_uccSIVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uci_0FJREeiyW7NaN4qWdw" base_Element="_uciYwFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_uci_0VJREeiyW7NaN4qWdw" base_Element="_uciYwFJREeiyW7NaN4qWdw">
    <annotations xmi:id="_uci_0lJREeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_ucumB1JREeiyW7NaN4qWdw" base_Element="_ucumA1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uhwP8VJREeiyW7NaN4qWdw" base_Element="_uhwP8FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uhw3AVJREeiyW7NaN4qWdw" base_Element="_uhw3AFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uhyFIVJREeiyW7NaN4qWdw" base_Element="_uhyFIFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uhysMFJREeiyW7NaN4qWdw" base_Element="_uhyFIlJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uhzTQFJREeiyW7NaN4qWdw" base_Element="_uhysMVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uhz6UFJREeiyW7NaN4qWdw" base_Element="_uhzTQVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uhz6UlJREeiyW7NaN4qWdw" base_Element="_uhz6UVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh0hYVJREeiyW7NaN4qWdw" base_Element="_uh0hYFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh1IcVJREeiyW7NaN4qWdw" base_Element="_uh1IcFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh1vgFJREeiyW7NaN4qWdw" base_Element="_uh1IclJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh2WkFJREeiyW7NaN4qWdw" base_Element="_uh1vgVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh2WklJREeiyW7NaN4qWdw" base_Element="_uh2WkVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh29oFJREeiyW7NaN4qWdw" base_Element="_uh2Wk1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh3ksFJREeiyW7NaN4qWdw" base_Element="_uh29oVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh4LwFJREeiyW7NaN4qWdw" base_Element="_uh3ksVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh4y0FJREeiyW7NaN4qWdw" base_Element="_uh4LwVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh4y0lJREeiyW7NaN4qWdw" base_Element="_uh4y0VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh5Z4FJREeiyW7NaN4qWdw" base_Element="_uh4y01JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh6A8VJREeiyW7NaN4qWdw" base_Element="_uh6A8FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh6oAFJREeiyW7NaN4qWdw" base_Element="_uh6A8lJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh6oAlJREeiyW7NaN4qWdw" base_Element="_uh6oAVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh7PEVJREeiyW7NaN4qWdw" base_Element="_uh7PEFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh72IFJREeiyW7NaN4qWdw" base_Element="_uh7PElJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh72IlJREeiyW7NaN4qWdw" base_Element="_uh72IVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh8dMFJREeiyW7NaN4qWdw" base_Element="_uh72I1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh9EQFJREeiyW7NaN4qWdw" base_Element="_uh8dMVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh9EQlJREeiyW7NaN4qWdw" base_Element="_uh9EQVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh-5cFJREeiyW7NaN4qWdw" base_Element="_uh-SYFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uh_ggFJREeiyW7NaN4qWdw" base_Element="_uh-5cVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiAHkFJREeiyW7NaN4qWdw" base_Element="_uh_ggVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiAHklJREeiyW7NaN4qWdw" base_Element="_uiAHkVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiAuoFJREeiyW7NaN4qWdw" base_Element="_uiAHk1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiBVsFJREeiyW7NaN4qWdw" base_Element="_uiAuoVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiB8wFJREeiyW7NaN4qWdw" base_Element="_uiBVsVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiB8wlJREeiyW7NaN4qWdw" base_Element="_uiB8wVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiCj0FJREeiyW7NaN4qWdw" base_Element="_uiB8w1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiDK4FJREeiyW7NaN4qWdw" base_Element="_uiCj0VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiDK4lJREeiyW7NaN4qWdw" base_Element="_uiDK4VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiDx8FJREeiyW7NaN4qWdw" base_Element="_uiDK41JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiEZAFJREeiyW7NaN4qWdw" base_Element="_uiDx8VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiEZAlJREeiyW7NaN4qWdw" base_Element="_uiEZAVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiFAEVJREeiyW7NaN4qWdw" base_Element="_uiFAEFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiFnIFJREeiyW7NaN4qWdw" base_Element="_uiFAElJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiGOMFJREeiyW7NaN4qWdw" base_Element="_uiFnIVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiG1QFJREeiyW7NaN4qWdw" base_Element="_uiGOMVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiG1QlJREeiyW7NaN4qWdw" base_Element="_uiG1QVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiMU0FJREeiyW7NaN4qWdw" base_Element="_uiLtwFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiMU0lJREeiyW7NaN4qWdw" base_Element="_uiMU0VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiM74VJREeiyW7NaN4qWdw" base_Element="_uiM74FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiNi8FJREeiyW7NaN4qWdw" base_Element="_uiM74lJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiNi8lJREeiyW7NaN4qWdw" base_Element="_uiNi8VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiOKAVJREeiyW7NaN4qWdw" base_Element="_uiOKAFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiOxEFJREeiyW7NaN4qWdw" base_Element="_uiOKAlJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiPYIFJREeiyW7NaN4qWdw" base_Element="_uiOxEVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiPYIlJREeiyW7NaN4qWdw" base_Element="_uiPYIVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uiQmQlJREeiyW7NaN4qWdw" base_Element="_uiP_MFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_uiQmQ1JREeiyW7NaN4qWdw" base_Element="_uiP_MFJREeiyW7NaN4qWdw">
    <annotations xmi:id="_uiQmRFJREeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_uiTpkFJREeiyW7NaN4qWdw" base_Element="_uiTCgFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiUQoFJREeiyW7NaN4qWdw" base_Element="_uiTpkVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiU3sFJREeiyW7NaN4qWdw" base_Element="_uiUQoVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiU3slJREeiyW7NaN4qWdw" base_Element="_uiU3sVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiVewFJREeiyW7NaN4qWdw" base_Element="_uiU3s1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiWF0FJREeiyW7NaN4qWdw" base_Element="_uiVewVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiWs4FJREeiyW7NaN4qWdw" base_Element="_uiWF0VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiWs4lJREeiyW7NaN4qWdw" base_Element="_uiWs4VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiXT8VJREeiyW7NaN4qWdw" base_Element="_uiXT8FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiX7AFJREeiyW7NaN4qWdw" base_Element="_uiXT8lJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiaXQVJREeiyW7NaN4qWdw" base_Element="_uiaXQFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uia-UVJREeiyW7NaN4qWdw" base_Element="_uia-UFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiblYFJREeiyW7NaN4qWdw" base_Element="_uia-UlJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uicMcFJREeiyW7NaN4qWdw" base_Element="_uiblYVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uicMclJREeiyW7NaN4qWdw" base_Element="_uicMcVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uidakFJREeiyW7NaN4qWdw" base_Element="_uiczgFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uidaklJREeiyW7NaN4qWdw" base_Element="_uidakVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uieosFJREeiyW7NaN4qWdw" base_Element="_uieBoFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uifPwFJREeiyW7NaN4qWdw" base_Element="_uieosVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uif20VJREeiyW7NaN4qWdw" base_Element="_uif20FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uigd4VJREeiyW7NaN4qWdw" base_Element="_uigd4FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uihE8FJREeiyW7NaN4qWdw" base_Element="_uigd4lJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uihsAFJREeiyW7NaN4qWdw" base_Element="_uihE8VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uiiTEFJREeiyW7NaN4qWdw" base_Element="_uihsAVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uinyoFJREeiyW7NaN4qWdw" base_Element="_uimkgFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uioZsFJREeiyW7NaN4qWdw" base_Element="_uinyoVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uipAwFJREeiyW7NaN4qWdw" base_Element="_uioZsVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uivHYFJREeiyW7NaN4qWdw" base_Element="_uiugUVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uiyxwlJREeiyW7NaN4qWdw" base_Element="_uiyxwFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_uizY0FJREeiyW7NaN4qWdw" base_Element="_uiyxwFJREeiyW7NaN4qWdw">
    <annotations xmi:id="_uizY0VJREeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uizY1FJREeiyW7NaN4qWdw" base_Element="_uizY0lJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_uiz_4FJREeiyW7NaN4qWdw" base_Element="_uizY0lJREeiyW7NaN4qWdw">
    <annotations xmi:id="_uiz_4VJREeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_ui2cIFJREeiyW7NaN4qWdw" base_Element="_ui11EFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ui3DMFJREeiyW7NaN4qWdw" genericsValue="ImageLocation" base_Element="_ui2cIVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ui4RUFJREeiyW7NaN4qWdw" base_Element="_ui3qR1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ui44YVJREeiyW7NaN4qWdw" base_Element="_ui4RUVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Annotations xmi:id="_ui44YlJREeiyW7NaN4qWdw" base_Element="_ui4RUVJREeiyW7NaN4qWdw">
    <annotations xmi:id="_ui44Y1JREeiyW7NaN4qWdw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ui8iwFJREeiyW7NaN4qWdw" genericsValue="String, String" base_Element="_ui77sFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ui9w4FJREeiyW7NaN4qWdw" genericsValue="String, String" base_Element="_ui9J0FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ujCCUVJREeiyW7NaN4qWdw" base_Element="_ujCCUFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ujDQcFJREeiyW7NaN4qWdw" genericsValue="String" base_Element="_ujCpYVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ujD3gFJREeiyW7NaN4qWdw" genericsValue="String" base_Element="_ujCpYlJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ujHh5FJREeiyW7NaN4qWdw" base_Element="_ujHh4lJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ujII8lJREeiyW7NaN4qWdw" base_Element="_ujII8FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ujII9lJREeiyW7NaN4qWdw" base_Element="_ujII9FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujIwAFJREeiyW7NaN4qWdw" base_Element="_ujII9FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujJXElJREeiyW7NaN4qWdw" base_Element="_ujJXEVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ujJ-IlJREeiyW7NaN4qWdw" dimensions="1" base_Element="_ujJ-IFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujJ-JFJREeiyW7NaN4qWdw" base_Element="_ujJ-IFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ujKlMlJREeiyW7NaN4qWdw" base_Element="_ujKlMFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujLMQFJREeiyW7NaN4qWdw" base_Element="_ujKlNFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ujLMQlJREeiyW7NaN4qWdw" genericsValue="String" base_Element="_ujLMQVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujLzUFJREeiyW7NaN4qWdw" base_Element="_ujLMQVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ujMaYFJREeiyW7NaN4qWdw" genericsValue="Decoration" base_Element="_ujLzUVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujMaYlJREeiyW7NaN4qWdw" base_Element="_ujLzUVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ujnRIFJREeiyW7NaN4qWdw" genericsValue="Background" base_Element="_ujNBcFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujnRIlJREeiyW7NaN4qWdw" base_Element="_ujNBcFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ujn4MFJREeiyW7NaN4qWdw" genericsValue="UnionPosition" base_Element="_ujnRI1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujofQFJREeiyW7NaN4qWdw" base_Element="_ujnRI1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ujofQlJREeiyW7NaN4qWdw" genericsValue="UnionShape" base_Element="_ujofQVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujpGUVJREeiyW7NaN4qWdw" base_Element="_ujofQVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ujptYFJREeiyW7NaN4qWdw" genericsValue="String" base_Element="_ujpGUlJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujptYlJREeiyW7NaN4qWdw" base_Element="_ujpGUlJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Generics xmi:id="_ujqUcFJREeiyW7NaN4qWdw" genericsValue="String" base_Element="_ujptY1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujq7gFJREeiyW7NaN4qWdw" base_Element="_ujptY1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujq7g1JREeiyW7NaN4qWdw" base_Element="_ujq7gVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujtXwFJREeiyW7NaN4qWdw" base_Element="_ujq7hFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujt-0FJREeiyW7NaN4qWdw" base_Element="_ujtXwVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ujvM8FJREeiyW7NaN4qWdw" base_Element="_ujt-0VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujv0AFJREeiyW7NaN4qWdw" base_Element="_ujt-0VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ujwbEFJREeiyW7NaN4qWdw" base_Element="_ujv0AVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujwbElJREeiyW7NaN4qWdw" base_Element="_ujv0AVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ujxCIVJREeiyW7NaN4qWdw" base_Element="_ujwbE1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_uj1TkFJREeiyW7NaN4qWdw" base_Element="_uj0sglJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_uj16oFJREeiyW7NaN4qWdw" base_Element="_uj1TklJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_uj2hslJREeiyW7NaN4qWdw" base_Element="_uj2hsFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uj3v0FJREeiyW7NaN4qWdw" base_Element="_uj3IxFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uj3v0lJREeiyW7NaN4qWdw" base_Element="_uj3v0VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_uj498FJREeiyW7NaN4qWdw" base_Element="_uj4W4FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_uj6zI1JREeiyW7NaN4qWdw" base_Element="_uj6zIVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_uj8oVFJREeiyW7NaN4qWdw" dimensions="2" base_Element="_uj8oUlJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_uj9PYlJREeiyW7NaN4qWdw" base_Element="_uj9PYFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ukASsFJREeiyW7NaN4qWdw" base_Element="_uj_rpVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukA5wFJREeiyW7NaN4qWdw" base_Element="_ukASslJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukA5w1JREeiyW7NaN4qWdw" base_Element="_ukA5wVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ukBg0VJREeiyW7NaN4qWdw" base_Element="_ukA5xFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukBg01JREeiyW7NaN4qWdw" base_Element="_ukA5xFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukCH4FJREeiyW7NaN4qWdw" base_Element="_ukBg1FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukCH4lJREeiyW7NaN4qWdw" base_Element="_ukCH4VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukCu8FJREeiyW7NaN4qWdw" base_Element="_ukCH41JREeiyW7NaN4qWdw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ukCu8VJREeiyW7NaN4qWdw" name="getNumberOfColonies" method="_ukT0tFJREeiyW7NaN4qWdw">
      <ownedParameter xmi:id="_ukCu8lJREeiyW7NaN4qWdw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukDWAVJREeiyW7NaN4qWdw" base_Element="_ukDWAFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukD9E1JREeiyW7NaN4qWdw" base_Element="_ukD9ElJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukEkIVJREeiyW7NaN4qWdw" base_Element="_ukEkIFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukFLMFJREeiyW7NaN4qWdw" base_Element="_ukEkIlJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukGZUFJREeiyW7NaN4qWdw" base_Element="_ukFyRFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukGZUlJREeiyW7NaN4qWdw" base_Element="_ukGZUVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukHAYFJREeiyW7NaN4qWdw" base_Element="_ukGZU1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukHAYlJREeiyW7NaN4qWdw" base_Element="_ukHAYVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ukHncFJREeiyW7NaN4qWdw" base_Element="_ukHAY1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukHncVJREeiyW7NaN4qWdw" base_Element="_ukHAY1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ukIOgFJREeiyW7NaN4qWdw" base_Element="_ukHnclJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukIOglJREeiyW7NaN4qWdw" base_Element="_ukHnclJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ukI1kVJREeiyW7NaN4qWdw" base_Element="_ukIOg1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukI1k1JREeiyW7NaN4qWdw" base_Element="_ukIOg1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukJcoFJREeiyW7NaN4qWdw" base_Element="_ukI1lFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukJcolJREeiyW7NaN4qWdw" base_Element="_ukJcoVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukKDsFJREeiyW7NaN4qWdw" base_Element="_ukJco1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Array xmi:id="_ukKDs1JREeiyW7NaN4qWdw" base_Element="_ukKDsVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukKDtFJREeiyW7NaN4qWdw" base_Element="_ukKDsVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukLR0VJREeiyW7NaN4qWdw" base_Element="_ukKqwFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukLR1FJREeiyW7NaN4qWdw" base_Element="_ukLR0lJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukL44lJREeiyW7NaN4qWdw" base_Element="_ukL44FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukMf8FJREeiyW7NaN4qWdw" base_Element="_ukL441JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukMf8lJREeiyW7NaN4qWdw" base_Element="_ukMf8VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ukNHAFJREeiyW7NaN4qWdw" base_Element="_ukMf81JREeiyW7NaN4qWdw"/>
  <uml:OpaqueBehavior xmi:id="_ukT0tFJREeiyW7NaN4qWdw" name="getNumberOfColonies" specification="_ukCu8VJREeiyW7NaN4qWdw">
    <ownedParameter xmi:id="_ukT0tVJREeiyW7NaN4qWdw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return numberOfColonies;&#xD;
     </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_ukcXkFJREeiyW7NaN4qWdw" base_Element="_ukbwgFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukc-oFJREeiyW7NaN4qWdw" base_Element="_ukcXkVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukc-o1JREeiyW7NaN4qWdw" base_Element="_ukc-oVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukdlsFJREeiyW7NaN4qWdw" base_Element="_ukc-pFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukeMwFJREeiyW7NaN4qWdw" base_Element="_ukdlsVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukez0VJREeiyW7NaN4qWdw" base_Element="_ukeMwVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukfa4FJREeiyW7NaN4qWdw" base_Element="_ukez0lJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukgB8FJREeiyW7NaN4qWdw" base_Element="_ukfa4VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukgB81JREeiyW7NaN4qWdw" base_Element="_ukgB8VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukgpAlJREeiyW7NaN4qWdw" base_Element="_ukgpAFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukhQEFJREeiyW7NaN4qWdw" base_Element="_ukgpA1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukh3IFJREeiyW7NaN4qWdw" base_Element="_ukhQEVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukh3I1JREeiyW7NaN4qWdw" base_Element="_ukh3IVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukieMVJREeiyW7NaN4qWdw" base_Element="_ukh3JFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukjFQFJREeiyW7NaN4qWdw" base_Element="_ukieMlJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukjFQ1JREeiyW7NaN4qWdw" base_Element="_ukjFQVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukjsUFJREeiyW7NaN4qWdw" base_Element="_ukjFRFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukkTYFJREeiyW7NaN4qWdw" base_Element="_ukjsUVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukk6cFJREeiyW7NaN4qWdw" base_Element="_ukkTYVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukk6c1JREeiyW7NaN4qWdw" base_Element="_ukk6cVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uklhglJREeiyW7NaN4qWdw" base_Element="_uklhgFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukmIkFJREeiyW7NaN4qWdw" base_Element="_uklhg1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukmvoFJREeiyW7NaN4qWdw" base_Element="_ukmIkVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukmvo1JREeiyW7NaN4qWdw" base_Element="_ukmvoVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_uknWslJREeiyW7NaN4qWdw" base_Element="_uknWsFJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukn9wFJREeiyW7NaN4qWdw" base_Element="_uknWs1JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukok0FJREeiyW7NaN4qWdw" base_Element="_ukn9wVJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukok01JREeiyW7NaN4qWdw" base_Element="_ukok0VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukpL4lJREeiyW7NaN4qWdw" base_Element="_ukpL4FJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukpy8FJREeiyW7NaN4qWdw" base_Element="_ukpL41JREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukqaAFJREeiyW7NaN4qWdw" base_Element="_ukpy8VJREeiyW7NaN4qWdw"/>
  <UMLLabProfile:Reference xmi:id="_ukqaA1JREeiyW7NaN4qWdw" base_Element="_ukqaAVJREeiyW7NaN4qWdw"/>
</xmi:XMI>
